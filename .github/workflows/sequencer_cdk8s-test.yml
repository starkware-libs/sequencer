name: Sequencer-Cdk8s-Test
on:
  workflow_dispatch:

  push:
    branches:
      - main
      - main-v[0-9].**
    tags:
      - v[0-9].**
    paths:
      - ".github/workflows/sequencer_cdk8s-test.yml"
      - "deployments/sequencer/**"

  pull_request:
    branches:
      - main
      - main-v[0-9].**
    paths:
      - ".github/workflows/sequencer_cdk8s-test.yml"
      - "deployments/sequencer/**"

jobs:
  prepare:
    runs-on: blacksmith-4vcpu-ubuntu-2404
    env:
      cluster: test
      namespace: test
      deployment_config_path: ${{ github.workspace }}/crates/apollo_deployments/resources/deployments/testing/deployment_config_consolidated.json
      monitoring_dashboard_file: ${{ github.workspace }}/deployments/monitoring/examples/output/dashboards/sequencer_node_dashboard.json

    steps:
      - name: Checkout sequencer
        uses: actions/checkout@v4

      - name: Setup python
        uses: actions/setup-python@v5.4.0
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Setup Node
        uses: actions/setup-node@v4.2.0
        with:
          node-version: 22

      - name: Install pip dependencies
        run: python3 -m pip install black pipenv

      - name: Install cdk8s-cli
        run: npm install -g cdk8s-cli@2.198.334

      # Synthesize the CDK8s Sequencer app.
      - name: CDk8s synth
        working-directory: deployments/sequencer
        run: |
          cdk8s import
          pipenv install
          cdk8s synth --app "pipenv run python main.py --namespace ${{ env.namespace }} --deployment-config-file ${{ env.deployment_config_path }} --monitoring-dashboard-file ${{ env.monitoring_dashboard_file }} --cluster ${{ env.cluster }}"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cdk8s-artifacts
          path: |
            deployments/sequencer/dist
            deployments/sequencer/resources

  validate:
    runs-on: blacksmith-4vcpu-ubuntu-2404
    needs: prepare
    env:
      dist_path: ./cdk8s-artifacts/dist
      crds_path: ./cdk8s-artifacts/resources/crds
    steps:
      - name: Setup go lang
        uses: actions/setup-go@v5
        with:
          go-version: "stable"

      - name: Setup kubectl-validate
        run: go install sigs.k8s.io/kubectl-validate@latest

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: cdk8s-artifacts
          path: cdk8s-artifacts
          merge-multiple: true

      - name: kubectl validation test for version 1.27
        run: kubectl validate ${{ env.dist_path }} --local-crds ${{ env.crds_path }} --version 1.27
        continue-on-error: true

      - name: kubectl validation test for version 1.28
        run: kubectl validate ${{ env.dist_path }} --local-crds ${{ env.crds_path }} --version 1.28
        continue-on-error: true

      - name: kubectl validation test for version 1.29
        run: kubectl validate ${{ env.dist_path }} --local-crds ${{ env.crds_path }} --version 1.29
        continue-on-error: false

      - name: kubectl validation test for version 1.30
        run: kubectl validate ${{ env.dist_path }} --local-crds ${{ env.crds_path }} --version 1.30
        continue-on-error: false

      - name: kubectl validation test for version 1.31
        run: kubectl validate ${{ env.dist_path }} --local-crds ${{ env.crds_path }} --version 1.31
        continue-on-error: false

      - name: kubectl validation test for version 1.32
        run: kubectl validate ${{ env.dist_path }} --local-crds ${{ env.crds_path }} --version 1.32
        continue-on-error: false

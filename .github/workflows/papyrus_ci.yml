name: Papyrus-CI

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - edited # for when the PR title is edited
    paths:
      - ".github/workflows/papyrus_ci.yml"
      - "deployments/images/base/Dockerfile"
      - "papyrus_utilities.Dockerfile"
      - "Cargo.toml"
      - "Cargo.lock"
      - "crates/papyrus**/**"
      - "crates/apollo_starknet_client/**"
      - "scripts/dependencies.sh"

env:
  RUSTFLAGS: "-D warnings -C link-arg=-fuse-ld=lld"

# On PR events, cancel existing CI runs on this same PR for this workflow.
# Also, create different concurrency groups for different pushed commits, on push events.
concurrency:
  group: >
    ${{ github.workflow }}-
    ${{ github.ref }}-
    ${{ github.event_name == 'pull_request' && 'PR' || github.sha }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  executable-run:
    runs-on: namespace-profile-medium-ubuntu-24-04-amd64
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/bootstrap
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build node
        run: |
          mkdir data
          cargo build -p papyrus_node

      - name: Run executable
        run: >
          target/debug/papyrus_node --chain_id SN_SEPOLIA --base_layer.node_url ${{ secrets.CI_BASE_LAYER_NODE_URL }}
          & sleep 30 ; kill $!

  executable-run-no-rpc:
    runs-on: namespace-profile-medium-ubuntu-24-04-amd64
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/bootstrap
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build node
        run: |
          mkdir data
          cargo build -p papyrus_node --no-default-features

      - name: Run executable
        run: >
          target/debug/papyrus_node --chain_id SN_SEPOLIA --base_layer.node_url ${{ secrets.CI_BASE_LAYER_NODE_URL }}
          & sleep 30 ; kill $!

  # FIXME: Job is currently running out of disk space, error is hidden inside the `Annoatations`
  # tab on github. FIX THE ISSUE AND RE-ENABLE THE JOB.
  # p2p-sync-e2e-test:
  #   runs-on: namespace-profile-medium-ubuntu-24-04-amd64
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: ./.github/actions/bootstrap
  #       with:
  #         github_token: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Build node
  #       run: cargo build -p papyrus_node

  #     - name: Run p2p sync end-to-end test
  #       run: scripts/papyrus/p2p_sync_e2e_test/main.sh ${{ secrets.CI_BASE_LAYER_NODE_URL }}

  integration-test:
    runs-on: namespace-profile-medium-ubuntu-24-04-amd64
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/bootstrap
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - run: >
          cargo test
          --test latency_histogram
          --test gateway_integration_test
          --test feeder_gateway_integration_test
          -- --include-ignored --skip test_gw_integration_testnet;
          cargo run -p papyrus_node --bin central_source_integration_test --features="futures-util tokio-stream"

  test-no-rpc:
    runs-on: namespace-profile-medium-ubuntu-24-04-amd64
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/bootstrap
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          cargo test -p papyrus_node --no-default-features
        env:
          SEED: 0

  # TODO(DanB): Re-enable this job when necessary.
  # Note that currently the `papyrus_load_test` build fails.
  # build-papyrus-utilities-image:
  #   runs-on: namespace-profile-medium-ubuntu-24-04-amd64
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3
  #     - name: Build Papyrus utilites docker image
  #       uses: docker/build-push-action@v3.2.0
  #       with:
  #         push: false
  #         context: .
  #         file: papyrus_utilities.Dockerfile

  random-table-test:
    runs-on: namespace-profile-medium-ubuntu-24-04-amd64
    steps:
      - uses: actions/checkout@v4
      # run this job only if the path 'crates/apollo_storage/src/db/**' is changed, because it takes around 2 minutes.
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          # The 'base' and 'ref' parameters are set to be able to run the job in a 'merge_group' event. in a 'pull_request' event
          # those parameters are ignored.
          base: ${{ github.event.merge_group.base_ref}}
          ref: ${{ github.event.merge_group.head_ref }}
          filters: |
            target_directory:
              - 'crates/apollo_storage/src/db/**'
      - uses: ./.github/actions/bootstrap
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      # repeat this job 32 times. this is a random test for part of the code that may cause a corrupted database.
      - run: for run in {1..32}; do cargo test -p apollo_storage -- --include-ignored common_prefix_compare_with_simple_table_random; done
        if: steps.changes.outputs.target_directory == 'true'

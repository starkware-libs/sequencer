"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.addImportToConfig = exports.readConfigSync = exports.HelmChartApiVersion = exports.SynthesisFormat = void 0;
const fs = __importStar(require("fs-extra"));
const yaml = __importStar(require("yaml"));
const CONFIG_FILE = 'cdk8s.yaml';
var SynthesisFormat;
(function (SynthesisFormat) {
    SynthesisFormat["PLAIN"] = "plain";
    SynthesisFormat["HELM"] = "helm";
})(SynthesisFormat = exports.SynthesisFormat || (exports.SynthesisFormat = {}));
var HelmChartApiVersion;
(function (HelmChartApiVersion) {
    HelmChartApiVersion["V1"] = "v1";
    HelmChartApiVersion["V2"] = "v2";
})(HelmChartApiVersion = exports.HelmChartApiVersion || (exports.HelmChartApiVersion = {}));
function readConfigSync() {
    if (fs.existsSync(CONFIG_FILE)) {
        const config = {
            ...yaml.parse(fs.readFileSync(CONFIG_FILE, 'utf-8')),
        };
        return config;
    }
    return undefined;
}
exports.readConfigSync = readConfigSync;
async function addImportToConfig(source) {
    if (!fs.existsSync(CONFIG_FILE)) {
        // cdk8s import might be executed outside of an application (i.e without a config file)
        return;
    }
    let curConfig = yaml.parse(fs.readFileSync(CONFIG_FILE, 'utf-8'));
    const curImports = curConfig.imports ?? [];
    if (!curImports.includes(source)) {
        const importsList = curConfig.imports ?? [];
        importsList.push(source);
        let config = {
            ...curConfig,
            imports: importsList,
        };
        await fs.outputFile(CONFIG_FILE, yaml.stringify(config));
    }
}
exports.addImportToConfig = addImportToConfig;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2NvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLDZDQUErQjtBQUMvQiwyQ0FBNkI7QUFHN0IsTUFBTSxXQUFXLEdBQUcsWUFBWSxDQUFDO0FBZWpDLElBQVksZUFHWDtBQUhELFdBQVksZUFBZTtJQUN6QixrQ0FBZSxDQUFBO0lBQ2YsZ0NBQWEsQ0FBQTtBQUNmLENBQUMsRUFIVyxlQUFlLEdBQWYsdUJBQWUsS0FBZix1QkFBZSxRQUcxQjtBQUVELElBQVksbUJBR1g7QUFIRCxXQUFZLG1CQUFtQjtJQUM3QixnQ0FBUyxDQUFBO0lBQ1QsZ0NBQVMsQ0FBQTtBQUNYLENBQUMsRUFIVyxtQkFBbUIsR0FBbkIsMkJBQW1CLEtBQW5CLDJCQUFtQixRQUc5QjtBQW1CRCxTQUFnQixjQUFjO0lBQzVCLElBQUksRUFBRSxDQUFDLFVBQVUsQ0FBQyxXQUFXLENBQUMsRUFBRTtRQUM5QixNQUFNLE1BQU0sR0FBRztZQUNiLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsWUFBWSxDQUFDLFdBQVcsRUFBRSxPQUFPLENBQUMsQ0FBQztTQUNyRCxDQUFDO1FBRUYsT0FBTyxNQUFNLENBQUM7S0FDZjtJQUVELE9BQU8sU0FBUyxDQUFDO0FBQ25CLENBQUM7QUFWRCx3Q0FVQztBQUVNLEtBQUssVUFBVSxpQkFBaUIsQ0FBQyxNQUFjO0lBRXBELElBQUksQ0FBQyxFQUFFLENBQUMsVUFBVSxDQUFDLFdBQVcsQ0FBQyxFQUFFO1FBQy9CLHVGQUF1RjtRQUN2RixPQUFPO0tBQ1I7SUFFRCxJQUFJLFNBQVMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxZQUFZLENBQUMsV0FBVyxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUM7SUFFbEUsTUFBTSxVQUFVLEdBQUcsU0FBUyxDQUFDLE9BQU8sSUFBSSxFQUFFLENBQUM7SUFDM0MsSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLEVBQUU7UUFDaEMsTUFBTSxXQUFXLEdBQUcsU0FBUyxDQUFDLE9BQU8sSUFBSSxFQUFFLENBQUM7UUFDNUMsV0FBVyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUN6QixJQUFJLE1BQU0sR0FBRztZQUNYLEdBQUcsU0FBUztZQUNaLE9BQU8sRUFBRSxXQUFXO1NBQ3JCLENBQUM7UUFDRixNQUFNLEVBQUUsQ0FBQyxVQUFVLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztLQUMxRDtBQUNILENBQUM7QUFuQkQsOENBbUJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgZnMgZnJvbSAnZnMtZXh0cmEnO1xuaW1wb3J0ICogYXMgeWFtbCBmcm9tICd5YW1sJztcbmltcG9ydCB7IExhbmd1YWdlIH0gZnJvbSAnLi9pbXBvcnQvYmFzZSc7XG5cbmNvbnN0IENPTkZJR19GSUxFID0gJ2NkazhzLnlhbWwnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEltcG9ydFNwZWMge1xuICByZWFkb25seSBtb2R1bGVOYW1lUHJlZml4Pzogc3RyaW5nO1xuICByZWFkb25seSBzb3VyY2U6IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBWYWxpZGF0aW9uQ29uZmlnIHtcbiAgcmVhZG9ubHkgcGFja2FnZTogc3RyaW5nO1xuICByZWFkb25seSB2ZXJzaW9uOiBzdHJpbmc7XG4gIHJlYWRvbmx5IGNsYXNzOiBzdHJpbmc7XG4gIHJlYWRvbmx5IGluc3RhbGxFbnY/OiB7IFtrZXk6IHN0cmluZ106IGFueSB9O1xuICByZWFkb25seSBwcm9wZXJ0aWVzPzogeyBba2V5OiBzdHJpbmddOiBhbnkgfTtcbn1cblxuZXhwb3J0IGVudW0gU3ludGhlc2lzRm9ybWF0IHtcbiAgUExBSU4gPSAncGxhaW4nLFxuICBIRUxNID0gJ2hlbG0nLFxufVxuXG5leHBvcnQgZW51bSBIZWxtQ2hhcnRBcGlWZXJzaW9uIHtcbiAgVjEgPSAndjEnLFxuICBWMiA9ICd2MicsXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgU3ludGhDb25maWcge1xuICByZWFkb25seSBmb3JtYXQ/OiBTeW50aGVzaXNGb3JtYXQ7XG4gIHJlYWRvbmx5IGNoYXJ0QXBpVmVyc2lvbj86IEhlbG1DaGFydEFwaVZlcnNpb247XG4gIHJlYWRvbmx5IGNoYXJ0VmVyc2lvbj86IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBDb25maWcge1xuICByZWFkb25seSBhcHA/OiBzdHJpbmc7XG4gIHJlYWRvbmx5IGxhbmd1YWdlPzogTGFuZ3VhZ2U7XG4gIHJlYWRvbmx5IG91dHB1dD86IHN0cmluZztcbiAgcmVhZG9ubHkgaW1wb3J0RGlyZWN0b3J5Pzogc3RyaW5nO1xuICByZWFkb25seSBpbXBvcnRzPzogc3RyaW5nW107XG4gIHJlYWRvbmx5IHBsdWdpbnNEaXJlY3Rvcnk/OiBzdHJpbmc7XG4gIHJlYWRvbmx5IHZhbGlkYXRpb25zPzogc3RyaW5nIHwgVmFsaWRhdGlvbkNvbmZpZ1tdO1xuICByZWFkb25seSBzeW50aENvbmZpZz86IFN5bnRoQ29uZmlnO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcmVhZENvbmZpZ1N5bmMoKTogQ29uZmlnIHwgdW5kZWZpbmVkIHtcbiAgaWYgKGZzLmV4aXN0c1N5bmMoQ09ORklHX0ZJTEUpKSB7XG4gICAgY29uc3QgY29uZmlnID0ge1xuICAgICAgLi4ueWFtbC5wYXJzZShmcy5yZWFkRmlsZVN5bmMoQ09ORklHX0ZJTEUsICd1dGYtOCcpKSxcbiAgICB9O1xuXG4gICAgcmV0dXJuIGNvbmZpZztcbiAgfVxuXG4gIHJldHVybiB1bmRlZmluZWQ7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBhZGRJbXBvcnRUb0NvbmZpZyhzb3VyY2U6IHN0cmluZykge1xuXG4gIGlmICghZnMuZXhpc3RzU3luYyhDT05GSUdfRklMRSkpIHtcbiAgICAvLyBjZGs4cyBpbXBvcnQgbWlnaHQgYmUgZXhlY3V0ZWQgb3V0c2lkZSBvZiBhbiBhcHBsaWNhdGlvbiAoaS5lIHdpdGhvdXQgYSBjb25maWcgZmlsZSlcbiAgICByZXR1cm47XG4gIH1cblxuICBsZXQgY3VyQ29uZmlnID0geWFtbC5wYXJzZShmcy5yZWFkRmlsZVN5bmMoQ09ORklHX0ZJTEUsICd1dGYtOCcpKTtcblxuICBjb25zdCBjdXJJbXBvcnRzID0gY3VyQ29uZmlnLmltcG9ydHMgPz8gW107XG4gIGlmICghY3VySW1wb3J0cy5pbmNsdWRlcyhzb3VyY2UpKSB7XG4gICAgY29uc3QgaW1wb3J0c0xpc3QgPSBjdXJDb25maWcuaW1wb3J0cyA/PyBbXTtcbiAgICBpbXBvcnRzTGlzdC5wdXNoKHNvdXJjZSk7XG4gICAgbGV0IGNvbmZpZyA9IHtcbiAgICAgIC4uLmN1ckNvbmZpZyxcbiAgICAgIGltcG9ydHM6IGltcG9ydHNMaXN0LFxuICAgIH07XG4gICAgYXdhaXQgZnMub3V0cHV0RmlsZShDT05GSUdfRklMRSwgeWFtbC5zdHJpbmdpZnkoY29uZmlnKSk7XG4gIH1cbn1cbiJdfQ==
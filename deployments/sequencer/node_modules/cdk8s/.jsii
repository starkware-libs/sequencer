{
  "author": {
    "name": "Amazon Web Services",
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "bundled": {
    "fast-json-patch": "^3.1.1",
    "follow-redirects": "^1.15.11",
    "yaml": "2.8.1"
  },
  "dependencies": {
    "constructs": "^10"
  },
  "dependencyClosure": {
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "This is the core library of Cloud Development Kit (CDK) for Kubernetes (cdk8s). cdk8s apps synthesize into standard Kubernetes manifests which can be applied to any Kubernetes cluster.",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/cdk8s-team/cdk8s-core.git",
  "jsiiVersion": "5.8.18 (build f5c30fc)",
  "keywords": [
    "cdk",
    "configuration",
    "constructs",
    "containers",
    "k8s",
    "kubernetes",
    "microservices"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "pacmak": {
        "hasDefaultInterfaces": true
      }
    },
    "tscRootDir": "src"
  },
  "name": "cdk8s",
  "readme": {
    "markdown": "# cdk8s\n\n### Cloud Development Kit for Kubernetes\n\n[![build](https://github.com/cdk8s-team/cdk8s-core/workflows/release/badge.svg)](https://github.com/cdk8s-team/cdk8s-core/actions/workflows/release.yml)\n[![npm version](https://badge.fury.io/js/cdk8s.svg)](https://badge.fury.io/js/cdk8s)\n[![PyPI version](https://badge.fury.io/py/cdk8s.svg)](https://badge.fury.io/py/cdk8s)\n[![Maven Central](https://maven-badges.herokuapp.com/maven-central/org.cdk8s/cdk8s/badge.svg)](https://maven-badges.herokuapp.com/maven-central/org.cdk8s/cdk8s)\n\n**cdk8s** is a software development framework for defining Kubernetes\napplications using rich object-oriented APIs. It allows developers to leverage\nthe full power of software in order to define abstract components called\n\"constructs\" which compose Kubernetes resources or other constructs into\nhigher-level abstractions.\n\n> **Note:** This repository is the \"core library\" of cdk8s, with logic for synthesizing Kubernetes manifests using the [constructs framework](https://github.com/aws/constructs). It is published to NPM as [`cdk8s`](https://www.npmjs.com/package/cdk8s) and should not be confused with the cdk8s command-line tool [`cdk8s-cli`](https://www.npmjs.com/package/cdk8s-cli). For more general information about cdk8s, please see [cdk8s.io](https://cdk8s.io), or visit the umbrella repository located at [cdk8s-team/cdk8s](https://github.com/cdk8s-team/cdk8s).\n\n## Documentation\n\nSee [cdk8s.io](https://cdk8s.io).\n\n## License\n\nThis project is distributed under the [Apache License, Version 2.0](./LICENSE).\n\nThis module is part of the [cdk8s project](https://github.com/cdk8s-team/cdk8s).\n"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/cdk8s-team/cdk8s-core.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "namespace": "Org.Cdk8s",
      "packageId": "Org.Cdk8s"
    },
    "go": {
      "moduleName": "github.com/cdk8s-team/cdk8s-core-go"
    },
    "java": {
      "maven": {
        "artifactId": "cdk8s",
        "groupId": "org.cdk8s"
      },
      "package": "org.cdk8s"
    },
    "js": {
      "npm": "cdk8s"
    },
    "python": {
      "distName": "cdk8s",
      "module": "cdk8s"
    }
  },
  "types": {
    "cdk8s.ApiObject": {
      "assembly": "cdk8s",
      "base": "constructs.Construct",
      "docs": {
        "stability": "stable"
      },
      "fqn": "cdk8s.ApiObject",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines an API object."
        },
        "locationInModule": {
          "filename": "src/api-object.ts",
          "line": 142
        },
        "parameters": [
          {
            "docs": {
              "summary": "the construct scope."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "namespace."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "options."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s.ApiObjectProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/api-object.ts",
        "line": 52
      },
      "methods": [
        {
          "docs": {
            "remarks": "We do attribute detection since we can't reliably use 'instanceof'.",
            "stability": "stable",
            "summary": "Return whether the given object is an `ApiObject`."
          },
          "locationInModule": {
            "filename": "src/api-object.ts",
            "line": 61
          },
          "name": "isApiObject",
          "parameters": [
            {
              "docs": {
                "summary": "The object to check."
              },
              "name": "o",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "If `c` is an `ApiObject`, it is returned directly. Throws an\nexception if the construct does not have a child named `Default` _or_ if\nthis child is not an `ApiObject`.",
            "stability": "stable",
            "summary": "Returns the `ApiObject` named `Resource` which is a child of the given construct."
          },
          "locationInModule": {
            "filename": "src/api-object.ts",
            "line": 82
          },
          "name": "of",
          "parameters": [
            {
              "docs": {
                "summary": "The higher-level construct."
              },
              "name": "c",
              "type": {
                "fqn": "constructs.IConstruct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s.ApiObject"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "These can be other ApiObjects, Charts, or custom.",
            "stability": "stable",
            "summary": "Create a dependency between this ApiObject and other constructs."
          },
          "locationInModule": {
            "filename": "src/api-object.ts",
            "line": 175
          },
          "name": "addDependency",
          "parameters": [
            {
              "docs": {
                "summary": "the dependencies to add."
              },
              "name": "dependencies",
              "type": {
                "fqn": "constructs.IConstruct"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "example": "  kubePod.addJsonPatch(JsonPatch.replace('/spec/enableServiceLinks', true));",
            "stability": "stable",
            "summary": "Applies a set of RFC-6902 JSON-Patch operations to the manifest synthesized for this API object."
          },
          "locationInModule": {
            "filename": "src/api-object.ts",
            "line": 190
          },
          "name": "addJsonPatch",
          "parameters": [
            {
              "docs": {
                "summary": "The JSON-Patch operations to apply."
              },
              "name": "ops",
              "type": {
                "fqn": "cdk8s.JsonPatch"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "remarks": "To disable sorting of dictionary keys in output object set the\n`CDK8S_DISABLE_SORT` environment variable to any non-empty value.",
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/api-object.ts",
            "line": 200
          },
          "name": "toJson",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "ApiObject",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The group portion of the API version (e.g. `authorization.k8s.io`)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-object.ts",
            "line": 113
          },
          "name": "apiGroup",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The object's API version (e.g. `authorization.k8s.io/v1`)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-object.ts",
            "line": 108
          },
          "name": "apiVersion",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The chart in which this object is defined."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-object.ts",
            "line": 123
          },
          "name": "chart",
          "type": {
            "fqn": "cdk8s.Chart"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The object kind."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-object.ts",
            "line": 118
          },
          "name": "kind",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Metadata associated with this API object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-object.ts",
            "line": 128
          },
          "name": "metadata",
          "type": {
            "fqn": "cdk8s.ApiObjectMetadataDefinition"
          }
        },
        {
          "docs": {
            "remarks": "If a name is specified in `metadata.name` this will be the name returned.\nOtherwise, a name will be generated by calling\n`Chart.of(this).generatedObjectName(this)`, which by default uses the\nconstruct path to generate a DNS-compatible name for the resource.",
            "stability": "stable",
            "summary": "The name of the API object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-object.ts",
            "line": 103
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/api-object:ApiObject"
    },
    "cdk8s.ApiObjectMetadata": {
      "assembly": "cdk8s",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Metadata associated with this object."
      },
      "fqn": "cdk8s.ApiObjectMetadata",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/metadata.ts",
        "line": 8
      },
      "name": "ApiObjectMetadata",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No annotations.",
            "remarks": "They are not queryable and should be\npreserved when modifying objects.",
            "see": "http://kubernetes.io/docs/user-guide/annotations",
            "stability": "stable",
            "summary": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/metadata.ts",
            "line": 37
          },
          "name": "annotations",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No finalizers.",
            "remarks": "Must be empty before the object is deleted from the registry. Each entry is\nan identifier for the responsible component that will remove the entry from\nthe list. If the deletionTimestamp of the object is non-nil, entries in\nthis list can only be removed. Finalizers may be processed and removed in\nany order.  Order is NOT enforced because it introduces significant risk of\nstuck finalizers. finalizers is a shared field, any actor with permission\ncan reorder it. If the finalizer list is processed in order, then this can\nlead to a situation in which the component responsible for the first\nfinalizer in the list is waiting for a signal (field value, external\nsystem, or other) produced by a component responsible for a finalizer later\nin the list, resulting in a deadlock. Without enforced ordering finalizers\nare free to order amongst themselves and are not vulnerable to ordering\nchanges in the list.",
            "see": "https://kubernetes.io/docs/concepts/overview/working-with-objects/finalizers/",
            "stability": "stable",
            "summary": "Namespaced keys that tell Kubernetes to wait until specific conditions are met before it fully deletes resources marked for deletion."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/metadata.ts",
            "line": 77
          },
          "name": "finalizers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No labels.",
            "remarks": "May match selectors of replication controllers and services.",
            "see": "http://kubernetes.io/docs/user-guide/labels",
            "stability": "stable",
            "summary": "Map of string keys and values that can be used to organize and categorize (scope and select) objects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/metadata.ts",
            "line": 46
          },
          "name": "labels",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- an app-unique name generated by the chart",
            "remarks": "Normally, you shouldn't specify names for objects and let the CDK generate\na name for you that is application-unique. The names CDK generates are\ncomposed from the construct path components, separated by dots and a suffix\nthat is based on a hash of the entire path, to ensure uniqueness.\n\nYou can supply custom name allocation logic by overriding the\n`chart.generateObjectName` method.\n\nIf you use an explicit name here, bear in mind that this reduces the\ncomposability of your construct because it won't be possible to include\nmore than one instance in any app. Therefore it is highly recommended to\nleave this unspecified.",
            "stability": "stable",
            "summary": "The unique, namespace-global, name of this object inside the Kubernetes cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/metadata.ts",
            "line": 28
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "undefined (will be assigned to the 'default' namespace)",
            "remarks": "An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for those objects will be empty. Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
            "stability": "stable",
            "summary": "Namespace defines the space within each name must be unique."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/metadata.ts",
            "line": 54
          },
          "name": "namespace",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- automatically set by Kubernetes",
            "remarks": "If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is\nmanaged by a controller, then an entry in this list will point to this\ncontroller, with the controller field set to true. There cannot be more\nthan one managing controller.\n\nKubernetes sets the value of this field automatically for objects that are\ndependents of other objects like ReplicaSets, DaemonSets, Deployments, Jobs\nand CronJobs, and ReplicationControllers. You can also configure these\nrelationships manually by changing the value of this field. However, you\nusually don't need to and can allow Kubernetes to automatically manage the\nrelationships.",
            "see": "https://kubernetes.io/docs/concepts/overview/working-with-objects/owners-dependents/",
            "stability": "stable",
            "summary": "List of objects depended by this object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/metadata.ts",
            "line": 96
          },
          "name": "ownerReferences",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s.OwnerReference"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/metadata:ApiObjectMetadata"
    },
    "cdk8s.ApiObjectMetadataDefinition": {
      "assembly": "cdk8s",
      "docs": {
        "stability": "stable",
        "summary": "Object metadata."
      },
      "fqn": "cdk8s.ApiObjectMetadataDefinition",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/metadata.ts",
          "line": 167
        },
        "parameters": [
          {
            "name": "options",
            "type": {
              "fqn": "cdk8s.ApiObjectMetadataDefinitionOptions"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/metadata.ts",
        "line": 121
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds an arbitrary key/value to the object metadata."
          },
          "locationInModule": {
            "filename": "src/metadata.ts",
            "line": 232
          },
          "name": "add",
          "parameters": [
            {
              "docs": {
                "summary": "Metadata key."
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Metadata value."
              },
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add an annotation."
          },
          "locationInModule": {
            "filename": "src/metadata.ts",
            "line": 205
          },
          "name": "addAnnotation",
          "parameters": [
            {
              "docs": {
                "summary": "- The key."
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "- The value."
              },
              "name": "value",
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add one or more finalizers."
          },
          "locationInModule": {
            "filename": "src/metadata.ts",
            "line": 214
          },
          "name": "addFinalizers",
          "parameters": [
            {
              "docs": {
                "summary": "the finalizers."
              },
              "name": "finalizers",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add a label."
          },
          "locationInModule": {
            "filename": "src/metadata.ts",
            "line": 187
          },
          "name": "addLabel",
          "parameters": [
            {
              "docs": {
                "summary": "- The key."
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "- The value."
              },
              "name": "value",
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add an owner."
          },
          "locationInModule": {
            "filename": "src/metadata.ts",
            "line": 223
          },
          "name": "addOwnerReference",
          "parameters": [
            {
              "docs": {
                "summary": "the owner."
              },
              "name": "owner",
              "type": {
                "fqn": "cdk8s.OwnerReference"
              }
            }
          ]
        },
        {
          "docs": {
            "returns": "a value of a label or undefined",
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/metadata.ts",
            "line": 195
          },
          "name": "getLabel",
          "parameters": [
            {
              "docs": {
                "summary": "the label."
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "optional": true,
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Synthesizes a k8s ObjectMeta for this metadata set."
          },
          "locationInModule": {
            "filename": "src/metadata.ts",
            "line": 239
          },
          "name": "toJson",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "ApiObjectMetadataDefinition",
      "properties": [
        {
          "docs": {
            "remarks": "If a name is specified in `metadata.name` this will be the name returned.\nOtherwise, a name will be generated by calling\n`Chart.of(this).generatedObjectName(this)`, which by default uses the\nconstruct path to generate a DNS-compatible name for the resource.",
            "stability": "stable",
            "summary": "The name of the API object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/metadata.ts",
            "line": 130
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The object's namespace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/metadata.ts",
            "line": 135
          },
          "name": "namespace",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/metadata:ApiObjectMetadataDefinition"
    },
    "cdk8s.ApiObjectMetadataDefinitionOptions": {
      "assembly": "cdk8s",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for `ApiObjectMetadataDefinition`."
      },
      "fqn": "cdk8s.ApiObjectMetadataDefinitionOptions",
      "interfaces": [
        "cdk8s.ApiObjectMetadata"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/metadata.ts",
        "line": 109
      },
      "name": "ApiObjectMetadataDefinitionOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Which ApiObject instance is the metadata attached to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/metadata.ts",
            "line": 114
          },
          "name": "apiObject",
          "type": {
            "fqn": "cdk8s.ApiObject"
          }
        }
      ],
      "symbolId": "src/metadata:ApiObjectMetadataDefinitionOptions"
    },
    "cdk8s.ApiObjectProps": {
      "assembly": "cdk8s",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for defining API objects."
      },
      "fqn": "cdk8s.ApiObjectProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/api-object.ts",
        "line": 11
      },
      "name": "ApiObjectProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "API version."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-object.ts",
            "line": 23
          },
          "name": "apiVersion",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Resource kind."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-object.ts",
            "line": 28
          },
          "name": "kind",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If `name` is not specified, an app-unique name will be allocated by the\nframework based on the path of the construct within thes construct tree.",
            "stability": "stable",
            "summary": "Object metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-object.ts",
            "line": 18
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s.ApiObjectMetadata"
          }
        }
      ],
      "symbolId": "src/api-object:ApiObjectProps"
    },
    "cdk8s.App": {
      "assembly": "cdk8s",
      "base": "constructs.Construct",
      "docs": {
        "stability": "stable",
        "summary": "Represents a cdk8s application."
      },
      "fqn": "cdk8s.App",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines an app."
        },
        "locationInModule": {
          "filename": "src/app.ts",
          "line": 169
        },
        "parameters": [
          {
            "docs": {
              "summary": "configuration options."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s.AppProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/app.ts",
        "line": 87
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/app.ts",
            "line": 119
          },
          "name": "of",
          "parameters": [
            {
              "name": "c",
              "type": {
                "fqn": "constructs.IConstruct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s.App"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Synthesizes all manifests to the output directory."
          },
          "locationInModule": {
            "filename": "src/app.ts",
            "line": 182
          },
          "name": "synth"
        },
        {
          "docs": {
            "returns": "A string with all YAML objects across all charts in this app.",
            "stability": "stable",
            "summary": "Synthesizes the app into a YAML string."
          },
          "locationInModule": {
            "filename": "src/app.ts",
            "line": 269
          },
          "name": "synthYaml",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "App",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns all the charts in this app, sorted topologically."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/app.ts",
            "line": 158
          },
          "name": "charts",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s.Chart"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The output directory into which manifests will be synthesized."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/app.ts",
            "line": 134
          },
          "name": "outdir",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "default": ".k8s.yaml",
            "stability": "stable",
            "summary": "The file extension to use for rendered YAML files."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/app.ts",
            "line": 140
          },
          "name": "outputFileExtension",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "remarks": "This includes both custom resolvers\npassed by the `resolvers` property, as well as built-in resolvers.",
            "stability": "stable",
            "summary": "Resolvers used by this app."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/app.ts",
            "line": 151
          },
          "name": "resolvers",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s.IResolver"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "default": "YamlOutputType.FILE_PER_CHART",
            "stability": "stable",
            "summary": "How to divide the YAML output into files."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/app.ts",
            "line": 145
          },
          "name": "yamlOutputType",
          "type": {
            "fqn": "cdk8s.YamlOutputType"
          }
        }
      ],
      "symbolId": "src/app:App"
    },
    "cdk8s.AppProps": {
      "assembly": "cdk8s",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "cdk8s.AppProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/app.ts",
        "line": 23
      },
      "name": "AppProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- CDK8S_OUTDIR if defined, otherwise \"dist\"",
            "remarks": "If you synthesize your application using `cdk8s synth`, you must\nalso pass this value to the CLI using the `--output` option or\nthe `output` property in the `cdk8s.yaml` configuration file.\nOtherwise, the CLI will not know about the output directory,\nand synthesis will fail.\n\nThis property is intended for internal and testing use.",
            "stability": "stable",
            "summary": "The directory to output Kubernetes manifests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/app.ts",
            "line": 37
          },
          "name": "outdir",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": ".k8s.yaml",
            "stability": "stable",
            "summary": "The file extension to use for rendered YAML files."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/app.ts",
            "line": 42
          },
          "name": "outputFileExtension",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "When set to true, the output directory will contain a `construct-metadata.json` file that holds construct related metadata on every resource in the app."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/app.ts",
            "line": 55
          },
          "name": "recordConstructMetadata",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no resolvers.",
            "remarks": "When multiple resolvers are passed,\nthey are invoked by order in the list, and only the first one that applies\n(e.g calls `context.replaceValue`) is invoked.",
            "see": "https://cdk8s.io/docs/latest/basics/app/#resolvers",
            "stability": "stable",
            "summary": "A list of resolvers that can be used to replace property values before they are written to the manifest file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/app.ts",
            "line": 67
          },
          "name": "resolvers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s.IResolver"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "YamlOutputType.FILE_PER_CHART",
            "stability": "stable",
            "summary": "How to divide the YAML output into files."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/app.ts",
            "line": 47
          },
          "name": "yamlOutputType",
          "optional": true,
          "type": {
            "fqn": "cdk8s.YamlOutputType"
          }
        }
      ],
      "symbolId": "src/app:AppProps"
    },
    "cdk8s.Chart": {
      "assembly": "cdk8s",
      "base": "constructs.Construct",
      "docs": {
        "stability": "stable"
      },
      "fqn": "cdk8s.Chart",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/chart.ts",
          "line": 88
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s.ChartProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/chart.ts",
        "line": 36
      },
      "methods": [
        {
          "docs": {
            "remarks": "We do attribute detection since we can't reliably use 'instanceof'.",
            "stability": "stable",
            "summary": "Return whether the given object is a Chart."
          },
          "locationInModule": {
            "filename": "src/chart.ts",
            "line": 42
          },
          "name": "isChart",
          "parameters": [
            {
              "name": "x",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Finds the chart in which a node is defined."
          },
          "locationInModule": {
            "filename": "src/chart.ts",
            "line": 60
          },
          "name": "of",
          "parameters": [
            {
              "docs": {
                "summary": "a construct node."
              },
              "name": "c",
              "type": {
                "fqn": "constructs.IConstruct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s.Chart"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "These can be other ApiObjects, Charts, or custom.",
            "stability": "stable",
            "summary": "Create a dependency between this Chart and other constructs."
          },
          "locationInModule": {
            "filename": "src/chart.ts",
            "line": 139
          },
          "name": "addDependency",
          "parameters": [
            {
              "docs": {
                "summary": "the dependencies to add."
              },
              "name": "dependencies",
              "type": {
                "fqn": "constructs.IConstruct"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "remarks": "Different resource types may have different constraints on names\n(`metadata.name`). The previous version of the name generator was\ncompatible with DNS_SUBDOMAIN but not with DNS_LABEL.\n\nFor example, `Deployment` names must comply with DNS_SUBDOMAIN while\n`Service` names must comply with DNS_LABEL.\n\nSince there is no formal specification for this, the default name\ngeneration scheme for kubernetes objects in cdk8s was changed to DNS_LABEL,\nsince it’s the common denominator for all kubernetes resources\n(supposedly).\n\nYou can override this method if you wish to customize object names at the\nchart level.",
            "stability": "stable",
            "summary": "Generates a app-unique name for an object given it's construct node path."
          },
          "locationInModule": {
            "filename": "src/chart.ts",
            "line": 126
          },
          "name": "generateObjectName",
          "parameters": [
            {
              "docs": {
                "summary": "The API object to generate a name for."
              },
              "name": "apiObject",
              "type": {
                "fqn": "cdk8s.ApiObject"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "returns": "array of resource manifests",
            "stability": "stable",
            "summary": "Renders this chart to a set of Kubernetes JSON resources."
          },
          "locationInModule": {
            "filename": "src/chart.ts",
            "line": 147
          },
          "name": "toJson",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "Chart",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns all the included API objects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/chart.ts",
            "line": 154
          },
          "name": "apiObjects",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s.ApiObject"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "remarks": "This is an immutable copy.",
            "stability": "stable",
            "summary": "Labels applied to all resources in this chart."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/chart.ts",
            "line": 102
          },
          "name": "labels",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The default namespace for all objects in this chart."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/chart.ts",
            "line": 76
          },
          "name": "namespace",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/chart:Chart"
    },
    "cdk8s.ChartProps": {
      "assembly": "cdk8s",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "cdk8s.ChartProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/chart.ts",
        "line": 9
      },
      "name": "ChartProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "Setting this property to true drops the hash suffix.",
            "stability": "stable",
            "summary": "The autogenerated resource name by default is suffixed with a stable hash of the construct path."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/chart.ts",
            "line": 32
          },
          "name": "disableResourceNameHashes",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no common labels",
            "stability": "stable",
            "summary": "Labels to apply to all resources in this chart."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/chart.ts",
            "line": 24
          },
          "name": "labels",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no namespace is synthesized (usually this implies \"default\")",
            "remarks": "This namespace will only apply to objects that don't have a\n`namespace` explicitly defined for them.",
            "stability": "stable",
            "summary": "The default namespace for all objects defined in this chart (directly or indirectly)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/chart.ts",
            "line": 17
          },
          "name": "namespace",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/chart:ChartProps"
    },
    "cdk8s.Cron": {
      "assembly": "cdk8s",
      "docs": {
        "stability": "stable",
        "summary": "Represents a cron schedule."
      },
      "fqn": "cdk8s.Cron",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/cron.ts",
          "line": 59
        },
        "parameters": [
          {
            "name": "cronOptions",
            "optional": true,
            "type": {
              "fqn": "cdk8s.CronOptions"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/cron.ts",
        "line": 4
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a cron schedule which runs first day of January every year."
          },
          "locationInModule": {
            "filename": "src/cron.ts",
            "line": 43
          },
          "name": "annually",
          "returns": {
            "type": {
              "fqn": "cdk8s.Cron"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a cron schedule which runs every day at midnight."
          },
          "locationInModule": {
            "filename": "src/cron.ts",
            "line": 22
          },
          "name": "daily",
          "returns": {
            "type": {
              "fqn": "cdk8s.Cron"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a cron schedule which runs every minute."
          },
          "locationInModule": {
            "filename": "src/cron.ts",
            "line": 8
          },
          "name": "everyMinute",
          "returns": {
            "type": {
              "fqn": "cdk8s.Cron"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a cron schedule which runs every hour."
          },
          "locationInModule": {
            "filename": "src/cron.ts",
            "line": 15
          },
          "name": "hourly",
          "returns": {
            "type": {
              "fqn": "cdk8s.Cron"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a cron schedule which runs first day of every month."
          },
          "locationInModule": {
            "filename": "src/cron.ts",
            "line": 36
          },
          "name": "monthly",
          "returns": {
            "type": {
              "fqn": "cdk8s.Cron"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a custom cron schedule from a set of cron fields."
          },
          "locationInModule": {
            "filename": "src/cron.ts",
            "line": 50
          },
          "name": "schedule",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "cdk8s.CronOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s.Cron"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a cron schedule which runs every week on Sunday."
          },
          "locationInModule": {
            "filename": "src/cron.ts",
            "line": 29
          },
          "name": "weekly",
          "returns": {
            "type": {
              "fqn": "cdk8s.Cron"
            }
          },
          "static": true
        }
      ],
      "name": "Cron",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Retrieve the expression for this schedule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/cron.ts",
            "line": 57
          },
          "name": "expressionString",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/cron:Cron"
    },
    "cdk8s.CronOptions": {
      "assembly": "cdk8s",
      "datatype": true,
      "docs": {
        "remarks": "All fields are strings so you can use complex expressions. Absence of\na field implies '*'",
        "stability": "stable",
        "summary": "Options to configure a cron expression."
      },
      "fqn": "cdk8s.CronOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/cron.ts",
        "line": 76
      },
      "name": "CronOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Every day of the month",
            "stability": "stable",
            "summary": "The day of the month to run this rule at."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/cron.ts",
            "line": 96
          },
          "name": "day",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Every hour",
            "stability": "stable",
            "summary": "The hour to run this rule at."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/cron.ts",
            "line": 89
          },
          "name": "hour",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Every minute",
            "stability": "stable",
            "summary": "The minute to run this rule at."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/cron.ts",
            "line": 82
          },
          "name": "minute",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Every month",
            "stability": "stable",
            "summary": "The month to run this rule at."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/cron.ts",
            "line": 103
          },
          "name": "month",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Any day of the week",
            "stability": "stable",
            "summary": "The day of the week to run this rule at."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/cron.ts",
            "line": 110
          },
          "name": "weekDay",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/cron:CronOptions"
    },
    "cdk8s.DependencyGraph": {
      "assembly": "cdk8s",
      "docs": {
        "remarks": "This graph includes the dependency relationships between all nodes in the\nnode (construct) sub-tree who's root is this Node.\n\nNote that this means that lonely nodes (no dependencies and no dependants) are also included in this graph as\nchildless children of the root node of the graph.\n\nThe graph does not include cross-scope dependencies. That is, if a child on the current scope depends on a node\nfrom a different scope, that relationship is not represented in this graph.",
        "stability": "stable",
        "summary": "Represents the dependency graph for a given Node."
      },
      "fqn": "cdk8s.DependencyGraph",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/dependency.ts",
          "line": 21
        },
        "parameters": [
          {
            "name": "node",
            "type": {
              "fqn": "constructs.Node"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/dependency.ts",
        "line": 17
      },
      "methods": [
        {
          "docs": {
            "see": "Vertex.topology ()",
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/dependency.ts",
            "line": 88
          },
          "name": "topology",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "constructs.IConstruct"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "DependencyGraph",
      "properties": [
        {
          "docs": {
            "remarks": "Note that this vertex will always have `null` as its `.value` since it is an artifical root\nthat binds all the connected spaces of the graph.",
            "stability": "stable",
            "summary": "Returns the root of the graph."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/dependency.ts",
            "line": 81
          },
          "name": "root",
          "type": {
            "fqn": "cdk8s.DependencyVertex"
          }
        }
      ],
      "symbolId": "src/dependency:DependencyGraph"
    },
    "cdk8s.DependencyVertex": {
      "assembly": "cdk8s",
      "docs": {
        "remarks": "The value of each vertex is an `IConstruct` that is accessible via the `.value` getter.",
        "stability": "stable",
        "summary": "Represents a vertex in the graph."
      },
      "fqn": "cdk8s.DependencyVertex",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/dependency.ts",
          "line": 104
        },
        "parameters": [
          {
            "name": "value",
            "optional": true,
            "type": {
              "fqn": "constructs.IConstruct"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/dependency.ts",
        "line": 98
      },
      "methods": [
        {
          "docs": {
            "remarks": "Also updates the parents of `dep`, so that it contains this node as a parent.\n\nThis operation will fail in case it creates a cycle in the graph.",
            "stability": "stable",
            "summary": "Adds a vertex as a dependency of the current node."
          },
          "locationInModule": {
            "filename": "src/dependency.ts",
            "line": 163
          },
          "name": "addChild",
          "parameters": [
            {
              "docs": {
                "summary": "The dependency."
              },
              "name": "dep",
              "type": {
                "fqn": "cdk8s.DependencyVertex"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns a topologically sorted array of the constructs in the sub-graph."
          },
          "locationInModule": {
            "filename": "src/dependency.ts",
            "line": 134
          },
          "name": "topology",
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "constructs.IConstruct"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "DependencyVertex",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns the parents of the vertex (i.e dependants)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/dependency.ts",
            "line": 127
          },
          "name": "inbound",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s.DependencyVertex"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns the children of the vertex (i.e dependencies)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/dependency.ts",
            "line": 120
          },
          "name": "outbound",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s.DependencyVertex"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "remarks": "`null` in case this is the root of the graph.",
            "stability": "stable",
            "summary": "Returns the IConstruct this graph vertex represents."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/dependency.ts",
            "line": 113
          },
          "name": "value",
          "optional": true,
          "type": {
            "fqn": "constructs.IConstruct"
          }
        }
      ],
      "symbolId": "src/dependency:DependencyVertex"
    },
    "cdk8s.Duration": {
      "assembly": "cdk8s",
      "docs": {
        "remarks": "The amount can be specified either as a literal value (e.g: `10`) which\ncannot be negative.",
        "stability": "stable",
        "summary": "Represents a length of time."
      },
      "fqn": "cdk8s.Duration",
      "kind": "class",
      "locationInModule": {
        "filename": "src/duration.ts",
        "line": 8
      },
      "methods": [
        {
          "docs": {
            "returns": "a new `Duration` representing `amount` Days.",
            "stability": "stable",
            "summary": "Create a Duration representing an amount of days."
          },
          "locationInModule": {
            "filename": "src/duration.ts",
            "line": 55
          },
          "name": "days",
          "parameters": [
            {
              "docs": {
                "summary": "the amount of Days the `Duration` will represent."
              },
              "name": "amount",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s.Duration"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "a new `Duration` representing `amount` Hours.",
            "stability": "stable",
            "summary": "Create a Duration representing an amount of hours."
          },
          "locationInModule": {
            "filename": "src/duration.ts",
            "line": 45
          },
          "name": "hours",
          "parameters": [
            {
              "docs": {
                "summary": "the amount of Hours the `Duration` will represent."
              },
              "name": "amount",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s.Duration"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "a new `Duration` representing `amount` ms.",
            "stability": "stable",
            "summary": "Create a Duration representing an amount of milliseconds."
          },
          "locationInModule": {
            "filename": "src/duration.ts",
            "line": 15
          },
          "name": "millis",
          "parameters": [
            {
              "docs": {
                "summary": "the amount of Milliseconds the `Duration` will represent."
              },
              "name": "amount",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s.Duration"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "a new `Duration` representing `amount` Minutes.",
            "stability": "stable",
            "summary": "Create a Duration representing an amount of minutes."
          },
          "locationInModule": {
            "filename": "src/duration.ts",
            "line": 35
          },
          "name": "minutes",
          "parameters": [
            {
              "docs": {
                "summary": "the amount of Minutes the `Duration` will represent."
              },
              "name": "amount",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s.Duration"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "the parsed `Duration`.",
            "see": "https://www.iso.org/fr/standard/70907.html",
            "stability": "stable",
            "summary": "Parse a period formatted according to the ISO 8601 standard."
          },
          "locationInModule": {
            "filename": "src/duration.ts",
            "line": 66
          },
          "name": "parse",
          "parameters": [
            {
              "docs": {
                "summary": "an ISO-formtted duration to be parsed."
              },
              "name": "duration",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s.Duration"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "a new `Duration` representing `amount` Seconds.",
            "stability": "stable",
            "summary": "Create a Duration representing an amount of seconds."
          },
          "locationInModule": {
            "filename": "src/duration.ts",
            "line": 25
          },
          "name": "seconds",
          "parameters": [
            {
              "docs": {
                "summary": "the amount of Seconds the `Duration` will represent."
              },
              "name": "amount",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s.Duration"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "the value of this `Duration` expressed in Days.",
            "stability": "stable",
            "summary": "Return the total number of days in this Duration."
          },
          "locationInModule": {
            "filename": "src/duration.ts",
            "line": 141
          },
          "name": "toDays",
          "parameters": [
            {
              "name": "opts",
              "optional": true,
              "type": {
                "fqn": "cdk8s.TimeConversionOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "number"
            }
          }
        },
        {
          "docs": {
            "returns": "the value of this `Duration` expressed in Hours.",
            "stability": "stable",
            "summary": "Return the total number of hours in this Duration."
          },
          "locationInModule": {
            "filename": "src/duration.ts",
            "line": 132
          },
          "name": "toHours",
          "parameters": [
            {
              "name": "opts",
              "optional": true,
              "type": {
                "fqn": "cdk8s.TimeConversionOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "number"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Turn this duration into a human-readable string."
          },
          "locationInModule": {
            "filename": "src/duration.ts",
            "line": 166
          },
          "name": "toHumanString",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "returns": "a string starting with 'PT' describing the period",
            "see": "https://www.iso.org/fr/standard/70907.html",
            "stability": "stable",
            "summary": "Return an ISO 8601 representation of this period."
          },
          "locationInModule": {
            "filename": "src/duration.ts",
            "line": 151
          },
          "name": "toIsoString",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "returns": "the value of this `Duration` expressed in Milliseconds.",
            "stability": "stable",
            "summary": "Return the total number of milliseconds in this Duration."
          },
          "locationInModule": {
            "filename": "src/duration.ts",
            "line": 105
          },
          "name": "toMilliseconds",
          "parameters": [
            {
              "name": "opts",
              "optional": true,
              "type": {
                "fqn": "cdk8s.TimeConversionOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "number"
            }
          }
        },
        {
          "docs": {
            "returns": "the value of this `Duration` expressed in Minutes.",
            "stability": "stable",
            "summary": "Return the total number of minutes in this Duration."
          },
          "locationInModule": {
            "filename": "src/duration.ts",
            "line": 123
          },
          "name": "toMinutes",
          "parameters": [
            {
              "name": "opts",
              "optional": true,
              "type": {
                "fqn": "cdk8s.TimeConversionOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "number"
            }
          }
        },
        {
          "docs": {
            "returns": "the value of this `Duration` expressed in Seconds.",
            "stability": "stable",
            "summary": "Return the total number of seconds in this Duration."
          },
          "locationInModule": {
            "filename": "src/duration.ts",
            "line": 114
          },
          "name": "toSeconds",
          "parameters": [
            {
              "name": "opts",
              "optional": true,
              "type": {
                "fqn": "cdk8s.TimeConversionOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "number"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return unit of Duration."
          },
          "locationInModule": {
            "filename": "src/duration.ts",
            "line": 200
          },
          "name": "unitLabel",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "Duration",
      "symbolId": "src/duration:Duration"
    },
    "cdk8s.GroupVersionKind": {
      "assembly": "cdk8s",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "cdk8s.GroupVersionKind",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/api-object.ts",
        "line": 38
      },
      "name": "GroupVersionKind",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The object's API version (e.g. `authorization.k8s.io/v1`)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-object.ts",
            "line": 42
          },
          "name": "apiVersion",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The object kind."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-object.ts",
            "line": 47
          },
          "name": "kind",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/api-object:GroupVersionKind"
    },
    "cdk8s.Helm": {
      "assembly": "cdk8s",
      "base": "cdk8s.Include",
      "docs": {
        "remarks": "Use this construct to import an existing Helm chart and incorporate it into your constructs.",
        "stability": "stable",
        "summary": "Represents a Helm deployment."
      },
      "fqn": "cdk8s.Helm",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/helm.ts",
          "line": 90
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "cdk8s.HelmProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/helm.ts",
        "line": 84
      },
      "name": "Helm",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The helm release name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/helm.ts",
            "line": 88
          },
          "name": "releaseName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/helm:Helm"
    },
    "cdk8s.HelmProps": {
      "assembly": "cdk8s",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for `Helm`."
      },
      "fqn": "cdk8s.HelmProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/helm.ts",
        "line": 15
      },
      "name": "HelmProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "example": "\"bitnami/redis\"",
            "remarks": "This name is passed to `helm template` and has all the relevant semantics.",
            "stability": "stable",
            "summary": "The chart name to use. It can be a chart from a helm repository or a local directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/helm.ts",
            "line": 24
          },
          "name": "chart",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"helm\"",
            "stability": "stable",
            "summary": "The local helm executable to use in order to create the manifest the chart."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/helm.ts",
            "line": 69
          },
          "name": "helmExecutable",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "[]",
            "stability": "stable",
            "summary": "Additional flags to add to the `helm` execution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/helm.ts",
            "line": 76
          },
          "name": "helmFlags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Scope all resources in to a given namespace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/helm.ts",
            "line": 47
          },
          "name": "namespace",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- if unspecified, a name will be allocated based on the construct path",
            "see": "https://helm.sh/docs/intro/using_helm/#three-big-concepts",
            "stability": "stable",
            "summary": "The release name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/helm.ts",
            "line": 55
          },
          "name": "releaseName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Chart repository url where to locate the requested chart."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/helm.ts",
            "line": 29
          },
          "name": "repo",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- If no values are specified, chart will use the defaults.",
            "stability": "stable",
            "summary": "Values to pass to the chart."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/helm.ts",
            "line": 62
          },
          "name": "values",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "example": "\"^2.0.0\"",
            "remarks": "This constraint can be a specific tag (e.g. 1.1.1)\nor it may reference a valid range (e.g. ^2.0.0).\nIf this is not specified, the latest version is used\n\nThis name is passed to `helm template --version` and has all the relevant semantics.",
            "stability": "stable",
            "summary": "Version constraint for the chart version to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/helm.ts",
            "line": 42
          },
          "name": "version",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/helm:HelmProps"
    },
    "cdk8s.IAnyProducer": {
      "assembly": "cdk8s",
      "docs": {
        "stability": "stable"
      },
      "fqn": "cdk8s.IAnyProducer",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/lazy.ts",
        "line": 13
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/lazy.ts",
            "line": 14
          },
          "name": "produce",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "IAnyProducer",
      "symbolId": "src/lazy:IAnyProducer"
    },
    "cdk8s.IResolver": {
      "assembly": "cdk8s",
      "docs": {
        "stability": "stable",
        "summary": "Contract for resolver objects."
      },
      "fqn": "cdk8s.IResolver",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/resolve.ts",
        "line": 49
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "remarks": "To replace a value, implementations must invoke `context.replaceValue`.",
            "stability": "stable",
            "summary": "This function is invoked on every property during cdk8s synthesis."
          },
          "locationInModule": {
            "filename": "src/resolve.ts",
            "line": 55
          },
          "name": "resolve",
          "parameters": [
            {
              "name": "context",
              "type": {
                "fqn": "cdk8s.ResolutionContext"
              }
            }
          ]
        }
      ],
      "name": "IResolver",
      "symbolId": "src/resolve:IResolver"
    },
    "cdk8s.ImplicitTokenResolver": {
      "assembly": "cdk8s",
      "docs": {
        "stability": "stable",
        "summary": "Resolves implicit tokens."
      },
      "fqn": "cdk8s.ImplicitTokenResolver",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "interfaces": [
        "cdk8s.IResolver"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/resolve.ts",
        "line": 74
      },
      "methods": [
        {
          "docs": {
            "remarks": "To replace a value, implementations must invoke `context.replaceValue`.",
            "stability": "stable",
            "summary": "This function is invoked on every property during cdk8s synthesis."
          },
          "locationInModule": {
            "filename": "src/resolve.ts",
            "line": 76
          },
          "name": "resolve",
          "overrides": "cdk8s.IResolver",
          "parameters": [
            {
              "name": "context",
              "type": {
                "fqn": "cdk8s.ResolutionContext"
              }
            }
          ]
        }
      ],
      "name": "ImplicitTokenResolver",
      "symbolId": "src/resolve:ImplicitTokenResolver"
    },
    "cdk8s.Include": {
      "assembly": "cdk8s",
      "base": "constructs.Construct",
      "docs": {
        "remarks": "The names (`metadata.name`) of imported resources will be preserved as-is\nfrom the manifest.",
        "stability": "stable",
        "summary": "Reads a YAML manifest from a file or a URL and defines all resources as API objects within the defined scope."
      },
      "fqn": "cdk8s.Include",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/include.ts",
          "line": 22
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "cdk8s.IncludeProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/include.ts",
        "line": 21
      },
      "name": "Include",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns all the included API objects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/include.ts",
            "line": 40
          },
          "name": "apiObjects",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s.ApiObject"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/include:Include"
    },
    "cdk8s.IncludeProps": {
      "assembly": "cdk8s",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "cdk8s.IncludeProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/include.ts",
        "line": 5
      },
      "name": "IncludeProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "example": "mymanifest.yaml",
            "stability": "stable",
            "summary": "Local file path or URL which includes a Kubernetes YAML manifest."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/include.ts",
            "line": 11
          },
          "name": "url",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/include:IncludeProps"
    },
    "cdk8s.JsonPatch": {
      "assembly": "cdk8s",
      "docs": {
        "example": "const output = JsonPatch.apply(input,\n JsonPatch.replace('/world/hi/there', 'goodbye'),\n JsonPatch.add('/world/foo/', 'boom'),\n JsonPatch.remove('/hello'));",
        "remarks": "Use the the `JsonPatch.apply(doc, ...ops)` function to apply a set of\noperations to a JSON document and return the result.\n\nOperations can be created using the factory methods `JsonPatch.add()`,\n`JsonPatch.remove()`, etc.",
        "stability": "stable",
        "summary": "Utility for applying RFC-6902 JSON-Patch to a document."
      },
      "fqn": "cdk8s.JsonPatch",
      "kind": "class",
      "locationInModule": {
        "filename": "src/json-patch.ts",
        "line": 20
      },
      "methods": [
        {
          "docs": {
            "example": "JsonPatch.add('/biscuits/1', { \"name\": \"Ginger Nut\" })",
            "remarks": "In the case of an\narray, the value is inserted before the given index. The - character can be\nused instead of an index to insert at the end of an array.",
            "stability": "stable",
            "summary": "Adds a value to an object or inserts it into an array."
          },
          "locationInModule": {
            "filename": "src/json-patch.ts",
            "line": 39
          },
          "name": "add",
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s.JsonPatch"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "The result document",
            "stability": "stable",
            "summary": "Applies a set of JSON-Patch (RFC-6902) operations to `document` and returns the result."
          },
          "locationInModule": {
            "filename": "src/json-patch.ts",
            "line": 27
          },
          "name": "apply",
          "parameters": [
            {
              "docs": {
                "summary": "The document to patch."
              },
              "name": "document",
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "summary": "The operations to apply."
              },
              "name": "ops",
              "type": {
                "fqn": "cdk8s.JsonPatch"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true,
          "variadic": true
        },
        {
          "docs": {
            "example": "JsonPatch.copy('/biscuits/0', '/best_biscuit')",
            "remarks": "Both\nfrom and path are JSON Pointers.",
            "stability": "stable",
            "summary": "Copies a value from one location to another within the JSON document."
          },
          "locationInModule": {
            "filename": "src/json-patch.ts",
            "line": 62
          },
          "name": "copy",
          "parameters": [
            {
              "name": "from",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s.JsonPatch"
            }
          },
          "static": true
        },
        {
          "docs": {
            "example": "JsonPatch.move('/biscuits', '/cookies')",
            "remarks": "Both from and path are JSON Pointers.",
            "stability": "stable",
            "summary": "Moves a value from one location to the other."
          },
          "locationInModule": {
            "filename": "src/json-patch.ts",
            "line": 69
          },
          "name": "move",
          "parameters": [
            {
              "name": "from",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s.JsonPatch"
            }
          },
          "static": true
        },
        {
          "docs": {
            "example": "JsonPatch.remove('/biscuits/0')",
            "stability": "stable",
            "summary": "Removes a value from an object or array."
          },
          "locationInModule": {
            "filename": "src/json-patch.ts",
            "line": 47
          },
          "name": "remove",
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s.JsonPatch"
            }
          },
          "static": true
        },
        {
          "docs": {
            "example": "JsonPatch.replace('/biscuits/0/name', 'Chocolate Digestive')",
            "remarks": "Equivalent to a “remove” followed by an “add”.",
            "stability": "stable",
            "summary": "Replaces a value."
          },
          "locationInModule": {
            "filename": "src/json-patch.ts",
            "line": 54
          },
          "name": "replace",
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s.JsonPatch"
            }
          },
          "static": true
        },
        {
          "docs": {
            "example": "JsonPatch.test('/best_biscuit/name', 'Choco Leibniz')",
            "remarks": "If the test fails,\nthen the patch as a whole should not apply.",
            "stability": "stable",
            "summary": "Tests that the specified value is set in the document."
          },
          "locationInModule": {
            "filename": "src/json-patch.ts",
            "line": 77
          },
          "name": "test",
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s.JsonPatch"
            }
          },
          "static": true
        }
      ],
      "name": "JsonPatch",
      "symbolId": "src/json-patch:JsonPatch"
    },
    "cdk8s.Lazy": {
      "assembly": "cdk8s",
      "docs": {
        "stability": "stable"
      },
      "fqn": "cdk8s.Lazy",
      "kind": "class",
      "locationInModule": {
        "filename": "src/lazy.ts",
        "line": 1
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/lazy.ts",
            "line": 2
          },
          "name": "any",
          "parameters": [
            {
              "name": "producer",
              "type": {
                "fqn": "cdk8s.IAnyProducer"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/lazy.ts",
            "line": 8
          },
          "name": "produce",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "Lazy",
      "symbolId": "src/lazy:Lazy"
    },
    "cdk8s.LazyResolver": {
      "assembly": "cdk8s",
      "docs": {
        "stability": "stable",
        "summary": "Resolvers instanecs of `Lazy`."
      },
      "fqn": "cdk8s.LazyResolver",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "interfaces": [
        "cdk8s.IResolver"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/resolve.ts",
        "line": 61
      },
      "methods": [
        {
          "docs": {
            "remarks": "To replace a value, implementations must invoke `context.replaceValue`.",
            "stability": "stable",
            "summary": "This function is invoked on every property during cdk8s synthesis."
          },
          "locationInModule": {
            "filename": "src/resolve.ts",
            "line": 63
          },
          "name": "resolve",
          "overrides": "cdk8s.IResolver",
          "parameters": [
            {
              "name": "context",
              "type": {
                "fqn": "cdk8s.ResolutionContext"
              }
            }
          ]
        }
      ],
      "name": "LazyResolver",
      "symbolId": "src/resolve:LazyResolver"
    },
    "cdk8s.NameOptions": {
      "assembly": "cdk8s",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for name generation."
      },
      "fqn": "cdk8s.NameOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/names.ts",
        "line": 12
      },
      "name": "NameOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "\"-\"",
            "stability": "stable",
            "summary": "Delimiter to use between components."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/names.ts",
            "line": 29
          },
          "name": "delimiter",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "[] use the construct path components",
            "stability": "stable",
            "summary": "Extra components to include in the name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/names.ts",
            "line": 23
          },
          "name": "extra",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Include a short hash as last part of the name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/names.ts",
            "line": 35
          },
          "name": "includeHash",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "63",
            "stability": "stable",
            "summary": "Maximum allowed length for the name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/names.ts",
            "line": 17
          },
          "name": "maxLen",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/names:NameOptions"
    },
    "cdk8s.Names": {
      "assembly": "cdk8s",
      "docs": {
        "stability": "stable",
        "summary": "Utilities for generating unique and stable names."
      },
      "fqn": "cdk8s.Names",
      "kind": "class",
      "locationInModule": {
        "filename": "src/names.ts",
        "line": 41
      },
      "methods": [
        {
          "docs": {
            "custom": {
              "link": "https://tools.ietf.org/html/rfc1123",
              "throws": "if any of the components do not adhere to naming constraints or\nlength."
            },
            "remarks": "The generated name will:\n - contain at most 63 characters\n - contain only lowercase alphanumeric characters or ‘-’\n - start with an alphanumeric character\n - end with an alphanumeric character\n\nThe generated name will have the form:\n <comp0>-<comp1>-..-<compN>-<short-hash>\n\nWhere <comp> are the path components (assuming they are is separated by\n\"/\").\n\nNote that if the total length is longer than 63 characters, we will trim\nthe first components since the last components usually encode more meaning.",
            "stability": "stable",
            "summary": "Generates a unique and stable name compatible DNS_LABEL from RFC-1123 from a path."
          },
          "locationInModule": {
            "filename": "src/names.ts",
            "line": 68
          },
          "name": "toDnsLabel",
          "parameters": [
            {
              "docs": {
                "summary": "The construct for which to render the DNS label."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "Name options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "cdk8s.NameOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        },
        {
          "docs": {
            "custom": {
              "link": "https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#syntax-and-character-set",
              "throws": "if any of the components do not adhere to naming constraints or\nlength."
            },
            "remarks": "The name segment is required and must be 63 characters or less, beginning\nand ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-),\nunderscores (_), dots (.), and alphanumerics between.\n\nValid label values must be 63 characters or less and must be empty or\nbegin and end with an alphanumeric character ([a-z0-9A-Z]) with dashes\n(-), underscores (_), dots (.), and alphanumerics between.\n\nThe generated name will have the form:\n <comp0><delim><comp1><delim>..<delim><compN><delim><short-hash>\n\nWhere <comp> are the path components (assuming they are is separated by\n\"/\").\n\nNote that if the total length is longer than 63 characters, we will trim\nthe first components since the last components usually encode more meaning.",
            "stability": "stable",
            "summary": "Generates a unique and stable name compatible label key name segment and label value from a path."
          },
          "locationInModule": {
            "filename": "src/names.ts",
            "line": 124
          },
          "name": "toLabelValue",
          "parameters": [
            {
              "docs": {
                "summary": "The construct for which to render the DNS label."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "Name options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "cdk8s.NameOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        }
      ],
      "name": "Names",
      "symbolId": "src/names:Names"
    },
    "cdk8s.NumberStringUnionResolver": {
      "assembly": "cdk8s",
      "docs": {
        "remarks": "E.g IntOrString, Quantity, ...",
        "stability": "stable",
        "summary": "Resolves union types that allow using either number or string (as generated by the CLI)."
      },
      "fqn": "cdk8s.NumberStringUnionResolver",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "interfaces": [
        "cdk8s.IResolver"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/resolve.ts",
        "line": 92
      },
      "methods": [
        {
          "docs": {
            "remarks": "To replace a value, implementations must invoke `context.replaceValue`.",
            "stability": "stable",
            "summary": "This function is invoked on every property during cdk8s synthesis."
          },
          "locationInModule": {
            "filename": "src/resolve.ts",
            "line": 96
          },
          "name": "resolve",
          "overrides": "cdk8s.IResolver",
          "parameters": [
            {
              "name": "context",
              "type": {
                "fqn": "cdk8s.ResolutionContext"
              }
            }
          ]
        }
      ],
      "name": "NumberStringUnionResolver",
      "symbolId": "src/resolve:NumberStringUnionResolver"
    },
    "cdk8s.OwnerReference": {
      "assembly": "cdk8s",
      "datatype": true,
      "docs": {
        "remarks": "An owning object must be in the same namespace as the dependent, or\nbe cluster-scoped, so there is no namespace field.",
        "stability": "stable",
        "summary": "OwnerReference contains enough information to let you identify an owning object."
      },
      "fqn": "cdk8s.OwnerReference",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/metadata.ts",
        "line": 258
      },
      "name": "OwnerReference",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "API version of the referent."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/metadata.ts",
            "line": 262
          },
          "name": "apiVersion",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "stability": "stable",
            "summary": "Kind of the referent."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/metadata.ts",
            "line": 286
          },
          "name": "kind",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://kubernetes.io/docs/user-guide/identifiers#names",
            "stability": "stable",
            "summary": "Name of the referent."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/metadata.ts",
            "line": 293
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://kubernetes.io/docs/user-guide/identifiers#uids",
            "stability": "stable",
            "summary": "UID of the referent."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/metadata.ts",
            "line": 300
          },
          "name": "uid",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false. To set this field, a user needs \"delete\" permission of the\nowner, otherwise 422 (Unprocessable Entity) will be returned.",
            "remarks": "Defaults to false. To set this field, a user needs \"delete\"\npermission of the owner, otherwise 422 (Unprocessable Entity) will be\nreturned.",
            "stability": "stable",
            "summary": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/metadata.ts",
            "line": 274
          },
          "name": "blockOwnerDeletion",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "If true, this reference points to the managing controller."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/metadata.ts",
            "line": 279
          },
          "name": "controller",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/metadata:OwnerReference"
    },
    "cdk8s.ResolutionContext": {
      "assembly": "cdk8s",
      "docs": {
        "stability": "stable",
        "summary": "Context object for a specific resolution process."
      },
      "fqn": "cdk8s.ResolutionContext",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/resolve.ts",
          "line": 20
        },
        "parameters": [
          {
            "docs": {
              "summary": "Which ApiObject is currently being resolved."
            },
            "name": "obj",
            "type": {
              "fqn": "cdk8s.ApiObject"
            }
          },
          {
            "docs": {
              "summary": "Which key is currently being resolved."
            },
            "name": "key",
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          },
          {
            "docs": {
              "summary": "The value associated to the key currently being resolved."
            },
            "name": "value",
            "type": {
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/resolve.ts",
        "line": 8
      },
      "methods": [
        {
          "docs": {
            "remarks": "The new value is what will end up in the manifest.",
            "stability": "stable",
            "summary": "Replaces the original value in this resolution context with a new value."
          },
          "locationInModule": {
            "filename": "src/resolve.ts",
            "line": 39
          },
          "name": "replaceValue",
          "parameters": [
            {
              "name": "newValue",
              "type": {
                "primitive": "any"
              }
            }
          ]
        }
      ],
      "name": "ResolutionContext",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Which key is currently being resolved."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/resolve.ts",
            "line": 28
          },
          "name": "key",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Which ApiObject is currently being resolved."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/resolve.ts",
            "line": 24
          },
          "name": "obj",
          "type": {
            "fqn": "cdk8s.ApiObject"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The value associated to the key currently being resolved."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/resolve.ts",
            "line": 32
          },
          "name": "value",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Whether or not the value was replaced by invoking the `replaceValue` method."
          },
          "locationInModule": {
            "filename": "src/resolve.ts",
            "line": 18
          },
          "name": "replaced",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The replaced value that was set via the `replaceValue` method."
          },
          "locationInModule": {
            "filename": "src/resolve.ts",
            "line": 13
          },
          "name": "replacedValue",
          "type": {
            "primitive": "any"
          }
        }
      ],
      "symbolId": "src/resolve:ResolutionContext"
    },
    "cdk8s.Size": {
      "assembly": "cdk8s",
      "docs": {
        "remarks": "The amount can be specified either as a literal value (e.g: `10`) which\ncannot be negative.\n\nWhen the amount is passed as a token, unit conversion is not possible.",
        "stability": "stable",
        "summary": "Represents the amount of digital storage."
      },
      "fqn": "cdk8s.Size",
      "kind": "class",
      "locationInModule": {
        "filename": "src/size.ts",
        "line": 9
      },
      "methods": [
        {
          "docs": {
            "remarks": "1 GiB = 1024 MiB",
            "stability": "stable",
            "summary": "Create a Storage representing an amount gibibytes."
          },
          "locationInModule": {
            "filename": "src/size.ts",
            "line": 30
          },
          "name": "gibibytes",
          "parameters": [
            {
              "name": "amount",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s.Size"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "1 KiB = 1024 bytes",
            "stability": "stable",
            "summary": "Create a Storage representing an amount kibibytes."
          },
          "locationInModule": {
            "filename": "src/size.ts",
            "line": 14
          },
          "name": "kibibytes",
          "parameters": [
            {
              "name": "amount",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s.Size"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "1 MiB = 1024 KiB",
            "stability": "stable",
            "summary": "Create a Storage representing an amount mebibytes."
          },
          "locationInModule": {
            "filename": "src/size.ts",
            "line": 22
          },
          "name": "mebibytes",
          "parameters": [
            {
              "name": "amount",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s.Size"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "1 PiB = 1024 TiB",
            "stability": "stable",
            "summary": "Create a Storage representing an amount pebibytes."
          },
          "locationInModule": {
            "filename": "src/size.ts",
            "line": 46
          },
          "name": "pebibyte",
          "parameters": [
            {
              "name": "amount",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s.Size"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "1 TiB = 1024 GiB",
            "stability": "stable",
            "summary": "Create a Storage representing an amount tebibytes."
          },
          "locationInModule": {
            "filename": "src/size.ts",
            "line": 38
          },
          "name": "tebibytes",
          "parameters": [
            {
              "name": "amount",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s.Size"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns amount with abbreviated storage unit."
          },
          "locationInModule": {
            "filename": "src/size.ts",
            "line": 64
          },
          "name": "asString",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return this storage as a total number of gibibytes."
          },
          "locationInModule": {
            "filename": "src/size.ts",
            "line": 85
          },
          "name": "toGibibytes",
          "parameters": [
            {
              "name": "opts",
              "optional": true,
              "type": {
                "fqn": "cdk8s.SizeConversionOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "number"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return this storage as a total number of kibibytes."
          },
          "locationInModule": {
            "filename": "src/size.ts",
            "line": 71
          },
          "name": "toKibibytes",
          "parameters": [
            {
              "name": "opts",
              "optional": true,
              "type": {
                "fqn": "cdk8s.SizeConversionOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "number"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return this storage as a total number of mebibytes."
          },
          "locationInModule": {
            "filename": "src/size.ts",
            "line": 78
          },
          "name": "toMebibytes",
          "parameters": [
            {
              "name": "opts",
              "optional": true,
              "type": {
                "fqn": "cdk8s.SizeConversionOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "number"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return this storage as a total number of pebibytes."
          },
          "locationInModule": {
            "filename": "src/size.ts",
            "line": 99
          },
          "name": "toPebibytes",
          "parameters": [
            {
              "name": "opts",
              "optional": true,
              "type": {
                "fqn": "cdk8s.SizeConversionOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "number"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return this storage as a total number of tebibytes."
          },
          "locationInModule": {
            "filename": "src/size.ts",
            "line": 92
          },
          "name": "toTebibytes",
          "parameters": [
            {
              "name": "opts",
              "optional": true,
              "type": {
                "fqn": "cdk8s.SizeConversionOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "number"
            }
          }
        }
      ],
      "name": "Size",
      "symbolId": "src/size:Size"
    },
    "cdk8s.SizeConversionOptions": {
      "assembly": "cdk8s",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for how to convert size to a different unit."
      },
      "fqn": "cdk8s.SizeConversionOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/size.ts",
        "line": 119
      },
      "name": "SizeConversionOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "SizeRoundingBehavior.FAIL",
            "stability": "stable",
            "summary": "How conversions should behave when it encounters a non-integer result."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/size.ts",
            "line": 124
          },
          "name": "rounding",
          "optional": true,
          "type": {
            "fqn": "cdk8s.SizeRoundingBehavior"
          }
        }
      ],
      "symbolId": "src/size:SizeConversionOptions"
    },
    "cdk8s.SizeRoundingBehavior": {
      "assembly": "cdk8s",
      "docs": {
        "stability": "stable",
        "summary": "Rounding behaviour when converting between units of `Size`."
      },
      "fqn": "cdk8s.SizeRoundingBehavior",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/size.ts",
        "line": 107
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Fail the conversion if the result is not an integer."
          },
          "name": "FAIL"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "If the result is not an integer, round it to the closest integer less than the result."
          },
          "name": "FLOOR"
        },
        {
          "docs": {
            "remarks": "Return even if the result is a fraction.",
            "stability": "stable",
            "summary": "Don't round."
          },
          "name": "NONE"
        }
      ],
      "name": "SizeRoundingBehavior",
      "symbolId": "src/size:SizeRoundingBehavior"
    },
    "cdk8s.Testing": {
      "assembly": "cdk8s",
      "docs": {
        "stability": "stable",
        "summary": "Testing utilities for cdk8s applications."
      },
      "fqn": "cdk8s.Testing",
      "kind": "class",
      "locationInModule": {
        "filename": "src/testing.ts",
        "line": 10
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns an app for testing with the following properties: - Output directory is a temp dir."
          },
          "locationInModule": {
            "filename": "src/testing.ts",
            "line": 15
          },
          "name": "app",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s.AppProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s.App"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "a Chart that can be used for tests",
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/testing.ts",
            "line": 28
          },
          "name": "chart",
          "returns": {
            "type": {
              "fqn": "cdk8s.Chart"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns the Kubernetes manifest synthesized from this chart."
          },
          "locationInModule": {
            "filename": "src/testing.ts",
            "line": 35
          },
          "name": "synth",
          "parameters": [
            {
              "name": "chart",
              "type": {
                "fqn": "cdk8s.Chart"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "array"
              }
            }
          },
          "static": true
        }
      ],
      "name": "Testing",
      "symbolId": "src/testing:Testing"
    },
    "cdk8s.TimeConversionOptions": {
      "assembly": "cdk8s",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for how to convert time to a different unit."
      },
      "fqn": "cdk8s.TimeConversionOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/duration.ts",
        "line": 219
      },
      "name": "TimeConversionOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "If `true`, conversions into a larger time unit (e.g. `Seconds` to `Minutes`) will fail if the result is not an integer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/duration.ts",
            "line": 226
          },
          "name": "integral",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/duration:TimeConversionOptions"
    },
    "cdk8s.Yaml": {
      "assembly": "cdk8s",
      "docs": {
        "stability": "stable",
        "summary": "YAML utilities."
      },
      "fqn": "cdk8s.Yaml",
      "kind": "class",
      "locationInModule": {
        "filename": "src/yaml.ts",
        "line": 17
      },
      "methods": [
        {
          "docs": {
            "deprecated": "use `stringify(doc[, doc, ...])`",
            "stability": "deprecated"
          },
          "locationInModule": {
            "filename": "src/yaml.ts",
            "line": 21
          },
          "name": "formatObjects",
          "parameters": [
            {
              "name": "docs",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Empty documents are filtered out.",
            "returns": "an array of objects, each represents a document inside the YAML",
            "stability": "stable",
            "summary": "Downloads a set of YAML documents (k8s manifest for example) from a URL or a file and returns them as javascript objects."
          },
          "locationInModule": {
            "filename": "src/yaml.ts",
            "line": 72
          },
          "name": "load",
          "parameters": [
            {
              "docs": {
                "summary": "a URL of a file path to load from."
              },
              "name": "urlOrFile",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "array"
              }
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Saves a set of objects as a multi-document YAML file."
          },
          "locationInModule": {
            "filename": "src/yaml.ts",
            "line": 30
          },
          "name": "save",
          "parameters": [
            {
              "docs": {
                "summary": "The output path."
              },
              "name": "filePath",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The set of objects."
              },
              "name": "docs",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "static": true
        },
        {
          "docs": {
            "remarks": "We convert undefined values to null, but ignore any documents that are\nundefined.",
            "returns": "a YAML string. Multiple docs are separated by `---`.",
            "stability": "stable",
            "summary": "Stringify a document (or multiple documents) into YAML."
          },
          "locationInModule": {
            "filename": "src/yaml.ts",
            "line": 44
          },
          "name": "stringify",
          "parameters": [
            {
              "docs": {
                "summary": "A set of objects to convert to YAML."
              },
              "name": "docs",
              "type": {
                "primitive": "any"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true,
          "variadic": true
        },
        {
          "docs": {
            "returns": "the path to the temporary file",
            "stability": "stable",
            "summary": "Saves a set of YAML documents into a temp file (in /tmp)."
          },
          "locationInModule": {
            "filename": "src/yaml.ts",
            "line": 56
          },
          "name": "tmp",
          "parameters": [
            {
              "docs": {
                "summary": "the set of documents to save."
              },
              "name": "docs",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        }
      ],
      "name": "Yaml",
      "symbolId": "src/yaml:Yaml"
    },
    "cdk8s.YamlOutputType": {
      "assembly": "cdk8s",
      "docs": {
        "stability": "stable",
        "summary": "The method to divide YAML output into files."
      },
      "fqn": "cdk8s.YamlOutputType",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/app.ts",
        "line": 12
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "All resources are output into a single YAML file."
          },
          "name": "FILE_PER_APP"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Resources are split into seperate files by chart."
          },
          "name": "FILE_PER_CHART"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Each resource is output to its own file."
          },
          "name": "FILE_PER_RESOURCE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Each chart in its own folder and each resource in its own file."
          },
          "name": "FOLDER_PER_CHART_FILE_PER_RESOURCE"
        }
      ],
      "name": "YamlOutputType",
      "symbolId": "src/app:YamlOutputType"
    }
  },
  "version": "2.70.12",
  "fingerprint": "/wQwQ1A11SmCniwgwOIWDvT+yhyO8TTnFuC7fefRYaI="
}
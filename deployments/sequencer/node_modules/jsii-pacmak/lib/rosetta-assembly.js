"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.assertSpecIsRosettaCompatible = assertSpecIsRosettaCompatible;
/**
 * Assert that the given spec is safe to give to Rosetta
 *
 * We have to do it like this, because Rosetta has its own internal copy of the
 * spec and new schema additions may make it technically illegal to assign our
 * Assembly instance to Rosetta's Assembly type.
 *
 * We do runtime validation here to make sure that assignment is safe,
 * and then assert it in the type system.
 *
 * The check should be cheap, this gets called quite a lot.
 */
function assertSpecIsRosettaCompatible(x) {
    const rosettaSupportedFeatures = [];
    const unsupported = (x.usedFeatures ?? []).filter((f) => !rosettaSupportedFeatures.includes(f));
    if (unsupported.length > 0) {
        throw new Error(`This assembly uses features Rosetta doesn't support yet: ${unsupported.join(', ')}`);
    }
}
//# sourceMappingURL=rosetta-assembly.js.map
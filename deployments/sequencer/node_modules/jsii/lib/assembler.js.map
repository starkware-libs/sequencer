{"version":3,"file":"assembler.js","sourceRoot":"","sources":["../src/assembler.ts"],"names":[],"mappings":"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","sourcesContent":["import * as crypto from 'node:crypto';\nimport * as fs from 'node:fs';\nimport * as path from 'node:path';\nimport * as spec from '@jsii/spec';\nimport { describeTypeReference, writeAssembly, SPEC_FILE_NAME, PackageJson } from '@jsii/spec';\nimport * as chalk from 'chalk';\nimport * as deepEqual from 'fast-deep-equal/es6';\nimport * as log4js from 'log4js';\nimport * as ts from 'typescript';\n\nimport * as Case from './case';\nimport { symbolIdentifier } from './common/symbol-id';\nimport { Directives } from './directives';\nimport { getReferencedDocParams, parseSymbolDocumentation, TypeSystemHints } from './docs';\nimport { Emitter } from './emitter';\nimport { normalizeConfigPath } from './helpers';\nimport { JsiiDiagnostic } from './jsii-diagnostic';\nimport * as literate from './literate';\nimport * as bindings from './node-bindings';\nimport { ProjectInfo } from './project-info';\nimport { isReservedName } from './reserved-words';\nimport { DeprecatedRemover } from './transforms/deprecated-remover';\nimport { DeprecationWarningsInjector } from './transforms/deprecation-warnings';\nimport { RuntimeTypeInfoInjector } from './transforms/runtime-info';\nimport { combinedTransformers } from './transforms/utils';\nimport { JsiiError } from './utils';\nimport { Validator } from './validator';\nimport { SHORT_VERSION, VERSION } from './version';\nimport { enabledWarnings } from './warnings';\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports\nconst sortJson = require('sort-json');\n\nconst LOG = log4js.getLogger('jsii/assembler');\n\n/**\n * The JSII Assembler consumes a ``ts.Program`` instance and emits a JSII assembly.\n */\nexport class Assembler implements Emitter {\n  private readonly runtimeTypeInfoInjector: RuntimeTypeInfoInjector;\n  private readonly deprecatedRemover?: DeprecatedRemover;\n  private readonly warningsInjector?: DeprecationWarningsInjector;\n\n  private readonly mainFile: string;\n  private readonly tscRootDir?: string;\n  private readonly compressAssembly?: boolean;\n\n  private readonly _typeChecker: ts.TypeChecker;\n\n  private _diagnostics = new Array<JsiiDiagnostic>();\n  private _deferred = new Array<DeferredRecord>();\n  private readonly _types = new Map<string, spec.Type>();\n  private readonly _packageInfoCache = new Map<string, PackageJson | undefined>();\n\n  /** Map of Symbol to namespace export Symbol */\n  private readonly _submoduleMap = new Map<ts.Symbol, ts.Symbol>();\n\n  /**\n   * Submodule information\n   *\n   * Contains submodule information for all namespaces that have been seen\n   * across all assemblies (this and dependencies).\n   *\n   * Filtered to local submodules only at time of writing the assembly out to disk.\n   */\n  private readonly _submodules = new Map<ts.Symbol, SubmoduleSpec>();\n\n  /**\n   * @param projectInfo information about the package being assembled\n   * @param program     the TypeScript program to be assembled from\n   * @param stdlib      the directory where the TypeScript stdlib is rooted\n   */\n  public constructor(\n    public readonly projectInfo: ProjectInfo,\n    private readonly system: ts.System,\n    public readonly program: ts.Program,\n    public readonly stdlib: string,\n    options: AssemblerOptions = {},\n  ) {\n    this._typeChecker = this.program.getTypeChecker();\n\n    if (options.stripDeprecated) {\n      let allowlistedDeprecations: Set<string> | undefined;\n      if (options.stripDeprecatedAllowListFile) {\n        if (!fs.existsSync(options.stripDeprecatedAllowListFile)) {\n          throw new JsiiError(`--strip-deprecated file not found: ${options.stripDeprecatedAllowListFile}`);\n        }\n        allowlistedDeprecations = new Set<string>(\n          fs.readFileSync(options.stripDeprecatedAllowListFile, 'utf8').split('\\n'),\n        );\n      }\n\n      this.deprecatedRemover = new DeprecatedRemover(this._typeChecker, allowlistedDeprecations);\n    }\n\n    if (options.addDeprecationWarnings) {\n      this.warningsInjector = new DeprecationWarningsInjector(this._typeChecker);\n    }\n\n    this.compressAssembly = options.compressAssembly;\n\n    const dts = projectInfo.types;\n    let mainFile = dts.replace(/\\.d\\.ts(x?)$/, '.ts$1');\n\n    // If out-of-source build was configured (tsc's outDir and rootDir), the\n    // main file's path needs to be re-rooted from the outDir into the rootDir.\n    // outDir might be also be absolute, so we need to normalize it.\n    const tscOutDir = normalizeConfigPath(projectInfo.projectRoot, program.getCompilerOptions().outDir);\n    if (tscOutDir != null) {\n      mainFile = path.relative(tscOutDir, mainFile);\n\n      // rootDir may be set explicitly or not. If not, inferRootDir replicates\n      // tsc's behavior of using the longest prefix of all built source files.\n      this.tscRootDir = program.getCompilerOptions().rootDir ?? inferRootDir(program);\n      if (this.tscRootDir != null) {\n        mainFile = path.join(this.tscRootDir, mainFile);\n      }\n    }\n\n    this.mainFile = path.resolve(projectInfo.projectRoot, mainFile);\n    this.runtimeTypeInfoInjector = new RuntimeTypeInfoInjector(projectInfo.version);\n  }\n\n  public get customTransformers(): ts.CustomTransformers {\n    return combinedTransformers(\n      this.deprecatedRemover?.customTransformers ?? {},\n      this.runtimeTypeInfoInjector.makeTransformers(),\n      this.warningsInjector?.customTransformers ?? {},\n    );\n  }\n\n  /**\n   * Attempt emitting the JSII assembly for the program.\n   *\n   * @return the result of the assembly emission.\n   */\n  public emit(): ts.EmitResult {\n    if (!this.projectInfo.description) {\n      this._diagnostics.push(JsiiDiagnostic.JSII_0001_PKG_MISSING_DESCRIPTION.createDetached());\n    }\n    if (!this.projectInfo.homepage) {\n      this._diagnostics.push(JsiiDiagnostic.JSII_0002_PKG_MISSING_HOMEPAGE.createDetached());\n    }\n    const readme = _loadReadme.call(this);\n    if (readme == null) {\n      this._diagnostics.push(JsiiDiagnostic.JSII_0003_MISSING_README.createDetached());\n    }\n    const docs = _loadDocs.call(this);\n\n    const sourceFile = this.program.getSourceFile(this.mainFile);\n\n    if (sourceFile == null) {\n      this._diagnostics.push(JsiiDiagnostic.JSII_0004_COULD_NOT_FIND_ENTRYPOINT.createDetached(this.mainFile));\n    } else {\n      this._registerDependenciesNamespaces(sourceFile);\n\n      if (LOG.isTraceEnabled()) {\n        LOG.trace(\n          `Processing source file: ${chalk.blue(path.relative(this.projectInfo.projectRoot, sourceFile.fileName))}`,\n        );\n      }\n      const symbol = this._typeChecker.getSymbolAtLocation(sourceFile);\n      if (symbol) {\n        const moduleExports = this._typeChecker.getExportsOfModule(symbol);\n        moduleExports.map((item) => this._registerNamespaces(item, this.projectInfo.projectRoot));\n        for (const node of moduleExports) {\n          const decl = node.declarations?.[0];\n          if (decl == null) {\n            continue;\n          }\n          this._visitNode(decl, new EmitContext([], this.projectInfo.stability));\n        }\n      }\n    }\n\n    this.callDeferredsInOrder();\n\n    // Skip emitting if any diagnostic message is an error\n    if (this._diagnostics.find((diag) => diag.category === ts.DiagnosticCategory.Error) != null) {\n      LOG.debug('Skipping emit due to errors.');\n      try {\n        return { diagnostics: this._diagnostics, emitSkipped: true };\n      } finally {\n        // Clearing ``this._diagnostics`` to allow contents to be garbage-collected.\n        this._afterEmit();\n      }\n    }\n\n    const jsiiVersion = this.projectInfo.jsiiVersionFormat === 'short' ? SHORT_VERSION : VERSION;\n\n    const assembly: spec.Assembly = {\n      schema: spec.SchemaVersion.LATEST,\n      name: this.projectInfo.name,\n      version: this.projectInfo.version,\n      description: this.projectInfo.description ?? this.projectInfo.name,\n      license: this.projectInfo.license,\n      keywords: this.projectInfo.keywords && Array.from(this.projectInfo.keywords),\n      homepage: this.projectInfo.homepage ?? this.projectInfo.repository.url,\n      author: this.projectInfo.author,\n      contributors: this.projectInfo.contributors && [...this.projectInfo.contributors],\n      repository: this.projectInfo.repository,\n      dependencies: noEmptyDict({\n        ...this.projectInfo.dependencies,\n        ...this.projectInfo.peerDependencies,\n      }),\n      dependencyClosure: noEmptyDict(toDependencyClosure(this.projectInfo.dependencyClosure)),\n      bundled: this.projectInfo.bundleDependencies,\n      types: Object.fromEntries(this._types),\n      submodules: noEmptyDict(toSubmoduleDeclarations(this.mySubmodules())),\n      targets: this.projectInfo.targets,\n      metadata: {\n        ...this.projectInfo.metadata,\n\n        // Downstream consumers need this to map a symbolId in the outDir to a\n        // symbolId in the rootDir.\n        tscRootDir: this.tscRootDir,\n      },\n      docs,\n      readme,\n      jsiiVersion,\n      bin: this.projectInfo.bin,\n      fingerprint: '<TBD>',\n    };\n\n    if (this.deprecatedRemover) {\n      this._diagnostics.push(...this.deprecatedRemover.removeFrom(assembly));\n    }\n\n    if (this.warningsInjector) {\n      const jsiiMetadata = {\n        ...(assembly.metadata?.jsii ?? {}),\n        ...{ compiledWithDeprecationWarnings: true },\n      };\n\n      if (assembly.metadata) {\n        assembly.metadata.jsii = jsiiMetadata;\n      } else {\n        assembly.metadata = { jsii: jsiiMetadata };\n      }\n      this.warningsInjector.process(assembly, this.projectInfo);\n    }\n\n    const validator = new Validator(this.projectInfo, assembly);\n    const validationResult = validator.emit();\n    if (!validationResult.emitSkipped) {\n      const zipped = writeAssembly(this.projectInfo.projectRoot, _fingerprint(assembly), {\n        compress: this.compressAssembly ?? false,\n      });\n      LOG.trace(\n        `${zipped ? 'Zipping' : 'Emitting'} assembly: ${chalk.blue(\n          path.join(this.projectInfo.projectRoot, SPEC_FILE_NAME),\n        )}`,\n      );\n    }\n\n    try {\n      return {\n        diagnostics: [...this._diagnostics, ...validationResult.diagnostics],\n        emitSkipped: validationResult.emitSkipped,\n      };\n    } finally {\n      this._afterEmit();\n    }\n\n    function _loadReadme(this: Assembler) {\n      // Search for `README.md` in a case-insensitive way\n      const fileName = fs\n        .readdirSync(this.projectInfo.projectRoot)\n        .find((file) => file.toLocaleLowerCase() === 'readme.md');\n      if (fileName == null) {\n        return undefined;\n      }\n      const readmePath = path.join(this.projectInfo.projectRoot, fileName);\n      return loadAndRenderReadme(readmePath, this.projectInfo.projectRoot);\n    }\n\n    function _loadDocs(this: Assembler): spec.Docs | undefined {\n      if (!this.projectInfo.stability && !this.projectInfo.deprecated) {\n        return undefined;\n      }\n      const deprecated = this.projectInfo.deprecated;\n      const stability = this.projectInfo.stability;\n      return { deprecated, stability };\n    }\n  }\n\n  private _afterEmit() {\n    this._diagnostics = [];\n    this._deferred = [];\n    this._types.clear();\n    this._submoduleMap.clear();\n    this._submodules.clear();\n    this._packageInfoCache.clear();\n  }\n\n  /**\n   * Defer a callback until a (set of) types are available\n   *\n   * This is a helper function around _defer() which encapsulates the _dereference\n   * action (which is basically the majority use case for _defer anyway).\n   *\n   * Will not invoke the function with any 'undefined's; an error will already have been emitted in\n   * that case anyway.\n   *\n   * @param fqn FQN of the current type (the type that has a dependency on baseTypes)\n   * @param baseTypes Array of type references to be looked up\n   * @param referencingNode Node to report a diagnostic on if we fail to look up a t ype\n   * @param cb Callback to be invoked with the Types corresponding to the TypeReferences in baseTypes\n   */\n  private _deferUntilTypesAvailable(\n    fqn: string,\n    baseTypes: Array<string | spec.NamedTypeReference>,\n    referencingNode: ts.Node | undefined,\n    cb: (...xs: spec.Type[]) => void,\n  ) {\n    // We can do this one eagerly\n    if (baseTypes.length === 0) {\n      cb();\n      return;\n    }\n    const baseFqns = baseTypes.map((bt) => (typeof bt === 'string' ? bt : bt.fqn));\n\n    this._defer(fqn, baseFqns, () => {\n      const resolved = baseFqns.map((x) => this._dereference(x, referencingNode)).filter((x) => x !== undefined);\n      if (resolved.length > 0) {\n        cb(...(resolved as spec.Type[]));\n      }\n    });\n  }\n\n  /**\n   * Defer checks for after the program has been entirely processed; useful for verifying type references that may not\n   * have been discovered yet, and verifying properties about them.\n   *\n   * The callback is guaranteed to be executed only after all deferreds for all types in 'dependedFqns' have\n   * been executed.\n   *\n   * @param fqn FQN of the current type.\n   * @param dependedFqns List of FQNs of types this callback depends on. All deferreds for all\n   * @param cb the function to be called in a deferred way. It will be bound with ``this``, so it can depend on using\n   *           ``this``.\n   */\n  private _defer(fqn: string, dependedFqns: string[], cb: () => void) {\n    this._deferred.push({ fqn, dependedFqns, cb: cb.bind(this) });\n  }\n\n  /**\n   * Obtains the ``spec.Type`` for a given ``spec.NamedTypeReference``.\n   *\n   * @param ref the type reference to be de-referenced\n   *\n   * @returns the de-referenced type, if it was found, otherwise ``undefined``.\n   */\n  private _dereference(\n    ref: string | spec.NamedTypeReference,\n    referencingNode: ts.Node | undefined,\n  ): spec.Type | undefined {\n    if (typeof ref !== 'string') {\n      ref = ref.fqn;\n    }\n\n    const [assm] = ref.split('.');\n    let type;\n    if (assm === this.projectInfo.name) {\n      type = this._types.get(ref);\n    } else {\n      const assembly = this.projectInfo.dependencyClosure.find((dep) => dep.name === assm);\n      type = assembly?.types?.[ref];\n\n      // since we are exposing a type of this assembly in this module's public API,\n      // we expect it to appear as a peer dependency instead of a normal dependency.\n      if (assembly) {\n        if (!(assembly.name in this.projectInfo.peerDependencies)) {\n          this._diagnostics.push(\n            JsiiDiagnostic.JSII_0005_MISSING_PEER_DEPENDENCY.create(\n              referencingNode!, // Cheating here for now, until the referencingNode can be made required\n              assembly.name,\n              ref,\n            ),\n          );\n        }\n      }\n    }\n\n    if (!type) {\n      this._diagnostics.push(\n        JsiiDiagnostic.JSII_9002_UNRESOLVEABLE_TYPE.create(\n          referencingNode!, // Cheating here for now, until the referencingNode can be made required\n          ref,\n        ),\n      );\n    }\n\n    return type;\n  }\n\n  /**\n   * Compute the JSII fully qualified name corresponding to a ``ts.Type`` instance. If for any reason a name cannot be\n   * computed for the type, a marker is returned instead, and an ``ts.DiagnosticCategory.Error`` diagnostic is\n   * inserted in the assembler context.\n   *\n   * @param type the type for which a JSII fully qualified name is needed.\n   * @param typeAnnotationNode the type annotation for which this FQN is generated. This is used for attaching the error\n   *                           marker. When there is no explicit type annotation (e.g: inferred method return type), the\n   *                           preferred substitute is the \"type-inferred\" element's name.\n   * @param typeUse the reason why this type was resolved (e.g: \"return type\")\n   * @param isThisType whether this type was specified or inferred as \"this\" or not\n   *\n   * @returns the FQN of the type, or some \"unknown\" marker.\n   */\n  private _getFQN(\n    type: ts.Type,\n    typeAnnotationNode: ts.Node | undefined,\n    typeUse: TypeUseKind,\n    isThisType: boolean,\n  ): string | undefined {\n    const sym = symbolFromType(type, this._typeChecker);\n    const typeDeclaration = sym.valueDeclaration ?? sym.declarations?.[0];\n\n    // Set to true to prevent further adding of Error diagnostics for known-bad reference\n    let hasError = false;\n\n    if (this._isPrivateOrInternal(sym)) {\n      // Check if this type is \"this\" (explicit or inferred method return type).\n      this._diagnostics.push(\n        JsiiDiagnostic.JSII_3001_EXPOSED_INTERNAL_TYPE.create(\n          typeAnnotationNode,\n          sym,\n          isThisType,\n          typeUse,\n        ).addRelatedInformationIf(typeDeclaration, 'The referenced type is declared here'),\n      );\n\n      hasError = true;\n    }\n\n    const tsName = this._typeChecker.getFullyQualifiedName(sym);\n    const groups = /^\"([^\"]+)\"\\.(.*)$/.exec(tsName);\n    if (!groups) {\n      if (!hasError) {\n        this._diagnostics.push(\n          JsiiDiagnostic.JSII_3001_EXPOSED_INTERNAL_TYPE.create(\n            typeAnnotationNode,\n            sym,\n            isThisType,\n            typeUse,\n          ).addRelatedInformationIf(typeDeclaration, 'The referenced type is declared here'),\n        );\n        hasError = true;\n      }\n      return tsName;\n    }\n    const [, modulePath, typeName] = groups;\n    const pkg = this.findPackageInfo(modulePath);\n    if (!pkg) {\n      if (!hasError) {\n        this._diagnostics.push(\n          JsiiDiagnostic.JSII_9003_UNRESOLVEABLE_MODULE.create(typeAnnotationNode, modulePath).addRelatedInformationIf(\n            typeDeclaration,\n            'The referenced type is declared here',\n          ),\n        );\n        hasError = true;\n      }\n      return `unknown.${typeName}`;\n    }\n\n    // If the symbol comes from an assembly whose submodules we've already\n    // spidered (or from the current assembly), look up there. This relies\n    // on an entry-point import of the library having been done first\n    // (`import * as x from 'module-root';`)\n    const submodule = this._submoduleMap.get(sym);\n    if (submodule != null) {\n      const submoduleNs = this._submodules.get(submodule)!.fqnResolutionPrefix;\n      return `${submoduleNs}.${typeName}`;\n    }\n\n    // This is the fallback: in case we can't find a symbolId for the given\n    // type, we're return this value. This is for backwards compatibility with\n    // modules that haven't been compiled to have symbolId support. Those also\n    // most likely won't be using submodules so this legacy guess will be correct.\n    const fallbackFqn = `${pkg.name}.${typeName}`;\n\n    // If the type is coming from the current module, we won't find it in a dependency\n    if (pkg.name === this.projectInfo.name) {\n      return fallbackFqn;\n    }\n\n    // Otherwise look up the symbol identifier in the dependency assemblies\n    // This is now the preferred mechanism but we can't do this as the only mechanism,\n    // as we may still have compile against very old assemblies that don't have a\n    // symbol identifier table at all.\n    const dep = this.projectInfo.dependencyClosure.find((d) => d.name === pkg.name);\n    if (!dep) {\n      this._diagnostics.push(JsiiDiagnostic.JSII_9000_UNKNOWN_MODULE.create(typeAnnotationNode, pkg.name));\n      return fallbackFqn;\n    }\n    const symbolId = symbolIdentifier(this._typeChecker, sym, {\n      assembly: dep,\n    });\n    const fqn = (dep && symbolId ? symbolIdIndex(dep)[symbolId] : undefined) ?? fallbackFqn;\n\n    if (!fqn || !this._dereference({ fqn }, sym.valueDeclaration)) {\n      if (!hasError) {\n        this._diagnostics.push(\n          JsiiDiagnostic.JSII_3002_USE_OF_UNEXPORTED_FOREIGN_TYPE.create(\n            typeAnnotationNode,\n            fqn ?? tsName,\n            typeUse,\n            pkg,\n          ).addRelatedInformationIf(typeDeclaration, 'The referenced type is declared here'),\n        );\n        hasError = true;\n      }\n    }\n\n    return fqn;\n  }\n\n  /**\n   * For all modules in the dependency closure, crawl their exports to register\n   * the submodules they contain.\n   *\n   * @param entryPoint the main source file for the currently compiled module.\n   */\n  private _registerDependenciesNamespaces(entryPoint: ts.SourceFile) {\n    for (const assm of this.projectInfo.dependencyClosure) {\n      const resolved = ts.resolveModuleName(assm.name, entryPoint.fileName, this.program.getCompilerOptions(), ts.sys);\n      // If we can't resolve the module name, simply ignore it (TypeScript compilation likely failed)\n      if (resolved.resolvedModule == null) {\n        continue;\n      }\n      const source = this.program.getSourceFile(resolved.resolvedModule.resolvedFileName);\n      const depMod = source && this._typeChecker.getSymbolAtLocation(source);\n      // It's unlikely, but if we can't get the SourceFile here, ignore it (TypeScript compilation probably failed)\n      if (depMod == null) {\n        continue;\n      }\n\n      const depRoot = packageRoot(resolved.resolvedModule.resolvedFileName);\n\n      for (const symbol of this._typeChecker.getExportsOfModule(depMod)) {\n        this._registerNamespaces(symbol, depRoot);\n      }\n    }\n\n    function packageRoot(file: string): string {\n      const parent = path.dirname(file);\n      if (path.basename(parent) === 'node_modules' || parent === file) {\n        return file;\n      }\n      return packageRoot(parent);\n    }\n  }\n\n  private _registerNamespaces(symbol: ts.Symbol, packageRoot: string): void {\n    const declaration = symbol.valueDeclaration ?? symbol.declarations?.[0];\n    if (declaration == null) {\n      // Nothing to do here...\n      return;\n    }\n    if (ts.isModuleDeclaration(declaration)) {\n      // Looks like:\n      //\n      //    export some_namespace {\n      //       ...\n      //    }\n      //\n      // No way to configure targets\n\n      const { fqn, fqnResolutionPrefix } = qualifiedNameOf.call(this, symbol, true);\n\n      this._submodules.set(symbol, {\n        fqn,\n        fqnResolutionPrefix,\n        symbolId: symbolIdentifier(this._typeChecker, symbol),\n        locationInModule: this.declarationLocation(declaration),\n      });\n      this._addToSubmodule(symbol, symbol, packageRoot);\n      return;\n    }\n    if (!ts.isNamespaceExport(declaration)) {\n      // Nothing to do here...\n      return;\n    }\n\n    const moduleSpecifier = declaration.parent.moduleSpecifier;\n    if (moduleSpecifier == null || !ts.isStringLiteral(moduleSpecifier)) {\n      // There is a grammar error here, so we'll let tsc report this for us.\n      return;\n    }\n    const resolution = ts.resolveModuleName(\n      moduleSpecifier.text,\n      declaration.getSourceFile().fileName,\n      this.program.getCompilerOptions(),\n      this.system,\n    );\n    if (resolution.resolvedModule == null) {\n      // Unresolvable module... We'll let tsc report this for us.\n      return;\n    }\n\n    if (\n      // We're not looking into a dependency's namespace exports, and the resolution says it's external\n      (packageRoot === this.projectInfo.projectRoot && resolution.resolvedModule.isExternalLibraryImport) ||\n      // Or the module resolves outside of the current dependency's tree entirely\n      !isUnder(resolution.resolvedModule.resolvedFileName, packageRoot) ||\n      // Or the module is under one the current dependency's node_modules subtree\n      resolution.resolvedModule.resolvedFileName\n        .split('/') // Separator is always '/', even on Windows\n        .filter((entry) => entry === 'node_modules').length !==\n        packageRoot.split('/').filter((entry) => entry === 'node_modules').length\n    ) {\n      // External re-exports are \"pure-javascript\" sugar; they need not be\n      // represented in the jsii Assembly since the types in there will be\n      // resolved through dependencies.\n      return;\n    }\n\n    const sourceFile = this.program.getSourceFile(resolution.resolvedModule.resolvedFileName)!;\n    const sourceModule = this._typeChecker.getSymbolAtLocation(sourceFile);\n    // If there's no module, it's a syntax error, and tsc will have reported it for us.\n    if (sourceModule) {\n      if (symbol.name !== Case.camel(symbol.name) && symbol.name !== Case.snake(symbol.name)) {\n        this._diagnostics.push(JsiiDiagnostic.JSII_8004_SUBMOULE_NAME_CASING.create(declaration.name, symbol.name));\n      }\n\n      const { fqn, fqnResolutionPrefix } = qualifiedNameOf.call(this, symbol);\n      const targets = loadSubmoduleTargetConfig(sourceFile.fileName);\n      // There is no need to process the README file for submodules that are\n      // external (i.e: from a dependency), as these will not be emitted in the\n      // assembly. That'd be wasted effort, and could fail if the README file\n      // refers to literate examples that are not packaged in the dependency.\n      const readme =\n        packageRoot === this.projectInfo.projectRoot\n          ? loadSubmoduleReadMe(sourceFile.fileName, this.projectInfo.projectRoot)\n          : undefined;\n\n      this._submodules.set(symbol, {\n        fqn,\n        fqnResolutionPrefix,\n        targets,\n        readme,\n        symbolId: symbolIdentifier(this._typeChecker, symbol),\n        locationInModule: this.declarationLocation(declaration),\n      });\n      this._addToSubmodule(symbol, sourceModule, packageRoot);\n    }\n\n    function qualifiedNameOf(\n      this: Assembler,\n      sym: ts.Symbol,\n      inlineNamespace = false,\n    ): { fqn: string; fqnResolutionPrefix: string } {\n      if (this._submoduleMap.has(sym)) {\n        const parent = this._submodules.get(this._submoduleMap.get(sym)!)!;\n        const fqn = `${parent.fqn}.${sym.name}`;\n        return {\n          fqn,\n          fqnResolutionPrefix: inlineNamespace ? parent.fqnResolutionPrefix : fqn,\n        };\n      }\n      const symbolLocation = sym.getDeclarations()?.[0]?.getSourceFile()?.fileName;\n      const pkgInfo = symbolLocation ? this.findPackageInfo(symbolLocation) : undefined;\n      const assemblyName: string = pkgInfo?.name ?? this.projectInfo.name;\n      const fqn = `${assemblyName}.${sym.name}`;\n      return {\n        fqn,\n        fqnResolutionPrefix: inlineNamespace ? this.projectInfo.name : fqn,\n      };\n    }\n\n    function loadSubmoduleTargetConfig(submoduleMain: string): SubmoduleSpec['targets'] {\n      const jsiirc = path.resolve(submoduleMain, '..', '.jsiirc.json');\n      if (!fs.existsSync(jsiirc)) {\n        return undefined;\n      }\n      const data = JSON.parse(fs.readFileSync(jsiirc, 'utf-8'));\n      return data.targets;\n    }\n\n    /**\n     * Load the README for the given submodule\n     *\n     * If the submodule is loaded from a complete directory (determined by the 'main'\n     * file ending in `index.[d.]ts`, then we load `README.md` in that same directory.\n     *\n     * If the submodule is loaded from a file, like `mymodule.[d.]ts`, we will load\n     * `mymodule.README.md`.\n     */\n    function loadSubmoduleReadMe(submoduleMain: string, projectRoot: string): SubmoduleSpec['readme'] {\n      const fileBase = path.basename(submoduleMain).replace(/(\\.d)?\\.ts$/, '');\n      const readMeName = fileBase === 'index' ? 'README.md' : `${fileBase}.README.md`;\n      const fullPath = path.join(path.dirname(submoduleMain), readMeName);\n      return loadAndRenderReadme(fullPath, projectRoot);\n    }\n  }\n\n  /**\n   * Registers Symbols to a particular submodule. This is used to associate\n   * declarations exported by an `export * as ns from 'moduleLike';` statement\n   * so that they can subsequently be correctly namespaced.\n   *\n   * @param ns          the symbol that identifies the submodule.\n   * @param moduleLike  the module-like symbol bound to the submodule.\n   * @param packageRoot the root of the package being traversed.\n   */\n  private _addToSubmodule(ns: ts.Symbol, moduleLike: ts.Symbol, packageRoot: string) {\n    // For each symbol exported by the moduleLike, map it to the ns submodule.\n    for (const symbol of this._typeChecker.getExportsOfModule(moduleLike)) {\n      if (this._submoduleMap.has(symbol)) {\n        const currNs = this._submoduleMap.get(symbol)!;\n        // Checking if there's been two submodules exporting the same symbol,\n        // which is illegal. We can tell if the currently registered symbol has\n        // a different name than the one we're currently trying to register in.\n        if (currNs.name !== ns.name) {\n          const currNsDecl = currNs.valueDeclaration ?? currNs.declarations?.[0];\n          const nsDecl = ns.valueDeclaration ?? ns.declarations?.[0];\n\n          // Make sure the error message always lists causes in the same order\n          const refs = [\n            { decl: currNsDecl, name: currNs.name } as const,\n            { decl: nsDecl, name: ns.name } as const,\n          ].sort(({ name: l }, { name: r }) => l.localeCompare(r));\n\n          this._diagnostics.push(\n            JsiiDiagnostic.JSII_3003_SYMBOL_IS_EXPORTED_TWICE.create(\n              _nameOrDeclarationNode(symbol),\n              refs[0].name,\n              refs[1].name,\n            )\n              .addRelatedInformationIf(refs[0].decl, `Symbol is exported under the \"${refs[0].name}\" submodule`)\n              .addRelatedInformationIf(refs[1].decl, `Symbol is exported under the \"${refs[1].name}\" submodule`),\n          );\n        }\n        // Found two re-exports, which is odd, but they use the same submodule,\n        // so it's probably okay? That's likely a tsc error, which will have\n        // been reported for us already anyway.\n        continue;\n      }\n      this._submoduleMap.set(symbol, ns);\n\n      // If the exported symbol has any declaration, and that delcaration is of\n      // an entity that can have nested declarations of interest to jsii\n      // (classes, interfaces, enums, modules), we need to also associate those\n      // nested symbols to the submodule (or they won't be named correctly!)\n      const decl = symbol.declarations?.[0];\n      if (decl != null) {\n        if (ts.isClassDeclaration(decl) || ts.isInterfaceDeclaration(decl) || ts.isEnumDeclaration(decl)) {\n          const type = this._typeChecker.getTypeAtLocation(decl);\n          if (isSingleValuedEnum(type, this._typeChecker)) {\n            // type.symbol !== symbol, because symbol is the enum itself, but\n            // since it's single-valued, the TypeChecker will only show us the\n            // value's symbol later on.\n            this._submoduleMap.set(type.symbol, ns);\n          }\n          if (type.symbol.exports) {\n            // eslint-disable-next-line no-await-in-loop\n            this._addToSubmodule(ns, symbol, packageRoot);\n          }\n        } else if (ts.isModuleDeclaration(decl)) {\n          // eslint-disable-next-line no-await-in-loop\n          this._registerNamespaces(symbol, packageRoot);\n        } else if (ts.isNamespaceExport(decl)) {\n          // eslint-disable-next-line no-await-in-loop\n          this._registerNamespaces(symbol, packageRoot);\n        }\n      }\n    }\n  }\n\n  /**\n   * Register exported types in ``this.types``.\n   *\n   * @param node       a node found in a module\n   * @param namePrefix the prefix for the types' namespaces\n   */\n  // eslint-disable-next-line complexity\n  private _visitNode(node: ts.Declaration, context: EmitContext): spec.Type[] {\n    if (ts.isNamespaceExport(node)) {\n      // export * as ns from 'module';\n      // Note: the \"ts.NamespaceExport\" refers to the \"export * as ns\" part of\n      // the statement only. We must refer to `node.parent` in order to be able\n      // to access the module specifier (\"from 'module'\") part.\n      const symbol = this._typeChecker.getSymbolAtLocation(node.parent.moduleSpecifier!)!;\n\n      if (LOG.isTraceEnabled()) {\n        LOG.trace(`Entering submodule: ${chalk.cyan([...context.namespace, symbol.name].join('.'))}`);\n      }\n\n      const nsContext = context.appendNamespace(node.name.text);\n      const allTypes = this._typeChecker.getExportsOfModule(symbol).flatMap((child) => {\n        const decl = child.declarations?.[0];\n        if (decl == null) {\n          return [];\n        }\n        return this._visitNode(decl, nsContext);\n      });\n\n      if (LOG.isTraceEnabled()) {\n        LOG.trace(`Leaving submodule: ${chalk.cyan([...context.namespace, symbol.name].join('.'))}`);\n      }\n\n      return allTypes;\n    }\n\n    if (ts.isExportSpecifier(node)) {\n      // This is what happens when one does `export { Symbol } from \"./location\";`\n      //                   ExportSpecifier:           ~~~~~~\n\n      const resolvedSymbol = this._typeChecker.getExportSpecifierLocalTargetSymbol(node);\n      const decl = resolvedSymbol?.valueDeclaration ?? resolvedSymbol?.declarations?.[0];\n      if (!decl) {\n        // A grammar error, compilation will already have failed\n        return [];\n      }\n      return this._visitNode(decl, context);\n    }\n\n    if ((ts.getCombinedModifierFlags(node) & ts.ModifierFlags.Export) === 0) {\n      return [];\n    }\n\n    let jsiiType: spec.Type | undefined;\n\n    if (ts.isClassDeclaration(node) && _isExported(node)) {\n      // export class Name { ... }\n      this._validateHeritageClauses(node.heritageClauses);\n\n      jsiiType = this._visitClass(this._typeChecker.getTypeAtLocation(node), context);\n      if (jsiiType) {\n        this.registerExportedClassFqn(node, jsiiType.fqn);\n      }\n    } else if (ts.isInterfaceDeclaration(node) && _isExported(node)) {\n      // export interface Name { ... }\n      this._validateHeritageClauses(node.heritageClauses);\n      jsiiType = this._visitInterface(this._typeChecker.getTypeAtLocation(node), context);\n    } else if (ts.isEnumDeclaration(node) && _isExported(node)) {\n      // export enum Name { ... }\n      jsiiType = this._visitEnum(this._typeChecker.getTypeAtLocation(node), context);\n    } else if (ts.isModuleDeclaration(node)) {\n      // export namespace name { ... }\n      const name = node.name.getText();\n      const symbol = this._typeChecker.getSymbolAtLocation(node.name)!;\n\n      if (LOG.isTraceEnabled()) {\n        LOG.trace(`Entering namespace: ${chalk.cyan([...context.namespace, name].join('.'))}`);\n      }\n\n      const nsContext = context.appendNamespace(node.name.getText());\n      const allTypes = this._typeChecker.getExportsOfModule(symbol).flatMap((prop) => {\n        const decl = prop.declarations?.[0];\n        if (decl == null) {\n          return [];\n        }\n        return this._visitNode(decl, nsContext);\n      });\n\n      if (LOG.isTraceEnabled()) {\n        LOG.trace(`Leaving namespace:  ${chalk.cyan([...context.namespace, name].join('.'))}`);\n      }\n      return allTypes;\n    } else {\n      this._diagnostics.push(\n        JsiiDiagnostic.JSII_9998_UNSUPPORTED_NODE.create(ts.getNameOfDeclaration(node) ?? node, node.kind),\n      );\n    }\n\n    if (!jsiiType) {\n      return [];\n    }\n\n    // If symbolId hasn't been set yet, set it here\n    if (!jsiiType.symbolId) {\n      jsiiType.symbolId = this.getSymbolId(node);\n    }\n\n    // Let's quickly verify the declaration does not collide with a submodule. Submodules get case-adjusted for each\n    // target language separately, so names cannot collide with case-variations.\n    for (const submodule of this._submodules.keys()) {\n      const candidates = Array.from(\n        new Set([submodule.name, Case.camel(submodule.name), Case.pascal(submodule.name), Case.snake(submodule.name)]),\n      );\n      const colliding = candidates.find((name) => `${this.projectInfo.name}.${name}` === jsiiType!.fqn);\n      if (colliding != null) {\n        const submoduleDeclName = _nameOrDeclarationNode(submodule);\n        this._diagnostics.push(\n          JsiiDiagnostic.JSII_5011_SUBMODULE_NAME_CONFLICT.create(\n            ts.getNameOfDeclaration(node) ?? node,\n            submodule.name,\n            jsiiType.name,\n            candidates,\n          ).addRelatedInformationIf(submoduleDeclName, 'This is the conflicting submodule declaration'),\n        );\n      }\n    }\n\n    if (LOG.isInfoEnabled()) {\n      LOG.info(`Registering JSII ${chalk.magenta(jsiiType.kind)}: ${chalk.green(jsiiType.fqn)}`);\n    }\n    this._types.set(jsiiType.fqn, jsiiType);\n    jsiiType.locationInModule = this.declarationLocation(node);\n\n    const type = this._typeChecker.getTypeAtLocation(node);\n    if (type.symbol.exports) {\n      const nestedContext = context.appendNamespace(type.symbol.name);\n      const visitedNodes = this._typeChecker\n        .getExportsOfModule(type.symbol)\n        .filter((s) => s.declarations)\n        .flatMap((exportedNode) => {\n          const decl = exportedNode.valueDeclaration ?? exportedNode.declarations?.[0];\n          if (decl == null) {\n            return [];\n          }\n          return [this._visitNode(decl, nestedContext)];\n        });\n      for (const nestedTypes of visitedNodes) {\n        for (const nestedType of nestedTypes) {\n          if (nestedType.namespace !== nestedContext.namespace.join('.')) {\n            this._diagnostics.push(\n              JsiiDiagnostic.JSII_5012_NAMESPACE_IN_TYPE.create(\n                ts.getNameOfDeclaration(node) ?? node,\n                jsiiType.fqn,\n                nestedType.namespace!,\n              ),\n            );\n          }\n        }\n      }\n    }\n\n    return [jsiiType];\n  }\n\n  private getSymbolId(node: ts.Node) {\n    return symbolIdentifier(this._typeChecker, this._typeChecker.getTypeAtLocation(node).symbol);\n  }\n\n  private _validateHeritageClauses(clauses?: ts.NodeArray<ts.HeritageClause>) {\n    if (clauses == null || clauses.length === 0) {\n      // Nothing to do.\n      return;\n    }\n    for (const clause of clauses) {\n      for (const node of clause.types) {\n        const parentType = this._typeChecker.getTypeAtLocation(node);\n        if (parentType.symbol == null) {\n          // The parent type won't have a symbol if it's an \"error type\" inserted by the type checker when the original\n          // code contains a compilation error. In such cases, the TypeScript compiler will already have reported about\n          // the incoherent declarations, so we'll just not re-validate it there (we'd fail anyway).\n          continue;\n        }\n        // For some reason, we cannot trust parentType.isClassOrInterface()\n        const badDecl = parentType.symbol.declarations?.find(\n          (decl) =>\n            !ts.isClassDeclaration(decl) && // <-- local classes\n            !ts.isInterfaceDeclaration(decl) && // <-- local interfaces\n            !ts.isModuleDeclaration(decl), // <-- imported types\n        );\n        if (badDecl != null) {\n          this._diagnostics.push(\n            JsiiDiagnostic.JSII_3004_INVALID_SUPERTYPE.create(node, clause, badDecl).addRelatedInformation(\n              badDecl,\n              'The invalid super type is declared here.',\n            ),\n          );\n        }\n      }\n    }\n  }\n\n  private declarationLocation(node: ts.Declaration): spec.SourceLocation {\n    const file = node.getSourceFile();\n    const line = ts.getLineAndCharacterOfPosition(file, node.getStart()).line;\n    const filename = path.normalize(path.relative(this.projectInfo.projectRoot, file.fileName)).replace(/\\\\/g, '/');\n    return {\n      filename,\n      line: line + 1,\n    };\n  }\n\n  private _processBaseInterfaces(fqn: string, baseTypes?: ts.Type[]) {\n    const erasedBases = new Array<ts.Type>();\n    if (!baseTypes) {\n      return { erasedBases };\n    }\n\n    const result = new Array<spec.NamedTypeReference>();\n    const baseInterfaces = new Set<ts.Type>();\n\n    const processBaseTypes = (types: ts.Type[]) => {\n      for (const iface of types) {\n        // base is private/internal, so we continue recursively with it's own bases\n        if (this._isPrivateOrInternal(iface.symbol) || isInternalSymbol(iface.symbol)) {\n          erasedBases.push(iface);\n          if (!isInternalSymbol(iface.symbol)) {\n            const bases = iface.getBaseTypes();\n            if (bases) {\n              processBaseTypes(bases);\n            }\n          }\n          continue;\n        }\n\n        baseInterfaces.add(iface);\n      }\n    };\n\n    processBaseTypes(baseTypes);\n\n    const typeRefs = Array.from(baseInterfaces).map((iface) => {\n      const decl = iface.symbol.valueDeclaration;\n      const typeRef = this._typeReference(iface, decl, 'base interface');\n      return { decl, typeRef };\n    });\n    for (const { decl, typeRef } of typeRefs) {\n      if (!spec.isNamedTypeReference(typeRef)) {\n        this._diagnostics.push(JsiiDiagnostic.JSII_3005_TYPE_USED_AS_INTERFACE.create(decl, typeRef));\n        continue;\n      }\n\n      this._deferUntilTypesAvailable(fqn, [typeRef], decl, (deref) => {\n        if (!spec.isInterfaceType(deref)) {\n          this._diagnostics.push(JsiiDiagnostic.JSII_3005_TYPE_USED_AS_INTERFACE.create(decl, typeRef));\n        }\n      });\n\n      result.push(typeRef);\n    }\n\n    return {\n      interfaces: result.length === 0 ? undefined : result,\n      erasedBases,\n    };\n  }\n\n  // eslint-disable-next-line complexity\n  private _visitClass(type: ts.Type, ctx: EmitContext): spec.ClassType | undefined {\n    if (LOG.isTraceEnabled()) {\n      LOG.trace(`Processing class: ${chalk.gray(ctx.namespace.join('.'))}.${chalk.cyan(type.symbol.name)}`);\n    }\n\n    if (_hasInternalJsDocTag(type.symbol)) {\n      return undefined;\n    }\n\n    this._warnAboutReservedWords(type.symbol);\n\n    const fqn = `${[this.projectInfo.name, ...ctx.namespace].join('.')}.${type.symbol.name}`;\n\n    if (Case.pascal(type.symbol.name) !== type.symbol.name) {\n      this._diagnostics.push(\n        JsiiDiagnostic.JSII_8000_PASCAL_CASED_TYPE_NAMES.create(\n          (type.symbol.valueDeclaration as ts.ClassDeclaration).name ??\n            type.symbol.valueDeclaration ??\n            type.symbol.declarations?.[0],\n          type.symbol.name,\n        ),\n      );\n    }\n\n    const classDeclaration = type.symbol.valueDeclaration as ts.ClassDeclaration;\n    for (const typeParam of classDeclaration.typeParameters ?? []) {\n      this._diagnostics.push(JsiiDiagnostic.JSII_1006_GENERIC_TYPE.create(typeParam));\n    }\n\n    const jsiiType: spec.ClassType = bindings.setClassRelatedNode(\n      {\n        assembly: this.projectInfo.name,\n        fqn,\n        kind: spec.TypeKind.Class,\n        name: type.symbol.name,\n        namespace: ctx.namespace.length > 0 ? ctx.namespace.join('.') : undefined,\n        docs: this._visitDocumentation(type.symbol, ctx).docs,\n      },\n      classDeclaration,\n    );\n\n    if (_isAbstract(type.symbol, jsiiType)) {\n      jsiiType.abstract = true;\n    }\n\n    const erasedBases = new Array<ts.BaseType>();\n    for (let base of type.getBaseTypes() ?? []) {\n      if (jsiiType.base) {\n        // Ignoring this - there has already been a compilation error generated by tsc here.\n        continue;\n      }\n\n      //\n      // base classes (\"extends foo\")\n\n      // Crawl up the inheritance tree if the current base type is not exported, so we identify the type(s) to be\n      // erased, and identify the closest exported base class, should there be one.\n      while (base && this._isPrivateOrInternal(base.symbol)) {\n        LOG.debug(\n          `Base class of ${chalk.green(jsiiType.fqn)} named ${chalk.green(\n            base.symbol.name,\n          )} is not exported, erasing it...`,\n        );\n        erasedBases.push(base);\n        base = (base.getBaseTypes() ?? [])[0];\n      }\n      if (!base || isInternalSymbol(base.symbol)) {\n        // There is no exported base class to be found, pretend this class has no base class.\n        continue;\n      }\n\n      // eslint-disable-next-line no-await-in-loop\n      const ref = this._typeReference(\n        base,\n        type.symbol.valueDeclaration ?? type.symbol.declarations?.[0],\n        'base class',\n      );\n\n      if (!spec.isNamedTypeReference(ref)) {\n        this._diagnostics.push(\n          JsiiDiagnostic.JSII_3006_TYPE_USED_AS_CLASS.create(\n            base.symbol.valueDeclaration ?? base.symbol.declarations?.[0],\n            ref,\n          ),\n        );\n        continue;\n      }\n      this._deferUntilTypesAvailable(fqn, [ref], base.symbol.valueDeclaration, (deref) => {\n        if (!spec.isClassType(deref)) {\n          this._diagnostics.push(\n            JsiiDiagnostic.JSII_3006_TYPE_USED_AS_CLASS.create(\n              base.symbol.valueDeclaration ?? base.symbol.declarations?.[0],\n              ref,\n            ),\n          );\n        }\n      });\n      jsiiType.base = ref.fqn;\n    }\n\n    //\n    // base interfaces (\"implements foo\")\n\n    // collect all \"implements\" declarations from the current type and all\n    // erased base types (because otherwise we lose them, see jsii#487)\n    const implementsClauses = new Array<ts.HeritageClause>();\n    for (const heritage of [type, ...erasedBases].map(\n      (t) => (t.symbol.valueDeclaration as ts.ClassDeclaration).heritageClauses ?? [],\n    )) {\n      for (const clause of heritage) {\n        if (clause.token === ts.SyntaxKind.ExtendsKeyword) {\n          // Handled by `getBaseTypes`\n          continue;\n        } else if (clause.token !== ts.SyntaxKind.ImplementsKeyword) {\n          this._diagnostics.push(\n            JsiiDiagnostic.JSII_9998_UNSUPPORTED_NODE.create(\n              clause,\n              `Ignoring ${ts.SyntaxKind[clause.token]} heritage clause`,\n            ),\n          );\n          continue;\n        }\n\n        implementsClauses.push(clause);\n      }\n    }\n\n    // process all \"implements\" clauses\n    const allInterfaces = new Set<string>();\n    const baseInterfaces = implementsClauses.map((clause) =>\n      this._processBaseInterfaces(\n        fqn,\n        clause.types.map((t) => this._getTypeFromTypeNode(t)),\n      ),\n    );\n    for (const { interfaces } of baseInterfaces) {\n      for (const ifc of interfaces ?? []) {\n        allInterfaces.add(ifc.fqn);\n      }\n      if (interfaces) {\n        this._deferUntilTypesAvailable(jsiiType.fqn, interfaces, type.symbol.valueDeclaration, (...ifaces) => {\n          for (const iface of ifaces) {\n            if (spec.isInterfaceType(iface) && iface.datatype) {\n              this._diagnostics.push(\n                JsiiDiagnostic.JSII_3007_ILLEGAL_STRUCT_EXTENSION.create(\n                  type.symbol.valueDeclaration ?? type.symbol.declarations?.[0],\n                  jsiiType,\n                  iface,\n                ),\n              );\n            }\n          }\n        });\n      }\n    }\n\n    if (allInterfaces.size > 0) {\n      jsiiType.interfaces = Array.from(allInterfaces);\n    }\n\n    if (!type.isClass()) {\n      throw new Error('Oh no');\n    }\n\n    const allDeclarations: Array<{\n      decl: ts.Declaration;\n      type: ts.InterfaceType | ts.BaseType;\n    }> = (type.symbol.declarations ?? []).map((decl) => ({ decl, type }));\n\n    // Considering erased bases' declarations, too, so they are \"blended in\"\n    for (const base of erasedBases) {\n      allDeclarations.push(\n        ...(base.symbol.declarations ?? []).map((decl) => ({\n          decl,\n          type: base,\n        })),\n      );\n    }\n\n    for (const { decl, type: declaringType } of allDeclarations) {\n      const classDecl = decl as ts.ClassDeclaration | ts.InterfaceDeclaration;\n      if (!classDecl.members) {\n        continue;\n      }\n\n      for (const memberDecl of classDecl.members) {\n        if (ts.isSemicolonClassElement(memberDecl)) {\n          this._diagnostics.push(JsiiDiagnostic.JSII_9996_UNNECESSARY_TOKEN.create(memberDecl));\n          continue;\n        }\n\n        const member = ts.isConstructorDeclaration(memberDecl)\n          ? getConstructor(this._typeChecker.getTypeAtLocation(memberDecl.parent))\n          : ts.isIndexSignatureDeclaration(memberDecl)\n          ? type.symbol.members?.get(ts.InternalSymbolName.Index) ??\n            type.symbol.exports?.get(ts.InternalSymbolName.Index)\n          : this._typeChecker.getSymbolAtLocation(ts.getNameOfDeclaration(memberDecl) ?? memberDecl);\n\n        if (member && this._isPrivateOrInternal(member, memberDecl as ts.ClassElement)) {\n          continue;\n        }\n\n        if (ts.isIndexSignatureDeclaration(memberDecl)) {\n          // Index signatures (static or not) are not supported in the jsii type model.\n          this._diagnostics.push(\n            JsiiDiagnostic.JSII_1999_UNSUPPORTED.create(memberDecl, {\n              what: 'Index signatures',\n              suggestInternal: true,\n            }),\n          );\n          continue;\n        }\n\n        if (!(declaringType.symbol.getDeclarations() ?? []).find((d) => d === memberDecl.parent)) {\n          continue;\n        }\n\n        // constructors are handled later\n        if (ts.isConstructorDeclaration(memberDecl)) {\n          continue;\n        }\n\n        // eslint-disable-next-line no-await-in-loop\n        if (ts.isMethodDeclaration(memberDecl) || ts.isMethodSignature(memberDecl)) {\n          // eslint-disable-next-line no-await-in-loop\n          this._visitMethod(member!, jsiiType, ctx.replaceStability(jsiiType.docs?.stability), classDecl);\n        } else if (\n          ts.isPropertyDeclaration(memberDecl) ||\n          ts.isPropertySignature(memberDecl) ||\n          ts.isAccessor(memberDecl)\n        ) {\n          // eslint-disable-next-line no-await-in-loop\n          this._visitProperty(member!, jsiiType, ctx.replaceStability(jsiiType.docs?.stability), classDecl);\n        } else {\n          this._diagnostics.push(\n            JsiiDiagnostic.JSII_9998_UNSUPPORTED_NODE.create(\n              ts.getNameOfDeclaration(memberDecl) ?? memberDecl,\n              memberDecl.kind,\n            ),\n          );\n        }\n        /* eslint-enable no-await-in-loop */\n      }\n    }\n\n    const memberEmitContext = ctx.replaceStability(jsiiType.docs && jsiiType.docs.stability);\n\n    // Find the first defined constructor in this class, or it's erased bases\n    const constructor = [type, ...erasedBases].map(getConstructor).find((ctor) => ctor != null);\n    const ctorDeclaration = constructor && (constructor.declarations?.[0] as ts.ConstructorDeclaration | undefined);\n    if (constructor && ctorDeclaration) {\n      const signature = this._typeChecker.getSignatureFromDeclaration(ctorDeclaration);\n\n      if ((ts.getCombinedModifierFlags(ctorDeclaration) & ts.ModifierFlags.Private) === 0) {\n        jsiiType.initializer = {\n          locationInModule: this.declarationLocation(ctorDeclaration),\n        };\n        if (signature) {\n          for (const param of signature.getParameters()) {\n            jsiiType.initializer.parameters = jsiiType.initializer.parameters ?? [];\n            jsiiType.initializer.parameters.push(\n              // eslint-disable-next-line no-await-in-loop\n              this._toParameter(param, ctx.replaceStability(jsiiType.docs?.stability)),\n            );\n            jsiiType.initializer.variadic = jsiiType.initializer?.parameters?.some((p) => !!p.variadic) || undefined;\n            jsiiType.initializer.protected =\n              (ts.getCombinedModifierFlags(ctorDeclaration) & ts.ModifierFlags.Protected) !== 0 || undefined;\n          }\n        }\n        this._verifyConsecutiveOptionals(ctorDeclaration, jsiiType.initializer.parameters);\n        jsiiType.initializer.docs = this._visitDocumentation(constructor, memberEmitContext).docs;\n      }\n\n      // Process constructor-based property declarations even if constructor is private\n      if (signature) {\n        for (const param of signature.getParameters()) {\n          const decl = param.valueDeclaration ?? param.declarations?.[0];\n\n          if (decl && ts.isParameterPropertyDeclaration(decl, decl.parent) && !this._isPrivateOrInternal(param)) {\n            // eslint-disable-next-line no-await-in-loop\n            this._visitProperty(param, jsiiType, memberEmitContext, ctorDeclaration.parent);\n          }\n        }\n      }\n    } else if (jsiiType.base) {\n      this._deferUntilTypesAvailable(fqn, [jsiiType.base], type.symbol.valueDeclaration, (baseType) => {\n        if (spec.isClassType(baseType)) {\n          jsiiType.initializer = baseType.initializer;\n        } else {\n          this._diagnostics.push(\n            JsiiDiagnostic.JSII_3999_INCOHERENT_TYPE_MODEL.create(\n              type.symbol.valueDeclaration ?? type.symbol.declarations?.[0],\n              `Base type of ${jsiiType.fqn} (${jsiiType.base}) is not a class`,\n            ),\n          );\n        }\n      });\n    } else {\n      jsiiType.initializer = {\n        docs: ctx.stability && { stability: ctx.stability },\n      };\n    }\n\n    this._verifyNoStaticMixing(jsiiType, type.symbol.valueDeclaration ?? type.symbol.declarations?.[0]);\n\n    return _sortMembers(jsiiType);\n  }\n\n  /**\n   * Use the TypeChecker's getTypeFromTypeNode, but throw a descriptive error if it fails\n   */\n  private _getTypeFromTypeNode(t: ts.TypeNode) {\n    const type = this._typeChecker.getTypeFromTypeNode(t);\n    if (isErrorType(type)) {\n      throw new JsiiError(\n        `Unable to resolve type: ${t.getFullText()}. This typically happens if something is wrong with your dependency closure.`,\n      );\n    }\n    return type;\n  }\n\n  /**\n   * Check that this class doesn't declare any members that are of different staticness in itself or any of its bases\n   */\n  private _verifyNoStaticMixing(klass: spec.ClassType, decl: ts.Declaration | undefined) {\n    // Check class itself--may have two methods/props with the same name, so check the arrays\n    const statics = new Set(\n      (klass.methods ?? [])\n        .concat(klass.properties ?? [])\n        .filter((x) => x.static)\n        .map((x) => x.name),\n    );\n    const nonStatics = new Set(\n      (klass.methods ?? [])\n        .concat(klass.properties ?? [])\n        .filter((x) => !x.static)\n        .map((x) => x.name),\n    );\n    // Intersect\n    for (const member of intersect(statics, nonStatics)) {\n      this._diagnostics.push(JsiiDiagnostic.JSII_5013_STATIC_INSTANCE_CONFLICT.create(decl, member, klass));\n    }\n\n    // Check against base classes. They will not contain duplicate member names so we can load\n    // the members into a map.\n    const classMembers = typeMembers(klass);\n    this._withBaseClass(klass, decl, (base, recurse) => {\n      for (const [name, baseMember] of Object.entries(typeMembers(base))) {\n        const member = classMembers[name];\n        if (!member) {\n          continue;\n        }\n\n        if (!!baseMember.static !== !!member.static) {\n          this._diagnostics.push(\n            JsiiDiagnostic.JSII_5014_INHERITED_STATIC_CONFLICT.create(decl, member, klass, baseMember, base),\n          );\n        }\n      }\n\n      recurse();\n    });\n  }\n\n  /**\n   * Wrapper around _deferUntilTypesAvailable, invoke the callback with the given classes' base type\n   *\n   * Does nothing if the given class doesn't have a base class.\n   *\n   * The second argument will be a `recurse` function for easy recursion up the inheritance tree\n   * (no messing around with binding 'self' and 'this' and doing multiple calls to _withBaseClass.)\n   */\n  private _withBaseClass(\n    klass: spec.ClassType,\n    decl: ts.Declaration | undefined,\n    cb: (base: spec.ClassType, recurse: () => void) => void,\n  ) {\n    if (klass.base) {\n      this._deferUntilTypesAvailable(klass.fqn, [klass.base], decl, (base) => {\n        if (!spec.isClassType(base)) {\n          throw new Error('Oh no');\n        }\n        cb(base, () => this._withBaseClass(base, decl, cb));\n      });\n    }\n  }\n\n  /**\n   * @returns true if this member is internal and should be omitted from the type manifest\n   */\n  private _isPrivateOrInternal(symbol: ts.Symbol, validateDeclaration?: ts.Declaration): boolean {\n    const hasInternalJsDocTag = _hasInternalJsDocTag(symbol);\n    const hasInternalSymbolName = isInternalSymbol(symbol);\n    const hasUnderscorePrefix = !hasInternalSymbolName && symbol.name.startsWith('_');\n\n    if (_isPrivate(symbol)) {\n      LOG.trace(`${chalk.cyan(symbol.name)} is marked \"private\", or is an unexported type declaration`);\n      return true;\n    }\n\n    // If all the declarations are marked with `@jsii ignore`, then this is effetcively private as far as jsii is concerned.\n    if (\n      symbol.declarations?.every((decl) => Directives.of(decl, (diag) => this._diagnostics.push(diag)).ignore != null)\n    ) {\n      return true;\n    }\n\n    if (!hasInternalJsDocTag && !hasUnderscorePrefix) {\n      return false;\n    }\n\n    // We only validate if we have a declaration and the symbol doesn't have an internal name.\n    if (validateDeclaration && !hasInternalSymbolName) {\n      if (!hasUnderscorePrefix) {\n        this._diagnostics.push(\n          JsiiDiagnostic.JSII_8005_INTERNAL_UNDERSCORE.create(\n            ts.getNameOfDeclaration(validateDeclaration) ?? validateDeclaration,\n            symbol.name,\n          ),\n        );\n      }\n\n      if (!hasInternalJsDocTag) {\n        this._diagnostics.push(\n          JsiiDiagnostic.JSII_8006_UNDERSCORE_INTERNAL.create(\n            ts.getNameOfDeclaration(validateDeclaration) ?? validateDeclaration,\n            symbol.name,\n          ),\n        );\n      }\n    }\n\n    return true;\n  }\n\n  private _visitEnum(type: ts.Type, ctx: EmitContext): spec.EnumType | undefined {\n    if (LOG.isTraceEnabled()) {\n      LOG.trace(`Processing enum: ${chalk.gray(ctx.namespace.join('.'))}.${chalk.cyan(type.symbol.name)}`);\n    }\n\n    // Forcefully resolving to the EnumDeclaration symbol for single-valued enums\n    let decl: ts.Node | undefined = type.symbol.declarations?.[0];\n    let symbol: ts.Symbol | undefined;\n    if (decl && ts.isEnumMember(decl)) {\n      decl = decl?.parent;\n    }\n    if (decl && ts.isEnumDeclaration(decl)) {\n      symbol = getSymbolFromDeclaration(decl, this._typeChecker);\n    }\n    if (!decl || !symbol || !ts.isEnumDeclaration(decl)) {\n      throw new JsiiError(`Unable to resolve enum declaration for ${type.symbol.name}!`);\n    }\n\n    if (_hasInternalJsDocTag(symbol)) {\n      return undefined;\n    }\n\n    // check the enum to see if there are duplicate enum values\n    this.assertNoDuplicateEnumValues(decl);\n\n    this._warnAboutReservedWords(symbol);\n\n    const flags = ts.getCombinedModifierFlags(decl);\n    if (flags & ts.ModifierFlags.Const) {\n      this._diagnostics.push(\n        JsiiDiagnostic.JSII_1000_NO_CONST_ENUM.create(\n          decl.modifiers?.find((mod) => mod.kind === ts.SyntaxKind.ConstKeyword) ?? decl,\n        ),\n      );\n    }\n\n    const { docs } = this._visitDocumentation(symbol, ctx);\n\n    const typeContext = ctx.replaceStability(docs?.stability);\n    const members = type.isUnion() ? type.types : [type];\n\n    if (Case.pascal(symbol.name) !== symbol.name) {\n      this._diagnostics.push(\n        JsiiDiagnostic.JSII_8000_PASCAL_CASED_TYPE_NAMES.create(\n          (symbol.valueDeclaration as ts.EnumDeclaration).name,\n          symbol.name,\n        ),\n      );\n    }\n\n    const jsiiType: spec.EnumType = bindings.setEnumRelatedNode(\n      {\n        assembly: this.projectInfo.name,\n        fqn: `${[this.projectInfo.name, ...ctx.namespace].join('.')}.${symbol.name}`,\n        kind: spec.TypeKind.Enum,\n        members: members.map((m) => {\n          // eslint-disable-next-line @typescript-eslint/no-shadow\n          const { docs } = this._visitDocumentation(m.symbol, typeContext);\n          return { name: m.symbol.name, docs };\n        }),\n        name: symbol.name,\n        namespace: ctx.namespace.length > 0 ? ctx.namespace.join('.') : undefined,\n        docs,\n\n        // Set SymbolId here instead of later, as by default TS will pick single-enum members\n        // as the target symbol if possible.\n        symbolId: symbolIdentifier(this._typeChecker, symbol),\n      },\n      decl,\n    );\n\n    return jsiiType;\n  }\n\n  private assertNoDuplicateEnumValues(decl: ts.EnumDeclaration): void {\n    type EnumValue = {\n      name: string;\n      value: string;\n      decl: ts.DeclarationName | undefined;\n    };\n\n    const enumValues = decl.members\n      .filter((m) => m.initializer)\n      .map((member): EnumValue => {\n        return {\n          value: member.initializer!.getText(),\n          name: member.name.getText(),\n          decl: ts.getNameOfDeclaration(member),\n        };\n      });\n\n    const hasDuplicateEnumValues = enumValues.some(\n      (val, _, arr) => arr.filter((e) => val.value === e.value).length > 1,\n    );\n\n    if (hasDuplicateEnumValues) {\n      const enumValueMap = enumValues.reduce<Record<string, EnumValue[]>>((acc, val) => {\n        if (!acc[val.value]) {\n          acc[val.value] = [];\n        }\n        acc[val.value].push(val);\n        return acc;\n      }, {});\n      for (const duplicateValue of Object.keys(enumValueMap)) {\n        if (enumValueMap[duplicateValue].length > 1) {\n          const err = JsiiDiagnostic.JSII_1004_DUPLICATE_ENUM_VALUE.create(\n            enumValueMap[duplicateValue][0].decl!,\n            duplicateValue,\n            enumValueMap[duplicateValue].map((v) => v.name),\n          );\n          for (let i = 1; i < enumValueMap[duplicateValue].length; i++) {\n            err.addRelatedInformation(enumValueMap[duplicateValue][i].decl!, 'The conflicting declaration is here');\n          }\n          this._diagnostics.push(err);\n        }\n      }\n    }\n  }\n\n  /**\n   * Return docs for a symbol\n   */\n  private _visitDocumentation(\n    sym: ts.Symbol,\n    context: EmitContext,\n  ): { readonly docs?: spec.Docs; readonly hints: TypeSystemHints } {\n    const result = parseSymbolDocumentation(sym, this._typeChecker);\n\n    for (const diag of result.diagnostics ?? []) {\n      this._diagnostics.push(\n        JsiiDiagnostic.JSII_7999_DOCUMENTATION_ERROR.create(sym.valueDeclaration ?? sym.declarations?.[0], diag),\n      );\n    }\n\n    const decl = sym.valueDeclaration ?? sym.declarations?.[0];\n    // The @struct hint is only valid for interface declarations\n    if (decl && !ts.isInterfaceDeclaration(decl) && result.hints.struct) {\n      this._diagnostics.push(\n        JsiiDiagnostic.JSII_7001_ILLEGAL_HINT.create(\n          _findHint(decl, 'struct')!,\n          'struct',\n          'interfaces with only readonly properties',\n        ).addRelatedInformationIf(ts.getNameOfDeclaration(decl) ?? decl, 'The annotated declaration is here'),\n      );\n      // Clean up the bad hint...\n      delete (result.hints as any).struct;\n    }\n\n    // Apply the current context's stability if none was specified locally.\n    if (result.docs.stability == null) {\n      result.docs.stability = context.stability;\n    }\n\n    const allUndefined = Object.values(result.docs).every((v) => v === undefined);\n    return {\n      docs: !allUndefined ? result.docs : undefined,\n      hints: result.hints,\n    };\n  }\n\n  /**\n   * Check that all parameters the doc block refers to with a @param declaration actually exist\n   */\n  private _validateReferencedDocParams(method: spec.Method, methodSym: ts.Symbol) {\n    const params = getReferencedDocParams(methodSym);\n    const actualNames = new Set((method.parameters ?? []).map((p) => p.name));\n    for (const param of params) {\n      if (!actualNames.has(param)) {\n        this._diagnostics.push(\n          JsiiDiagnostic.JSII_7000_NON_EXISTENT_PARAMETER.create(\n            methodSym.valueDeclaration ?? methodSym.declarations?.[0],\n            method,\n            param,\n          ),\n        );\n      }\n    }\n  }\n\n  private _visitInterface(type: ts.Type, ctx: EmitContext): spec.InterfaceType | undefined {\n    if (LOG.isTraceEnabled()) {\n      LOG.trace(`Processing interface: ${chalk.gray(ctx.namespace.join('.'))}.${chalk.cyan(type.symbol.name)}`);\n    }\n\n    if (_hasInternalJsDocTag(type.symbol)) {\n      return undefined;\n    }\n\n    this._warnAboutReservedWords(type.symbol);\n\n    const fqn = `${[this.projectInfo.name, ...ctx.namespace].join('.')}.${type.symbol.name}`;\n\n    const { docs, hints } = this._visitDocumentation(type.symbol, ctx);\n    const jsiiType: spec.InterfaceType = bindings.setInterfaceRelatedNode(\n      {\n        assembly: this.projectInfo.name,\n        fqn,\n        kind: spec.TypeKind.Interface,\n        name: type.symbol.name,\n        namespace: ctx.namespace.length > 0 ? ctx.namespace.join('.') : undefined,\n        docs,\n      },\n      type.symbol.declarations?.[0] as ts.InterfaceDeclaration | undefined,\n    );\n\n    const { interfaces, erasedBases } = this._processBaseInterfaces(fqn, type.getBaseTypes());\n    jsiiType.interfaces = apply(interfaces, (arr) => arr.map((i) => i.fqn));\n\n    const typeDecl = (type.symbol.valueDeclaration ?? type.symbol.declarations?.[0]) as\n      | ts.ClassLikeDeclaration\n      | ts.InterfaceDeclaration\n      | undefined;\n\n    for (const typeParam of typeDecl?.typeParameters ?? []) {\n      this._diagnostics.push(JsiiDiagnostic.JSII_1006_GENERIC_TYPE.create(typeParam));\n    }\n\n    for (const decl of (typeDecl?.members as ReadonlyArray<ts.ClassElement | ts.TypeElement> | undefined)?.filter(\n      (mem) => ts.isIndexSignatureDeclaration(mem),\n    ) ?? []) {\n      const sym =\n        type.symbol.members?.get(ts.InternalSymbolName.Index) ?? type.symbol.exports?.get(ts.InternalSymbolName.Index);\n      if (sym != null && this._isPrivateOrInternal(sym, decl)) {\n        continue;\n      }\n\n      // Index signatures (static or not) are not supported in the jsii type model.\n      this._diagnostics.push(\n        JsiiDiagnostic.JSII_1999_UNSUPPORTED.create(decl, { what: 'Index signatures', suggestInternal: true }),\n      );\n    }\n\n    for (const declaringType of [type, ...erasedBases]) {\n      for (const member of declaringType.getProperties()) {\n        const decl = member.valueDeclaration ?? (member.declarations?.[0] as ts.PropertyDeclaration | undefined);\n\n        if (!(declaringType.symbol.getDeclarations() ?? []).find((d) => d === decl?.parent)) {\n          continue;\n        }\n\n        if (this._isPrivateOrInternal(member, decl)) {\n          continue;\n        }\n\n        if (decl && (ts.isMethodDeclaration(decl) || ts.isMethodSignature(decl))) {\n          // eslint-disable-next-line no-await-in-loop\n          this._visitMethod(member, jsiiType, ctx.replaceStability(jsiiType.docs?.stability), typeDecl);\n        } else if (decl && (ts.isPropertyDeclaration(decl) || ts.isPropertySignature(decl) || ts.isAccessor(decl))) {\n          // eslint-disable-next-line no-await-in-loop\n          this._visitProperty(member, jsiiType, ctx.replaceStability(jsiiType.docs?.stability), typeDecl);\n        } else {\n          this._diagnostics.push(\n            JsiiDiagnostic.JSII_9998_UNSUPPORTED_NODE.create(\n              _nameOrDeclarationNode(member),\n              (member.valueDeclaration ?? member.declarations?.[0])?.kind ?? ts.SyntaxKind.Unknown,\n            ),\n          );\n        }\n      }\n    }\n\n    // Calculate datatype based on the datatypeness of this interface and all of its parents\n    // To keep the spec minimal the actual values of the attribute are \"true\" or \"undefined\" (to represent \"false\").\n    const declaration = type.symbol.valueDeclaration ?? type.symbol.declarations?.[0];\n    this._deferUntilTypesAvailable(fqn, jsiiType.interfaces ?? [], declaration, (...bases: spec.Type[]) => {\n      if ((jsiiType.methods ?? []).length === 0) {\n        jsiiType.datatype = true;\n      } else if (hints.struct) {\n        this._diagnostics.push(\n          jsiiType.methods!.reduce((diag, mthod) => {\n            const node = bindings.getMethodRelatedNode(mthod);\n            return node\n              ? diag.addRelatedInformation(ts.getNameOfDeclaration(node) ?? node, 'A method is declared here')\n              : diag;\n          }, JsiiDiagnostic.JSII_7001_ILLEGAL_HINT.create(declaration && _findHint(declaration, 'struct')!, 'struct', 'interfaces with only readonly properties').addRelatedInformationIf(ts.getNameOfDeclaration(declaration) ?? declaration, 'The annotated declartion is here')),\n        );\n      }\n\n      for (const base of bases) {\n        if (spec.isInterfaceType(base) && !base.datatype) {\n          jsiiType.datatype = undefined;\n        }\n      }\n\n      const interfaceName = isInterfaceName(jsiiType.name);\n\n      // If it's not a datatype the name must start with an \"I\".\n      if (!jsiiType.datatype && !interfaceName) {\n        this._diagnostics.push(\n          JsiiDiagnostic.JSII_8007_BEHAVIORAL_INTERFACE_NAME.create(\n            ts.getNameOfDeclaration(declaration) ?? declaration,\n            jsiiType.name,\n          ),\n        );\n      }\n\n      // NOTE: We need to be careful with the `I` prefix for behavioral interfaces, as this can mess with PascalCase\n      // transformations, especially with short names such as `IA`, ...\n      const expectedName = interfaceName ? `I${Case.pascal(type.symbol.name.slice(1))}` : Case.pascal(type.symbol.name);\n      if (expectedName !== type.symbol.name) {\n        this._diagnostics.push(\n          JsiiDiagnostic.JSII_8000_PASCAL_CASED_TYPE_NAMES.create(\n            (type.symbol.declarations?.[0] as ts.InterfaceDeclaration | undefined)?.name,\n            type.symbol.name,\n            expectedName,\n          ),\n        );\n      }\n\n      // If the name starts with an \"I\" it is not intended as a datatype, so switch that off,\n      // unless a TSDoc hint was set to force this to be considered a behavioral interface.\n      if (jsiiType.datatype && interfaceName && !hints.struct) {\n        delete jsiiType.datatype;\n      }\n\n      // Okay, this is a data type, check that all properties are readonly\n      if (jsiiType.datatype) {\n        for (const prop of jsiiType.properties ?? []) {\n          if (!prop.immutable) {\n            const p = type.getProperty(prop.name)!;\n            this._diagnostics.push(\n              JsiiDiagnostic.JSII_3008_STRUCT_PROPS_MUST_BE_READONLY.create(\n                _nameOrDeclarationNode(p),\n                p.name,\n                jsiiType,\n              ),\n            );\n\n            // force property to be \"readonly\" since jsii languages will pass this by-value\n            prop.immutable = true;\n          }\n        }\n      } else {\n        // This is *NOT* a data type, so it may not extend something that is one.\n        for (const base of bases) {\n          if (!spec.isInterfaceType(base)) {\n            // Invalid type we already warned about earlier, just ignoring it here..\n            continue;\n          }\n          if (base.datatype) {\n            this._diagnostics.push(\n              JsiiDiagnostic.JSII_3007_ILLEGAL_STRUCT_EXTENSION.create(\n                type.symbol.valueDeclaration ?? type.symbol.declarations?.[0],\n                jsiiType,\n                base,\n              ),\n            );\n          }\n        }\n      }\n    });\n\n    // Check that no interface declares a member that's already declared\n    // in a base type (not allowed in C#).\n    const names = memberNames(jsiiType);\n    const checkNoIntersection = (...bases: spec.Type[]) => {\n      for (const base of bases) {\n        if (!spec.isInterfaceType(base)) {\n          continue;\n        }\n\n        const baseMembers = memberNames(base);\n        for (const memberName of names) {\n          if (baseMembers.includes(memberName)) {\n            this._diagnostics.push(\n              JsiiDiagnostic.JSII_5015_REDECLARED_INTERFACE_MEMBER.create(\n                type.symbol.valueDeclaration ?? type.symbol.declarations?.[0],\n                memberName,\n                jsiiType,\n              ),\n            );\n          }\n        }\n        // Recurse upwards\n        this._deferUntilTypesAvailable(fqn, base.interfaces ?? [], type.symbol.valueDeclaration, checkNoIntersection);\n      }\n    };\n    this._deferUntilTypesAvailable(fqn, jsiiType.interfaces ?? [], type.symbol.valueDeclaration, checkNoIntersection);\n\n    return _sortMembers(jsiiType);\n  }\n\n  private _visitMethod(\n    symbol: ts.Symbol,\n    type: spec.ClassType | spec.InterfaceType,\n    ctx: EmitContext,\n    declaringTypeDecl: ts.ClassLikeDeclaration | ts.InterfaceDeclaration | undefined,\n  ) {\n    if (LOG.isTraceEnabled()) {\n      LOG.trace(`Processing method: ${chalk.green(type.fqn)}#${chalk.cyan(symbol.name)}`);\n    }\n\n    const declaration = symbol.valueDeclaration as ts.MethodDeclaration | ts.MethodSignature;\n    const signature = this._typeChecker.getSignatureFromDeclaration(declaration);\n    if (!signature) {\n      this._diagnostics.push(\n        JsiiDiagnostic.JSII_9004_UNABLE_TO_COMPUTE_SIGNATURE.create(declaration, symbol.name, type),\n      );\n      return;\n    }\n\n    if (type.name === Case.pascal(symbol.name)) {\n      this._diagnostics.push(\n        JsiiDiagnostic.JSII_5019_MEMBER_TYPE_NAME_CONFLICT.create(\n          declaration.name,\n          'method',\n          symbol,\n          type,\n        ).addRelatedInformationIf(\n          declaringTypeDecl?.name ?? declaringTypeDecl,\n          `The declaring ${type.kind} is introduced here`,\n        ),\n      );\n    }\n\n    if (isProhibitedMemberName(symbol.name)) {\n      this._diagnostics.push(JsiiDiagnostic.JSII_5016_PROHIBITED_MEMBER_NAME.create(declaration.name, symbol.name));\n      return;\n    }\n    this._warnAboutReservedWords(symbol);\n\n    const parameters = signature.getParameters().map((p) => this._toParameter(p, ctx));\n    const returnType = signature.getReturnType();\n    const method: spec.Method = bindings.setMethodRelatedNode(\n      {\n        abstract: _isAbstract(symbol, type) || undefined,\n        name: symbol.name,\n        parameters: parameters.length > 0 ? parameters : undefined,\n        protected: _isProtected(symbol) || undefined,\n        returns: _isVoid(returnType)\n          ? undefined\n          : this._optionalValue(returnType, declaration.type ?? declaration.name, 'return type'),\n        async: _isPromise(returnType) || undefined,\n        static: _isStatic(symbol) || undefined,\n        locationInModule: this.declarationLocation(declaration),\n      },\n      declaration,\n    );\n    method.variadic = method.parameters?.some((p) => !!p.variadic) === true ? true : undefined;\n\n    this._verifyConsecutiveOptionals(declaration, method.parameters);\n\n    method.docs = this._visitDocumentation(symbol, ctx).docs;\n\n    // If the last parameter is a datatype, verify that it does not share any field names with\n    // other function arguments, so that it can be turned into keyword arguments by jsii frontends\n    // that support such.\n    const lastParamTypeRef = apply(last(parameters), (x) => x.type);\n    const lastParamSymbol = last(signature.getParameters());\n    if (lastParamTypeRef && spec.isNamedTypeReference(lastParamTypeRef)) {\n      this._deferUntilTypesAvailable(\n        symbol.name,\n        [lastParamTypeRef],\n        lastParamSymbol!.declarations?.[0],\n        (lastParamType) => {\n          if (!spec.isInterfaceType(lastParamType) || !lastParamType.datatype) {\n            return;\n          }\n\n          // Liftable datatype, make sure no parameter names match any of the properties in the datatype\n          const propNames = this.allProperties(lastParamType);\n          const paramNames = new Set(parameters.slice(0, parameters.length - 1).map((x) => x.name));\n          const sharedNames = intersection(propNames, paramNames);\n\n          for (const badName of sharedNames) {\n            this._diagnostics.push(JsiiDiagnostic.JSII_5017_POSITIONAL_KEYWORD_CONFLICT.create(declaration, badName));\n          }\n        },\n      );\n    }\n\n    this._validateReferencedDocParams(method, symbol);\n\n    type.methods = type.methods ?? [];\n    if (type.methods.find((m) => m.name === method.name && m.static === method.static) != null) {\n      LOG.trace(`Dropping re-declaration of ${chalk.green(type.fqn)}#${chalk.cyan(method.name)}`);\n      return;\n    }\n    type.methods.push(method);\n  }\n\n  private _warnAboutReservedWords(symbol: ts.Symbol) {\n    if (!enabledWarnings['reserved-word']) {\n      return;\n    }\n\n    const reservingLanguages = isReservedName(symbol.name);\n    if (reservingLanguages) {\n      this._diagnostics.push(\n        JsiiDiagnostic.JSII_5018_RESERVED_WORD.create(_nameOrDeclarationNode(symbol), symbol.name, reservingLanguages),\n      );\n    }\n  }\n\n  private _visitProperty(\n    symbol: ts.Symbol,\n    type: spec.ClassType | spec.InterfaceType,\n    ctx: EmitContext,\n    declaringTypeDecl: ts.ClassLikeDeclaration | ts.InterfaceDeclaration | undefined,\n  ) {\n    if (type.properties?.find((p) => p.name === symbol.name)) {\n      /*\n       * Second declaration of the same property. For example, if code specifies a getter & setter signature,\n       * there will be one pass for each of the signatures, but we can process only the first encountered. The\n       * typescript compiler will take care of making sure we don't have conflicting declarations, anyway.\n       */\n      return;\n    }\n\n    if (LOG.isTraceEnabled()) {\n      LOG.trace(`Processing property: ${chalk.green(type.fqn)}#${chalk.cyan(symbol.name)}`);\n    }\n\n    const declaration = symbol.valueDeclaration ?? symbol.declarations?.[0];\n    const signature = declaration as\n      | ts.PropertySignature\n      | ts.PropertyDeclaration\n      | ts.AccessorDeclaration\n      | ts.ParameterPropertyDeclaration;\n\n    if (type.name === Case.pascal(symbol.name)) {\n      this._diagnostics.push(\n        JsiiDiagnostic.JSII_5019_MEMBER_TYPE_NAME_CONFLICT.create(\n          signature.name,\n          'property',\n          symbol,\n          type,\n        ).addRelatedInformationIf(\n          declaringTypeDecl?.name ?? declaringTypeDecl,\n          `The declaring ${type.kind} is introduced here`,\n        ),\n      );\n    }\n\n    if (isProhibitedMemberName(symbol.name)) {\n      this._diagnostics.push(\n        JsiiDiagnostic.JSII_5016_PROHIBITED_MEMBER_NAME.create(\n          symbol.valueDeclaration ?? symbol.declarations?.[0],\n          symbol.name,\n        ),\n      );\n      return;\n    }\n\n    this._warnAboutReservedWords(symbol);\n\n    const property: spec.Property = bindings.setPropertyRelatedNode(\n      {\n        ...this._optionalValue(\n          this._typeChecker.getTypeOfSymbolAtLocation(symbol, signature),\n          signature.type ?? signature.name,\n          'property type',\n        ),\n        abstract: _isAbstract(symbol, type) || undefined,\n        name: symbol.name,\n        protected: _isProtected(symbol) || undefined,\n        static: _isStatic(symbol) || undefined,\n        locationInModule: this.declarationLocation(signature),\n      },\n      signature,\n    );\n\n    if (ts.isGetAccessor(signature)) {\n      property.immutable = true;\n      for (const decl of symbol.getDeclarations() ?? []) {\n        if (!ts.isSetAccessor(decl)) {\n          continue;\n        }\n        delete property.immutable;\n\n        // Verify the setter doesn't have a Separate Write Type (SWT)\n        const valueParam = decl.parameters[0];\n        if (valueParam?.type == null) {\n          // If there is no type node, there can't be a SWT\n          continue;\n        }\n        const paramType = this._typeChecker.getTypeFromTypeNode(valueParam.type);\n        const paramOptionalValue = this._optionalValue(paramType, valueParam.type, 'parameter type');\n\n        if (\n          property.optional !== paramOptionalValue.optional ||\n          describeTypeReference(property.type) !== describeTypeReference(paramOptionalValue.type)\n        ) {\n          this._diagnostics.push(\n            JsiiDiagnostic.JSII_1005_SEPARATE_WRITE_TYPE.create(valueParam.type).addRelatedInformation(\n              signature.type ?? signature.name,\n              'The getter signature is declared here',\n            ),\n          );\n        }\n      }\n    } else {\n      property.immutable = (ts.getCombinedModifierFlags(signature) & ts.ModifierFlags.Readonly) !== 0 || undefined;\n    }\n\n    if (signature.questionToken) {\n      property.optional = true;\n    }\n\n    if (property.static && property.immutable && ts.isPropertyDeclaration(signature) && signature.initializer) {\n      property.const = true;\n    }\n\n    property.docs = this._visitDocumentation(symbol, ctx).docs;\n\n    type.properties = type.properties ?? [];\n    if (type.properties.find((prop) => prop.name === property.name && prop.static === property.static) != null) {\n      LOG.trace(`Dropping re-declaration of ${chalk.green(type.fqn)}#${chalk.cyan(property.name)}`);\n      return;\n    }\n    type.properties.push(property);\n  }\n\n  private _toParameter(paramSymbol: ts.Symbol, ctx: EmitContext): spec.Parameter {\n    if (LOG.isTraceEnabled()) {\n      LOG.trace(`Processing parameter: ${chalk.cyan(paramSymbol.name)}`);\n    }\n    const paramDeclaration = paramSymbol.valueDeclaration as ts.ParameterDeclaration;\n\n    this._warnAboutReservedWords(paramSymbol);\n\n    const parameter: spec.Parameter = bindings.setParameterRelatedNode(\n      {\n        ...this._optionalValue(\n          this._typeChecker.getTypeAtLocation(paramDeclaration),\n          paramDeclaration.type ?? paramDeclaration.name,\n          'parameter type',\n        ),\n        name: paramSymbol.name,\n        variadic: paramDeclaration.dotDotDotToken && true,\n      },\n      paramDeclaration,\n    );\n\n    if (parameter.variadic && spec.isCollectionTypeReference(parameter.type)) {\n      // TypeScript types variadic parameters as an array, but JSII uses the item-type instead.\n      parameter.type = parameter.type.collection.elementtype;\n    } else if (paramDeclaration.initializer || paramDeclaration.questionToken) {\n      // Optional parameters have an inherently null-able type.\n      parameter.optional = true;\n    }\n\n    parameter.docs = this._visitDocumentation(\n      paramSymbol,\n      ctx.removeStability(), // No inheritance on purpose\n    ).docs;\n\n    // Don't rewrite doc comment here on purpose -- instead, we add them as '@param'\n    // into the parent's doc comment.\n\n    return parameter;\n  }\n\n  private _typeReference(type: ts.Type, declaration: ts.Node | undefined, purpose: TypeUseKind): spec.TypeReference {\n    const optionalValue = this._optionalValue(type, declaration, purpose);\n    if (optionalValue.optional) {\n      this._diagnostics.push(\n        JsiiDiagnostic.JSII_3999_INCOHERENT_TYPE_MODEL.create(\n          declaration,\n          'Encountered optional value in location where a plain type reference is expected',\n        ),\n      );\n    }\n    return optionalValue.type;\n  }\n\n  private _optionalValue(type: ts.Type, declaration: ts.Node | undefined, purpose: TypeUseKind): spec.OptionalValue {\n    const isThisType = _isThisType(type, this._typeChecker, declaration?.parent);\n\n    if (type.isLiteral() && _isEnumLike(type)) {\n      type = this._typeChecker.getBaseTypeOfLiteralType(type);\n    } else {\n      type = this._typeChecker.getApparentType(type);\n    }\n\n    const primitiveType = _tryMakePrimitiveType.call(this);\n    if (primitiveType) {\n      return { type: primitiveType };\n    }\n\n    if (type.isUnion() && !_isEnumLike(type)) {\n      return _unionType.call(this);\n    }\n\n    if (!type.symbol) {\n      this._diagnostics.push(JsiiDiagnostic.JSII_1001_TYPE_HAS_NO_SYMBOL.create(declaration));\n      return { type: spec.CANONICAL_ANY };\n    }\n\n    if (type.symbol.name === 'Array') {\n      return { type: _arrayType.call(this) };\n    }\n\n    if (type.symbol.name === '__type' && type.symbol.members) {\n      return { type: _mapType.call(this) };\n    }\n\n    if (type.symbol.escapedName === 'Promise') {\n      const typeRef = type as ts.TypeReference;\n      if (!typeRef.typeArguments || typeRef.typeArguments.length !== 1) {\n        this._diagnostics.push(JsiiDiagnostic.JSII_1002_UNSPECIFIED_PROMISE.create(declaration));\n        return { type: spec.CANONICAL_ANY };\n      }\n      return {\n        type: this._typeReference(typeRef.typeArguments[0], declaration, purpose),\n      };\n    }\n\n    const fqn = this._getFQN(type, declaration, purpose, isThisType);\n    if (fqn == null) {\n      this._diagnostics.push(\n        JsiiDiagnostic.JSII_9997_UNKNOWN_ERROR.create(declaration, new Error('Could not determine FQN')),\n      );\n      return { type: { fqn: '' } };\n    }\n\n    return {\n      type: { fqn },\n    };\n\n    function _arrayType(this: Assembler): spec.CollectionTypeReference {\n      const typeRef = type as ts.TypeReference;\n      let elementtype: spec.TypeReference;\n\n      if (typeRef.typeArguments?.length === 1) {\n        elementtype = this._typeReference(typeRef.typeArguments[0], declaration, 'list element type');\n      } else {\n        const count = typeRef.typeArguments ? typeRef.typeArguments.length : 'none';\n        this._diagnostics.push(\n          JsiiDiagnostic.JSII_1003_UNSUPPORTED_TYPE.create(\n            declaration,\n            `Array references must have exactly one type argument (found ${count})`,\n          ),\n        );\n        elementtype = spec.CANONICAL_ANY;\n      }\n\n      return {\n        collection: {\n          elementtype,\n          kind: spec.CollectionKind.Array,\n        },\n      };\n    }\n\n    function _mapType(this: Assembler): spec.CollectionTypeReference {\n      let elementtype: spec.TypeReference;\n      const objectType = type.getStringIndexType();\n      if (objectType) {\n        elementtype = this._typeReference(objectType, declaration, 'map element type');\n      } else {\n        const typeDecl = type.symbol.declarations?.[0];\n        if (\n          typeDecl != null &&\n          ts.isTypeLiteralNode(typeDecl) &&\n          typeDecl.members.length == 1 &&\n          ts.isIndexSignatureDeclaration(typeDecl.members[0]) &&\n          typeDecl.members[0].parameters[0].type != null &&\n          ts.isTemplateLiteralTypeNode(typeDecl.members[0].parameters[0].type)\n        ) {\n          const indexTypeNode = typeDecl.members[0].type;\n          const indexType = this._typeChecker.getTypeFromTypeNode(indexTypeNode);\n          elementtype = this._typeReference(indexType, indexTypeNode, 'map element type');\n        } else {\n          this._diagnostics.push(\n            JsiiDiagnostic.JSII_1003_UNSUPPORTED_TYPE.create(\n              declaration,\n              'Only string-indexed map types are supported',\n            ),\n          );\n          elementtype = spec.CANONICAL_ANY;\n        }\n      }\n      return {\n        collection: {\n          elementtype,\n          kind: spec.CollectionKind.Map,\n        },\n      };\n    }\n\n    function _tryMakePrimitiveType(this: Assembler): spec.PrimitiveTypeReference | undefined {\n      if (!type.symbol) {\n        if (type.flags & ts.TypeFlags.Object) {\n          if (isTupleType(type as ts.ObjectType)) {\n            this._diagnostics.push(\n              JsiiDiagnostic.JSII_1999_UNSUPPORTED.create(declaration, { what: 'Tuple types', alternative: 'arrays' }),\n            );\n          }\n\n          return { primitive: spec.PrimitiveType.Json };\n        }\n        if (type.flags & (ts.TypeFlags.Any | ts.TypeFlags.Unknown)) {\n          return spec.CANONICAL_ANY;\n        }\n      } else if (\n        type.symbol.valueDeclaration &&\n        isUnder(type.symbol.valueDeclaration.getSourceFile().fileName, this.stdlib)\n      ) {\n        switch (type.symbol.name) {\n          case 'Boolean':\n            return { primitive: spec.PrimitiveType.Boolean };\n          case 'Date':\n            return { primitive: spec.PrimitiveType.Date };\n          case 'Number':\n            return { primitive: spec.PrimitiveType.Number };\n          case 'String':\n            return { primitive: spec.PrimitiveType.String };\n        }\n      }\n      // Not a primitive type!\n      return undefined;\n    }\n\n    function _unionType(this: Assembler): spec.OptionalValue {\n      const types = new Array<spec.TypeReference>();\n      let optional: boolean | undefined;\n\n      for (const subType of (type as ts.UnionType).types) {\n        if (subType.flags & ts.TypeFlags.Undefined) {\n          optional = true;\n          continue;\n        }\n        // eslint-disable-next-line no-await-in-loop\n        const resolvedType = this._typeReference(subType, declaration, purpose);\n        if (types.some((ref) => deepEqual(ref, resolvedType))) {\n          continue;\n        }\n        types.push(resolvedType);\n      }\n\n      return types.length === 1 ? { optional, type: types[0] } : { optional, type: { union: { types } } };\n    }\n  }\n\n  private callDeferredsInOrder() {\n    // Do a topological call order of all deferreds.\n    while (this._deferred.length > 0) {\n      // All fqns in dependency lists that don't have any pending\n      // deferreds themselves can be executed now, so are removed from\n      // dependency lists.\n      const pendingFqns = new Set<string>(this._deferred.map((x) => x.fqn));\n      for (const deferred of this._deferred) {\n        restrictDependenciesTo(deferred, pendingFqns);\n      }\n\n      // Invoke all deferreds with no more dependencies and remove them from the list.\n      let invoked = false;\n      for (let i = 0; i < this._deferred.length; i++) {\n        if (this._deferred[i].dependedFqns.length === 0) {\n          const deferred = this._deferred.splice(i, 1)[0];\n          deferred.cb();\n          invoked = true;\n        }\n      }\n\n      if (!invoked) {\n        // Apparently we're stuck. Complain loudly.\n        throw new Error(\n          `Could not invoke any more deferreds, cyclic dependency? Remaining: ${JSON.stringify(\n            this._deferred,\n            undefined,\n            2,\n          )}`,\n        );\n      }\n    }\n\n    /**\n     * Retain only elements in the dependencyfqn that are also in the set\n     */\n    function restrictDependenciesTo(def: DeferredRecord, fqns: Set<string>) {\n      def.dependedFqns = def.dependedFqns.filter(fqns.has.bind(fqns));\n    }\n  }\n\n  /**\n   * Return the set of all (inherited) properties of an interface\n   */\n  private allProperties(root: spec.InterfaceType): Set<string> {\n    const ret = new Set<string>();\n    recurse.call(this, root);\n    return ret;\n\n    function recurse(this: Assembler, int: spec.InterfaceType) {\n      for (const property of int.properties ?? []) {\n        ret.add(property.name);\n      }\n\n      for (const baseRef of int.interfaces ?? []) {\n        const base = this._dereference(baseRef, undefined);\n        if (!base) {\n          throw new Error('Impossible to have unresolvable base in allProperties()');\n        }\n        if (!spec.isInterfaceType(base)) {\n          throw new Error('Impossible to have non-interface base in allProperties()');\n        }\n\n        recurse.call(this, base);\n      }\n    }\n  }\n\n  private _verifyConsecutiveOptionals(node: ts.Node, parameters?: spec.Parameter[]) {\n    if (!parameters) {\n      return;\n    }\n\n    const remaining = [...parameters].reverse();\n    while (remaining.length > 0) {\n      const current = remaining.pop()!;\n      if (current.optional) {\n        const offender = remaining.find((p) => !p.optional && !p.variadic);\n        if (offender == null) {\n          continue;\n        }\n        this._diagnostics.push(\n          JsiiDiagnostic.JSII_3009_OPTIONAL_PARAMETER_BEFORE_REQUIRED.create(node, current, offender),\n        );\n        delete current.optional;\n      }\n    }\n  }\n\n  /**\n   * Updates the runtime type info with the fully-qualified name for the current class definition.\n   * Used by the runtime type info injector to add this information to the compiled file.\n   */\n  private registerExportedClassFqn(clazz: ts.ClassDeclaration, fqn: string) {\n    this.runtimeTypeInfoInjector.registerClassFqn(clazz, fqn);\n  }\n\n  /**\n   * Return only those submodules from the submodules list that are submodules inside this\n   * assembly.\n   */\n  private mySubmodules() {\n    return Array.from(this._submodules.values()).filter((m) => m.fqn.startsWith(`${this.projectInfo.name}.`));\n  }\n\n  private findPackageInfo(fromDir: string): PackageJson | undefined {\n    if (this._packageInfoCache.has(fromDir)) {\n      return this._packageInfoCache.get(fromDir);\n    }\n\n    const packageInfo = _findPackageInfo.call(this, fromDir);\n    this._packageInfoCache.set(fromDir, packageInfo);\n    return packageInfo;\n\n    function _findPackageInfo(this: Assembler, dir: string): PackageJson | undefined {\n      const filePath = path.join(dir, 'package.json');\n      if (fs.existsSync(filePath)) {\n        return JSON.parse(fs.readFileSync(filePath, 'utf-8'));\n      }\n      const parent = path.dirname(dir);\n      if (parent === dir) {\n        return undefined;\n      }\n      return this.findPackageInfo(parent);\n    }\n  }\n}\n\nexport interface AssemblerOptions {\n  /**\n   * Whether to remove `@deprecated` members from the generated assembly.\n   *\n   * @default false\n   */\n  readonly stripDeprecated?: boolean;\n\n  /**\n   * If `stripDeprecated` is true, and a file is provided here, only the FQNs\n   * present in the file will actually be removed. This can be useful when\n   * you wish to deprecate some elements without actually removing them.\n   *\n   * @default undefined\n   */\n  readonly stripDeprecatedAllowListFile?: string;\n\n  /**\n   * Whether to inject code that warns when a deprecated element is used.\n   *\n   * @default false\n   */\n  readonly addDeprecationWarnings?: boolean;\n\n  /**\n   * Whether to compress the assembly.\n   *\n   * @default false\n   */\n  readonly compressAssembly?: boolean;\n}\n\ninterface SubmoduleSpec {\n  /**\n   * The submodule's fully qualified name.\n   */\n  readonly fqn: string;\n\n  /**\n   * The submodule's fully qualified name prefix to use when resolving type FQNs. This does not\n   * include \"inline namespace\" names as those are already represented in the TypeCheckers' view of\n   * the type names.\n   */\n  readonly fqnResolutionPrefix: string;\n\n  /**\n   * The location of the submodule definition in the source.\n   */\n  readonly locationInModule: spec.SourceLocation;\n\n  /**\n   * Symbol identifier of the root of the root file that represents this submodule\n   */\n  readonly symbolId?: string;\n\n  /**\n   * Any customized configuration for the currentl submodule.\n   */\n  readonly targets?: spec.AssemblyTargets;\n\n  /**\n   * Readme for this submodule (if found)\n   */\n  readonly readme?: spec.ReadMe;\n}\n\nfunction _fingerprint(assembly: spec.Assembly): spec.Assembly {\n  delete (assembly as any).fingerprint;\n  assembly = sortJson(assembly);\n  const fingerprint = crypto.createHash('sha256').update(JSON.stringify(assembly)).digest('base64');\n  return { ...assembly, fingerprint };\n}\n\nfunction _isAbstract(symbol: ts.Symbol, declaringType: spec.ClassType | spec.InterfaceType): boolean {\n  // everything is abstract in interfaces\n  if (declaringType.kind === spec.TypeKind.Interface) {\n    return true;\n  }\n\n  return (\n    !!symbol.valueDeclaration &&\n    (ts.getCombinedModifierFlags(symbol.valueDeclaration) & ts.ModifierFlags.Abstract) !== 0\n  );\n}\n\nfunction _isEnumLike(type: ts.Type): type is ts.EnumType {\n  return (type.flags & ts.TypeFlags.EnumLike) !== 0;\n}\n\nfunction _isExported(node: ts.Declaration): boolean {\n  return (ts.getCombinedModifierFlags(node) & ts.ModifierFlags.Export) !== 0;\n}\n\n/**\n * Members with names starting with `_` (and marked as @internal) and members\n * that are private are hidden.\n *\n * @param symbol the symbol which should be assessed\n *\n * @return `true` if the symbol should be hidden\n */\nfunction _isPrivate(symbol: ts.Symbol): boolean {\n  // Private identifiers are always private...\n  if (symbol.name.startsWith('#')) {\n    return true;\n  }\n\n  const TYPE_DECLARATION_KINDS = new Set([\n    ts.SyntaxKind.ClassDeclaration,\n    ts.SyntaxKind.InterfaceDeclaration,\n    ts.SyntaxKind.EnumDeclaration,\n  ]);\n\n  // if the symbol doesn't have a value declaration, we are assuming it's a type (enum/interface/class)\n  // and check that it has an \"export\" modifier\n  if (\n    !isInternalSymbol(symbol) &&\n    (!symbol.valueDeclaration || TYPE_DECLARATION_KINDS.has(symbol.valueDeclaration.kind))\n  ) {\n    let hasExport = false;\n    for (const decl of symbol.declarations ?? []) {\n      if (ts.getCombinedModifierFlags(decl) & ts.ModifierFlags.Export) {\n        hasExport = true;\n        break;\n      }\n      // Handle nested classes from project references\n      if (ts.isModuleBlock(decl.parent)) {\n        const moduleDeclaration = decl.parent.parent;\n        const modifiers = ts.getCombinedModifierFlags(moduleDeclaration);\n        // The trick is the module is declared as ambient & exported\n        if ((modifiers & ts.ModifierFlags.Ambient) !== 0 && (modifiers & ts.ModifierFlags.Export) !== 0) {\n          hasExport = true;\n          break;\n        }\n      }\n    }\n    return !hasExport;\n  }\n\n  const decl = symbol.valueDeclaration ?? symbol.declarations?.[0];\n\n  return decl != null && (ts.getCombinedModifierFlags(decl) & ts.ModifierFlags.Private) !== 0;\n}\n\nfunction _hasInternalJsDocTag(symbol: ts.Symbol) {\n  return symbol.getJsDocTags().some((t: any) => t.name === 'internal');\n}\n\nfunction _isProtected(symbol: ts.Symbol): boolean {\n  return (\n    !!symbol.valueDeclaration &&\n    (ts.getCombinedModifierFlags(symbol.valueDeclaration) & ts.ModifierFlags.Protected) !== 0\n  );\n}\n\nfunction _isStatic(symbol: ts.Symbol): boolean {\n  return (\n    !!symbol.valueDeclaration && (ts.getCombinedModifierFlags(symbol.valueDeclaration) & ts.ModifierFlags.Static) !== 0\n  );\n}\n\n/**\n * Determines whether a given type is void or Promise<void>.\n *\n * @param type the tested type\n *\n * @returns `true` if the type is void or Promise<void>\n */\nfunction _isVoid(type: ts.Type): boolean {\n  if (_isPromise(type)) {\n    const typeRef = type as ts.TypeReference;\n    return typeRef.typeArguments != null && typeRef.typeArguments.length === 1 && _isVoid(typeRef.typeArguments[0]);\n  }\n  return (type.flags & ts.TypeFlags.Void) !== 0;\n}\n\nfunction _isPromise(type: ts.Type): boolean {\n  return type.symbol?.escapedName === 'Promise';\n}\n\nfunction _sortMembers(type: spec.ClassType): spec.ClassType;\nfunction _sortMembers(type: spec.InterfaceType): spec.InterfaceType;\nfunction _sortMembers(type: spec.ClassType | spec.InterfaceType): spec.ClassType | spec.InterfaceType {\n  type.methods = type.methods && _sort(type.methods);\n  type.properties = type.properties && _sort(type.properties);\n  return type;\n\n  /**\n   * Sorts a member array such that:\n   * 1. Static members appear first\n   * 2. Immutable members appear first\n   * 3. Non-optional members appear first\n   * 4. Members appear in lexicographical order\n   *\n   * @param values the array of members to be sorted\n   *\n   * @return a sorted copy of ``values``\n   */\n  function _sort<T extends TypeMember>(values: T[]): T[] {\n    if (!values) {\n      return values;\n    }\n    return values.sort(_comparator);\n\n    function _comparator(lval: T, rval: T): number {\n      return _format(lval).localeCompare(_format(rval));\n\n      function _format(val: T): string {\n        return [val.static ? '0' : '1', val.immutable ? '0' : '1', !val.optional ? '0' : '1', val.name].join('|');\n      }\n    }\n  }\n  type TypeMember = {\n    name?: string; // Methods & Properties\n    static?: boolean; // Methods & Properties\n    immutable?: boolean; //           Properties\n    optional?: boolean; //           Properties\n  };\n}\n\n/**\n * Deferred processing that needs to happen in a second, ordered pass\n */\ninterface DeferredRecord {\n  /**\n   * The FQN of the type the action will be executed on\n   */\n  fqn: string;\n\n  /**\n   * Dependency FQNs of the types that need to be processed before analysis.\n   *\n   * All deferred analysis actions for the types listed here must be complete\n   * before this analysis action can run.\n   */\n  dependedFqns: string[];\n\n  /**\n   * Callback representing the action to run.\n   */\n  cb: () => void;\n}\n\n/**\n * Return the last element from a list\n */\nfunction last<T>(xs: T[]): T | undefined {\n  return xs.length > 0 ? xs[xs.length - 1] : undefined;\n}\n\n/**\n * Apply a function to a value if it's not equal to undefined\n */\nfunction apply<T, U>(x: T | undefined, fn: (x: T) => U | undefined): U | undefined {\n  return x !== undefined ? fn(x) : undefined;\n}\n\n/**\n * Return the intersection of two sets\n */\nfunction intersection<T>(xs: Set<T>, ys: Set<T>): Set<T> {\n  const ret = new Set<T>();\n  for (const x of xs) {\n    if (ys.has(x)) {\n      ret.add(x);\n    }\n  }\n  return ret;\n}\n\n/**\n * Return all members names of a JSII interface type\n *\n * Returns empty string for a non-interface type.\n */\nfunction memberNames(jsiiType: spec.InterfaceType | spec.ClassType): string[] {\n  return Object.keys(typeMembers(jsiiType)).filter((n) => n !== '');\n}\n\nfunction typeMembers(jsiiType: spec.InterfaceType | spec.ClassType): {\n  [key: string]: spec.Property | spec.Method;\n} {\n  const ret: { [key: string]: spec.Property | spec.Method } = {};\n\n  for (const prop of jsiiType.properties ?? []) {\n    ret[prop.name] = prop;\n  }\n\n  for (const method of jsiiType.methods ?? []) {\n    ret[method.name ?? ''] = method;\n  }\n\n  return ret;\n}\n\n/**\n * Whether or not the given name is conventionally an interface name\n *\n * It's an interface name if it starts with I and has another capital\n * (so we don't mark IonicColumnProps as an interface).\n */\nfunction isInterfaceName(name: string) {\n  return name.length >= 2 && name.startsWith('I') && name.charAt(1).toUpperCase() === name.charAt(1);\n}\n\nfunction getConstructor(type: ts.Type): ts.Symbol | undefined {\n  return type.symbol.members?.get(ts.InternalSymbolName.Constructor);\n}\n\nfunction* intersect<T>(xs: Set<T>, ys: Set<T>) {\n  for (const x of xs) {\n    if (ys.has(x)) {\n      yield x;\n    }\n  }\n}\n\nfunction noEmptyDict<T>(xs: Record<string, T> | undefined): Record<string, T> | undefined {\n  if (xs == null || Object.keys(xs).length === 0) {\n    return undefined;\n  }\n  return xs;\n}\n\nfunction toDependencyClosure(assemblies: readonly spec.Assembly[]): {\n  [name: string]: spec.DependencyConfiguration;\n} {\n  const result: { [name: string]: spec.DependencyConfiguration } = {};\n  for (const assembly of assemblies) {\n    if (!assembly.targets) {\n      continue;\n    }\n    result[assembly.name] = {\n      submodules: cleanUp(assembly.submodules),\n      targets: assembly.targets,\n    };\n  }\n  return result;\n\n  /**\n   * Removes unneeded fields from the entries part of the `dependencyClosure`\n   * property. Fields such as `readme` are not necessary and can bloat up the\n   * assembly object.\n   *\n   * This removes the `readme` and `locationInModule` fields from the submodule\n   * descriptios if present.\n   *\n   * @param submodules the submodules list to clean up.\n   *\n   * @returns the cleaned up submodules list.\n   */\n  function cleanUp(submodules: spec.Assembly['submodules']): spec.DependencyConfiguration['submodules'] {\n    if (submodules == null) {\n      return submodules;\n    }\n    const clean: spec.DependencyConfiguration['submodules'] = {};\n    for (const [fqn, { targets }] of Object.entries(submodules)) {\n      clean[fqn] = { targets };\n    }\n    return clean;\n  }\n}\n\nfunction toSubmoduleDeclarations(submodules: Iterable<SubmoduleSpec>): spec.Assembly['submodules'] {\n  const result: spec.Assembly['submodules'] = {};\n\n  for (const submodule of submodules) {\n    result[submodule.fqn] = {\n      locationInModule: submodule.locationInModule,\n      targets: submodule.targets,\n      readme: submodule.readme,\n      symbolId: submodule.symbolId,\n    };\n  }\n\n  return result;\n}\n\n/**\n * Check whether this type is the intrinsic TypeScript \"error type\"\n *\n * This type is returned if type lookup fails. Unfortunately no public\n * accessors for it are exposed.\n */\nfunction isErrorType(t: ts.Type) {\n  return (t as any).intrinsicName === 'error';\n}\n\n/**\n * Those have specific semantics in certain languages that don't always translate cleanly in others\n * (like how equals/hashCode are not a thing in Javascript, but carry meaning in Java and C#). The\n * `build` name is reserved for generated code (Java builders use that).\n */\nconst PROHIBITED_MEMBER_NAMES = ['build', 'equals', 'hashcode'];\n\n/**\n * Whether the given name is prohibited\n */\nfunction isProhibitedMemberName(name: string) {\n  return PROHIBITED_MEMBER_NAMES.includes(name.toLowerCase());\n}\n\n/**\n * Information about the context in which a declaration is emitted.\n */\nclass EmitContext {\n  public constructor(public readonly namespace: readonly string[], public readonly stability?: spec.Stability) {}\n\n  /**\n   * Create a new EmitContext by appending a namespace entry at the end.\n   * @param element the new namespace entry.\n   */\n  public appendNamespace(element: string) {\n    return new EmitContext([...this.namespace, element], this.stability);\n  }\n\n  /**\n   * Create a new EmitContext by replacing the stability.\n   * @param stability the new stability, if available.\n   */\n  public replaceStability(stability?: spec.Stability) {\n    if (!stability) {\n      return this;\n    }\n    return new EmitContext(this.namespace, stability);\n  }\n\n  /**\n   * Create a new EmitContext without stability.\n   */\n  public removeStability() {\n    return new EmitContext(this.namespace, undefined);\n  }\n}\n\nfunction inferRootDir(program: ts.Program): string | undefined {\n  const directories = program\n    .getRootFileNames()\n    .filter((fileName) => {\n      const sourceFile = program.getSourceFile(fileName);\n      return (\n        sourceFile != null &&\n        !program.isSourceFileFromExternalLibrary(sourceFile) &&\n        !program.isSourceFileDefaultLibrary(sourceFile)\n      );\n    })\n    .map((fileName) => path.relative(program.getCurrentDirectory(), path.dirname(fileName)))\n    .map(segmentPath);\n\n  const maxPrefix = Math.min(...directories.map((segments) => segments.length - 1));\n  let commonIndex = -1;\n  while (commonIndex < maxPrefix && new Set(directories.map((segments) => segments[commonIndex + 1])).size === 1) {\n    commonIndex++;\n  }\n\n  if (commonIndex < 0) {\n    return undefined;\n  }\n\n  return directories[0][commonIndex];\n\n  function segmentPath(fileName: string): string[] {\n    const result = new Array<string>();\n    for (let parent = fileName; parent !== path.dirname(parent); parent = path.dirname(parent)) {\n      result.unshift(parent);\n    }\n    return result;\n  }\n}\n\n/**\n * Determines whether the provided type is a single-valued enum. It is necessary\n * to check as enums are union-like in the type model, and single-valued enum\n * types are actually reduced to the only available literal, which can trip\n * the assembler.\n *\n * @param type        the type being checked.\n * @param typeChecker the type checker to use to get more information.\n *\n * @return `true` if `type` is a single-valued enum type.\n */\nfunction isSingleValuedEnum(type: ts.Type, typeChecker: ts.TypeChecker): type is ts.EnumType {\n  if (type.isLiteral() && _isEnumLike(type)) {\n    // Single-Valued enums are reduced to the only literal available.\n    return type === typeChecker.getBaseTypeOfLiteralType(type);\n  }\n  return false;\n}\n\n/**\n * Checks is the provided type is \"this\" (as a type annotation).\n *\n * @param type        the validated type.\n * @param typeChecker the type checker.\n *\n * @returns `true` iif the type is `this`\n */\nfunction _isThisType(type: ts.Type, typeChecker: ts.TypeChecker, enclosingDeclaration: ts.Node | undefined): boolean {\n  return (\n    typeChecker.typeToTypeNode(type, enclosingDeclaration, ts.NodeBuilderFlags.None)?.kind === ts.SyntaxKind.ThisKeyword\n  );\n}\n\n/**\n * Gets the name node for a given symbol; or it's first declaration if no name can be found. This is\n * intended for use in placing problem markers on the right location.\n *\n * @param symbol the symbol for which the name node is needed.\n *\n * @returns the name node for the symbol, or the symbol's first declaration.\n */\nfunction _nameOrDeclarationNode(symbol: ts.Symbol): ts.Node | undefined {\n  const declaration = symbol.valueDeclaration ?? symbol.declarations?.[0];\n  if (declaration == null) {\n    return undefined;\n  }\n  return ts.getNameOfDeclaration(declaration) ?? declaration;\n}\n\nfunction _findHint(decl: ts.Declaration, hint: string): ts.JSDocTag | undefined {\n  const [node] = ts.getAllJSDocTags(decl, (tag): tag is ts.JSDocTag => tag.tagName.text === hint);\n  return node;\n}\n\n/**\n * A location where a type can be used.\n */\ntype TypeUseKind =\n  | 'base class'\n  | 'base interface'\n  | 'list element type'\n  | 'map element type'\n  | 'parameter type'\n  | 'property type'\n  | 'return type';\n\n/**\n * Resolve a Type to Symbol, taking into account single-valued enums which have a bug\n *\n * Bug reference: https://github.com/microsoft/TypeScript/issues/46755\n */\nfunction symbolFromType(type: ts.Type, typeChecker: ts.TypeChecker): ts.Symbol {\n  if ((type.flags & ts.TypeFlags.EnumLiteral) === 0) {\n    return type.symbol;\n  }\n\n  const decl = type.symbol.declarations?.[0];\n  if (!decl) {\n    return type.symbol;\n  }\n\n  if (!ts.isEnumMember(decl)) {\n    return type.symbol;\n  }\n\n  const parentDecl = decl.parent;\n  if (!parentDecl || !ts.isEnumDeclaration(parentDecl)) {\n    return type.symbol;\n  }\n\n  const name = ts.getNameOfDeclaration(parentDecl);\n  if (!name) {\n    return type.symbol;\n  }\n  return typeChecker.getSymbolAtLocation(name) ?? type.symbol;\n}\n\nconst SYMBOLID_CACHE = new WeakMap<spec.Assembly, Record<string, string>>();\n\n/**\n * Build and return an index of { symbolId -> fqn }\n *\n * Uses a cache for performance reasons.\n */\nfunction symbolIdIndex(asm: spec.Assembly): Record<string, string> {\n  const existing = SYMBOLID_CACHE.get(asm);\n  if (existing) {\n    return existing;\n  }\n\n  const ret = buildIndex();\n  SYMBOLID_CACHE.set(asm, ret);\n  return ret;\n\n  function buildIndex() {\n    const index: Record<string, string> = {};\n    for (const [fqn, type] of Object.entries(asm.types ?? {})) {\n      if (type.symbolId) {\n        index[type.symbolId] = fqn;\n      }\n    }\n    return index;\n  }\n}\n\nfunction getSymbolFromDeclaration(decl: ts.Declaration, typeChecker: ts.TypeChecker): ts.Symbol | undefined {\n  const name = ts.getNameOfDeclaration(decl);\n  return name ? typeChecker.getSymbolAtLocation(name) : undefined;\n}\n\nfunction isTupleType(type: ts.ObjectType): type is ts.TupleType {\n  if (type.objectFlags & ts.ObjectFlags.Tuple) {\n    return true;\n  }\n\n  if (type.objectFlags & ts.ObjectFlags.Reference) {\n    return isTupleType((type as ts.TypeReference).target);\n  }\n\n  return false;\n}\n\nfunction isUnder(file: string, dir: string): boolean {\n  const relative = path.relative(dir, file);\n  return !relative.startsWith(path.sep) && !relative.startsWith('..');\n}\n\nfunction loadAndRenderReadme(readmePath: string, projectRoot: string) {\n  if (!fs.existsSync(readmePath)) {\n    return undefined;\n  }\n\n  return {\n    markdown: literate\n      .includeAndRenderExamples(\n        literate.loadFromFile(readmePath),\n        literate.fileSystemLoader(path.dirname(readmePath)),\n        projectRoot,\n      )\n      .join('\\n'),\n  };\n}\n\nconst INTERNAL_SYMBOLS = new Set(Object.values(ts.InternalSymbolName));\nfunction isInternalSymbol(symbol: ts.Symbol): boolean {\n  return INTERNAL_SYMBOLS.has(symbol.name as ts.InternalSymbolName);\n}\n"]}
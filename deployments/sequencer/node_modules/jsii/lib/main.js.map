{"version":3,"file":"main.js","sourceRoot":"","sources":["../src/main.ts"],"names":[],"mappings":"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","sourcesContent":["import '@jsii/check-node/run';\n\nimport * as path from 'node:path';\nimport * as util from 'node:util';\nimport * as log4js from 'log4js';\nimport { version as tsVersion } from 'typescript/package.json';\nimport * as yargs from 'yargs';\n\nimport { Compiler } from './compiler';\nimport { configureCategories } from './jsii-diagnostic';\nimport { loadProjectInfo } from './project-info';\nimport { emitSupportPolicyInformation } from './support';\nimport { TypeScriptConfigValidationRuleSet } from './tsconfig';\nimport * as utils from './utils';\nimport { VERSION } from './version';\nimport { enabledWarnings } from './warnings';\n\nconst warningTypes = Object.keys(enabledWarnings);\n\nfunction choiceWithDesc(\n  choices: { [choice: string]: string },\n  desc: string,\n): {\n  choices: string[];\n  desc: string;\n} {\n  return {\n    choices: Object.keys(choices),\n    desc: [desc, ...Object.entries(choices).map(([choice, docs]) => `${choice}: ${docs}`)].join('\\n'),\n  };\n}\n\nenum OPTION_GROUP {\n  JSII = 'jsii compiler options:',\n  TS = 'TypeScript config options:',\n}\n\nconst ruleSets: {\n  [choice in TypeScriptConfigValidationRuleSet]: string;\n} = {\n  [TypeScriptConfigValidationRuleSet.STRICT]:\n    'Validates the provided config against a strict rule set designed for maximum backwards-compatibility.',\n  [TypeScriptConfigValidationRuleSet.GENERATED]:\n    'Enforces a config as created by --generate-tsconfig. Use this to stay compatible with the generated config, but have full ownership over the file.',\n  [TypeScriptConfigValidationRuleSet.MINIMAL]:\n    'Only enforce options that are known to be incompatible with jsii. This rule set is likely to be incomplete and new rules will be added without notice as incompatibilities emerge.',\n  [TypeScriptConfigValidationRuleSet.NONE]:\n    'Disables all config validation, including options that are known to be incompatible with jsii. Intended for experimentation only. Use at your own risk.',\n};\n\n(async () => {\n  await emitSupportPolicyInformation();\n\n  await yargs\n    .env('JSII')\n    .command(\n      ['$0 [PROJECT_ROOT]', 'compile [PROJECT_ROOT]'],\n      'Compiles a jsii/TypeScript project',\n      (argv) =>\n        argv\n          .positional('PROJECT_ROOT', {\n            type: 'string',\n            desc: 'The root of the project to be compiled',\n            default: '.',\n            normalize: true,\n          })\n          .option('watch', {\n            alias: 'w',\n            type: 'boolean',\n            desc: 'Watch for file changes and recompile automatically',\n          })\n          .option('project-references', {\n            group: OPTION_GROUP.JSII,\n            alias: 'r',\n            type: 'boolean',\n            desc: 'Generate TypeScript project references (also [package.json].jsii.projectReferences)\\nHas no effect if --tsconfig is provided',\n          })\n          .option('fix-peer-dependencies', {\n            type: 'boolean',\n            default: true,\n            desc: 'This option no longer has any effect.',\n            hidden: true,\n          })\n          .options('fail-on-warnings', {\n            group: OPTION_GROUP.JSII,\n            alias: 'Werr',\n            type: 'boolean',\n            desc: 'Treat warnings as errors',\n          })\n          .option('silence-warnings', {\n            group: OPTION_GROUP.JSII,\n            type: 'array',\n            default: [],\n            desc: `List of warnings to silence (warnings: ${warningTypes.join(',')})`,\n          })\n          .option('strip-deprecated', {\n            group: OPTION_GROUP.JSII,\n            type: 'string',\n            desc: '[EXPERIMENTAL] Hides all @deprecated members from the API (implementations remain). If an optional file name is given, only FQNs present in the file will be stripped.',\n          })\n          .option('add-deprecation-warnings', {\n            group: OPTION_GROUP.JSII,\n            type: 'boolean',\n            default: false,\n            desc: '[EXPERIMENTAL] Injects warning statements for all deprecated elements, to be printed at runtime',\n          })\n          .option('generate-tsconfig', {\n            group: OPTION_GROUP.TS,\n            type: 'string',\n            defaultDescription: 'tsconfig.json',\n            desc: 'Name of the typescript configuration file to generate with compiler settings',\n          })\n          .option('tsconfig', {\n            group: OPTION_GROUP.TS,\n            alias: 'c',\n            type: 'string',\n            desc: '[EXPERIMENTAL] Use this typescript configuration file to compile the jsii project.',\n          })\n          .conflicts('tsconfig', ['generate-tsconfig', 'project-references'])\n          .option('validate-tsconfig', {\n            group: OPTION_GROUP.TS,\n            ...choiceWithDesc(\n              ruleSets,\n              '[EXPERIMENTAL] Validate the provided typescript configuration file against a set of rules.',\n            ),\n            defaultDescription: TypeScriptConfigValidationRuleSet.STRICT,\n          })\n          .option('compress-assembly', {\n            group: OPTION_GROUP.JSII,\n            type: 'boolean',\n            default: false,\n            desc: 'Emit a compressed version of the assembly',\n          })\n          .option('verbose', {\n            alias: 'v',\n            type: 'count',\n            desc: 'Increase the verbosity of output',\n            global: true,\n          }),\n      async (argv) => {\n        try {\n          _configureLog4js(argv.verbose);\n\n          if (argv['generate-tsconfig'] != null && argv.tsconfig != null) {\n            throw new utils.JsiiError('Options --generate-tsconfig and --tsconfig are mutually exclusive', true);\n          }\n\n          const projectRoot = path.normalize(path.resolve(process.cwd(), argv.PROJECT_ROOT));\n\n          const { projectInfo, diagnostics: projectInfoDiagnostics } = loadProjectInfo(projectRoot);\n\n          // disable all silenced warnings\n          for (const key of argv['silence-warnings']) {\n            if (!(key in enabledWarnings)) {\n              throw new utils.JsiiError(\n                `Unknown warning type ${key as any}. Must be one of: ${warningTypes.join(', ')}`,\n              );\n            }\n\n            enabledWarnings[key] = false;\n          }\n\n          configureCategories(projectInfo.diagnostics ?? {});\n\n          const typeScriptConfig = argv.tsconfig ?? projectInfo.packageJson.jsii?.tsconfig;\n          const validateTypeScriptConfig =\n            (argv['validate-tsconfig'] as TypeScriptConfigValidationRuleSet) ??\n            projectInfo.packageJson.jsii?.validateTsconfig ??\n            TypeScriptConfigValidationRuleSet.STRICT;\n\n          const compiler = new Compiler({\n            projectInfo,\n            projectReferences: argv['project-references'],\n            failOnWarnings: argv['fail-on-warnings'],\n            stripDeprecated: argv['strip-deprecated'] != null,\n            stripDeprecatedAllowListFile: argv['strip-deprecated'],\n            addDeprecationWarnings: argv['add-deprecation-warnings'],\n            generateTypeScriptConfig: argv['generate-tsconfig'],\n            typeScriptConfig,\n            validateTypeScriptConfig,\n            compressAssembly: argv['compress-assembly'],\n          });\n\n          const emitResult = argv.watch ? await compiler.watch() : compiler.emit();\n\n          const allDiagnostics = [...projectInfoDiagnostics, ...emitResult.diagnostics];\n\n          for (const diagnostic of allDiagnostics) {\n            utils.logDiagnostic(diagnostic, projectRoot);\n          }\n          if (emitResult.emitSkipped) {\n            process.exitCode = 1;\n          }\n        } catch (e: unknown) {\n          if (e instanceof utils.JsiiError) {\n            if (e.showHelp) {\n              console.log();\n              yargs.showHelp();\n              console.log();\n            }\n\n            const LOG = log4js.getLogger(utils.CLI_LOGGER);\n            LOG.error(e.message);\n\n            process.exitCode = -1;\n          } else {\n            throw e;\n          }\n        }\n      },\n    )\n    .help()\n    .version(`${VERSION}, typescript ${tsVersion}`)\n    .parse();\n})().catch((e) => {\n  console.error(`Error: ${e.stack}`);\n  process.exitCode = -1;\n});\n\nfunction _configureLog4js(verbosity: number) {\n  const stderrColor = !!process.stderr.isTTY;\n  const stdoutColor = !!process.stdout.isTTY;\n\n  log4js.addLayout('passThroughNoColor', () => {\n    return (loggingEvent) => utils.stripAnsi(util.format(...loggingEvent.data));\n  });\n\n  log4js.configure({\n    appenders: {\n      console: {\n        type: 'stderr',\n        layout: { type: stderrColor ? 'colored' : 'basic' },\n      },\n\n      [utils.DIAGNOSTICS]: {\n        type: 'stdout',\n        layout: {\n          type: stdoutColor ? 'messagePassThrough' : ('passThroughNoColor' as any),\n        },\n      },\n      [utils.CLI_LOGGER]: {\n        type: 'stderr',\n        layout: {\n          type: 'pattern',\n          pattern: stdoutColor ? '%[[%p]%] %m' : '[%p] %m',\n        },\n      },\n    },\n    categories: {\n      default: { appenders: ['console'], level: _logLevel() },\n      [utils.CLI_LOGGER]: {\n        appenders: [utils.CLI_LOGGER],\n        level: _logLevel(),\n      },\n      // The diagnostics logger must be set to INFO or more verbose, or watch won't show important messages\n      [utils.DIAGNOSTICS]: {\n        appenders: [utils.DIAGNOSTICS],\n        level: _logLevel(Math.max(verbosity, 1)),\n      },\n    },\n  });\n\n  function _logLevel(verbosityLevel = verbosity): keyof log4js.Levels {\n    switch (verbosityLevel) {\n      case 0:\n        return 'WARN';\n      case 1:\n        return 'INFO';\n      case 2:\n        return 'DEBUG';\n      case 3:\n        return 'TRACE';\n      default:\n        return 'ALL';\n    }\n  }\n}\n"]}
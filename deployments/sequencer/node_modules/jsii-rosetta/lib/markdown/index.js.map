{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/markdown/index.ts"],"names":[],"mappings":";;AAcA,kDAEC;AAED,8CAEC;AAED,4CAEC;AAxBD,yDAAqD;AACrD,yCAA+C;AAC/C,6DAAyD;AACzD,iEAAkE;AAElE;;;;;;;GAOG;AAEH,SAAgB,mBAAmB,CAAC,MAAc;IAChD,OAAO,IAAA,4BAAiB,EAAC,MAAM,EAAE,IAAI,sCAAiB,EAAE,CAAC,CAAC;AAC5D,CAAC;AAED,SAAgB,iBAAiB,CAAC,MAAc;IAC9C,OAAO,IAAA,4BAAiB,EAAC,MAAM,EAAE,IAAI,kCAAe,EAAE,CAAC,CAAC;AAC1D,CAAC;AAED,SAAgB,gBAAgB,CAAC,MAAc;IAC7C,OAAO,IAAA,4BAAiB,EAAC,MAAM,EAAE,IAAI,+CAAwB,EAAE,CAAC,CAAC;AACnE,CAAC","sourcesContent":["import { JavaDocRenderer } from './javadoc-renderer';\nimport { transformMarkdown } from './markdown';\nimport { StructureRenderer } from './structure-renderer';\nimport { CSharpXmlCommentRenderer } from './xml-comment-renderer';\n\n/**\n * All the visitors in this module expose CommonMark types in their API\n *\n * We want to keep CommonMark as a private dependency (so we don't have to\n * mark it as peerDependency and can keep its @types in devDependencies),\n * so we re-expose the main functionality needed by pacmak as functions\n * that operate on basic types here.\n */\n\nexport function markDownToStructure(source: string) {\n  return transformMarkdown(source, new StructureRenderer());\n}\n\nexport function markDownToJavaDoc(source: string) {\n  return transformMarkdown(source, new JavaDocRenderer());\n}\n\nexport function markDownToXmlDoc(source: string) {\n  return transformMarkdown(source, new CSharpXmlCommentRenderer());\n}\n"]}
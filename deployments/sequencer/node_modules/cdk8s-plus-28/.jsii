{
  "author": {
    "name": "Amazon Web Services",
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "bundled": {
    "minimatch": "^3.1.2"
  },
  "dependencies": {
    "cdk8s": "^2.68.11",
    "constructs": "^10.3.0"
  },
  "dependencyClosure": {
    "cdk8s": {
      "targets": {
        "dotnet": {
          "namespace": "Org.Cdk8s",
          "packageId": "Org.Cdk8s"
        },
        "go": {
          "moduleName": "github.com/cdk8s-team/cdk8s-core-go"
        },
        "java": {
          "maven": {
            "artifactId": "cdk8s",
            "groupId": "org.cdk8s"
          },
          "package": "org.cdk8s"
        },
        "js": {
          "npm": "cdk8s"
        },
        "python": {
          "distName": "cdk8s",
          "module": "cdk8s"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "cdk8s+ is a software development framework that provides high level abstractions for authoring Kubernetes applications. cdk8s-plus-28 synthesizes Kubernetes manifests for Kubernetes 1.28.0",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/cdk8s-team/cdk8s-plus.git",
  "jsiiVersion": "1.103.1 (build bef2dea)",
  "keywords": [
    "cdk",
    "configuration",
    "constructs",
    "containers",
    "k8s",
    "kubernetes",
    "microservices"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "pacmak": {
        "hasDefaultInterfaces": true
      }
    },
    "tscRootDir": "src"
  },
  "name": "cdk8s-plus-28",
  "readme": {
    "markdown": "# cdk8s+ (cdk8s-plus)\n\n### High level constructs for Kubernetes\n\n![Stability:Stable](https://img.shields.io/badge/stability-stable-success)\n\n| k8s version | npm (JS/TS)                                         | PyPI (Python)                                   | Maven (Java)                                                      | Go                                                              |\n| ----------- | --------------------------------------------------- | ----------------------------------------------- | ----------------------------------------------------------------- | --------------------------------------------------------------- |\n| 1.26.0      | [Link](https://www.npmjs.com/package/cdk8s-plus-26) | [Link](https://pypi.org/project/cdk8s-plus-26/) | [Link](https://search.maven.org/artifact/org.cdk8s/cdk8s-plus-26) | [Link](https://github.com/cdk8s-team/cdk8s-plus-go/tree/k8s.26) |\n| 1.27.0      | [Link](https://www.npmjs.com/package/cdk8s-plus-27) | [Link](https://pypi.org/project/cdk8s-plus-27/) | [Link](https://search.maven.org/artifact/org.cdk8s/cdk8s-plus-27) | [Link](https://github.com/cdk8s-team/cdk8s-plus-go/tree/k8s.27) |\n| 1.28.0      | [Link](https://www.npmjs.com/package/cdk8s-plus-28) | [Link](https://pypi.org/project/cdk8s-plus-28/) | [Link](https://search.maven.org/artifact/org.cdk8s/cdk8s-plus-28) | [Link](https://github.com/cdk8s-team/cdk8s-plus-go/tree/k8s.28) |\n\n\n**cdk8s+** is a software development framework that provides high level\nabstractions for authoring Kubernetes applications. Built on top of the auto\ngenerated building blocks provided by [cdk8s](../cdk8s), this library includes a\nhand crafted *construct* for each native kubernetes object, exposing richer\nAPI's with reduced complexity.\n\n## :books: Documentation\n\nSee [cdk8s.io](https://cdk8s.io/docs/latest/plus).\n\n## :raised_hand: Contributing\n\nIf you'd like to add a new feature or fix a bug, please visit\n[CONTRIBUTING.md](CONTRIBUTING.md)!\n\n## :balance_scale: License\n\nThis project is distributed under the [Apache License, Version 2.0](./LICENSE).\n\nThis module is part of the [cdk8s project](https://github.com/cdk8s-team).\n"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/cdk8s-team/cdk8s-plus.git"
  },
  "schema": "jsii/0.10.0",
  "submodules": {
    "cdk8s-plus-28.k8s": {
      "locationInModule": {
        "filename": "src/index.ts",
        "line": 27
      },
      "symbolId": "src/imports/k8s:"
    }
  },
  "targets": {
    "dotnet": {
      "namespace": "Org.Cdk8s.Plus28",
      "packageId": "Org.Cdk8s.Plus28"
    },
    "go": {
      "moduleName": "github.com/cdk8s-team/cdk8s-plus-go"
    },
    "java": {
      "maven": {
        "artifactId": "cdk8s-plus-28",
        "groupId": "org.cdk8s"
      },
      "package": "org.cdk8s.plus28"
    },
    "js": {
      "npm": "cdk8s-plus-28"
    },
    "python": {
      "distName": "cdk8s-plus-28",
      "module": "cdk8s_plus_28"
    }
  },
  "types": {
    "cdk8s-plus-28.AbstractPod": {
      "abstract": true,
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s-plus-28.Resource",
      "docs": {
        "stability": "stable"
      },
      "fqn": "cdk8s-plus-28.AbstractPod",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/pod.ts",
          "line": 34
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.AbstractPodProps"
            }
          }
        ]
      },
      "interfaces": [
        "cdk8s-plus-28.IPodSelector",
        "cdk8s-plus-28.INetworkPolicyPeer",
        "cdk8s-plus-28.ISubject"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/pod.ts",
        "line": 14
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 112
          },
          "name": "addContainer",
          "parameters": [
            {
              "name": "cont",
              "type": {
                "fqn": "cdk8s-plus-28.ContainerProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.Container"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 153
          },
          "name": "addHostAlias",
          "parameters": [
            {
              "name": "hostAlias",
              "type": {
                "fqn": "cdk8s-plus-28.HostAlias"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 122
          },
          "name": "addInitContainer",
          "parameters": [
            {
              "name": "cont",
              "type": {
                "fqn": "cdk8s-plus-28.ContainerProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.Container"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 157
          },
          "name": "addVolume",
          "parameters": [
            {
              "name": "vol",
              "type": {
                "fqn": "cdk8s-plus-28.Volume"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 118
          },
          "name": "attachContainer",
          "parameters": [
            {
              "name": "cont",
              "type": {
                "fqn": "cdk8s-plus-28.Container"
              }
            }
          ]
        },
        {
          "docs": {
            "see": "INetworkPolicyPeer.toNetworkPolicyPeerConfig()",
            "stability": "stable",
            "summary": "Return the configuration of this peer."
          },
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 101
          },
          "name": "toNetworkPolicyPeerConfig",
          "overrides": "cdk8s-plus-28.INetworkPolicyPeer",
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.NetworkPolicyPeerConfig"
            }
          }
        },
        {
          "docs": {
            "see": "INetworkPolicyPeer.toPodSelector()",
            "stability": "stable",
            "summary": "Convert the peer into a pod selector, if possible."
          },
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 108
          },
          "name": "toPodSelector",
          "overrides": "cdk8s-plus-28.INetworkPolicyPeer",
          "returns": {
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.IPodSelector"
            }
          }
        },
        {
          "docs": {
            "see": "IPodSelector.toPodSelectorConfig()",
            "stability": "stable",
            "summary": "Return the configuration of this selector."
          },
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 84
          },
          "name": "toPodSelectorConfig",
          "overrides": "cdk8s-plus-28.IPodSelector",
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.PodSelectorConfig"
            }
          }
        },
        {
          "docs": {
            "see": "ISubect.toSubjectConfiguration()",
            "stability": "stable",
            "summary": "Return the subject configuration."
          },
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 168
          },
          "name": "toSubjectConfiguration",
          "overrides": "cdk8s-plus-28.ISubject",
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.SubjectConfiguration"
            }
          }
        }
      ],
      "name": "AbstractPod",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 21
          },
          "name": "automountServiceAccountToken",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 65
          },
          "name": "containers",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.Container"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 19
          },
          "name": "dns",
          "type": {
            "fqn": "cdk8s-plus-28.PodDns"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 77
          },
          "name": "hostAliases",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.HostAlias"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 69
          },
          "name": "initContainers",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.Container"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 25
          },
          "name": "isolate",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 32
          },
          "name": "podMetadata",
          "type": {
            "fqn": "cdk8s.ApiObjectMetadataDefinition"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 18
          },
          "name": "securityContext",
          "type": {
            "fqn": "cdk8s-plus-28.PodSecurityContext"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 73
          },
          "name": "volumes",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.Volume"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 20
          },
          "name": "dockerRegistryAuth",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.ISecret"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 22
          },
          "name": "hostNetwork",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 16
          },
          "name": "restartPolicy",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.RestartPolicy"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 17
          },
          "name": "serviceAccount",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.IServiceAccount"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 23
          },
          "name": "terminationGracePeriod",
          "optional": true,
          "type": {
            "fqn": "cdk8s.Duration"
          }
        }
      ],
      "symbolId": "src/pod:AbstractPod"
    },
    "cdk8s-plus-28.AbstractPodProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for `AbstractPod`."
      },
      "fqn": "cdk8s-plus-28.AbstractPodProps",
      "interfaces": [
        "cdk8s-plus-28.ResourceProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/pod.ts",
        "line": 331
      },
      "name": "AbstractPodProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "see": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
            "stability": "stable",
            "summary": "Indicates whether a service account token should be automatically mounted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 438
          },
          "name": "automountServiceAccountToken",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No containers. Note that a pod spec must include at least one container.",
            "remarks": "Containers cannot currently be\nadded or removed. There must be at least one container in a Pod.\n\nYou can add additionnal containers using `podSpec.addContainer()`",
            "stability": "stable",
            "summary": "List of containers belonging to the pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 341
          },
          "name": "containers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.ContainerProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": " policy: DnsPolicy.CLUSTER_FIRST\n hostnameAsFQDN: false",
            "see": "https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/",
            "stability": "stable",
            "summary": "DNS settings for the pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 423
          },
          "name": "dns",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.PodDnsProps"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No auth. Images are assumed to be publicly available.",
            "stability": "stable",
            "summary": "A secret containing docker credentials for authenticating to a registry."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 430
          },
          "name": "dockerRegistryAuth",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.ISecret"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.HostAlias"
            },
            "stability": "stable",
            "summary": "HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's hosts file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 411
          },
          "name": "hostAliases",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.HostAlias"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Host network for the pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 453
          },
          "name": "hostNetwork",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No init containers.",
            "remarks": "Init containers are executed in order prior to containers being started.\nIf any init container fails, the pod is considered to have failed and is handled according to its restartPolicy.\nThe name for an init container or normal container must be unique among all containers.\nInit containers may not have Lifecycle actions, Readiness probes, Liveness probes, or Startup probes.\nThe resourceRequirements of an init container are taken into account during scheduling by finding the highest request/limit\nfor each resource type, and then using the max of of that value or the sum of the normal containers.\nLimits are applied to init containers in a similar fashion.\n\nInit containers cannot currently be added ,removed or updated.",
            "see": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
            "stability": "stable",
            "summary": "List of initialization containers belonging to the pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 358
          },
          "name": "initContainers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.ContainerProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "This will prevent any ingress or egress connections to / from this pod.\nYou can however allow explicit connections post instantiation by using the `.connections` property.",
            "stability": "stable",
            "summary": "Isolates the pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 446
          },
          "name": "isolate",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "RestartPolicy.ALWAYS",
            "see": "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy",
            "stability": "stable",
            "summary": "Restart policy for all containers within the pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 378
          },
          "name": "restartPolicy",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.RestartPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "  fsGroupChangePolicy: FsGroupChangePolicy.FsGroupChangePolicy.ALWAYS\n  ensureNonRoot: true",
            "stability": "stable",
            "summary": "SecurityContext holds pod-level security attributes and common container settings."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 404
          },
          "name": "securityContext",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.PodSecurityContextProps"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No service account.",
            "remarks": "When you (a human) access the cluster (for example, using kubectl), you are\nauthenticated by the apiserver as a particular User Account (currently this\nis usually admin, unless your cluster administrator has customized your\ncluster). Processes in containers inside pods can also contact the\napiserver. When they do, they are authenticated as a particular Service\nAccount (for example, default).",
            "see": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
            "stability": "stable",
            "summary": "A service account provides an identity for processes that run in a Pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 394
          },
          "name": "serviceAccount",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.IServiceAccount"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.seconds(30)",
            "stability": "stable",
            "summary": "Grace period until the pod is terminated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 460
          },
          "name": "terminationGracePeriod",
          "optional": true,
          "type": {
            "fqn": "cdk8s.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No volumes.",
            "remarks": "You can also add volumes later using `podSpec.addVolume()`",
            "see": "https://kubernetes.io/docs/concepts/storage/volumes",
            "stability": "stable",
            "summary": "List of volumes that can be mounted by containers belonging to the pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 369
          },
          "name": "volumes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.Volume"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/pod:AbstractPodProps"
    },
    "cdk8s-plus-28.AddDeploymentOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options to add a deployment to a service."
      },
      "fqn": "cdk8s-plus-28.AddDeploymentOptions",
      "interfaces": [
        "cdk8s-plus-28.ServiceBindOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/service.ts",
        "line": 171
      },
      "name": "AddDeploymentOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Copied from the first container of the deployment.",
            "stability": "stable",
            "summary": "The port number the service will bind to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 177
          },
          "name": "port",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/service:AddDeploymentOptions"
    },
    "cdk8s-plus-28.AddDirectoryOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for `configmap.addDirectory()`."
      },
      "fqn": "cdk8s-plus-28.AddDirectoryOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/config-map.ts",
        "line": 248
      },
      "name": "AddDirectoryOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- include all files",
            "stability": "stable",
            "summary": "Glob patterns to exclude when adding files."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/config-map.ts",
            "line": 259
          },
          "name": "exclude",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"\"",
            "stability": "stable",
            "summary": "A prefix to add to all keys in the config map."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/config-map.ts",
            "line": 253
          },
          "name": "keyPrefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/config-map:AddDirectoryOptions"
    },
    "cdk8s-plus-28.ApiResource": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Represents information about an API resource type."
      },
      "fqn": "cdk8s-plus-28.ApiResource",
      "interfaces": [
        "cdk8s-plus-28.IApiResource",
        "cdk8s-plus-28.IApiEndpoint"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/api-resource.generated.ts",
        "line": 64
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "API resource information for a custom resource type."
          },
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 500
          },
          "name": "custom",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "cdk8s-plus-28.ApiResourceOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.ApiResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the IApiResource this object represents."
          },
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 516
          },
          "name": "asApiResource",
          "overrides": "cdk8s-plus-28.IApiEndpoint",
          "returns": {
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.IApiResource"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the non resource url this object represents."
          },
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 520
          },
          "name": "asNonApiResource",
          "overrides": "cdk8s-plus-28.IApiEndpoint",
          "returns": {
            "optional": true,
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "ApiResource",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for APIService."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 228
          },
          "name": "API_SERVICES",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for Binding."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 68
          },
          "name": "BINDINGS",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for CertificateSigningRequest."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 340
          },
          "name": "CERTIFICATE_SIGNING_REQUESTS",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for ClusterRoleBinding."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 420
          },
          "name": "CLUSTER_ROLE_BINDINGS",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for ClusterRole."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 428
          },
          "name": "CLUSTER_ROLES",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for ComponentStatus."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 76
          },
          "name": "COMPONENT_STATUSES",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for ConfigMap."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 84
          },
          "name": "CONFIG_MAPS",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for ControllerRevision."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 236
          },
          "name": "CONTROLLER_REVISIONS",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for CronJob."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 324
          },
          "name": "CRON_JOBS",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for CSIDriver."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 460
          },
          "name": "CSI_DRIVERS",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for CSINode."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 468
          },
          "name": "CSI_NODES",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for CSIStorageCapacity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 476
          },
          "name": "CSI_STORAGE_CAPACITIES",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for CustomResourceDefinition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 220
          },
          "name": "CUSTOM_RESOURCE_DEFINITIONS",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for DaemonSet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 244
          },
          "name": "DAEMON_SETS",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for Deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 252
          },
          "name": "DEPLOYMENTS",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for EndpointSlice."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 356
          },
          "name": "ENDPOINT_SLICES",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for Endpoints."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 92
          },
          "name": "ENDPOINTS",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for Event."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 100
          },
          "name": "EVENTS",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for FlowSchema."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 364
          },
          "name": "FLOW_SCHEMAS",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for HorizontalPodAutoscaler."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 316
          },
          "name": "HORIZONTAL_POD_AUTOSCALERS",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for IngressClass."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 380
          },
          "name": "INGRESS_CLASSES",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for Ingress."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 388
          },
          "name": "INGRESSES",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for Job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 332
          },
          "name": "JOBS",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for Lease."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 348
          },
          "name": "LEASES",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for LimitRange."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 108
          },
          "name": "LIMIT_RANGES",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for LocalSubjectAccessReview."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 284
          },
          "name": "LOCAL_SUBJECT_ACCESS_REVIEWS",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for MutatingWebhookConfiguration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 204
          },
          "name": "MUTATING_WEBHOOK_CONFIGURATIONS",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for Namespace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 116
          },
          "name": "NAMESPACES",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for NetworkPolicy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 396
          },
          "name": "NETWORK_POLICIES",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for Node."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 124
          },
          "name": "NODES",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for PersistentVolumeClaim."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 132
          },
          "name": "PERSISTENT_VOLUME_CLAIMS",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for PersistentVolume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 140
          },
          "name": "PERSISTENT_VOLUMES",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for PodDisruptionBudget."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 412
          },
          "name": "POD_DISRUPTION_BUDGETS",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for PodTemplate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 156
          },
          "name": "POD_TEMPLATES",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for Pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 148
          },
          "name": "PODS",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for PriorityClass."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 452
          },
          "name": "PRIORITY_CLASSES",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for PriorityLevelConfiguration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 372
          },
          "name": "PRIORITY_LEVEL_CONFIGURATIONS",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for ReplicaSet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 260
          },
          "name": "REPLICA_SETS",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for ReplicationController."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 164
          },
          "name": "REPLICATION_CONTROLLERS",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for ResourceQuota."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 172
          },
          "name": "RESOURCE_QUOTAS",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for RoleBinding."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 436
          },
          "name": "ROLE_BINDINGS",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for Role."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 444
          },
          "name": "ROLES",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for RuntimeClass."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 404
          },
          "name": "RUNTIME_CLASSES",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for Secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 180
          },
          "name": "SECRETS",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for SelfSubjectAccessReview."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 292
          },
          "name": "SELF_SUBJECT_ACCESS_REVIEWS",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for SelfSubjectRulesReview."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 300
          },
          "name": "SELF_SUBJECT_RULES_REVIEWS",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for ServiceAccount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 188
          },
          "name": "SERVICE_ACCOUNTS",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for Service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 196
          },
          "name": "SERVICES",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for StatefulSet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 268
          },
          "name": "STATEFUL_SETS",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for StorageClass."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 484
          },
          "name": "STORAGE_CLASSES",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for SubjectAccessReview."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 308
          },
          "name": "SUBJECT_ACCESS_REVIEWS",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for TokenReview."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 276
          },
          "name": "TOKEN_REVIEWS",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for ValidatingWebhookConfiguration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 212
          },
          "name": "VALIDATING_WEBHOOK_CONFIGURATIONS",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "API resource information for VolumeAttachment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 492
          },
          "name": "VOLUME_ATTACHMENTS",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.ApiResource"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The group portion of the API version (e.g. `authorization.k8s.io`)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 507
          },
          "name": "apiGroup",
          "overrides": "cdk8s-plus-28.IApiResource",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "example": "- \"pods\" or \"pods/log\"",
            "see": "https://kubernetes.io/docs/reference/access-authn-authz/rbac/#referring-to-resources",
            "stability": "stable",
            "summary": "The name of the resource type as it appears in the relevant API endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 514
          },
          "name": "resourceType",
          "overrides": "cdk8s-plus-28.IApiResource",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/api-resource.generated:ApiResource"
    },
    "cdk8s-plus-28.ApiResourceOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for `ApiResource`."
      },
      "fqn": "cdk8s-plus-28.ApiResourceOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/api-resource.generated.ts",
        "line": 47
      },
      "name": "ApiResourceOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The group portion of the API version (e.g. `authorization.k8s.io`)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 51
          },
          "name": "apiGroup",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "example": "- \"pods\" or \"pods/log\"",
            "see": "https://kubernetes.io/docs/reference/access-authn-authz/rbac/#referring-to-resources",
            "stability": "stable",
            "summary": "The name of the resource type as it appears in the relevant API endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 58
          },
          "name": "resourceType",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/api-resource.generated:ApiResourceOptions"
    },
    "cdk8s-plus-28.AwsElasticBlockStorePersistentVolume": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s-plus-28.PersistentVolume",
      "docs": {
        "see": "https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
        "stability": "stable",
        "summary": "Represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod."
      },
      "fqn": "cdk8s-plus-28.AwsElasticBlockStorePersistentVolume",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/pv.ts",
          "line": 369
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.AwsElasticBlockStorePersistentVolumeProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/pv.ts",
        "line": 347
      },
      "name": "AwsElasticBlockStorePersistentVolume",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "File system type of this volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 362
          },
          "name": "fsType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Whether or not it is mounted as a read-only volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 357
          },
          "name": "readOnly",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Volume id of this volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 352
          },
          "name": "volumeId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Partition of this volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 367
          },
          "name": "partition",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/pv:AwsElasticBlockStorePersistentVolume"
    },
    "cdk8s-plus-28.AwsElasticBlockStorePersistentVolumeProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for `AwsElasticBlockStorePersistentVolume`."
      },
      "fqn": "cdk8s-plus-28.AwsElasticBlockStorePersistentVolumeProps",
      "interfaces": [
        "cdk8s-plus-28.PersistentVolumeProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/pv.ts",
        "line": 304
      },
      "name": "AwsElasticBlockStorePersistentVolumeProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
            "see": "https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
            "stability": "stable",
            "summary": "Unique ID of the persistent disk resource in AWS (Amazon EBS volume)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 311
          },
          "name": "volumeId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'ext4'",
            "remarks": "Tip: Ensure that the filesystem type is supported by the host operating system.",
            "see": "https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
            "stability": "stable",
            "summary": "Filesystem type of the volume that you want to mount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 320
          },
          "name": "fsType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No partition.",
            "remarks": "If omitted, the default is to mount by volume name.\nExamples: For volume /dev/sda1, you specify the partition as \"1\".\nSimilarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).",
            "stability": "stable",
            "summary": "The partition in the volume that you want to mount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 329
          },
          "name": "partition",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "see": "https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
            "stability": "stable",
            "summary": "Specify \"true\" to force and set the ReadOnly property in VolumeMounts to \"true\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 337
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/pv:AwsElasticBlockStorePersistentVolumeProps"
    },
    "cdk8s-plus-28.AwsElasticBlockStoreVolumeOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options of `Volume.fromAwsElasticBlockStore`."
      },
      "fqn": "cdk8s-plus-28.AwsElasticBlockStoreVolumeOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/volume.ts",
        "line": 381
      },
      "name": "AwsElasticBlockStoreVolumeOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "'ext4'",
            "remarks": "Tip: Ensure that the filesystem type is supported by the host operating system.",
            "see": "https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
            "stability": "stable",
            "summary": "Filesystem type of the volume that you want to mount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 396
          },
          "name": "fsType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- auto-generated",
            "stability": "stable",
            "summary": "The volume name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 387
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No partition.",
            "remarks": "If omitted, the default is to mount by volume name.\nExamples: For volume /dev/sda1, you specify the partition as \"1\".\nSimilarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).",
            "stability": "stable",
            "summary": "The partition in the volume that you want to mount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 405
          },
          "name": "partition",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "see": "https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
            "stability": "stable",
            "summary": "Specify \"true\" to force and set the ReadOnly property in VolumeMounts to \"true\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 413
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/volume:AwsElasticBlockStoreVolumeOptions"
    },
    "cdk8s-plus-28.AzureDiskPersistentVolume": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s-plus-28.PersistentVolume",
      "docs": {
        "stability": "stable",
        "summary": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod."
      },
      "fqn": "cdk8s-plus-28.AzureDiskPersistentVolume",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/pv.ts",
          "line": 475
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.AzureDiskPersistentVolumeProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/pv.ts",
        "line": 443
      },
      "name": "AzureDiskPersistentVolume",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Azure kind of this volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 473
          },
          "name": "azureKind",
          "type": {
            "fqn": "cdk8s-plus-28.AzureDiskPersistentVolumeKind"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Caching mode of this volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 463
          },
          "name": "cachingMode",
          "type": {
            "fqn": "cdk8s-plus-28.AzureDiskPersistentVolumeCachingMode"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Disk name of this volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 448
          },
          "name": "diskName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Disk URI of this volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 453
          },
          "name": "diskUri",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "File system type of this volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 468
          },
          "name": "fsType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Whether or not it is mounted as a read-only volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 458
          },
          "name": "readOnly",
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/pv:AzureDiskPersistentVolume"
    },
    "cdk8s-plus-28.AzureDiskPersistentVolumeCachingMode": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Azure disk caching modes."
      },
      "fqn": "cdk8s-plus-28.AzureDiskPersistentVolumeCachingMode",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/volume.ts",
        "line": 612
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "None."
          },
          "name": "NONE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "ReadOnly."
          },
          "name": "READ_ONLY"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "ReadWrite."
          },
          "name": "READ_WRITE"
        }
      ],
      "name": "AzureDiskPersistentVolumeCachingMode",
      "symbolId": "src/volume:AzureDiskPersistentVolumeCachingMode"
    },
    "cdk8s-plus-28.AzureDiskPersistentVolumeKind": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Azure Disk kinds."
      },
      "fqn": "cdk8s-plus-28.AzureDiskPersistentVolumeKind",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/volume.ts",
        "line": 591
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Multiple blob disks per storage account."
          },
          "name": "SHARED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Single blob disk per storage account."
          },
          "name": "DEDICATED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Azure managed data disk."
          },
          "name": "MANAGED"
        }
      ],
      "name": "AzureDiskPersistentVolumeKind",
      "symbolId": "src/volume:AzureDiskPersistentVolumeKind"
    },
    "cdk8s-plus-28.AzureDiskPersistentVolumeProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for `AzureDiskPersistentVolume`."
      },
      "fqn": "cdk8s-plus-28.AzureDiskPersistentVolumeProps",
      "interfaces": [
        "cdk8s-plus-28.PersistentVolumeProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/pv.ts",
        "line": 398
      },
      "name": "AzureDiskPersistentVolumeProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Name of the data disk in the blob storage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 403
          },
          "name": "diskName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The URI the data disk in the blob storage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 408
          },
          "name": "diskUri",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- AzureDiskPersistentVolumeCachingMode.NONE.",
            "stability": "stable",
            "summary": "Host Caching mode."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 415
          },
          "name": "cachingMode",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.AzureDiskPersistentVolumeCachingMode"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'ext4'",
            "remarks": "Must be a filesystem type supported by the host operating system.",
            "stability": "stable",
            "summary": "Filesystem type to mount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 422
          },
          "name": "fsType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "AzureDiskPersistentVolumeKind.SHARED",
            "stability": "stable",
            "summary": "Kind of disk."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 429
          },
          "name": "kind",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.AzureDiskPersistentVolumeKind"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Force the ReadOnly setting in VolumeMounts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 436
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/pv:AzureDiskPersistentVolumeProps"
    },
    "cdk8s-plus-28.AzureDiskVolumeOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options of `Volume.fromAzureDisk`."
      },
      "fqn": "cdk8s-plus-28.AzureDiskVolumeOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/volume.ts",
        "line": 341
      },
      "name": "AzureDiskVolumeOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- AzureDiskPersistentVolumeCachingMode.NONE.",
            "stability": "stable",
            "summary": "Host Caching mode."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 354
          },
          "name": "cachingMode",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.AzureDiskPersistentVolumeCachingMode"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'ext4'",
            "remarks": "Must be a filesystem type supported by the host operating system.",
            "stability": "stable",
            "summary": "Filesystem type to mount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 361
          },
          "name": "fsType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "AzureDiskPersistentVolumeKind.SHARED",
            "stability": "stable",
            "summary": "Kind of disk."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 368
          },
          "name": "kind",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.AzureDiskPersistentVolumeKind"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- auto-generated",
            "stability": "stable",
            "summary": "The volume name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 347
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Force the ReadOnly setting in VolumeMounts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 375
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/volume:AzureDiskVolumeOptions"
    },
    "cdk8s-plus-28.BasicAuthSecret": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s-plus-28.Secret",
      "docs": {
        "see": "https://kubernetes.io/docs/concepts/configuration/secret/#basic-authentication-secret",
        "stability": "stable",
        "summary": "Create a secret for basic authentication."
      },
      "fqn": "cdk8s-plus-28.BasicAuthSecret",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/secret.ts",
          "line": 194
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.BasicAuthSecretProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/secret.ts",
        "line": 193
      },
      "name": "BasicAuthSecret",
      "symbolId": "src/secret:BasicAuthSecret"
    },
    "cdk8s-plus-28.BasicAuthSecretProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for `BasicAuthSecret`."
      },
      "fqn": "cdk8s-plus-28.BasicAuthSecretProps",
      "interfaces": [
        "cdk8s-plus-28.CommonSecretProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/secret.ts",
        "line": 176
      },
      "name": "BasicAuthSecretProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The password or token for authentication."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/secret.ts",
            "line": 185
          },
          "name": "password",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The user name for authentication."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/secret.ts",
            "line": 180
          },
          "name": "username",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/secret:BasicAuthSecretProps"
    },
    "cdk8s-plus-28.Capability": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Capability - complete list of POSIX capabilities."
      },
      "fqn": "cdk8s-plus-28.Capability",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 13
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "ALL."
          },
          "name": "ALL"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CAP_AUDIT_CONTROL."
          },
          "name": "AUDIT_CONTROL"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CAP_AUDIT_READ."
          },
          "name": "AUDIT_READ"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CAP_AUDIT_WRITE."
          },
          "name": "AUDIT_WRITE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CAP_BLOCK_SUSPEND."
          },
          "name": "BLOCK_SUSPEND"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CAP_BPF."
          },
          "name": "BPF"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CAP_CHECKPOINT_RESTORE."
          },
          "name": "CHECKPOINT_RESTORE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CAP_CHOWN."
          },
          "name": "CHOWN"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CAP_DAC_OVERRIDE."
          },
          "name": "DAC_OVERRIDE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CAP_DAC_READ_SEARCH."
          },
          "name": "DAC_READ_SEARCH"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CAP_FOWNER."
          },
          "name": "FOWNER"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CAP_FSETID."
          },
          "name": "FSETID"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CAP_IPC_LOCK."
          },
          "name": "IPC_LOCK"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CAP_IPC_OWNER."
          },
          "name": "IPC_OWNER"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CAP_KILL."
          },
          "name": "KILL"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CAP_LEASE."
          },
          "name": "LEASE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CAP_LINUX_IMMUTABLE."
          },
          "name": "LINUX_IMMUTABLE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CAP_MAC_ADMIN."
          },
          "name": "MAC_ADMIN"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CAP_MAC_OVERRIDE."
          },
          "name": "MAC_OVERRIDE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CAP_MKNOD."
          },
          "name": "MKNOD"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CAP_NET_ADMIN."
          },
          "name": "NET_ADMIN"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CAP_NET_BIND_SERVICE."
          },
          "name": "NET_BIND_SERVICE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CAP_NET_BROADCAST."
          },
          "name": "NET_BROADCAST"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CAP_NET_RAW."
          },
          "name": "NET_RAW"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CAP_PERFMON."
          },
          "name": "PERFMON"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CAP_SETGID."
          },
          "name": "SETGID"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CAP_SETFCAP."
          },
          "name": "SETFCAP"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CAP_SETPCAP."
          },
          "name": "SETPCAP"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CAP_SETUID."
          },
          "name": "SETUID"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CAP_SYS_ADMIN."
          },
          "name": "SYS_ADMIN"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CAP_SYS_BOOT."
          },
          "name": "SYS_BOOT"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CAP_SYS_CHROOT."
          },
          "name": "SYS_CHROOT"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CAP_SYS_MODULE."
          },
          "name": "SYS_MODULE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CAP_SYS_NICE."
          },
          "name": "SYS_NICE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CAP_SYS_PACCT."
          },
          "name": "SYS_PACCT"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CAP_SYS_PTRACE."
          },
          "name": "SYS_PTRACE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CAP_SYS_RAWIO."
          },
          "name": "SYS_RAWIO"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CAP_SYS_RESOURCE."
          },
          "name": "SYS_RESOURCE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CAP_SYS_TIME."
          },
          "name": "SYS_TIME"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CAP_SYS_TTY_CONFIG."
          },
          "name": "SYS_TTY_CONFIG"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CAP_SYSLOG."
          },
          "name": "SYSLOG"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CAP_WAKE_ALARM."
          },
          "name": "WAKE_ALARM"
        }
      ],
      "name": "Capability",
      "symbolId": "src/container:Capability"
    },
    "cdk8s-plus-28.ClusterRole": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s-plus-28.Resource",
      "docs": {
        "stability": "stable",
        "summary": "ClusterRole is a cluster level, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding or ClusterRoleBinding."
      },
      "fqn": "cdk8s-plus-28.ClusterRole",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/role.ts",
          "line": 346
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.ClusterRoleProps"
            }
          }
        ]
      },
      "interfaces": [
        "cdk8s-plus-28.IClusterRole",
        "cdk8s-plus-28.IRole"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/role.ts",
        "line": 327
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Imports a role from the cluster as a reference."
          },
          "locationInModule": {
            "filename": "src/role.ts",
            "line": 332
          },
          "name": "fromClusterRoleName",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.IClusterRole"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Aggregate rules from roles matching this label selector."
          },
          "locationInModule": {
            "filename": "src/role.ts",
            "line": 468
          },
          "name": "aggregate",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "see": "https://kubernetes.io/docs/reference/access-authn-authz/authorization/#determine-the-request-verb",
            "stability": "stable",
            "summary": "Add permission to perform a list of HTTP verbs on a collection of resources."
          },
          "locationInModule": {
            "filename": "src/role.ts",
            "line": 379
          },
          "name": "allow",
          "parameters": [
            {
              "name": "verbs",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            },
            {
              "docs": {
                "summary": "The endpoints(s) to apply to."
              },
              "name": "endpoints",
              "type": {
                "fqn": "cdk8s-plus-28.IApiEndpoint"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add \"create\" permission for the resources."
          },
          "locationInModule": {
            "filename": "src/role.ts",
            "line": 387
          },
          "name": "allowCreate",
          "parameters": [
            {
              "docs": {
                "summary": "The resource(s) to apply to."
              },
              "name": "endpoints",
              "type": {
                "fqn": "cdk8s-plus-28.IApiEndpoint"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add \"delete\" permission for the resources."
          },
          "locationInModule": {
            "filename": "src/role.ts",
            "line": 435
          },
          "name": "allowDelete",
          "parameters": [
            {
              "docs": {
                "summary": "The resource(s) to apply to."
              },
              "name": "endpoints",
              "type": {
                "fqn": "cdk8s-plus-28.IApiEndpoint"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add \"deletecollection\" permission for the resources."
          },
          "locationInModule": {
            "filename": "src/role.ts",
            "line": 443
          },
          "name": "allowDeleteCollection",
          "parameters": [
            {
              "docs": {
                "summary": "The resource(s) to apply to."
              },
              "name": "endpoints",
              "type": {
                "fqn": "cdk8s-plus-28.IApiEndpoint"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add \"get\" permission for the resources."
          },
          "locationInModule": {
            "filename": "src/role.ts",
            "line": 395
          },
          "name": "allowGet",
          "parameters": [
            {
              "docs": {
                "summary": "The resource(s) to apply to."
              },
              "name": "endpoints",
              "type": {
                "fqn": "cdk8s-plus-28.IApiEndpoint"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add \"list\" permission for the resources."
          },
          "locationInModule": {
            "filename": "src/role.ts",
            "line": 403
          },
          "name": "allowList",
          "parameters": [
            {
              "docs": {
                "summary": "The resource(s) to apply to."
              },
              "name": "endpoints",
              "type": {
                "fqn": "cdk8s-plus-28.IApiEndpoint"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add \"patch\" permission for the resources."
          },
          "locationInModule": {
            "filename": "src/role.ts",
            "line": 427
          },
          "name": "allowPatch",
          "parameters": [
            {
              "docs": {
                "summary": "The resource(s) to apply to."
              },
              "name": "endpoints",
              "type": {
                "fqn": "cdk8s-plus-28.IApiEndpoint"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add \"get\", \"list\", and \"watch\" permissions for the resources."
          },
          "locationInModule": {
            "filename": "src/role.ts",
            "line": 451
          },
          "name": "allowRead",
          "parameters": [
            {
              "docs": {
                "summary": "The resource(s) to apply to."
              },
              "name": "endpoints",
              "type": {
                "fqn": "cdk8s-plus-28.IApiEndpoint"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add \"get\", \"list\", \"watch\", \"create\", \"update\", \"patch\", \"delete\", and \"deletecollection\" permissions for the resources."
          },
          "locationInModule": {
            "filename": "src/role.ts",
            "line": 461
          },
          "name": "allowReadWrite",
          "parameters": [
            {
              "docs": {
                "summary": "The resource(s) to apply to."
              },
              "name": "endpoints",
              "type": {
                "fqn": "cdk8s-plus-28.IApiEndpoint"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add \"update\" permission for the resources."
          },
          "locationInModule": {
            "filename": "src/role.ts",
            "line": 419
          },
          "name": "allowUpdate",
          "parameters": [
            {
              "docs": {
                "summary": "The resource(s) to apply to."
              },
              "name": "endpoints",
              "type": {
                "fqn": "cdk8s-plus-28.IApiEndpoint"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add \"watch\" permission for the resources."
          },
          "locationInModule": {
            "filename": "src/role.ts",
            "line": 411
          },
          "name": "allowWatch",
          "parameters": [
            {
              "docs": {
                "summary": "The resource(s) to apply to."
              },
              "name": "endpoints",
              "type": {
                "fqn": "cdk8s-plus-28.IApiEndpoint"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a ClusterRoleBinding that binds the permissions in this ClusterRole to a list of subjects, without namespace restrictions."
          },
          "locationInModule": {
            "filename": "src/role.ts",
            "line": 506
          },
          "name": "bind",
          "parameters": [
            {
              "docs": {
                "summary": "a list of subjects to bind to."
              },
              "name": "subjects",
              "type": {
                "fqn": "cdk8s-plus-28.ISubject"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.ClusterRoleBinding"
            }
          },
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a RoleBinding that binds the permissions in this ClusterRole to a list of subjects, that will only apply to the given namespace."
          },
          "locationInModule": {
            "filename": "src/role.ts",
            "line": 490
          },
          "name": "bindInNamespace",
          "parameters": [
            {
              "docs": {
                "summary": "the namespace to limit permissions to."
              },
              "name": "namespace",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "a list of subjects to bind to."
              },
              "name": "subjects",
              "type": {
                "fqn": "cdk8s-plus-28.ISubject"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.RoleBinding"
            }
          },
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Combines the rules of the argument ClusterRole into this ClusterRole using aggregation labels."
          },
          "locationInModule": {
            "filename": "src/role.ts",
            "line": 477
          },
          "name": "combine",
          "parameters": [
            {
              "name": "rol",
              "type": {
                "fqn": "cdk8s-plus-28.ClusterRole"
              }
            }
          ]
        }
      ],
      "name": "ClusterRole",
      "properties": [
        {
          "docs": {
            "see": "base.Resource.apiObject",
            "stability": "stable",
            "summary": "The underlying cdk8s API object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/role.ts",
            "line": 339
          },
          "name": "apiObject",
          "overrides": "cdk8s-plus-28.Resource",
          "protected": true,
          "type": {
            "fqn": "cdk8s.ApiObject"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of a resource type as it appears in the relevant API endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/role.ts",
            "line": 341
          },
          "name": "resourceType",
          "overrides": "cdk8s-plus-28.Resource",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "remarks": "Returns a copy, use `allow` to add rules.",
            "stability": "stable",
            "summary": "Rules associaated with this Role."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/role.ts",
            "line": 368
          },
          "name": "rules",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.ClusterRolePolicyRule"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/role:ClusterRole"
    },
    "cdk8s-plus-28.ClusterRoleBinding": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s-plus-28.Resource",
      "docs": {
        "stability": "stable",
        "summary": "A ClusterRoleBinding grants permissions cluster-wide to a user or set of users."
      },
      "fqn": "cdk8s-plus-28.ClusterRoleBinding",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/role-binding.ts",
          "line": 153
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.ClusterRoleBindingProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/role-binding.ts",
        "line": 141
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a subject to the role."
          },
          "locationInModule": {
            "filename": "src/role-binding.ts",
            "line": 171
          },
          "name": "addSubjects",
          "parameters": [
            {
              "docs": {
                "summary": "The subjects to add."
              },
              "name": "subjects",
              "type": {
                "fqn": "cdk8s-plus-28.ISubject"
              },
              "variadic": true
            }
          ],
          "variadic": true
        }
      ],
      "name": "ClusterRoleBinding",
      "properties": [
        {
          "docs": {
            "see": "base.Resource.apiObject",
            "stability": "stable",
            "summary": "The underlying cdk8s API object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/role-binding.ts",
            "line": 145
          },
          "name": "apiObject",
          "overrides": "cdk8s-plus-28.Resource",
          "protected": true,
          "type": {
            "fqn": "cdk8s.ApiObject"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of a resource type as it appears in the relevant API endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/role-binding.ts",
            "line": 147
          },
          "name": "resourceType",
          "overrides": "cdk8s-plus-28.Resource",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/role-binding.ts",
            "line": 149
          },
          "name": "role",
          "type": {
            "fqn": "cdk8s-plus-28.IClusterRole"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/role-binding.ts",
            "line": 177
          },
          "name": "subjects",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.ISubject"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/role-binding:ClusterRoleBinding"
    },
    "cdk8s-plus-28.ClusterRoleBindingProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for `ClusterRoleBinding`."
      },
      "fqn": "cdk8s-plus-28.ClusterRoleBindingProps",
      "interfaces": [
        "cdk8s-plus-28.ResourceProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/role-binding.ts",
        "line": 130
      },
      "name": "ClusterRoleBindingProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The role to bind to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/role-binding.ts",
            "line": 134
          },
          "name": "role",
          "type": {
            "fqn": "cdk8s-plus-28.IClusterRole"
          }
        }
      ],
      "symbolId": "src/role-binding:ClusterRoleBindingProps"
    },
    "cdk8s-plus-28.ClusterRolePolicyRule": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Policy rule of a `ClusterRole."
      },
      "fqn": "cdk8s-plus-28.ClusterRolePolicyRule",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/role.ts",
        "line": 276
      },
      "name": "ClusterRolePolicyRule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Can be either api resources\nor non api resources.",
            "stability": "stable",
            "summary": "Endpoints this rule applies to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/role.ts",
            "line": 287
          },
          "name": "endpoints",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.IApiEndpoint"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "(e.g ['get', 'watch'])",
            "stability": "stable",
            "summary": "Verbs to allow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/role.ts",
            "line": 281
          },
          "name": "verbs",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/role:ClusterRolePolicyRule"
    },
    "cdk8s-plus-28.ClusterRoleProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for `ClusterRole`."
      },
      "fqn": "cdk8s-plus-28.ClusterRoleProps",
      "interfaces": [
        "cdk8s-plus-28.ResourceProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/role.ts",
        "line": 257
      },
      "name": "ClusterRoleProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Specify labels that should be used to locate ClusterRoles, whose rules will be automatically filled into this ClusterRole's rules."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/role.ts",
            "line": 270
          },
          "name": "aggregationLabels",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "[]",
            "stability": "stable",
            "summary": "A list of rules the role should allow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/role.ts",
            "line": 264
          },
          "name": "rules",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.ClusterRolePolicyRule"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/role:ClusterRoleProps"
    },
    "cdk8s-plus-28.CommandProbeOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for `Probe.fromCommand()`."
      },
      "fqn": "cdk8s-plus-28.CommandProbeOptions",
      "interfaces": [
        "cdk8s-plus-28.ProbeOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/probe.ts",
        "line": 100
      },
      "name": "CommandProbeOptions",
      "symbolId": "src/probe:CommandProbeOptions"
    },
    "cdk8s-plus-28.CommonSecretProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Common properties for `Secret`."
      },
      "fqn": "cdk8s-plus-28.CommonSecretProps",
      "interfaces": [
        "cdk8s-plus-28.ResourceProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/secret.ts",
        "line": 11
      },
      "name": "CommonSecretProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "If not set to true, the field can be modified at any time.",
            "stability": "stable",
            "summary": "If set to true, ensures that data stored in the Secret cannot be updated (only object metadata can be modified)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/secret.ts",
            "line": 19
          },
          "name": "immutable",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/secret:CommonSecretProps"
    },
    "cdk8s-plus-28.ConcurrencyPolicy": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Concurrency policy for CronJobs."
      },
      "fqn": "cdk8s-plus-28.ConcurrencyPolicy",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/cron-job.ts",
        "line": 11
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "This policy allows to run job concurrently."
          },
          "name": "ALLOW"
        },
        {
          "docs": {
            "remarks": "It does not let a new job to be scheduled if the previous one is not finished yet.",
            "stability": "stable",
            "summary": "This policy does not allow to run job concurrently."
          },
          "name": "FORBID"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "This policy replaces the currently running job if a new job is being scheduled."
          },
          "name": "REPLACE"
        }
      ],
      "name": "ConcurrencyPolicy",
      "symbolId": "src/cron-job:ConcurrencyPolicy"
    },
    "cdk8s-plus-28.ConfigMap": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s-plus-28.Resource",
      "docs": {
        "stability": "stable",
        "summary": "ConfigMap holds configuration data for pods to consume."
      },
      "fqn": "cdk8s-plus-28.ConfigMap",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/config-map.ts",
          "line": 115
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.ConfigMapProps"
            }
          }
        ]
      },
      "interfaces": [
        "cdk8s-plus-28.IConfigMap"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/config-map.ts",
        "line": 91
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Represents a ConfigMap created elsewhere."
          },
          "locationInModule": {
            "filename": "src/config-map.ts",
            "line": 96
          },
          "name": "fromConfigMapName",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.IConfigMap"
            }
          },
          "static": true
        },
        {
          "docs": {
            "custom": {
              "throws": "if there is either a `data` or `binaryData` entry with the same key"
            },
            "remarks": "BinaryData can contain byte\nsequences that are not in the UTF-8 range.",
            "stability": "stable",
            "summary": "Adds a binary data entry to the config map."
          },
          "locationInModule": {
            "filename": "src/config-map.ts",
            "line": 168
          },
          "name": "addBinaryData",
          "parameters": [
            {
              "docs": {
                "summary": "The key."
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The value."
              },
              "name": "value",
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "custom": {
              "throws": "if there is either a `data` or `binaryData` entry with the same key"
            },
            "stability": "stable",
            "summary": "Adds a data entry to the config map."
          },
          "locationInModule": {
            "filename": "src/config-map.ts",
            "line": 145
          },
          "name": "addData",
          "parameters": [
            {
              "docs": {
                "summary": "The key."
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The value."
              },
              "name": "value",
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a directory to the ConfigMap."
          },
          "locationInModule": {
            "filename": "src/config-map.ts",
            "line": 200
          },
          "name": "addDirectory",
          "parameters": [
            {
              "docs": {
                "summary": "A path to a local directory."
              },
              "name": "localDir",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.AddDirectoryOptions"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a file to the ConfigMap."
          },
          "locationInModule": {
            "filename": "src/config-map.ts",
            "line": 188
          },
          "name": "addFile",
          "parameters": [
            {
              "docs": {
                "summary": "The path to the local file."
              },
              "name": "localFile",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The ConfigMap key (default to the file name)."
              },
              "name": "key",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ]
        }
      ],
      "name": "ConfigMap",
      "properties": [
        {
          "docs": {
            "see": "base.Resource.apiObject",
            "stability": "stable",
            "summary": "The underlying cdk8s API object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/config-map.ts",
            "line": 103
          },
          "name": "apiObject",
          "overrides": "cdk8s-plus-28.Resource",
          "protected": true,
          "type": {
            "fqn": "cdk8s.ApiObject"
          }
        },
        {
          "docs": {
            "remarks": "Returns a copy. To add data records, use `addBinaryData()` or `addData()`.",
            "stability": "stable",
            "summary": "The binary data associated with this config map."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/config-map.ts",
            "line": 179
          },
          "name": "binaryData",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "remarks": "Returns an copy. To add data records, use `addData()` or `addBinaryData()`.",
            "stability": "stable",
            "summary": "The data associated with this config map."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/config-map.ts",
            "line": 156
          },
          "name": "data",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Whether or not this config map is immutable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/config-map.ts",
            "line": 113
          },
          "name": "immutable",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of a resource type as it appears in the relevant API endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/config-map.ts",
            "line": 105
          },
          "name": "resourceType",
          "overrides": "cdk8s-plus-28.Resource",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/config-map:ConfigMap"
    },
    "cdk8s-plus-28.ConfigMapProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for initialization of `ConfigMap`."
      },
      "fqn": "cdk8s-plus-28.ConfigMapProps",
      "interfaces": [
        "cdk8s-plus-28.ResourceProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/config-map.ts",
        "line": 13
      },
      "name": "ConfigMapProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Each key must consist of alphanumeric characters, '-', '_' or '.'.\nBinaryData can contain byte sequences that are not in the UTF-8 range. The\nkeys stored in BinaryData must not overlap with the ones in the Data field,\nthis is enforced during validation process.\n\nYou can also add binary data using `configMap.addBinaryData()`.",
            "stability": "stable",
            "summary": "BinaryData contains the binary data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/config-map.ts",
            "line": 24
          },
          "name": "binaryData",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Each key must consist of alphanumeric characters, '-', '_' or '.'. Values\nwith non-UTF-8 byte sequences must use the BinaryData field. The keys\nstored in Data must not overlap with the keys in the BinaryData field, this\nis enforced during validation process.\n\nYou can also add data using `configMap.addData()`.",
            "stability": "stable",
            "summary": "Data contains the configuration data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/config-map.ts",
            "line": 36
          },
          "name": "data",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "If not set to true, the field can be modified at any time.",
            "stability": "stable",
            "summary": "If set to true, ensures that data stored in the ConfigMap cannot be updated (only object metadata can be modified)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/config-map.ts",
            "line": 44
          },
          "name": "immutable",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/config-map:ConfigMapProps"
    },
    "cdk8s-plus-28.ConfigMapVolumeOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for the ConfigMap-based volume."
      },
      "fqn": "cdk8s-plus-28.ConfigMapVolumeOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/volume.ts",
        "line": 419
      },
      "name": "ConfigMapVolumeOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "0644. Directories within the path are not affected by this\nsetting. This might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
            "remarks": "Must be a value between 0 and\n0777. Defaults to 0644. Directories within the path are not affected by\nthis setting. This might be in conflict with other options that affect the\nfile mode, like fsGroup, and the result can be other mode bits set.",
            "stability": "stable",
            "summary": "Mode bits to use on created files by default."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 437
          },
          "name": "defaultMode",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no mapping",
            "remarks": "If specified, the listed keys will be projected\ninto the specified paths, and unlisted keys will not be present. If a key\nis specified which is not present in the ConfigMap, the volume setup will\nerror unless it is marked optional. Paths must be relative and may not\ncontain the '..' path or start with '..'.",
            "stability": "stable",
            "summary": "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 456
          },
          "name": "items",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.PathMapping"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- auto-generated",
            "stability": "stable",
            "summary": "The volume name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 425
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- undocumented",
            "stability": "stable",
            "summary": "Specify whether the ConfigMap or its keys must be defined."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 443
          },
          "name": "optional",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/volume:ConfigMapVolumeOptions"
    },
    "cdk8s-plus-28.ConnectionScheme": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable"
      },
      "fqn": "cdk8s-plus-28.ConnectionScheme",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/probe.ts",
        "line": 59
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Use HTTP request for connecting to host."
          },
          "name": "HTTP"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Use HTTPS request for connecting to host."
          },
          "name": "HTTPS"
        }
      ],
      "name": "ConnectionScheme",
      "symbolId": "src/probe:ConnectionScheme"
    },
    "cdk8s-plus-28.Container": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "A single application container that you want to run within a pod."
      },
      "fqn": "cdk8s-plus-28.Container",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/container.ts",
          "line": 999
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.ContainerProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 936
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Add a port to expose from this container."
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1096
          },
          "name": "addPort",
          "parameters": [
            {
              "name": "port",
              "type": {
                "fqn": "cdk8s-plus-28.ContainerPort"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "Every pod that is configured to use this container will autmoatically have access to the volume.",
            "stability": "stable",
            "summary": "Mount a volume to a specific path so that it is accessible by the container."
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1089
          },
          "name": "mount",
          "parameters": [
            {
              "docs": {
                "summary": "- The desired path in the container."
              },
              "name": "path",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "- The storage to mount."
              },
              "name": "storage",
              "type": {
                "fqn": "cdk8s-plus-28.IStorage"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.MountOptions"
              }
            }
          ]
        }
      ],
      "name": "Container",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The environment of the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 984
          },
          "name": "env",
          "type": {
            "fqn": "cdk8s-plus-28.Env"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The container image."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 958
          },
          "name": "image",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Image pull policy for this container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 953
          },
          "name": "imagePullPolicy",
          "type": {
            "fqn": "cdk8s-plus-28.ImagePullPolicy"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Volume mounts configured for this container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 948
          },
          "name": "mounts",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.VolumeMount"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 963
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "remarks": "Returns a copy, use `addPort` to modify.",
            "stability": "stable",
            "summary": "Ports exposed by this containers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1061
          },
          "name": "ports",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.ContainerPort"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The security context of the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 979
          },
          "name": "securityContext",
          "type": {
            "fqn": "cdk8s-plus-28.ContainerSecurityContext"
          }
        },
        {
          "docs": {
            "returns": "a copy of the arguments array, cannot be modified.",
            "stability": "stable",
            "summary": "Arguments to the entrypoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1078
          },
          "name": "args",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "returns": "a copy of the entrypoint array, cannot be modified",
            "stability": "stable",
            "summary": "Entrypoint array (the command to execute when the container starts)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1069
          },
          "name": "command",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "deprecated": "- use `portNumber`.",
            "stability": "deprecated"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1053
          },
          "name": "port",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "remarks": "If undefined, either the container doesn't expose a port, or its\nport configuration is stored in the `ports` field.",
            "stability": "stable",
            "summary": "The port number that was configured for this container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 943
          },
          "name": "portNumber",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "see": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
            "stability": "stable",
            "summary": "Compute resources (CPU and memory requests and limits) required by the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 974
          },
          "name": "resources",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.ContainerResources"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The restart policy of the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 989
          },
          "name": "restartPolicy",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.ContainerRestartPolicy"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The working directory inside the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 968
          },
          "name": "workingDir",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/container:Container"
    },
    "cdk8s-plus-28.ContainerLifecycle": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Container lifecycle properties."
      },
      "fqn": "cdk8s-plus-28.ContainerLifecycle",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 707
      },
      "name": "ContainerLifecycle",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No post start handler.",
            "remarks": "However,\nthere is no guarantee that the hook will execute before the container ENTRYPOINT.",
            "stability": "stable",
            "summary": "This hook is executed immediately after a container is created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 715
          },
          "name": "postStart",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.Handler"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No pre stop handler.",
            "remarks": "A call to the PreStop hook fails if the container is already in a terminated or completed state\nand the hook must complete before the TERM signal to stop the container can be sent.\nThe Pod's termination grace period countdown begins before the PreStop hook is executed,\nso regardless of the outcome of the handler, the container will eventually terminate\nwithin the Pod's termination grace period. No parameters are passed to the handler.",
            "see": "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#pod-termination",
            "stability": "stable",
            "summary": "This hook is called immediately before a container is terminated due to an API request or management event such as a liveness/startup probe failure, preemption, resource contention and others."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 730
          },
          "name": "preStop",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.Handler"
          }
        }
      ],
      "symbolId": "src/container:ContainerLifecycle"
    },
    "cdk8s-plus-28.ContainerOpts": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Optional properties of a container."
      },
      "fqn": "cdk8s-plus-28.ContainerOpts",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 769
      },
      "name": "ContainerOpts",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "[]",
            "remarks": "Variable references $(VAR_NAME) are expanded using the container's\nenvironment. If a variable cannot be resolved, the reference in the input\nstring will be unchanged. The $(VAR_NAME) syntax can be escaped with a\ndouble $$, ie: $$(VAR_NAME). Escaped references will never be expanded,\nregardless of whether the variable exists or not.\n\nCannot be updated.",
            "see": "https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
            "stability": "stable",
            "summary": "Arguments to the entrypoint. The docker image's CMD is used if `command` is not provided."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 826
          },
          "name": "args",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The docker image's ENTRYPOINT.",
            "remarks": "Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment.\nIf a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME).\nEscaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
            "stability": "stable",
            "summary": "Entrypoint array."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 809
          },
          "name": "command",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No sources.",
            "remarks": "When a key exists in multiple sources, the value associated with\nthe last source will take precedence. Values defined by the `envVariables` property\nwith a duplicate key will take precedence.",
            "stability": "stable",
            "summary": "List of sources to populate environment variables in the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 850
          },
          "name": "envFrom",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.EnvFrom"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No environment variables.",
            "stability": "stable",
            "summary": "Environment variables to set in the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 840
          },
          "name": "envVariables",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.EnvValue"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ImagePullPolicy.ALWAYS",
            "stability": "stable",
            "summary": "Image pull policy for this container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 861
          },
          "name": "imagePullPolicy",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.ImagePullPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Describes actions that the management system should take in response to container lifecycle events."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 891
          },
          "name": "lifecycle",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.ContainerLifecycle"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no liveness probe is defined",
            "remarks": "Container will be restarted if the probe fails.",
            "stability": "stable",
            "summary": "Periodic probe of container liveness."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 875
          },
          "name": "liveness",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.Probe"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'main'",
            "remarks": "Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.",
            "stability": "stable",
            "summary": "Name of the container specified as a DNS_LABEL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 775
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "deprecated": "- use `portNumber`.",
            "stability": "deprecated"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 780
          },
          "name": "port",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Only the ports mentiond in the `ports` property are exposed.",
            "remarks": "This must be a valid port number, 0 < x < 65536.\n\nThis is a convinience property if all you need a single TCP numbered port.\nIn case more advanced configuartion is required, use the `ports` property.\n\nThis port is added to the list of ports mentioned in the `ports` property.",
            "stability": "stable",
            "summary": "Number of port to expose on the pod's IP address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 792
          },
          "name": "portNumber",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Only the port mentioned in the `portNumber` property is exposed.",
            "stability": "stable",
            "summary": "List of ports to expose from this container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 799
          },
          "name": "ports",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.ContainerPort"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no readiness probe is defined",
            "stability": "stable",
            "summary": "Determines when the container is ready to serve traffic."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 868
          },
          "name": "readiness",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.Probe"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "   cpu:\n     request: 1000 millis\n     limit: 1500 millis\n   memory:\n     request: 512 mebibytes\n     limit: 2048 mebibytes",
            "see": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
            "stability": "stable",
            "summary": "Compute resources (CPU and memory requests and limits) required by the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 905
          },
          "name": "resources",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.ContainerResources"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no restart policy is defined and the pod restart policy is applied",
            "see": "https://kubernetes.io/docs/concepts/workloads/pods/sidecar-containers/",
            "stability": "stable",
            "summary": "Kubelet will start init containers with restartPolicy=Always in the order with other init containers, but instead of waiting for its completion, it will wait for the container startup completion Currently, only accepted value is Always."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 930
          },
          "name": "restartPolicy",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.ContainerRestartPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "  ensureNonRoot: true\n  privileged: false\n  readOnlyRootFilesystem: true\n  allowPrivilegeEscalation: false\n  user: 25000\n  group: 26000",
            "remarks": "If set, the fields override equivalent fields of the pod's security context.",
            "see": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
            "stability": "stable",
            "summary": "SecurityContext defines the security options the container should be run with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 921
          },
          "name": "securityContext",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.ContainerSecurityContextProps"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- If a port is provided, then knocks on that port\nto determine when the container is ready for readiness and\nliveness probe checks.\nOtherwise, no startup probe is defined.",
            "remarks": "If specified, no other probes are executed until this completes successfully",
            "stability": "stable",
            "summary": "StartupProbe indicates that the Pod has successfully initialized."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 886
          },
          "name": "startup",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.Probe"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Cannot be updated.",
            "stability": "stable",
            "summary": "Pod volumes to mount into the container's filesystem."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 855
          },
          "name": "volumeMounts",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.VolumeMount"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The container runtime's default.",
            "remarks": "If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
            "stability": "stable",
            "summary": "Container's working directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 833
          },
          "name": "workingDir",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/container:ContainerOpts"
    },
    "cdk8s-plus-28.ContainerPort": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Represents a network port in a single container."
      },
      "fqn": "cdk8s-plus-28.ContainerPort",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 298
      },
      "name": "ContainerPort",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "This must be a valid port number, 0 < x < 65536.",
            "stability": "stable",
            "summary": "Number of port to expose on the pod's IP address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 303
          },
          "name": "number",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- 127.0.0.1.",
            "stability": "stable",
            "summary": "What host IP to bind the external port to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 310
          },
          "name": "hostIp",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- auto generated by kubernetes and might change on restarts.",
            "remarks": "If specified, this must be a valid port number, 0 < x < 65536.\nMost containers do not need this.",
            "stability": "stable",
            "summary": "Number of port to expose on the host."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 318
          },
          "name": "hostPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- port is not named.",
            "remarks": "Each named port in a pod must have a unique name.\nName for the port that can be referred to by services.",
            "stability": "stable",
            "summary": "If specified, this must be an IANA_SVC_NAME and unique within the pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 327
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Protocol.TCP",
            "remarks": "Must be UDP, TCP, or SCTP. Defaults to \"TCP\".",
            "stability": "stable",
            "summary": "Protocol for port."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 334
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.Protocol"
          }
        }
      ],
      "symbolId": "src/container:ContainerPort"
    },
    "cdk8s-plus-28.ContainerProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for creating a container."
      },
      "fqn": "cdk8s-plus-28.ContainerProps",
      "interfaces": [
        "cdk8s-plus-28.ContainerOpts"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 758
      },
      "name": "ContainerProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Docker image name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 763
          },
          "name": "image",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/container:ContainerProps"
    },
    "cdk8s-plus-28.ContainerResources": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "CPU and memory compute resources."
      },
      "fqn": "cdk8s-plus-28.ContainerResources",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 1319
      },
      "name": "ContainerResources",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1320
          },
          "name": "cpu",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.CpuResources"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1322
          },
          "name": "ephemeralStorage",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.EphemeralStorageResources"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1321
          },
          "name": "memory",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.MemoryResources"
          }
        }
      ],
      "symbolId": "src/container:ContainerResources"
    },
    "cdk8s-plus-28.ContainerRestartPolicy": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "remarks": "This field may only be set for init containers, and the only allowed value is \"Always\".\nFor non-init containers or when this field is not specified,\nthe restart behavior is defined by the Pod's restart policy and the container type.\nSetting the RestartPolicy as \"Always\" for the init container will have the following effect:\nthis init container will be continually restarted on exit until all regular containers have terminated.\nOnce all regular containers have completed, all init containers with restartPolicy \"Always\" will be shut down.\nThis lifecycle differs from normal init containers and is often referred to as a \"sidecar\" container.",
        "see": "https://kubernetes.io/docs/concepts/workloads/pods/sidecar-containers/",
        "stability": "stable",
        "summary": "RestartPolicy defines the restart behavior of individual containers in a pod."
      },
      "fqn": "cdk8s-plus-28.ContainerRestartPolicy",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 746
      },
      "members": [
        {
          "docs": {
            "remarks": "For regular containers, this is ignored by Kubernetes.",
            "stability": "stable",
            "summary": "If an init container is created with its restartPolicy set to Always, it will start and remain running during the entire life of the Pod."
          },
          "name": "ALWAYS"
        }
      ],
      "name": "ContainerRestartPolicy",
      "symbolId": "src/container:ContainerRestartPolicy"
    },
    "cdk8s-plus-28.ContainerSecurityContext": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Container security attributes and settings."
      },
      "fqn": "cdk8s-plus-28.ContainerSecurityContext",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/container.ts",
          "line": 374
        },
        "parameters": [
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.ContainerSecurityContextProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 363
      },
      "name": "ContainerSecurityContext",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 365
          },
          "name": "ensureNonRoot",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 366
          },
          "name": "privileged",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 367
          },
          "name": "readOnlyRootFilesystem",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 370
          },
          "name": "allowPrivilegeEscalation",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 371
          },
          "name": "capabilities",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.ContainerSecutiryContextCapabilities"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 369
          },
          "name": "group",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 372
          },
          "name": "seccompProfile",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.SeccompProfile"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 368
          },
          "name": "user",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/container:ContainerSecurityContext"
    },
    "cdk8s-plus-28.ContainerSecurityContextProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for `ContainerSecurityContext`."
      },
      "fqn": "cdk8s-plus-28.ContainerSecurityContextProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 230
      },
      "name": "ContainerSecurityContextProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether a process can gain more privileges than its parent process."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 278
          },
          "name": "allowPrivilegeEscalation",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "none",
            "stability": "stable",
            "summary": "POSIX capabilities for running containers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 285
          },
          "name": "capabilities",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.ContainerSecutiryContextCapabilities"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "If true, the Kubelet will validate the image at runtime to ensure that it does\nnot run as UID 0 (root) and fail to start the container if it does.",
            "stability": "stable",
            "summary": "Indicates that the container must run as a non-root user."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 257
          },
          "name": "ensureNonRoot",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- 26000. An arbitrary number bigger than 9999 is selected here.\nThis is so that the container is blocked to access host files even if\nsomehow it manages to get access to host file system.",
            "stability": "stable",
            "summary": "The GID to run the entrypoint of the container process."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 248
          },
          "name": "group",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "Processes in privileged containers are essentially equivalent to root on the host.",
            "stability": "stable",
            "summary": "Run container in privileged mode."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 264
          },
          "name": "privileged",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Whether this container has a read-only root filesystem."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 271
          },
          "name": "readOnlyRootFilesystem",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "none",
            "remarks": "Only one profile source may be set",
            "stability": "stable",
            "summary": "Container's seccomp profile settings."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 292
          },
          "name": "seccompProfile",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.SeccompProfile"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- 25000. An arbitrary number bigger than 9999 is selected here.\nThis is so that the container is blocked to access host files even if\nsomehow it manages to get access to host file system.",
            "stability": "stable",
            "summary": "The UID to run the entrypoint of the container process."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 239
          },
          "name": "user",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/container:ContainerSecurityContextProps"
    },
    "cdk8s-plus-28.ContainerSecutiryContextCapabilities": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "cdk8s-plus-28.ContainerSecutiryContextCapabilities",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 215
      },
      "name": "ContainerSecutiryContextCapabilities",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Added capabilities."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 219
          },
          "name": "add",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.Capability"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Removed capabilities."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 224
          },
          "name": "drop",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.Capability"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/container:ContainerSecutiryContextCapabilities"
    },
    "cdk8s-plus-28.Cpu": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "remarks": "The amount can be passed as millis or units.",
        "stability": "stable",
        "summary": "Represents the amount of CPU."
      },
      "fqn": "cdk8s-plus-28.Cpu",
      "kind": "class",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 1337
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1338
          },
          "name": "millis",
          "parameters": [
            {
              "name": "amount",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.Cpu"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1341
          },
          "name": "units",
          "parameters": [
            {
              "name": "amount",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.Cpu"
            }
          },
          "static": true
        }
      ],
      "name": "Cpu",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1344
          },
          "name": "amount",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/container:Cpu"
    },
    "cdk8s-plus-28.CpuResources": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "CPU request and limit."
      },
      "fqn": "cdk8s-plus-28.CpuResources",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 1328
      },
      "name": "CpuResources",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1330
          },
          "name": "limit",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.Cpu"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1329
          },
          "name": "request",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.Cpu"
          }
        }
      ],
      "symbolId": "src/container:CpuResources"
    },
    "cdk8s-plus-28.CronJob": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s-plus-28.Workload",
      "docs": {
        "remarks": "This helps running Jobs in a recurring manner.",
        "stability": "stable",
        "summary": "A CronJob is responsible for creating a Job and scheduling it based on provided cron schedule."
      },
      "fqn": "cdk8s-plus-28.CronJob",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/cron-job.ts",
          "line": 149
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.CronJobProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/cron-job.ts",
        "line": 98
      },
      "name": "CronJob",
      "properties": [
        {
          "docs": {
            "see": "base.Resource.apiObject",
            "stability": "stable",
            "summary": "The underlying cdk8s API object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/cron-job.ts",
            "line": 142
          },
          "name": "apiObject",
          "overrides": "cdk8s-plus-28.Resource",
          "protected": true,
          "type": {
            "fqn": "cdk8s.ApiObject"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The policy used by this cron job to determine the concurrency mode in which to schedule jobs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/cron-job.ts",
            "line": 112
          },
          "name": "concurrencyPolicy",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The number of failed jobs retained by this cron job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/cron-job.ts",
            "line": 132
          },
          "name": "failedJobsRetained",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Represents the resource type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/cron-job.ts",
            "line": 147
          },
          "name": "resourceType",
          "overrides": "cdk8s-plus-28.Resource",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The schedule this cron job is scheduled to run in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/cron-job.ts",
            "line": 102
          },
          "name": "schedule",
          "type": {
            "fqn": "cdk8s.Cron"
          }
        },
        {
          "docs": {
            "remarks": "The job is considered as failed if it misses this deadline.",
            "stability": "stable",
            "summary": "The time by which the running cron job needs to schedule the next job execution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/cron-job.ts",
            "line": 117
          },
          "name": "startingDeadline",
          "type": {
            "fqn": "cdk8s.Duration"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The number of successful jobs retained by this cron job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/cron-job.ts",
            "line": 127
          },
          "name": "successfulJobsRetained",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Whether or not the cron job is currently suspended or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/cron-job.ts",
            "line": 122
          },
          "name": "suspend",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The timezone which this cron job would follow to schedule jobs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/cron-job.ts",
            "line": 107
          },
          "name": "timeZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/cron-job:CronJob"
    },
    "cdk8s-plus-28.CronJobProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for `CronJob`."
      },
      "fqn": "cdk8s-plus-28.CronJobProps",
      "interfaces": [
        "cdk8s-plus-28.JobProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/cron-job.ts",
        "line": 29
      },
      "name": "CronJobProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "This is defined as a cron expression in the CronJob resource.",
            "stability": "stable",
            "summary": "Specifies the time in which the job would run again."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/cron-job.ts",
            "line": 33
          },
          "name": "schedule",
          "type": {
            "fqn": "cdk8s.Cron"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ConcurrencyPolicy.Forbid",
            "stability": "stable",
            "summary": "Specifies the concurrency policy for the job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/cron-job.ts",
            "line": 49
          },
          "name": "concurrencyPolicy",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.ConcurrencyPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "1",
            "remarks": "This would retain the Job and the associated Pod resource and can be useful for debugging.",
            "stability": "stable",
            "summary": "Specifies the number of failed jobs history retained."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/cron-job.ts",
            "line": 92
          },
          "name": "failedJobsRetained",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.seconds(10)",
            "remarks": "This deadline specifies\nhow much time can pass after a schedule point, for which kubernetes can still start the job.\nFor example, if this is set to 100 seconds, kubernetes is allowed to start the job at a maximum 100 seconds after\nthe scheduled time.\n\nNote that the Kubernetes CronJobController checks for things every 10 seconds, for this reason, a deadline below 10\nseconds is not allowed, as it may cause your job to never be scheduled.\n\nIn addition, kubernetes will stop scheduling jobs if more than 100 schedules were missed (for any reason).\nThis property also controls what time interval should kubernetes consider when counting for missed schedules.\n\nFor example, suppose a CronJob is set to schedule a new Job every one minute beginning at 08:30:00,\nand its `startingDeadline` field is not set. If the CronJob controller happens to be down from 08:29:00 to 10:21:00,\nthe job will not start as the number of missed jobs which missed their schedule is greater than 100.\nHowever, if `startingDeadline` is set to 200 seconds, kubernetes will only count 3 missed schedules, and thus\nstart a new execution at 10:22:00.",
            "stability": "stable",
            "summary": "Kubernetes attempts to start cron jobs at its schedule time, but this is not guaranteed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/cron-job.ts",
            "line": 71
          },
          "name": "startingDeadline",
          "optional": true,
          "type": {
            "fqn": "cdk8s.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "3",
            "remarks": "This would retain the Job and the associated Pod resource and can be useful for debugging.",
            "stability": "stable",
            "summary": "Specifies the number of successful jobs history retained."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/cron-job.ts",
            "line": 85
          },
          "name": "successfulJobsRetained",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "Only applies to future executions, current ones are remained untouched.",
            "stability": "stable",
            "summary": "Specifies if the cron job should be suspended."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/cron-job.ts",
            "line": 78
          },
          "name": "suspend",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Timezone of kube-controller-manager process.",
            "remarks": "This helps aligining the schedule to follow the specified timezone.",
            "see": "{@link https://en.wikipedia.org/wiki/List_of_tz_database_time_zones} for list of valid timezone values.",
            "stability": "stable",
            "summary": "Specifies the timezone for the job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/cron-job.ts",
            "line": 42
          },
          "name": "timeZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/cron-job:CronJobProps"
    },
    "cdk8s-plus-28.CsiVolumeOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for the CSI driver based volume."
      },
      "fqn": "cdk8s-plus-28.CsiVolumeOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/volume.ts",
        "line": 724
      },
      "name": "CsiVolumeOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- undefined",
            "stability": "stable",
            "summary": "Any driver-specific attributes to pass to the CSI volume builder."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 753
          },
          "name": "attributes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- driver-dependent",
            "remarks": "Ex. \"ext4\", \"xfs\", \"ntfs\". If not provided,\nthe empty value is passed to the associated CSI driver, which will\ndetermine the default filesystem to apply.",
            "stability": "stable",
            "summary": "The filesystem type to mount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 739
          },
          "name": "fsType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- auto-generated",
            "stability": "stable",
            "summary": "The volume name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 730
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- false",
            "stability": "stable",
            "summary": "Whether the mounted volume should be read-only or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 746
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/volume:CsiVolumeOptions"
    },
    "cdk8s-plus-28.DaemonSet": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s-plus-28.Workload",
      "docs": {
        "remarks": "As nodes are added to the cluster, Pods are added to them.\nAs nodes are removed from the cluster, those Pods are garbage collected.\nDeleting a DaemonSet will clean up the Pods it created.\n\nSome typical uses of a DaemonSet are:\n\n- running a cluster storage daemon on every node\n- running a logs collection daemon on every node\n- running a node monitoring daemon on every node\n\nIn a simple case, one DaemonSet, covering all nodes, would be used for each type of daemon.\nA more complex setup might use multiple DaemonSets for a single type of daemon,\nbut with different flags and/or different memory and cpu requests for different hardware types.",
        "stability": "stable",
        "summary": "A DaemonSet ensures that all (or some) Nodes run a copy of a Pod."
      },
      "fqn": "cdk8s-plus-28.DaemonSet",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/daemon-set.ts",
          "line": 48
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.DaemonSetProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/daemon-set.ts",
        "line": 37
      },
      "name": "DaemonSet",
      "properties": [
        {
          "docs": {
            "see": "base.Resource.apiObject",
            "stability": "stable",
            "summary": "The underlying cdk8s API object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/daemon-set.ts",
            "line": 42
          },
          "name": "apiObject",
          "overrides": "cdk8s-plus-28.Resource",
          "protected": true,
          "type": {
            "fqn": "cdk8s.ApiObject"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/daemon-set.ts",
            "line": 46
          },
          "name": "minReadySeconds",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of a resource type as it appears in the relevant API endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/daemon-set.ts",
            "line": 44
          },
          "name": "resourceType",
          "overrides": "cdk8s-plus-28.Resource",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/daemon-set:DaemonSet"
    },
    "cdk8s-plus-28.DaemonSetProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for `DaemonSet`."
      },
      "fqn": "cdk8s-plus-28.DaemonSetProps",
      "interfaces": [
        "cdk8s-plus-28.WorkloadProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/daemon-set.ts",
        "line": 9
      },
      "name": "DaemonSetProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "0",
            "stability": "stable",
            "summary": "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/daemon-set.ts",
            "line": 17
          },
          "name": "minReadySeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/daemon-set:DaemonSetProps"
    },
    "cdk8s-plus-28.Deployment": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s-plus-28.Workload",
      "docs": {
        "remarks": "You describe a desired state in a Deployment, and the Deployment Controller changes the actual\nstate to the desired state at a controlled rate. You can define Deployments to create new ReplicaSets, or to remove\nexisting Deployments and adopt all their resources with new Deployments.\n\n> Note: Do not manage ReplicaSets owned by a Deployment. Consider opening an issue in the main Kubernetes repository if your use case is not covered below.\n\nUse Case\n\nThe following are typical use cases for Deployments:\n\n- Create a Deployment to rollout a ReplicaSet. The ReplicaSet creates Pods in the background.\n   Check the status of the rollout to see if it succeeds or not.\n- Declare the new state of the Pods by updating the PodTemplateSpec of the Deployment.\n   A new ReplicaSet is created and the Deployment manages moving the Pods from the old ReplicaSet to the new one at a controlled rate.\n   Each new ReplicaSet updates the revision of the Deployment.\n- Rollback to an earlier Deployment revision if the current state of the Deployment is not stable.\n   Each rollback updates the revision of the Deployment.\n- Scale up the Deployment to facilitate more load.\n- Pause the Deployment to apply multiple fixes to its PodTemplateSpec and then resume it to start a new rollout.\n- Use the status of the Deployment as an indicator that a rollout has stuck.\n- Clean up older ReplicaSets that you don't need anymore.",
        "stability": "stable",
        "summary": "A Deployment provides declarative updates for Pods and ReplicaSets."
      },
      "fqn": "cdk8s-plus-28.Deployment",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/deployment.ts",
          "line": 147
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.DeploymentProps"
            }
          }
        ]
      },
      "interfaces": [
        "cdk8s-plus-28.IScalable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/deployment.ts",
        "line": 115
      },
      "methods": [
        {
          "docs": {
            "remarks": "This will first expose the deployment with a service, and then expose the service via an ingress.",
            "stability": "stable",
            "summary": "Expose a deployment via an ingress."
          },
          "locationInModule": {
            "filename": "src/deployment.ts",
            "line": 222
          },
          "name": "exposeViaIngress",
          "parameters": [
            {
              "docs": {
                "summary": "The ingress path to register under."
              },
              "name": "path",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Additional options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.ExposeDeploymentViaIngressOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.Ingress"
            }
          }
        },
        {
          "docs": {
            "remarks": "This is equivalent to running `kubectl expose deployment <deployment-name>`.",
            "stability": "stable",
            "summary": "Expose a deployment via a service."
          },
          "locationInModule": {
            "filename": "src/deployment.ts",
            "line": 177
          },
          "name": "exposeViaService",
          "parameters": [
            {
              "docs": {
                "summary": "Options to determine details of the service and port exposed."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.DeploymentExposeViaServiceOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.Service"
            }
          }
        },
        {
          "docs": {
            "see": "IScalable.markHasAutoscaler()",
            "stability": "stable",
            "summary": "Called on all IScalable targets when they are associated with an autoscaler."
          },
          "locationInModule": {
            "filename": "src/deployment.ts",
            "line": 247
          },
          "name": "markHasAutoscaler",
          "overrides": "cdk8s-plus-28.IScalable"
        },
        {
          "docs": {
            "see": "IScalable.toScalingTarget()",
            "stability": "stable",
            "summary": "Return the target spec properties of this Scalable."
          },
          "locationInModule": {
            "filename": "src/deployment.ts",
            "line": 254
          },
          "name": "toScalingTarget",
          "overrides": "cdk8s-plus-28.IScalable",
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.ScalingTarget"
            }
          }
        }
      ],
      "name": "Deployment",
      "properties": [
        {
          "docs": {
            "see": "base.Resource.apiObject",
            "stability": "stable",
            "summary": "The underlying cdk8s API object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/deployment.ts",
            "line": 141
          },
          "name": "apiObject",
          "overrides": "cdk8s-plus-28.Resource",
          "protected": true,
          "type": {
            "fqn": "cdk8s.ApiObject"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Minimum duration for which a newly created pod should be ready without any of its container crashing, for it to be considered available."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/deployment.ts",
            "line": 126
          },
          "name": "minReady",
          "type": {
            "fqn": "cdk8s.Duration"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The maximum duration for a deployment to make progress before it is considered to be failed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/deployment.ts",
            "line": 131
          },
          "name": "progressDeadline",
          "type": {
            "fqn": "cdk8s.Duration"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of a resource type as it appears in the relevant API endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/deployment.ts",
            "line": 143
          },
          "name": "resourceType",
          "overrides": "cdk8s-plus-28.Resource",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/deployment.ts",
            "line": 136
          },
          "name": "strategy",
          "type": {
            "fqn": "cdk8s-plus-28.DeploymentStrategy"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Number of desired pods."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/deployment.ts",
            "line": 120
          },
          "name": "replicas",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "If this is a target of an autoscaler."
          },
          "locationInModule": {
            "filename": "src/deployment.ts",
            "line": 145
          },
          "name": "hasAutoscaler",
          "overrides": "cdk8s-plus-28.IScalable",
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/deployment:Deployment"
    },
    "cdk8s-plus-28.DeploymentExposeViaServiceOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for `Deployment.exposeViaService`."
      },
      "fqn": "cdk8s-plus-28.DeploymentExposeViaServiceOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/deployment.ts",
        "line": 58
      },
      "name": "DeploymentExposeViaServiceOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- auto generated.",
            "remarks": "If you'd like to expose the deployment multiple times,\nyou must explicitly set a name starting from the second expose call.",
            "stability": "stable",
            "summary": "The name of the service to expose."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/deployment.ts",
            "line": 80
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- extracted from the deployment.",
            "stability": "stable",
            "summary": "The ports that the service should bind to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/deployment.ts",
            "line": 64
          },
          "name": "ports",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.ServicePort"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- ClusterIP.",
            "stability": "stable",
            "summary": "The type of the exposed service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/deployment.ts",
            "line": 71
          },
          "name": "serviceType",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.ServiceType"
          }
        }
      ],
      "symbolId": "src/deployment:DeploymentExposeViaServiceOptions"
    },
    "cdk8s-plus-28.DeploymentProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for `Deployment`."
      },
      "fqn": "cdk8s-plus-28.DeploymentProps",
      "interfaces": [
        "cdk8s-plus-28.WorkloadProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/deployment.ts",
        "line": 13
      },
      "name": "DeploymentProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "Duration.seconds(0)",
            "remarks": "Zero means the pod will be considered available as soon as it is ready.",
            "see": "https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#min-ready-seconds",
            "stability": "stable",
            "summary": "Minimum duration for which a newly created pod should be ready without any of its container crashing, for it to be considered available."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/deployment.ts",
            "line": 38
          },
          "name": "minReady",
          "optional": true,
          "type": {
            "fqn": "cdk8s.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.seconds(600)",
            "remarks": "The deployment controller will continue\nto process failed deployments and a condition with a ProgressDeadlineExceeded\nreason will be surfaced in the deployment status.\n\nNote that progress will not be estimated during the time a deployment is paused.",
            "see": "https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#progress-deadline-seconds",
            "stability": "stable",
            "summary": "The maximum duration for a deployment to make progress before it is considered to be failed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/deployment.ts",
            "line": 51
          },
          "name": "progressDeadline",
          "optional": true,
          "type": {
            "fqn": "cdk8s.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "2",
            "stability": "stable",
            "summary": "Number of desired pods."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/deployment.ts",
            "line": 20
          },
          "name": "replicas",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- RollingUpdate with maxSurge and maxUnavailable set to 25%.",
            "stability": "stable",
            "summary": "Specifies the strategy used to replace old Pods by new ones."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/deployment.ts",
            "line": 27
          },
          "name": "strategy",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.DeploymentStrategy"
          }
        }
      ],
      "symbolId": "src/deployment:DeploymentProps"
    },
    "cdk8s-plus-28.DeploymentStrategy": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Deployment strategies."
      },
      "fqn": "cdk8s-plus-28.DeploymentStrategy",
      "kind": "class",
      "locationInModule": {
        "filename": "src/deployment.ts",
        "line": 333
      },
      "methods": [
        {
          "docs": {
            "see": "https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#recreate-deployment",
            "stability": "stable",
            "summary": "All existing Pods are killed before new ones are created."
          },
          "locationInModule": {
            "filename": "src/deployment.ts",
            "line": 340
          },
          "name": "recreate",
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.DeploymentStrategy"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/deployment.ts",
            "line": 346
          },
          "name": "rollingUpdate",
          "parameters": [
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.DeploymentStrategyRollingUpdateOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.DeploymentStrategy"
            }
          },
          "static": true
        }
      ],
      "name": "DeploymentStrategy",
      "symbolId": "src/deployment:DeploymentStrategy"
    },
    "cdk8s-plus-28.DeploymentStrategyRollingUpdateOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for `DeploymentStrategy.rollingUpdate`."
      },
      "fqn": "cdk8s-plus-28.DeploymentStrategyRollingUpdateOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/deployment.ts",
        "line": 268
      },
      "name": "DeploymentStrategyRollingUpdateOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "'25%'",
            "remarks": "Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).\nAbsolute number is calculated from percentage by rounding up.\nThis can not be 0 if `maxUnavailable` is 0.\n\nExample: when this is set to 30%, the new ReplicaSet can be scaled up immediately when the rolling update\nstarts, such that the total number of old and new pods do not exceed 130% of desired pods.\nOnce old pods have been killed, new ReplicaSet can be scaled up further, ensuring that\ntotal number of pods running at any time during the update is at most 130% of desired pods.",
            "stability": "stable",
            "summary": "The maximum number of pods that can be scheduled above the desired number of pods."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/deployment.ts",
            "line": 283
          },
          "name": "maxSurge",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.PercentOrAbsolute"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'25%'",
            "remarks": "Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).\nAbsolute number is calculated from percentage by rounding down.\nThis can not be 0 if `maxSurge` is 0.\n\nExample: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired\npods immediately when the rolling update starts. Once new pods are ready, old ReplicaSet can\nbe scaled down further, followed by scaling up the new ReplicaSet, ensuring that the total\nnumber of pods available at all times during the update is at least 70% of desired pods.",
            "stability": "stable",
            "summary": "The maximum number of pods that can be unavailable during the update."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/deployment.ts",
            "line": 298
          },
          "name": "maxUnavailable",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.PercentOrAbsolute"
          }
        }
      ],
      "symbolId": "src/deployment:DeploymentStrategyRollingUpdateOptions"
    },
    "cdk8s-plus-28.DnsOption": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Custom DNS option."
      },
      "fqn": "cdk8s-plus-28.DnsOption",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/pod.ts",
        "line": 871
      },
      "name": "DnsOption",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Option name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 876
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No value.",
            "stability": "stable",
            "summary": "Option value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 883
          },
          "name": "value",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/pod:DnsOption"
    },
    "cdk8s-plus-28.DnsPolicy": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Pod DNS policies."
      },
      "fqn": "cdk8s-plus-28.DnsPolicy",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/pod.ts",
        "line": 889
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Any DNS query that does not match the configured cluster domain suffix, such as \"www.kubernetes.io\", is forwarded to the upstream nameserver inherited from the node. Cluster administrators may have extra stub-domain and upstream DNS servers configured."
          },
          "name": "CLUSTER_FIRST"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "For Pods running with hostNetwork, you should explicitly set its DNS policy \"ClusterFirstWithHostNet\"."
          },
          "name": "CLUSTER_FIRST_WITH_HOST_NET"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The Pod inherits the name resolution configuration from the node that the pods run on."
          },
          "name": "DEFAULT"
        },
        {
          "docs": {
            "remarks": "All DNS settings are supposed to be provided using the dnsConfig\nfield in the Pod Spec.",
            "stability": "stable",
            "summary": "It allows a Pod to ignore DNS settings from the Kubernetes environment."
          },
          "name": "NONE"
        }
      ],
      "name": "DnsPolicy",
      "symbolId": "src/pod:DnsPolicy"
    },
    "cdk8s-plus-28.DockerConfigSecret": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s-plus-28.Secret",
      "docs": {
        "see": "https://kubernetes.io/docs/concepts/configuration/secret/#docker-config-secrets",
        "stability": "stable",
        "summary": "Create a secret for storing credentials for accessing a container image registry."
      },
      "fqn": "cdk8s-plus-28.DockerConfigSecret",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/secret.ts",
          "line": 316
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.DockerConfigSecretProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/secret.ts",
        "line": 315
      },
      "name": "DockerConfigSecret",
      "symbolId": "src/secret:DockerConfigSecret"
    },
    "cdk8s-plus-28.DockerConfigSecretProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for `DockerConfigSecret`."
      },
      "fqn": "cdk8s-plus-28.DockerConfigSecretProps",
      "interfaces": [
        "cdk8s-plus-28.CommonSecretProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/secret.ts",
        "line": 299
      },
      "name": "DockerConfigSecretProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "https://docs.docker.com/engine/reference/commandline/cli/#sample-configuration-file",
            "stability": "stable",
            "summary": "JSON content to provide for the `~/.docker/config.json` file. This will be stringified and inserted as stringData."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/secret.ts",
            "line": 306
          },
          "name": "data",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "src/secret:DockerConfigSecretProps"
    },
    "cdk8s-plus-28.EmptyDirMedium": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "The medium on which to store the volume."
      },
      "fqn": "cdk8s-plus-28.EmptyDirMedium",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/volume.ts",
        "line": 510
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The default volume of the backing node."
          },
          "name": "DEFAULT"
        },
        {
          "docs": {
            "remarks": "While tmpfs is very\nfast, be aware that unlike disks, tmpfs is cleared on node reboot and any\nfiles you write will count against your Container's memory limit.",
            "stability": "stable",
            "summary": "Mount a tmpfs (RAM-backed filesystem) for you instead."
          },
          "name": "MEMORY"
        }
      ],
      "name": "EmptyDirMedium",
      "symbolId": "src/volume:EmptyDirMedium"
    },
    "cdk8s-plus-28.EmptyDirVolumeOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for volumes populated with an empty directory."
      },
      "fqn": "cdk8s-plus-28.EmptyDirVolumeOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/volume.ts",
        "line": 482
      },
      "name": "EmptyDirVolumeOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "EmptyDirMedium.DEFAULT",
            "remarks": "However, you can set the emptyDir.medium field to\n`EmptyDirMedium.MEMORY` to tell Kubernetes to mount a tmpfs (RAM-backed\nfilesystem) for you instead. While tmpfs is very fast, be aware that unlike\ndisks, tmpfs is cleared on node reboot and any files you write will count\nagainst your Container's memory limit.",
            "stability": "stable",
            "summary": "By default, emptyDir volumes are stored on whatever medium is backing the node - that might be disk or SSD or network storage, depending on your environment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 494
          },
          "name": "medium",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.EmptyDirMedium"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- limit is undefined",
            "remarks": "The size\nlimit is also applicable for memory medium. The maximum usage on memory\nmedium EmptyDir would be the minimum value between the SizeLimit specified\nhere and the sum of memory limits of all containers in a pod.",
            "stability": "stable",
            "summary": "Total amount of local storage required for this EmptyDir volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 504
          },
          "name": "sizeLimit",
          "optional": true,
          "type": {
            "fqn": "cdk8s.Size"
          }
        }
      ],
      "symbolId": "src/volume:EmptyDirVolumeOptions"
    },
    "cdk8s-plus-28.Env": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Container environment variables."
      },
      "fqn": "cdk8s-plus-28.Env",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/container.ts",
          "line": 1430
        },
        "parameters": [
          {
            "name": "sources",
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "cdk8s-plus-28.EnvFrom"
                },
                "kind": "array"
              }
            }
          },
          {
            "name": "variables",
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "cdk8s-plus-28.EnvValue"
                },
                "kind": "map"
              }
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 1407
      },
      "methods": [
        {
          "docs": {
            "remarks": "The contents of the target ConfigMap's Data field will represent\nthe key-value pairs as environment variables.",
            "stability": "stable",
            "summary": "Selects a ConfigMap to populate the environment variables with."
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1414
          },
          "name": "fromConfigMap",
          "parameters": [
            {
              "name": "configMap",
              "type": {
                "fqn": "cdk8s-plus-28.IConfigMap"
              }
            },
            {
              "name": "prefix",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.EnvFrom"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "The contents of the target Secret's Data field will represent\nthe key-value pairs as environment variables.",
            "stability": "stable",
            "summary": "Selects a Secret to populate the environment variables with."
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1423
          },
          "name": "fromSecret",
          "parameters": [
            {
              "name": "secr",
              "type": {
                "fqn": "cdk8s-plus-28.ISecret"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.EnvFrom"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "The variable value can come from various dynamic sources such a secrets of config maps.\nUse `EnvValue.fromXXX` to select sources.",
            "stability": "stable",
            "summary": "Add a single variable by name and value."
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1440
          },
          "name": "addVariable",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "fqn": "cdk8s-plus-28.EnvValue"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "Use `Env.fromXXX` functions to select sources.",
            "stability": "stable",
            "summary": "Add a collection of variables by copying from another source."
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1456
          },
          "name": "copyFrom",
          "parameters": [
            {
              "name": "from",
              "type": {
                "fqn": "cdk8s-plus-28.EnvFrom"
              }
            }
          ]
        }
      ],
      "name": "Env",
      "properties": [
        {
          "docs": {
            "remarks": "Returns a copy. To add a source use `container.env.copyFrom()`.",
            "stability": "stable",
            "summary": "The list of sources used to populate the container environment, in addition to the `variables`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1466
          },
          "name": "sources",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.EnvFrom"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "remarks": "Returns a copy. To add environment variables use `container.env.addVariable()`.",
            "stability": "stable",
            "summary": "The environment variables for this container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1448
          },
          "name": "variables",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.EnvValue"
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "src/container:Env"
    },
    "cdk8s-plus-28.EnvFieldPaths": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable"
      },
      "fqn": "cdk8s-plus-28.EnvFieldPaths",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 406
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of the pod."
          },
          "name": "POD_NAME"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The namespace of the pod."
          },
          "name": "POD_NAMESPACE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The uid of the pod."
          },
          "name": "POD_UID"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The labels of the pod."
          },
          "name": "POD_LABEL"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The annotations of the pod."
          },
          "name": "POD_ANNOTATION"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The ipAddress of the pod."
          },
          "name": "POD_IP"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The service account name of the pod."
          },
          "name": "SERVICE_ACCOUNT_NAME"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of the node."
          },
          "name": "NODE_NAME"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The ipAddress of the node."
          },
          "name": "NODE_IP"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The ipAddresess of the pod."
          },
          "name": "POD_IPS"
        }
      ],
      "name": "EnvFieldPaths",
      "symbolId": "src/container:EnvFieldPaths"
    },
    "cdk8s-plus-28.EnvFrom": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "A collection of env variables defined in other resources."
      },
      "fqn": "cdk8s-plus-28.EnvFrom",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/container.ts",
          "line": 1371
        },
        "parameters": [
          {
            "name": "configMap",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.IConfigMap"
            }
          },
          {
            "name": "prefix",
            "optional": true,
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "sec",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.ISecret"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 1369
      },
      "name": "EnvFrom",
      "symbolId": "src/container:EnvFrom"
    },
    "cdk8s-plus-28.EnvValue": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Utility class for creating reading env values from various sources."
      },
      "fqn": "cdk8s-plus-28.EnvValue",
      "kind": "class",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 564
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a value by reading a specific key inside a config map."
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 573
          },
          "name": "fromConfigMap",
          "parameters": [
            {
              "docs": {
                "summary": "- The config map."
              },
              "name": "configMap",
              "type": {
                "fqn": "cdk8s-plus-28.IConfigMap"
              }
            },
            {
              "docs": {
                "summary": "- The key to extract the value from."
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "- Additional options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.EnvValueFromConfigMapOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.EnvValue"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a value from a field reference."
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 619
          },
          "name": "fromFieldRef",
          "parameters": [
            {
              "docs": {
                "summary": ": The field reference."
              },
              "name": "fieldPath",
              "type": {
                "fqn": "cdk8s-plus-28.EnvFieldPaths"
              }
            },
            {
              "docs": {
                "summary": ": Additional options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.EnvValueFromFieldRefOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.EnvValue"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a value from a key in the current process environment."
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 664
          },
          "name": "fromProcess",
          "parameters": [
            {
              "docs": {
                "summary": "- The key to read."
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "- Additional options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.EnvValueFromProcessOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.EnvValue"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a value from a resource."
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 646
          },
          "name": "fromResource",
          "parameters": [
            {
              "docs": {
                "summary": ": Resource to select the value from."
              },
              "name": "resource",
              "type": {
                "fqn": "cdk8s-plus-28.ResourceFieldPaths"
              }
            },
            {
              "docs": {
                "summary": ": Additional options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.EnvValueFromResourceOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.EnvValue"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Defines an environment value from a secret JSON value."
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 591
          },
          "name": "fromSecretValue",
          "parameters": [
            {
              "docs": {
                "summary": "The secret value (secrent + key)."
              },
              "name": "secretValue",
              "type": {
                "fqn": "cdk8s-plus-28.SecretValue"
              }
            },
            {
              "docs": {
                "summary": "Additional options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.EnvValueFromSecretOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.EnvValue"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a value from the given argument."
          },
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 608
          },
          "name": "fromValue",
          "parameters": [
            {
              "docs": {
                "summary": "- The value."
              },
              "name": "value",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.EnvValue"
            }
          },
          "static": true
        }
      ],
      "name": "EnvValue",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 675
          },
          "name": "value",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 675
          },
          "name": "valueFrom",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        }
      ],
      "symbolId": "src/container:EnvValue"
    },
    "cdk8s-plus-28.EnvValueFromConfigMapOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options to specify an envionment variable value from a ConfigMap key."
      },
      "fqn": "cdk8s-plus-28.EnvValueFromConfigMapOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 493
      },
      "name": "EnvValueFromConfigMapOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Specify whether the ConfigMap or its key must be defined."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 500
          },
          "name": "optional",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/container:EnvValueFromConfigMapOptions"
    },
    "cdk8s-plus-28.EnvValueFromFieldRefOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options to specify an environment variable value from a field reference."
      },
      "fqn": "cdk8s-plus-28.EnvValueFromFieldRefOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 534
      },
      "name": "EnvValueFromFieldRefOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Version of the schema the FieldPath is written in terms of."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 538
          },
          "name": "apiVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The key to select the pod label or annotation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 543
          },
          "name": "key",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/container:EnvValueFromFieldRefOptions"
    },
    "cdk8s-plus-28.EnvValueFromProcessOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options to specify an environment variable value from the process environment."
      },
      "fqn": "cdk8s-plus-28.EnvValueFromProcessOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 520
      },
      "name": "EnvValueFromProcessOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "If this is set to true, and the key does not exist, an error will thrown.",
            "stability": "stable",
            "summary": "Specify whether the key must exist in the environment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 528
          },
          "name": "required",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/container:EnvValueFromProcessOptions"
    },
    "cdk8s-plus-28.EnvValueFromResourceOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options to specify an environment variable value from a resource."
      },
      "fqn": "cdk8s-plus-28.EnvValueFromResourceOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 549
      },
      "name": "EnvValueFromResourceOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The container to select the value from."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 553
          },
          "name": "container",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.Container"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The output format of the exposed resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 558
          },
          "name": "divisor",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/container:EnvValueFromResourceOptions"
    },
    "cdk8s-plus-28.EnvValueFromSecretOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options to specify an environment variable value from a Secret."
      },
      "fqn": "cdk8s-plus-28.EnvValueFromSecretOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 506
      },
      "name": "EnvValueFromSecretOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Specify whether the Secret or its key must be defined."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 513
          },
          "name": "optional",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/container:EnvValueFromSecretOptions"
    },
    "cdk8s-plus-28.EphemeralStorageResources": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Emphemeral storage request and limit."
      },
      "fqn": "cdk8s-plus-28.EphemeralStorageResources",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 1361
      },
      "name": "EphemeralStorageResources",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1363
          },
          "name": "limit",
          "optional": true,
          "type": {
            "fqn": "cdk8s.Size"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1362
          },
          "name": "request",
          "optional": true,
          "type": {
            "fqn": "cdk8s.Size"
          }
        }
      ],
      "symbolId": "src/container:EphemeralStorageResources"
    },
    "cdk8s-plus-28.ExposeDeploymentViaIngressOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for exposing a deployment via an ingress."
      },
      "fqn": "cdk8s-plus-28.ExposeDeploymentViaIngressOptions",
      "interfaces": [
        "cdk8s-plus-28.DeploymentExposeViaServiceOptions",
        "cdk8s-plus-28.ExposeServiceViaIngressOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/deployment.ts",
        "line": 86
      },
      "name": "ExposeDeploymentViaIngressOptions",
      "symbolId": "src/deployment:ExposeDeploymentViaIngressOptions"
    },
    "cdk8s-plus-28.ExposeServiceViaIngressOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for exposing a service using an ingress."
      },
      "fqn": "cdk8s-plus-28.ExposeServiceViaIngressOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/service.ts",
        "line": 112
      },
      "name": "ExposeServiceViaIngressOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- An ingress will be automatically created.",
            "stability": "stable",
            "summary": "The ingress to add rules to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 126
          },
          "name": "ingress",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.Ingress"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "HttpIngressPathType.PREFIX",
            "stability": "stable",
            "summary": "The type of the path."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 119
          },
          "name": "pathType",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.HttpIngressPathType"
          }
        }
      ],
      "symbolId": "src/service:ExposeServiceViaIngressOptions"
    },
    "cdk8s-plus-28.FromServiceAccountNameOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "cdk8s-plus-28.FromServiceAccountNameOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/service-account.ts",
        "line": 36
      },
      "name": "FromServiceAccountNameOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "\"default\"",
            "stability": "stable",
            "summary": "The name of the namespace the service account belongs to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service-account.ts",
            "line": 43
          },
          "name": "namespaceName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/service-account:FromServiceAccountNameOptions"
    },
    "cdk8s-plus-28.FsGroupChangePolicy": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable"
      },
      "fqn": "cdk8s-plus-28.FsGroupChangePolicy",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/pod.ts",
        "line": 853
      },
      "members": [
        {
          "docs": {
            "remarks": "This could help shorten the time it takes to change ownership and permission of a volume",
            "stability": "stable",
            "summary": "Only change permissions and ownership if permission and ownership of root directory does not match with expected permissions of the volume."
          },
          "name": "ON_ROOT_MISMATCH"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Always change permission and ownership of the volume when volume is mounted."
          },
          "name": "ALWAYS"
        }
      ],
      "name": "FsGroupChangePolicy",
      "symbolId": "src/pod:FsGroupChangePolicy"
    },
    "cdk8s-plus-28.GCEPersistentDiskPersistentVolume": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s-plus-28.PersistentVolume",
      "docs": {
        "remarks": "Provisioned by an admin.",
        "see": "https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
        "stability": "stable",
        "summary": "GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod."
      },
      "fqn": "cdk8s-plus-28.GCEPersistentDiskPersistentVolume",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/pv.ts",
          "line": 575
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.GCEPersistentDiskPersistentVolumeProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/pv.ts",
        "line": 553
      },
      "name": "GCEPersistentDiskPersistentVolume",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "File system type of this volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 568
          },
          "name": "fsType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "PD resource in GCE of this volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 558
          },
          "name": "pdName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Whether or not it is mounted as a read-only volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 563
          },
          "name": "readOnly",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Partition of this volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 573
          },
          "name": "partition",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/pv:GCEPersistentDiskPersistentVolume"
    },
    "cdk8s-plus-28.GCEPersistentDiskPersistentVolumeProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for `GCEPersistentDiskPersistentVolume`."
      },
      "fqn": "cdk8s-plus-28.GCEPersistentDiskPersistentVolumeProps",
      "interfaces": [
        "cdk8s-plus-28.PersistentVolumeProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/pv.ts",
        "line": 510
      },
      "name": "GCEPersistentDiskPersistentVolumeProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Used to identify the disk in GCE.",
            "see": "https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
            "stability": "stable",
            "summary": "Unique name of the PD resource in GCE."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 517
          },
          "name": "pdName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'ext4'",
            "remarks": "Tip: Ensure that the filesystem type is supported by the host operating system.",
            "see": "https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
            "stability": "stable",
            "summary": "Filesystem type of the volume that you want to mount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 526
          },
          "name": "fsType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No partition.",
            "remarks": "If omitted, the default is to mount by volume name.\nExamples: For volume /dev/sda1, you specify the partition as \"1\".\nSimilarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).",
            "stability": "stable",
            "summary": "The partition in the volume that you want to mount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 535
          },
          "name": "partition",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "see": "https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
            "stability": "stable",
            "summary": "Specify \"true\" to force and set the ReadOnly property in VolumeMounts to \"true\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 543
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/pv:GCEPersistentDiskPersistentVolumeProps"
    },
    "cdk8s-plus-28.GCEPersistentDiskVolumeOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options of `Volume.fromGcePersistentDisk`."
      },
      "fqn": "cdk8s-plus-28.GCEPersistentDiskVolumeOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/volume.ts",
        "line": 302
      },
      "name": "GCEPersistentDiskVolumeOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "'ext4'",
            "remarks": "Tip: Ensure that the filesystem type is supported by the host operating system.",
            "see": "https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
            "stability": "stable",
            "summary": "Filesystem type of the volume that you want to mount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 317
          },
          "name": "fsType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- auto-generated",
            "stability": "stable",
            "summary": "The volume name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 308
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No partition.",
            "remarks": "If omitted, the default is to mount by volume name.\nExamples: For volume /dev/sda1, you specify the partition as \"1\".\nSimilarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).",
            "stability": "stable",
            "summary": "The partition in the volume that you want to mount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 326
          },
          "name": "partition",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "see": "https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
            "stability": "stable",
            "summary": "Specify \"true\" to force and set the ReadOnly property in VolumeMounts to \"true\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 334
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/volume:GCEPersistentDiskVolumeOptions"
    },
    "cdk8s-plus-28.Group": {
      "assembly": "cdk8s-plus-28",
      "base": "constructs.Construct",
      "docs": {
        "stability": "stable",
        "summary": "Represents a group."
      },
      "fqn": "cdk8s-plus-28.Group",
      "interfaces": [
        "cdk8s-plus-28.ISubject"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/role-binding.ts",
        "line": 235
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Reference a group by name."
          },
          "locationInModule": {
            "filename": "src/role-binding.ts",
            "line": 240
          },
          "name": "fromName",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.Group"
            }
          },
          "static": true
        },
        {
          "docs": {
            "see": "ISubect.toSubjectConfiguration()",
            "stability": "stable",
            "summary": "Return the subject configuration."
          },
          "locationInModule": {
            "filename": "src/role-binding.ts",
            "line": 256
          },
          "name": "toSubjectConfiguration",
          "overrides": "cdk8s-plus-28.ISubject",
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.SubjectConfiguration"
            }
          }
        }
      ],
      "name": "Group",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/role-binding.ts",
            "line": 245
          },
          "name": "kind",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/role-binding.ts",
            "line": 246
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/role-binding.ts",
            "line": 244
          },
          "name": "apiGroup",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/role-binding:Group"
    },
    "cdk8s-plus-28.Handler": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Defines a specific action that should be taken."
      },
      "fqn": "cdk8s-plus-28.Handler",
      "kind": "class",
      "locationInModule": {
        "filename": "src/handler.ts",
        "line": 42
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Defines a handler based on a command which is executed within the container."
          },
          "locationInModule": {
            "filename": "src/handler.ts",
            "line": 59
          },
          "name": "fromCommand",
          "parameters": [
            {
              "docs": {
                "summary": "The command to execute."
              },
              "name": "command",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.Handler"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Defines a handler based on an HTTP GET request to the IP address of the container."
          },
          "locationInModule": {
            "filename": "src/handler.ts",
            "line": 50
          },
          "name": "fromHttpGet",
          "parameters": [
            {
              "docs": {
                "summary": "The URL path to hit."
              },
              "name": "path",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.HandlerFromHttpGetOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.Handler"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Defines a handler based opening a connection to a TCP socket on the container."
          },
          "locationInModule": {
            "filename": "src/handler.ts",
            "line": 68
          },
          "name": "fromTcpSocket",
          "parameters": [
            {
              "docs": {
                "summary": "Options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.HandlerFromTcpSocketOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.Handler"
            }
          },
          "static": true
        }
      ],
      "name": "Handler",
      "symbolId": "src/handler:Handler"
    },
    "cdk8s-plus-28.HandlerFromHttpGetOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for `Handler.fromHttpGet`."
      },
      "fqn": "cdk8s-plus-28.HandlerFromHttpGetOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/handler.ts",
        "line": 28
      },
      "name": "HandlerFromHttpGetOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- defaults to `container.port`.",
            "stability": "stable",
            "summary": "The TCP port to use when sending the GET request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/handler.ts",
            "line": 35
          },
          "name": "port",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/handler:HandlerFromHttpGetOptions"
    },
    "cdk8s-plus-28.HandlerFromTcpSocketOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for `Handler.fromTcpSocket`."
      },
      "fqn": "cdk8s-plus-28.HandlerFromTcpSocketOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/handler.ts",
        "line": 8
      },
      "name": "HandlerFromTcpSocketOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- defaults to the pod IP",
            "stability": "stable",
            "summary": "The host name to connect to on the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/handler.ts",
            "line": 21
          },
          "name": "host",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- defaults to `container.port`.",
            "stability": "stable",
            "summary": "The TCP port to connect to on the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/handler.ts",
            "line": 14
          },
          "name": "port",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/handler:HandlerFromTcpSocketOptions"
    },
    "cdk8s-plus-28.HorizontalPodAutoscaler": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s-plus-28.Resource",
      "docs": {
        "example": "const backend = new kplus.Deployment(this, 'Backend', ...);\n\nconst hpa = new kplus.HorizontalPodAutoscaler(chart, 'Hpa', {\n target: backend,\n maxReplicas: 10,\n scaleUp: {\n   policies: [\n     {\n       replicas: kplus.Replicas.absolute(3),\n       duration: Duration.minutes(5),\n     },\n   ],\n },\n});",
        "remarks": "This allows your services to scale up when demand is high and scale down\nwhen they are no longer needed.\n\n\nTypical use cases for HorizontalPodAutoscaler:\n\n* When Memory usage is above 70%, scale up the number of replicas to meet the demand.\n* When CPU usage is below 30%, scale down the number of replicas to save resources.\n* When a service is experiencing a spike in traffic, scale up the number of replicas\n   to meet the demand. Then, when the traffic subsides, scale down the number of\n   replicas to save resources.\n\nThe autoscaler uses the following algorithm to determine the number of replicas to scale:\n\n`desiredReplicas = ceil[currentReplicas * ( currentMetricValue / desiredMetricValue )]`\n\nHorizontalPodAutoscaler's can be used to with any `Scalable` workload:\n* Deployment\n* StatefulSet\n\n**Targets that already have a replica count defined:**\n\nRemove any replica counts from the target resource before associating with a\nHorizontalPodAutoscaler. If this isn't done, then any time a change to that object is applied,\nKubernetes will scale the current number of Pods to the value of the target.replicas key. This\nmay not be desired and could lead to unexpected behavior.",
        "see": "https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/#implicit-maintenance-mode-deactivation",
        "stability": "stable",
        "summary": "A HorizontalPodAutoscaler scales a workload up or down in response to a metric change."
      },
      "fqn": "cdk8s-plus-28.HorizontalPodAutoscaler",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/horizontal-pod-autoscaler.ts",
          "line": 186
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.HorizontalPodAutoscalerProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/horizontal-pod-autoscaler.ts",
        "line": 152
      },
      "name": "HorizontalPodAutoscaler",
      "properties": [
        {
          "docs": {
            "see": "base.Resource.apiObject",
            "stability": "stable",
            "summary": "The underlying cdk8s API object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 156
          },
          "name": "apiObject",
          "overrides": "cdk8s-plus-28.Resource",
          "protected": true,
          "type": {
            "fqn": "cdk8s.ApiObject"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The maximum number of replicas that can be scaled up to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 165
          },
          "name": "maxReplicas",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The minimum number of replicas that can be scaled down to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 169
          },
          "name": "minReplicas",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of a resource type as it appears in the relevant API endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 157
          },
          "name": "resourceType",
          "overrides": "cdk8s-plus-28.Resource",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The scaling behavior when scaling down."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 181
          },
          "name": "scaleDown",
          "type": {
            "fqn": "cdk8s-plus-28.ScalingRules"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The scaling behavior when scaling up."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 177
          },
          "name": "scaleUp",
          "type": {
            "fqn": "cdk8s-plus-28.ScalingRules"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The workload to scale up or down."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 161
          },
          "name": "target",
          "type": {
            "fqn": "cdk8s-plus-28.IScalable"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The metric conditions that trigger a scale up or scale down."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 173
          },
          "name": "metrics",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.Metric"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/horizontal-pod-autoscaler:HorizontalPodAutoscaler"
    },
    "cdk8s-plus-28.HorizontalPodAutoscalerProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for HorizontalPodAutoscaler."
      },
      "fqn": "cdk8s-plus-28.HorizontalPodAutoscalerProps",
      "interfaces": [
        "cdk8s-plus-28.ResourceProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/horizontal-pod-autoscaler.ts",
        "line": 60
      },
      "name": "HorizontalPodAutoscalerProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The maximum number of replicas that can be scaled up to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 72
          },
          "name": "maxReplicas",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Scalable workload types:\n* Deployment\n* StatefulSet",
            "stability": "stable",
            "summary": "The workload to scale up or down."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 68
          },
          "name": "target",
          "type": {
            "fqn": "cdk8s-plus-28.IScalable"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- If metrics are not provided, then the target resource\nconstraints (e.g. cpu limit) will be used as scaling metrics.",
            "stability": "stable",
            "summary": "The metric conditions that trigger a scale up or scale down."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 88
          },
          "name": "metrics",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.Metric"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "1",
            "remarks": "Can be set to 0 if the alpha feature gate `HPAScaleToZero` is enabled and\nat least one Object or External metric is configured.",
            "stability": "stable",
            "summary": "The minimum number of replicas that can be scaled down to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 81
          },
          "name": "minReplicas",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Scale down to minReplica count with a 5 minute stabilization window.",
            "stability": "stable",
            "summary": "The scaling behavior when scaling down."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 102
          },
          "name": "scaleDown",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.ScalingRules"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Is the higher of:\n* Increase no more than 4 pods per 60 seconds\n* Double the number of pods per 60 seconds",
            "stability": "stable",
            "summary": "The scaling behavior when scaling up."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 96
          },
          "name": "scaleUp",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.ScalingRules"
          }
        }
      ],
      "symbolId": "src/horizontal-pod-autoscaler:HorizontalPodAutoscalerProps"
    },
    "cdk8s-plus-28.HostAlias": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's /etc/hosts file."
      },
      "fqn": "cdk8s-plus-28.HostAlias",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/pod.ts",
        "line": 924
      },
      "name": "HostAlias",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Hostnames for the chosen IP address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 928
          },
          "name": "hostnames",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "IP address of the host file entry."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 933
          },
          "name": "ip",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/pod:HostAlias"
    },
    "cdk8s-plus-28.HostPathVolumeOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for a HostPathVolume-based volume."
      },
      "fqn": "cdk8s-plus-28.HostPathVolumeOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/volume.ts",
        "line": 633
      },
      "name": "HostPathVolumeOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The path of the directory on the host."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 637
          },
          "name": "path",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "HostPathVolumeType.DEFAULT",
            "stability": "stable",
            "summary": "The expected type of the path found on the host."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 644
          },
          "name": "type",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.HostPathVolumeType"
          }
        }
      ],
      "symbolId": "src/volume:HostPathVolumeOptions"
    },
    "cdk8s-plus-28.HostPathVolumeType": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Host path types."
      },
      "fqn": "cdk8s-plus-28.HostPathVolumeType",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/volume.ts",
        "line": 651
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Empty string (default) is for backward compatibility, which means that no checks will be performed before mounting the hostPath volume."
          },
          "name": "DEFAULT"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "If nothing exists at the given path, an empty directory will be created there as needed with permission set to 0755, having the same group and ownership with Kubelet."
          },
          "name": "DIRECTORY_OR_CREATE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A directory must exist at the given path."
          },
          "name": "DIRECTORY"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "If nothing exists at the given path, an empty file will be created there as needed with permission set to 0644, having the same group and ownership with Kubelet."
          },
          "name": "FILE_OR_CREATE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A file must exist at the given path."
          },
          "name": "FILE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A UNIX socket must exist at the given path."
          },
          "name": "SOCKET"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A character device must exist at the given path."
          },
          "name": "CHAR_DEVICE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A block device must exist at the given path."
          },
          "name": "BLOCK_DEVICE"
        }
      ],
      "name": "HostPathVolumeType",
      "symbolId": "src/volume:HostPathVolumeType"
    },
    "cdk8s-plus-28.HttpGetProbeOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for `Probe.fromHttpGet()`."
      },
      "fqn": "cdk8s-plus-28.HttpGetProbeOptions",
      "interfaces": [
        "cdk8s-plus-28.ProbeOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/probe.ts",
        "line": 74
      },
      "name": "HttpGetProbeOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- defaults to the pod IP",
            "stability": "stable",
            "summary": "The host name to connect to on the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/probe.ts",
            "line": 94
          },
          "name": "host",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- defaults to `container.port`.",
            "stability": "stable",
            "summary": "The TCP port to use when sending the GET request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/probe.ts",
            "line": 80
          },
          "name": "port",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ConnectionScheme.HTTP",
            "stability": "stable",
            "summary": "Scheme to use for connecting to the host (HTTP or HTTPS)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/probe.ts",
            "line": 87
          },
          "name": "scheme",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.ConnectionScheme"
          }
        }
      ],
      "symbolId": "src/probe:HttpGetProbeOptions"
    },
    "cdk8s-plus-28.HttpIngressPathType": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "see": "https://kubernetes.io/docs/concepts/services-networking/ingress/#path-types",
        "stability": "stable",
        "summary": "Specify how the path is matched against request paths."
      },
      "fqn": "cdk8s-plus-28.HttpIngressPathType",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/ingress.ts",
        "line": 58
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Matches the URL path exactly."
          },
          "name": "PREFIX"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Matches based on a URL path prefix split by '/'."
          },
          "name": "EXACT"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Matching is specified by the underlying IngressClass."
          },
          "name": "IMPLEMENTATION_SPECIFIC"
        }
      ],
      "name": "HttpIngressPathType",
      "symbolId": "src/ingress:HttpIngressPathType"
    },
    "cdk8s-plus-28.IApiEndpoint": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "An API Endpoint can either be a resource descriptor (e.g /pods) or a non resource url (e.g /healthz). It must be one or the other, and not both."
      },
      "fqn": "cdk8s-plus-28.IApiEndpoint",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/api-resource.generated.ts",
        "line": 30
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Return the IApiResource this object represents."
          },
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 35
          },
          "name": "asApiResource",
          "returns": {
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.IApiResource"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Return the non resource url this object represents."
          },
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 40
          },
          "name": "asNonApiResource",
          "returns": {
            "optional": true,
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "IApiEndpoint",
      "symbolId": "src/api-resource.generated:IApiEndpoint"
    },
    "cdk8s-plus-28.IApiResource": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Represents a resource or collection of resources."
      },
      "fqn": "cdk8s-plus-28.IApiResource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/api-resource.generated.ts",
        "line": 6
      },
      "name": "IApiResource",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The group portion of the API version (e.g. `authorization.k8s.io`)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 10
          },
          "name": "apiGroup",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "example": "- \"pods\" or \"pods/log\"",
            "see": "https://kubernetes.io/docs/reference/access-authn-authz/rbac/#referring-to-resources",
            "stability": "stable",
            "summary": "The name of a resource type as it appears in the relevant API endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 17
          },
          "name": "resourceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If this is omitted, the ApiResource should represent all objects of the given type.",
            "stability": "stable",
            "summary": "The unique, namespace-global, name of an object inside the Kubernetes cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 24
          },
          "name": "resourceName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/api-resource.generated:IApiResource"
    },
    "cdk8s-plus-28.IClusterRole": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Represents a cluster-level role."
      },
      "fqn": "cdk8s-plus-28.IClusterRole",
      "interfaces": [
        "cdk8s-plus-28.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/role.ts",
        "line": 250
      },
      "name": "IClusterRole",
      "symbolId": "src/role:IClusterRole"
    },
    "cdk8s-plus-28.IConfigMap": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Represents a config map."
      },
      "fqn": "cdk8s-plus-28.IConfigMap",
      "interfaces": [
        "cdk8s-plus-28.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/config-map.ts",
        "line": 51
      },
      "name": "IConfigMap",
      "symbolId": "src/config-map:IConfigMap"
    },
    "cdk8s-plus-28.INamespaceSelector": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Represents an object that can select namespaces."
      },
      "fqn": "cdk8s-plus-28.INamespaceSelector",
      "interfaces": [
        "constructs.IConstruct"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/namespace.ts",
        "line": 27
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Return the configuration of this selector."
          },
          "locationInModule": {
            "filename": "src/namespace.ts",
            "line": 31
          },
          "name": "toNamespaceSelectorConfig",
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.NamespaceSelectorConfig"
            }
          }
        }
      ],
      "name": "INamespaceSelector",
      "symbolId": "src/namespace:INamespaceSelector"
    },
    "cdk8s-plus-28.INetworkPolicyPeer": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Describes a peer to allow traffic to/from."
      },
      "fqn": "cdk8s-plus-28.INetworkPolicyPeer",
      "interfaces": [
        "constructs.IConstruct"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/network-policy.ts",
        "line": 126
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Return the configuration of this peer."
          },
          "locationInModule": {
            "filename": "src/network-policy.ts",
            "line": 130
          },
          "name": "toNetworkPolicyPeerConfig",
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.NetworkPolicyPeerConfig"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Convert the peer into a pod selector, if possible."
          },
          "locationInModule": {
            "filename": "src/network-policy.ts",
            "line": 135
          },
          "name": "toPodSelector",
          "returns": {
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.IPodSelector"
            }
          }
        }
      ],
      "name": "INetworkPolicyPeer",
      "symbolId": "src/network-policy:INetworkPolicyPeer"
    },
    "cdk8s-plus-28.IPersistentVolume": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Contract of a `PersistentVolumeClaim`."
      },
      "fqn": "cdk8s-plus-28.IPersistentVolume",
      "interfaces": [
        "cdk8s-plus-28.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/pv.ts",
        "line": 11
      },
      "name": "IPersistentVolume",
      "symbolId": "src/pv:IPersistentVolume"
    },
    "cdk8s-plus-28.IPersistentVolumeClaim": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Contract of a `PersistentVolumeClaim`."
      },
      "fqn": "cdk8s-plus-28.IPersistentVolumeClaim",
      "interfaces": [
        "cdk8s-plus-28.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/pvc.ts",
        "line": 10
      },
      "name": "IPersistentVolumeClaim",
      "symbolId": "src/pvc:IPersistentVolumeClaim"
    },
    "cdk8s-plus-28.IPodSelector": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Represents an object that can select pods."
      },
      "fqn": "cdk8s-plus-28.IPodSelector",
      "interfaces": [
        "constructs.IConstruct"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/pod.ts",
        "line": 535
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Return the configuration of this selector."
          },
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 539
          },
          "name": "toPodSelectorConfig",
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.PodSelectorConfig"
            }
          }
        }
      ],
      "name": "IPodSelector",
      "symbolId": "src/pod:IPodSelector"
    },
    "cdk8s-plus-28.IResource": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Represents a resource."
      },
      "fqn": "cdk8s-plus-28.IResource",
      "interfaces": [
        "constructs.IConstruct",
        "cdk8s-plus-28.IApiResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/base.ts",
        "line": 19
      },
      "name": "IResource",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The object's API version (e.g. \"authorization.k8s.io/v1\")."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base.ts",
            "line": 28
          },
          "name": "apiVersion",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The object kind (e.g. \"Deployment\")."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base.ts",
            "line": 33
          },
          "name": "kind",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Kubernetes name of this resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base.ts",
            "line": 23
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/base:IResource"
    },
    "cdk8s-plus-28.IRole": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "A reference to any Role or ClusterRole."
      },
      "fqn": "cdk8s-plus-28.IRole",
      "interfaces": [
        "cdk8s-plus-28.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/role.ts",
        "line": 12
      },
      "name": "IRole",
      "symbolId": "src/role:IRole"
    },
    "cdk8s-plus-28.IScalable": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Represents a scalable workload."
      },
      "fqn": "cdk8s-plus-28.IScalable",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/horizontal-pod-autoscaler.ts",
        "line": 42
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Called on all IScalable targets when they are associated with an autoscaler."
          },
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 50
          },
          "name": "markHasAutoscaler"
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Return the target spec properties of this Scalable."
          },
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 54
          },
          "name": "toScalingTarget",
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.ScalingTarget"
            }
          }
        }
      ],
      "name": "IScalable",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "If this is a target of an autoscaler."
          },
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 46
          },
          "name": "hasAutoscaler",
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/horizontal-pod-autoscaler:IScalable"
    },
    "cdk8s-plus-28.ISecret": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable"
      },
      "fqn": "cdk8s-plus-28.ISecret",
      "interfaces": [
        "cdk8s-plus-28.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/secret.ts",
        "line": 45
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns EnvValue object from a secret's key."
          },
          "locationInModule": {
            "filename": "src/secret.ts",
            "line": 51
          },
          "name": "envValue",
          "parameters": [
            {
              "docs": {
                "summary": "Secret's key."
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Additional EnvValue options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.EnvValueFromSecretOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.EnvValue"
            }
          }
        }
      ],
      "name": "ISecret",
      "symbolId": "src/secret:ISecret"
    },
    "cdk8s-plus-28.IServiceAccount": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable"
      },
      "fqn": "cdk8s-plus-28.IServiceAccount",
      "interfaces": [
        "cdk8s-plus-28.IResource",
        "cdk8s-plus-28.ISubject"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/service-account.ts",
        "line": 10
      },
      "name": "IServiceAccount",
      "symbolId": "src/service-account:IServiceAccount"
    },
    "cdk8s-plus-28.IStorage": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Represents a piece of storage in the cluster."
      },
      "fqn": "cdk8s-plus-28.IStorage",
      "interfaces": [
        "constructs.IConstruct"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/volume.ts",
        "line": 11
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Convert the piece of storage into a concrete volume."
          },
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 16
          },
          "name": "asVolume",
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.Volume"
            }
          }
        }
      ],
      "name": "IStorage",
      "symbolId": "src/volume:IStorage"
    },
    "cdk8s-plus-28.ISubject": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Represents an object that can be used as a role binding subject."
      },
      "fqn": "cdk8s-plus-28.ISubject",
      "interfaces": [
        "constructs.IConstruct"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/role-binding.ts",
        "line": 46
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Return the subject configuration."
          },
          "locationInModule": {
            "filename": "src/role-binding.ts",
            "line": 51
          },
          "name": "toSubjectConfiguration",
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.SubjectConfiguration"
            }
          }
        }
      ],
      "name": "ISubject",
      "symbolId": "src/role-binding:ISubject"
    },
    "cdk8s-plus-28.ImagePullPolicy": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable"
      },
      "fqn": "cdk8s-plus-28.ImagePullPolicy",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 678
      },
      "members": [
        {
          "docs": {
            "remarks": "If the kubelet has a container image with that exact\ndigest cached locally, the kubelet uses its cached image; otherwise, the kubelet downloads\n(pulls) the image with the resolved digest, and uses that image to launch the container.\n\nDefault is Always if ImagePullPolicy is omitted and either the image tag is :latest or\nthe image tag is omitted.",
            "stability": "stable",
            "summary": "Every time the kubelet launches a container, the kubelet queries the container image registry to resolve the name to an image digest."
          },
          "name": "ALWAYS"
        },
        {
          "docs": {
            "remarks": "Default is IfNotPresent if ImagePullPolicy is omitted and the image tag is present but\nnot :latest",
            "stability": "stable",
            "summary": "The image is pulled only if it is not already present locally."
          },
          "name": "IF_NOT_PRESENT"
        },
        {
          "docs": {
            "remarks": "No attempt is made to pull the image.",
            "stability": "stable",
            "summary": "The image is assumed to exist locally."
          },
          "name": "NEVER"
        }
      ],
      "name": "ImagePullPolicy",
      "symbolId": "src/container:ImagePullPolicy"
    },
    "cdk8s-plus-28.Ingress": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s-plus-28.Resource",
      "docs": {
        "remarks": "An Ingress can be configured to give services\nexternally-reachable urls, load balance traffic, terminate SSL, offer name\nbased virtual hosting etc.",
        "stability": "stable",
        "summary": "Ingress is a collection of rules that allow inbound connections to reach the endpoints defined by a backend."
      },
      "fqn": "cdk8s-plus-28.Ingress",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/ingress.ts",
          "line": 94
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.IngressProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/ingress.ts",
        "line": 81
      },
      "methods": [
        {
          "docs": {
            "remarks": "A default backend capable of\nservicing requests that don't match any rule.",
            "stability": "stable",
            "summary": "Defines the default backend for this ingress."
          },
          "locationInModule": {
            "filename": "src/ingress.ts",
            "line": 133
          },
          "name": "addDefaultBackend",
          "parameters": [
            {
              "docs": {
                "summary": "The backend to use for requests that do not match any rule."
              },
              "name": "backend",
              "type": {
                "fqn": "cdk8s-plus-28.IngressBackend"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "This backend will be used as a catch-all for requests\ntargeted to this host name (the `Host` header matches this value).",
            "stability": "stable",
            "summary": "Specify a default backend for a specific host name."
          },
          "locationInModule": {
            "filename": "src/ingress.ts",
            "line": 144
          },
          "name": "addHostDefaultBackend",
          "parameters": [
            {
              "docs": {
                "summary": "The host name to match."
              },
              "name": "host",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The backend to route to."
              },
              "name": "backend",
              "type": {
                "fqn": "cdk8s-plus-28.IngressBackend"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds an ingress rule applied to requests to a specific host and a specific HTTP path (the `Host` header matches this value)."
          },
          "locationInModule": {
            "filename": "src/ingress.ts",
            "line": 158
          },
          "name": "addHostRule",
          "parameters": [
            {
              "docs": {
                "summary": "The host name."
              },
              "name": "host",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The HTTP path."
              },
              "name": "path",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The backend to route requests to."
              },
              "name": "backend",
              "type": {
                "fqn": "cdk8s-plus-28.IngressBackend"
              }
            },
            {
              "docs": {
                "summary": "How the path is matched against request paths."
              },
              "name": "pathType",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.HttpIngressPathType"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds an ingress rule applied to requests sent to a specific HTTP path."
          },
          "locationInModule": {
            "filename": "src/ingress.ts",
            "line": 170
          },
          "name": "addRule",
          "parameters": [
            {
              "docs": {
                "summary": "The HTTP path."
              },
              "name": "path",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The backend to route requests to."
              },
              "name": "backend",
              "type": {
                "fqn": "cdk8s-plus-28.IngressBackend"
              }
            },
            {
              "docs": {
                "summary": "How the path is matched against request paths."
              },
              "name": "pathType",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.HttpIngressPathType"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds rules to this ingress."
          },
          "locationInModule": {
            "filename": "src/ingress.ts",
            "line": 178
          },
          "name": "addRules",
          "parameters": [
            {
              "docs": {
                "summary": "The rules to add."
              },
              "name": "rules",
              "type": {
                "fqn": "cdk8s-plus-28.IngressRule"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/ingress.ts",
            "line": 227
          },
          "name": "addTls",
          "parameters": [
            {
              "name": "tls",
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "cdk8s-plus-28.IngressTls"
                  },
                  "kind": "array"
                }
              }
            }
          ]
        }
      ],
      "name": "Ingress",
      "properties": [
        {
          "docs": {
            "see": "base.Resource.apiObject",
            "stability": "stable",
            "summary": "The underlying cdk8s API object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/ingress.ts",
            "line": 86
          },
          "name": "apiObject",
          "overrides": "cdk8s-plus-28.Resource",
          "protected": true,
          "type": {
            "fqn": "cdk8s.ApiObject"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of a resource type as it appears in the relevant API endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/ingress.ts",
            "line": 88
          },
          "name": "resourceType",
          "overrides": "cdk8s-plus-28.Resource",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/ingress:Ingress"
    },
    "cdk8s-plus-28.IngressBackend": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "The backend for an ingress path."
      },
      "fqn": "cdk8s-plus-28.IngressBackend",
      "kind": "class",
      "locationInModule": {
        "filename": "src/ingress.ts",
        "line": 268
      },
      "methods": [
        {
          "docs": {
            "remarks": "A common usage for a Resource backend is to ingress data to an object\nstorage backend with static assets.",
            "stability": "stable",
            "summary": "A Resource backend is an ObjectRef to another Kubernetes resource within the same namespace as the Ingress object."
          },
          "locationInModule": {
            "filename": "src/ingress.ts",
            "line": 312
          },
          "name": "fromResource",
          "parameters": [
            {
              "name": "resource",
              "type": {
                "fqn": "cdk8s-plus-28.IResource"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.IngressBackend"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A Kubernetes `Service` to use as the backend for this path."
          },
          "locationInModule": {
            "filename": "src/ingress.ts",
            "line": 273
          },
          "name": "fromService",
          "parameters": [
            {
              "docs": {
                "summary": "The service object."
              },
              "name": "serv",
              "type": {
                "fqn": "cdk8s-plus-28.Service"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.ServiceIngressBackendOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.IngressBackend"
            }
          },
          "static": true
        }
      ],
      "name": "IngressBackend",
      "symbolId": "src/ingress:IngressBackend"
    },
    "cdk8s-plus-28.IngressProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for `Ingress`."
      },
      "fqn": "cdk8s-plus-28.IngressProps",
      "interfaces": [
        "cdk8s-plus-28.ResourceProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/ingress.ts",
        "line": 11
      },
      "name": "IngressProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "This field is a reference to an IngressClass resource that contains\nadditional Ingress configuration, including the name of the Ingress controller.",
            "stability": "stable",
            "summary": "Class Name for this ingress."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/ingress.ts",
            "line": 50
          },
          "name": "className",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Using this option or the `addDefaultBackend()` method is equivalent to\nadding a rule with both `path` and `host` undefined.",
            "stability": "stable",
            "summary": "The default backend services requests that do not match any rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/ingress.ts",
            "line": 18
          },
          "name": "defaultBackend",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.IngressBackend"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Each rule must define an `IngressBackend` that will receive the requests\nthat match this rule. If both `host` and `path` are not specifiec, this\nbackend will be used as the default backend of the ingress.\n\nYou can also add rules later using `addRule()`, `addHostRule()`,\n`addDefaultBackend()` and `addHostDefaultBackend()`.",
            "stability": "stable",
            "summary": "Routing rules for this ingress."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/ingress.ts",
            "line": 30
          },
          "name": "rules",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.IngressRule"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Using this option tells the ingress controller to expose a TLS endpoint.\nCurrently the Ingress only supports a single TLS port, 443. If multiple\nmembers of this list specify different hosts, they will be multiplexed on\nthe same port according to the hostname specified through the SNI TLS\nextension, if the ingress controller fulfilling the ingress supports SNI.",
            "stability": "stable",
            "summary": "TLS settings for this ingress."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/ingress.ts",
            "line": 42
          },
          "name": "tls",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.IngressTls"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/ingress:IngressProps"
    },
    "cdk8s-plus-28.IngressRule": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "remarks": "Incoming requests are first evaluated for a host match,\nthen routed to the backend associated with the matching path.",
        "stability": "stable",
        "summary": "Represents the rules mapping the paths under a specified host to the related backend services."
      },
      "fqn": "cdk8s-plus-28.IngressRule",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/ingress.ts",
        "line": 337
      },
      "name": "IngressRule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Backend defines the referenced service endpoint to which the traffic will be forwarded to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/ingress.ts",
            "line": 342
          },
          "name": "backend",
          "type": {
            "fqn": "cdk8s-plus-28.IngressBackend"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- If the host is unspecified, the Ingress routes all traffic based\non the specified IngressRuleValue.",
            "remarks": "Note the following deviations from the \"host\" part of the URI as\ndefined in the RFC: 1. IPs are not allowed. Currently an IngressRuleValue\ncan only apply to the IP in the Spec of the parent Ingress. 2. The `:`\ndelimiter is not respected because ports are not allowed. Currently the\nport of an Ingress is implicitly :80 for http and :443 for https. Both\nthese may change in the future. Incoming requests are matched against the\nhost before the IngressRuleValue.",
            "stability": "stable",
            "summary": "Host is the fully qualified domain name of a network host, as defined by RFC 3986."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/ingress.ts",
            "line": 357
          },
          "name": "host",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- If unspecified, the path defaults to a catch all sending traffic\nto the backend.",
            "stability": "stable",
            "summary": "Path is an extended POSIX regex as defined by IEEE Std 1003.1, (i.e this follows the egrep/unix syntax, not the perl syntax) matched against the path of an incoming request. Currently it can contain characters disallowed from the conventional \"path\" part of a URL as defined by RFC 3986. Paths must begin with a '/'."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/ingress.ts",
            "line": 369
          },
          "name": "path",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "By default, path\ntypes will be matched by prefix.",
            "see": "https://kubernetes.io/docs/concepts/services-networking/ingress/#path-types",
            "stability": "stable",
            "summary": "Specify how the path is matched against request paths."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/ingress.ts",
            "line": 377
          },
          "name": "pathType",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.HttpIngressPathType"
          }
        }
      ],
      "symbolId": "src/ingress:IngressRule"
    },
    "cdk8s-plus-28.IngressTls": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Represents the TLS configuration mapping that is passed to the ingress controller for SSL termination."
      },
      "fqn": "cdk8s-plus-28.IngressTls",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/ingress.ts",
        "line": 384
      },
      "name": "IngressTls",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- If unspecified, it defaults to the wildcard host setting for\nthe loadbalancer controller fulfilling this Ingress.",
            "remarks": "The values in\nthis list must match the name/s used in the TLS Secret.",
            "stability": "stable",
            "summary": "Hosts are a list of hosts included in the TLS certificate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/ingress.ts",
            "line": 393
          },
          "name": "hosts",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- If unspecified, it allows SSL routing based on SNI hostname.",
            "remarks": "If the SNI host in a listener conflicts with\nthe \"Host\" header field used by an IngressRule, the SNI host is used for\ntermination and value of the Host header is used for routing.",
            "stability": "stable",
            "summary": "Secret is the secret that contains the certificate and key used to terminate SSL traffic on 443."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/ingress.ts",
            "line": 403
          },
          "name": "secret",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.ISecret"
          }
        }
      ],
      "symbolId": "src/ingress:IngressTls"
    },
    "cdk8s-plus-28.Job": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s-plus-28.Workload",
      "docs": {
        "remarks": "As pods successfully complete,\nthe Job tracks the successful completions. When a specified number of successful completions is reached, the task (ie, Job) is complete.\nDeleting a Job will clean up the Pods it created. A simple case is to create one Job object in order to reliably run one Pod to completion.\nThe Job object will start a new Pod if the first Pod fails or is deleted (for example due to a node hardware failure or a node reboot).\nYou can also use a Job to run multiple Pods in parallel.",
        "stability": "stable",
        "summary": "A Job creates one or more Pods and ensures that a specified number of them successfully terminate."
      },
      "fqn": "cdk8s-plus-28.Job",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/job.ts",
          "line": 72
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.JobProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/job.ts",
        "line": 48
      },
      "name": "Job",
      "properties": [
        {
          "docs": {
            "see": "base.Resource.apiObject",
            "stability": "stable",
            "summary": "The underlying cdk8s API object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/job.ts",
            "line": 68
          },
          "name": "apiObject",
          "overrides": "cdk8s-plus-28.Resource",
          "protected": true,
          "type": {
            "fqn": "cdk8s.ApiObject"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of a resource type as it appears in the relevant API endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/job.ts",
            "line": 70
          },
          "name": "resourceType",
          "overrides": "cdk8s-plus-28.Resource",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "remarks": "If undefined, there is no deadline.",
            "stability": "stable",
            "summary": "Duration before job is terminated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/job.ts",
            "line": 53
          },
          "name": "activeDeadline",
          "optional": true,
          "type": {
            "fqn": "cdk8s.Duration"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Number of retries before marking failed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/job.ts",
            "line": 58
          },
          "name": "backoffLimit",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "TTL before the job is deleted after it is finished."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/job.ts",
            "line": 63
          },
          "name": "ttlAfterFinished",
          "optional": true,
          "type": {
            "fqn": "cdk8s.Duration"
          }
        }
      ],
      "symbolId": "src/job:Job"
    },
    "cdk8s-plus-28.JobProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for `Job`."
      },
      "fqn": "cdk8s-plus-28.JobProps",
      "interfaces": [
        "cdk8s-plus-28.WorkloadProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/job.ts",
        "line": 10
      },
      "name": "JobProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- If unset, then there is no deadline.",
            "stability": "stable",
            "summary": "Specifies the duration the job may be active before the system tries to terminate it."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/job.ts",
            "line": 17
          },
          "name": "activeDeadline",
          "optional": true,
          "type": {
            "fqn": "cdk8s.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- If not set, system defaults to 6.",
            "stability": "stable",
            "summary": "Specifies the number of retries before marking this job failed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/job.ts",
            "line": 24
          },
          "name": "backoffLimit",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- If this field is unset, the Job won't be automatically deleted.",
            "remarks": "If this field is set, after the Job finishes, it is eligible to\nbe automatically deleted. When the Job is being deleted, its lifecycle\nguarantees (e.g. finalizers) will be honored. If this field is set to zero,\nthe Job becomes eligible to be deleted immediately after it finishes. This\nfield is alpha-level and is only honored by servers that enable the\n`TTLAfterFinished` feature.",
            "stability": "stable",
            "summary": "Limits the lifetime of a Job that has finished execution (either Complete or Failed)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/job.ts",
            "line": 37
          },
          "name": "ttlAfterFinished",
          "optional": true,
          "type": {
            "fqn": "cdk8s.Duration"
          }
        }
      ],
      "symbolId": "src/job:JobProps"
    },
    "cdk8s-plus-28.LabelExpression": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Represents a query that can be performed against resources with labels."
      },
      "fqn": "cdk8s-plus-28.LabelExpression",
      "kind": "class",
      "locationInModule": {
        "filename": "src/pod.ts",
        "line": 1011
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Requires label `key` to not exist."
          },
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1037
          },
          "name": "doesNotExist",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.LabelExpression"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Requires label `key` to exist."
          },
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1030
          },
          "name": "exists",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.LabelExpression"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Requires value of label `key` to be one of `values`."
          },
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1016
          },
          "name": "in",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "values",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.LabelExpression"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Requires value of label `key` to be none of `values`."
          },
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1023
          },
          "name": "notIn",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "values",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.LabelExpression"
            }
          },
          "static": true
        }
      ],
      "name": "LabelExpression",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1042
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1043
          },
          "name": "operator",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1044
          },
          "name": "values",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/pod:LabelExpression"
    },
    "cdk8s-plus-28.LabelSelector": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Match a resource by labels."
      },
      "fqn": "cdk8s-plus-28.LabelSelector",
      "kind": "class",
      "locationInModule": {
        "filename": "src/pod.ts",
        "line": 487
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 489
          },
          "name": "of",
          "parameters": [
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.LabelSelectorOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.LabelSelector"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 497
          },
          "name": "isEmpty",
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        }
      ],
      "name": "LabelSelector",
      "symbolId": "src/pod:LabelSelector"
    },
    "cdk8s-plus-28.LabelSelectorOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for `LabelSelector.of`."
      },
      "fqn": "cdk8s-plus-28.LabelSelectorOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/pod.ts",
        "line": 471
      },
      "name": "LabelSelectorOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Expression based label matchers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 481
          },
          "name": "expressions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.LabelExpression"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Strict label matchers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 476
          },
          "name": "labels",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "src/pod:LabelSelectorOptions"
    },
    "cdk8s-plus-28.LabelSelectorRequirement": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values."
      },
      "fqn": "cdk8s-plus-28.LabelSelectorRequirement",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/workload.ts",
        "line": 39
      },
      "name": "LabelSelectorRequirement",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The label key that the selector applies to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/workload.ts",
            "line": 43
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Represents a key's relationship to a set of values."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/workload.ts",
            "line": 48
          },
          "name": "operator",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If the operator is In or NotIn, the values array\nmust be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic merge patch.",
            "stability": "stable",
            "summary": "An array of string values."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/workload.ts",
            "line": 55
          },
          "name": "values",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/workload:LabelSelectorRequirement"
    },
    "cdk8s-plus-28.LabeledNode": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "A node that is matched by label selectors."
      },
      "fqn": "cdk8s-plus-28.LabeledNode",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/pod.ts",
          "line": 1250
        },
        "parameters": [
          {
            "name": "labelSelector",
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "cdk8s-plus-28.NodeLabelQuery"
                },
                "kind": "array"
              }
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/pod.ts",
        "line": 1249
      },
      "name": "LabeledNode",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1250
          },
          "name": "labelSelector",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.NodeLabelQuery"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/pod:LabeledNode"
    },
    "cdk8s-plus-28.MemoryResources": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Memory request and limit."
      },
      "fqn": "cdk8s-plus-28.MemoryResources",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 1353
      },
      "name": "MemoryResources",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1355
          },
          "name": "limit",
          "optional": true,
          "type": {
            "fqn": "cdk8s.Size"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1354
          },
          "name": "request",
          "optional": true,
          "type": {
            "fqn": "cdk8s.Size"
          }
        }
      ],
      "symbolId": "src/container:MemoryResources"
    },
    "cdk8s-plus-28.Metric": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "A metric condition that HorizontalPodAutoscaler's scale on."
      },
      "fqn": "cdk8s-plus-28.Metric",
      "kind": "class",
      "locationInModule": {
        "filename": "src/horizontal-pod-autoscaler.ts",
        "line": 422
      },
      "methods": [
        {
          "docs": {
            "remarks": "This metric\nwill be tracked across all pods of the current scale target.",
            "stability": "stable",
            "summary": "Metric that tracks the CPU of a container."
          },
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 429
          },
          "name": "containerCpu",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "cdk8s-plus-28.MetricContainerResourceOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.Metric"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "This metric\nwill be tracked across all pods of the current scale target.",
            "stability": "stable",
            "summary": "Metric that tracks the local ephemeral storage of a container."
          },
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 477
          },
          "name": "containerEphemeralStorage",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "cdk8s-plus-28.MetricContainerResourceOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.Metric"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "This metric\nwill be tracked across all pods of the current scale target.",
            "stability": "stable",
            "summary": "Metric that tracks the Memory of a container."
          },
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 445
          },
          "name": "containerMemory",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "cdk8s-plus-28.MetricContainerResourceOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.Metric"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "This metric\nwill be tracked across all pods of the current scale target.",
            "stability": "stable",
            "summary": "Metric that tracks the volume size of a container."
          },
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 461
          },
          "name": "containerStorage",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "cdk8s-plus-28.MetricContainerResourceOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.Metric"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Allows for autoscaling based on information coming from components running outside of\nthe cluster.\n\nUse case:\n* Scale up when the length of an SQS queue is greater than 10 messages.\n* Scale down when an outside load balancer's queries are less than 10000 per second.",
            "stability": "stable",
            "summary": "A global metric that is not associated with any Kubernetes object."
          },
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 497
          },
          "name": "external",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "cdk8s-plus-28.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.Metric"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Use case:\n* Scale on a Kubernetes Ingress's hits-per-second metric.",
            "stability": "stable",
            "summary": "Metric that describes a metric of a kubernetes object."
          },
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 516
          },
          "name": "object",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "cdk8s-plus-28.MetricObjectOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.Metric"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Use case:\n* Average CPU utilization across all pods\n* Transactions processed per second across all pods",
            "stability": "stable",
            "summary": "A pod metric that will be averaged across all pods of the current scale target."
          },
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 541
          },
          "name": "pods",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "cdk8s-plus-28.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.Metric"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Note: Since the resource usages of all the containers are summed up the total\npod utilization may not accurately represent the individual container resource\nusage. This could lead to situations where a single container might be running\nwith high usage and the HPA will not scale out because the overall pod usage\nis still within acceptable limits.\n\nUse case:\n* Scale up when CPU is above 40%.",
            "stability": "stable",
            "summary": "Tracks the available CPU of the pods in a target."
          },
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 566
          },
          "name": "resourceCpu",
          "parameters": [
            {
              "name": "target",
              "type": {
                "fqn": "cdk8s-plus-28.MetricTarget"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.Metric"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Note: Since the resource usages of all the containers are summed up the total\npod utilization may not accurately represent the individual container resource\nusage. This could lead to situations where a single container might be running\nwith high usage and the HPA will not scale out because the overall pod usage\nis still within acceptable limits.",
            "stability": "stable",
            "summary": "Tracks the available Ephemeral Storage of the pods in a target."
          },
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 628
          },
          "name": "resourceEphemeralStorage",
          "parameters": [
            {
              "name": "target",
              "type": {
                "fqn": "cdk8s-plus-28.MetricTarget"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.Metric"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Note: Since the resource usages of all the containers are summed up the total\npod utilization may not accurately represent the individual container resource\nusage. This could lead to situations where a single container might be running\nwith high usage and the HPA will not scale out because the overall pod usage\nis still within acceptable limits.\n\nUse case:\n* Scale up when Memory is above 512MB.",
            "stability": "stable",
            "summary": "Tracks the available Memory of the pods in a target."
          },
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 588
          },
          "name": "resourceMemory",
          "parameters": [
            {
              "name": "target",
              "type": {
                "fqn": "cdk8s-plus-28.MetricTarget"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.Metric"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Note: Since the resource usages of all the containers are summed up the total\npod utilization may not accurately represent the individual container resource\nusage. This could lead to situations where a single container might be running\nwith high usage and the HPA will not scale out because the overall pod usage\nis still within acceptable limits.",
            "stability": "stable",
            "summary": "Tracks the available Storage of the pods in a target."
          },
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 608
          },
          "name": "resourceStorage",
          "parameters": [
            {
              "name": "target",
              "type": {
                "fqn": "cdk8s-plus-28.MetricTarget"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.Metric"
            }
          },
          "static": true
        }
      ],
      "name": "Metric",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 638
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/horizontal-pod-autoscaler:Metric"
    },
    "cdk8s-plus-28.MetricContainerResourceOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for `Metric.containerResource()`."
      },
      "fqn": "cdk8s-plus-28.MetricContainerResourceOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/horizontal-pod-autoscaler.ts",
        "line": 398
      },
      "name": "MetricContainerResourceOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Container where the metric can be found."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 402
          },
          "name": "container",
          "type": {
            "fqn": "cdk8s-plus-28.Container"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Target metric value that will trigger scaling."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 406
          },
          "name": "target",
          "type": {
            "fqn": "cdk8s-plus-28.MetricTarget"
          }
        }
      ],
      "symbolId": "src/horizontal-pod-autoscaler:MetricContainerResourceOptions"
    },
    "cdk8s-plus-28.MetricObjectOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for `Metric.object()`."
      },
      "fqn": "cdk8s-plus-28.MetricObjectOptions",
      "interfaces": [
        "cdk8s-plus-28.MetricOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/horizontal-pod-autoscaler.ts",
        "line": 412
      },
      "name": "MetricObjectOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Resource where the metric can be found."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 416
          },
          "name": "object",
          "type": {
            "fqn": "cdk8s-plus-28.IResource"
          }
        }
      ],
      "symbolId": "src/horizontal-pod-autoscaler:MetricObjectOptions"
    },
    "cdk8s-plus-28.MetricOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Base options for a Metric."
      },
      "fqn": "cdk8s-plus-28.MetricOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/horizontal-pod-autoscaler.ts",
        "line": 374
      },
      "name": "MetricOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the metric to scale on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 382
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The target metric value that will trigger scaling."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 378
          },
          "name": "target",
          "type": {
            "fqn": "cdk8s-plus-28.MetricTarget"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Just the metric 'name' will be used to gather metrics.",
            "remarks": "When set, it is passed as an additional parameter to the metrics server\nfor more specific metrics scoping.",
            "stability": "stable",
            "summary": "A selector to find a metric by label."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 391
          },
          "name": "labelSelector",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.LabelSelector"
          }
        }
      ],
      "symbolId": "src/horizontal-pod-autoscaler:MetricOptions"
    },
    "cdk8s-plus-28.MetricTarget": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "example": "MetricTarget.averageUtilization(70); // 70% average utilization",
        "stability": "stable",
        "summary": "A metric condition that will trigger scaling behavior when satisfied."
      },
      "fqn": "cdk8s-plus-28.MetricTarget",
      "kind": "class",
      "locationInModule": {
        "filename": "src/horizontal-pod-autoscaler.ts",
        "line": 661
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Target a percentage value across all relevant pods."
          },
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 691
          },
          "name": "averageUtilization",
          "parameters": [
            {
              "docs": {
                "remarks": "e.g. `50` for 50%.",
                "summary": "The percentage of the utilization metric."
              },
              "name": "averageUtilization",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.MetricTarget"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Target the average value across all relevant pods."
          },
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 679
          },
          "name": "averageValue",
          "parameters": [
            {
              "docs": {
                "summary": "The average metric value."
              },
              "name": "averageValue",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.MetricTarget"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Target a specific target value."
          },
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 667
          },
          "name": "value",
          "parameters": [
            {
              "docs": {
                "summary": "The target value."
              },
              "name": "value",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.MetricTarget"
            }
          },
          "static": true
        }
      ],
      "name": "MetricTarget",
      "symbolId": "src/horizontal-pod-autoscaler:MetricTarget"
    },
    "cdk8s-plus-28.MountOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for mounts."
      },
      "fqn": "cdk8s-plus-28.MountOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 1210
      },
      "name": "MountOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "MountPropagation.NONE",
            "remarks": "When not set, MountPropagationNone is used.\n\nMount propagation allows for sharing volumes mounted by a Container to\nother Containers in the same Pod, or even to other Pods on the same node.",
            "stability": "stable",
            "summary": "Determines how mounts are propagated from the host to container and the other way around."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1220
          },
          "name": "propagation",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.MountPropagation"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "Defaults to false.",
            "stability": "stable",
            "summary": "Mounted read-only if true, read-write otherwise (false or unspecified)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1228
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"\" the volume's root",
            "stability": "stable",
            "summary": "Path within the volume from which the container's volume should be mounted.)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1235
          },
          "name": "subPath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"\" volume's root.",
            "remarks": "Behaves similarly to SubPath but environment variable references\n$(VAR_NAME) are expanded using the container's environment. Defaults to \"\"\n(volume's root).\n\n`subPathExpr` and `subPath` are mutually exclusive.",
            "stability": "stable",
            "summary": "Expanded path within the volume from which the container's volume should be mounted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1247
          },
          "name": "subPathExpr",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/container:MountOptions"
    },
    "cdk8s-plus-28.MountPropagation": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable"
      },
      "fqn": "cdk8s-plus-28.MountPropagation",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 1266
      },
      "members": [
        {
          "docs": {
            "remarks": "In similar\nfashion, no mounts created by the Container will be visible on the host.\n\nThis is the default mode.\n\nThis mode is equal to `private` mount propagation as described in the Linux\nkernel documentation",
            "stability": "stable",
            "summary": "This volume mount will not receive any subsequent mounts that are mounted to this volume or any of its subdirectories by the host."
          },
          "name": "NONE"
        },
        {
          "docs": {
            "remarks": "In other words, if the host mounts anything inside the volume mount, the\nContainer will see it mounted there.\n\nSimilarly, if any Pod with Bidirectional mount propagation to the same\nvolume mounts anything there, the Container with HostToContainer mount\npropagation will see it.\n\nThis mode is equal to `rslave` mount propagation as described in the Linux\nkernel documentation",
            "stability": "stable",
            "summary": "This volume mount will receive all subsequent mounts that are mounted to this volume or any of its subdirectories."
          },
          "name": "HOST_TO_CONTAINER"
        },
        {
          "docs": {
            "remarks": "In addition,\nall volume mounts created by the Container will be propagated back to the\nhost and to all Containers of all Pods that use the same volume\n\nA typical use case for this mode is a Pod with a FlexVolume or CSI driver\nor a Pod that needs to mount something on the host using a hostPath volume.\n\nThis mode is equal to `rshared` mount propagation as described in the Linux\nkernel documentation\n\nCaution: Bidirectional mount propagation can be dangerous. It can damage\nthe host operating system and therefore it is allowed only in privileged\nContainers. Familiarity with Linux kernel behavior is strongly recommended.\nIn addition, any volume mounts created by Containers in Pods must be\ndestroyed (unmounted) by the Containers on termination.",
            "stability": "stable",
            "summary": "This volume mount behaves the same the HostToContainer mount."
          },
          "name": "BIDIRECTIONAL"
        }
      ],
      "name": "MountPropagation",
      "symbolId": "src/container:MountPropagation"
    },
    "cdk8s-plus-28.NamedNode": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "A node that is matched by its name."
      },
      "fqn": "cdk8s-plus-28.NamedNode",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/pod.ts",
          "line": 1264
        },
        "parameters": [
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/pod.ts",
        "line": 1263
      },
      "name": "NamedNode",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1264
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/pod:NamedNode"
    },
    "cdk8s-plus-28.Namespace": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s-plus-28.Resource",
      "docs": {
        "remarks": "Names of resources need to be unique within a namespace, but not across namespaces.\nNamespace-based scoping is applicable only for namespaced objects (e.g. Deployments, Services, etc) and\nnot for cluster-wide objects (e.g. StorageClass, Nodes, PersistentVolumes, etc).",
        "stability": "stable",
        "summary": "In Kubernetes, namespaces provides a mechanism for isolating groups of resources within a single cluster."
      },
      "fqn": "cdk8s-plus-28.Namespace",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/namespace.ts",
          "line": 61
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.NamespaceProps"
            }
          }
        ]
      },
      "interfaces": [
        "cdk8s-plus-28.INamespaceSelector",
        "cdk8s-plus-28.INetworkPolicyPeer"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/namespace.ts",
        "line": 45
      },
      "methods": [
        {
          "docs": {
            "see": "INamespaceSelector.toNamespaceSelectorConfig()",
            "stability": "stable",
            "summary": "Return the configuration of this selector."
          },
          "locationInModule": {
            "filename": "src/namespace.ts",
            "line": 78
          },
          "name": "toNamespaceSelectorConfig",
          "overrides": "cdk8s-plus-28.INamespaceSelector",
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.NamespaceSelectorConfig"
            }
          }
        },
        {
          "docs": {
            "see": "INetworkPolicyPeer.toNetworkPolicyPeerConfig()",
            "stability": "stable",
            "summary": "Return the configuration of this peer."
          },
          "locationInModule": {
            "filename": "src/namespace.ts",
            "line": 85
          },
          "name": "toNetworkPolicyPeerConfig",
          "overrides": "cdk8s-plus-28.INetworkPolicyPeer",
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.NetworkPolicyPeerConfig"
            }
          }
        },
        {
          "docs": {
            "see": "INetworkPolicyPeer.toPodSelector()",
            "stability": "stable",
            "summary": "Convert the peer into a pod selector, if possible."
          },
          "locationInModule": {
            "filename": "src/namespace.ts",
            "line": 92
          },
          "name": "toPodSelector",
          "overrides": "cdk8s-plus-28.INetworkPolicyPeer",
          "returns": {
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.IPodSelector"
            }
          }
        }
      ],
      "name": "Namespace",
      "properties": [
        {
          "const": true,
          "docs": {
            "see": "https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/#automatic-labelling",
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/namespace.ts",
            "line": 50
          },
          "name": "NAME_LABEL",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "base.Resource.apiObject",
            "stability": "stable",
            "summary": "The underlying cdk8s API object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/namespace.ts",
            "line": 55
          },
          "name": "apiObject",
          "overrides": "cdk8s-plus-28.Resource",
          "protected": true,
          "type": {
            "fqn": "cdk8s.ApiObject"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of a resource type as it appears in the relevant API endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/namespace.ts",
            "line": 57
          },
          "name": "resourceType",
          "overrides": "cdk8s-plus-28.Resource",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/namespace:Namespace"
    },
    "cdk8s-plus-28.NamespaceProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for `Namespace`."
      },
      "fqn": "cdk8s-plus-28.NamespaceProps",
      "interfaces": [
        "cdk8s-plus-28.ResourceProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/namespace.ts",
        "line": 37
      },
      "name": "NamespaceProps",
      "symbolId": "src/namespace:NamespaceProps"
    },
    "cdk8s-plus-28.NamespaceSelectorConfig": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Configuration for selecting namespaces."
      },
      "fqn": "cdk8s-plus-28.NamespaceSelectorConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/namespace.ts",
        "line": 11
      },
      "name": "NamespaceSelectorConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "A selector to select namespaces by labels."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/namespace.ts",
            "line": 16
          },
          "name": "labelSelector",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.LabelSelector"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "A list of names to select namespaces by names."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/namespace.ts",
            "line": 21
          },
          "name": "names",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/namespace:NamespaceSelectorConfig"
    },
    "cdk8s-plus-28.Namespaces": {
      "assembly": "cdk8s-plus-28",
      "base": "constructs.Construct",
      "docs": {
        "stability": "stable",
        "summary": "Represents a group of namespaces."
      },
      "fqn": "cdk8s-plus-28.Namespaces",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/namespace.ts",
          "line": 157
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "expressions",
            "optional": true,
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "cdk8s-plus-28.LabelExpression"
                },
                "kind": "array"
              }
            }
          },
          {
            "name": "names",
            "optional": true,
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          },
          {
            "name": "labels",
            "optional": true,
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "map"
              }
            }
          }
        ]
      },
      "interfaces": [
        "cdk8s-plus-28.INamespaceSelector",
        "cdk8s-plus-28.INetworkPolicyPeer"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/namespace.ts",
        "line": 139
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Select all namespaces."
          },
          "locationInModule": {
            "filename": "src/namespace.ts",
            "line": 151
          },
          "name": "all",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.Namespaces"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Select specific namespaces."
          },
          "locationInModule": {
            "filename": "src/namespace.ts",
            "line": 144
          },
          "name": "select",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "cdk8s-plus-28.NamespacesSelectOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.Namespaces"
            }
          },
          "static": true
        },
        {
          "docs": {
            "see": "INamespaceSelector.toNamespaceSelectorConfig()",
            "stability": "stable",
            "summary": "Return the configuration of this selector."
          },
          "locationInModule": {
            "filename": "src/namespace.ts",
            "line": 169
          },
          "name": "toNamespaceSelectorConfig",
          "overrides": "cdk8s-plus-28.INamespaceSelector",
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.NamespaceSelectorConfig"
            }
          }
        },
        {
          "docs": {
            "see": "INetworkPolicyPeer.toNetworkPolicyPeerConfig()",
            "stability": "stable",
            "summary": "Return the configuration of this peer."
          },
          "locationInModule": {
            "filename": "src/namespace.ts",
            "line": 179
          },
          "name": "toNetworkPolicyPeerConfig",
          "overrides": "cdk8s-plus-28.INetworkPolicyPeer",
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.NetworkPolicyPeerConfig"
            }
          }
        },
        {
          "docs": {
            "see": "INetworkPolicyPeer.toPodSelector()",
            "stability": "stable",
            "summary": "Convert the peer into a pod selector, if possible."
          },
          "locationInModule": {
            "filename": "src/namespace.ts",
            "line": 186
          },
          "name": "toPodSelector",
          "overrides": "cdk8s-plus-28.INetworkPolicyPeer",
          "returns": {
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.IPodSelector"
            }
          }
        }
      ],
      "name": "Namespaces",
      "symbolId": "src/namespace:Namespaces"
    },
    "cdk8s-plus-28.NamespacesSelectOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for `Namespaces.select`."
      },
      "fqn": "cdk8s-plus-28.NamespacesSelectOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/namespace.ts",
        "line": 108
      },
      "name": "NamespacesSelectOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- no selector requirements.",
            "remarks": "The selectors query labels, just like the `labels` property, but they\nprovide a more advanced matching mechanism.",
            "stability": "stable",
            "summary": "Namespaces must satisfy these selectors."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/namespace.ts",
            "line": 125
          },
          "name": "expressions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.LabelExpression"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no strict labels requirements.",
            "remarks": "This is equivalent to using an 'Is' selector.",
            "stability": "stable",
            "summary": "Labels the namespaces must have."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/namespace.ts",
            "line": 116
          },
          "name": "labels",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no name requirements.",
            "stability": "stable",
            "summary": "Namespaces names must be one of these."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/namespace.ts",
            "line": 132
          },
          "name": "names",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/namespace:NamespacesSelectOptions"
    },
    "cdk8s-plus-28.NetworkPolicy": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s-plus-28.Resource",
      "docs": {
        "remarks": "- Outgoing traffic is allowed if there are no network policies selecting\n   the pod (and cluster policy otherwise allows the traffic),\n   OR if the traffic matches at least one egress rule across all of the\n   network policies that select the pod.\n\n- Incoming traffic is allowed to a pod if there are no network policies\n   selecting the pod (and cluster policy otherwise allows the traffic),\n   OR if the traffic source is the pod's local node,\n   OR if the traffic matches at least one ingress rule across all of\n   the network policies that select the pod.\n\nNetwork policies do not conflict; they are additive.\nIf any policy or policies apply to a given pod for a given\ndirection, the connections allowed in that direction from\nthat pod is the union of what the applicable policies allow.\nThus, order of evaluation does not affect the policy result.\n\nFor a connection from a source pod to a destination pod to be allowed,\nboth the egress policy on the source pod and the ingress policy on the\ndestination pod need to allow the connection.\nIf either side does not allow the connection, it will not happen.",
        "see": "https://kubernetes.io/docs/concepts/services-networking/network-policies/#networkpolicy-resource",
        "stability": "stable",
        "summary": "Control traffic flow at the IP address or port level (OSI layer 3 or 4), network policies are an application-centric construct which allow you to specify how a pod is allowed to communicate with various network peers."
      },
      "fqn": "cdk8s-plus-28.NetworkPolicy",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/network-policy.ts",
          "line": 399
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.NetworkPolicyProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/network-policy.ts",
        "line": 385
      },
      "methods": [
        {
          "docs": {
            "remarks": "If ports are not passed, traffic will be allowed on all ports.",
            "stability": "stable",
            "summary": "Allow outgoing traffic to the peer."
          },
          "locationInModule": {
            "filename": "src/network-policy.ts",
            "line": 445
          },
          "name": "addEgressRule",
          "parameters": [
            {
              "name": "peer",
              "type": {
                "fqn": "cdk8s-plus-28.INetworkPolicyPeer"
              }
            },
            {
              "name": "ports",
              "optional": true,
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "cdk8s-plus-28.NetworkPolicyPort"
                  },
                  "kind": "array"
                }
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "If ports are not passed, traffic will be allowed on all ports.",
            "stability": "stable",
            "summary": "Allow incoming traffic from the peer."
          },
          "locationInModule": {
            "filename": "src/network-policy.ts",
            "line": 455
          },
          "name": "addIngressRule",
          "parameters": [
            {
              "name": "peer",
              "type": {
                "fqn": "cdk8s-plus-28.INetworkPolicyPeer"
              }
            },
            {
              "name": "ports",
              "optional": true,
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "cdk8s-plus-28.NetworkPolicyPort"
                  },
                  "kind": "array"
                }
              }
            }
          ]
        }
      ],
      "name": "NetworkPolicy",
      "properties": [
        {
          "docs": {
            "see": "base.Resource.apiObject",
            "stability": "stable",
            "summary": "The underlying cdk8s API object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/network-policy.ts",
            "line": 390
          },
          "name": "apiObject",
          "overrides": "cdk8s-plus-28.Resource",
          "protected": true,
          "type": {
            "fqn": "cdk8s.ApiObject"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of a resource type as it appears in the relevant API endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/network-policy.ts",
            "line": 392
          },
          "name": "resourceType",
          "overrides": "cdk8s-plus-28.Resource",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/network-policy:NetworkPolicy"
    },
    "cdk8s-plus-28.NetworkPolicyAddEgressRuleOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for `NetworkPolicy.addEgressRule`."
      },
      "fqn": "cdk8s-plus-28.NetworkPolicyAddEgressRuleOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/network-policy.ts",
        "line": 310
      },
      "name": "NetworkPolicyAddEgressRuleOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- If the peer is a managed pod, take its ports. Otherwise, all ports are allowed.",
            "stability": "stable",
            "summary": "Ports the rule should allow outgoing traffic to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/network-policy.ts",
            "line": 317
          },
          "name": "ports",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.NetworkPolicyPort"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/network-policy:NetworkPolicyAddEgressRuleOptions"
    },
    "cdk8s-plus-28.NetworkPolicyIpBlock": {
      "assembly": "cdk8s-plus-28",
      "base": "constructs.Construct",
      "docs": {
        "remarks": "\"192.168.1.1/24\",\"2001:db9::/64\") that is\nallowed to the pods matched by a network policy selector.\nThe except entry describes CIDRs that should not be included within this rule.",
        "stability": "stable",
        "summary": "Describes a particular CIDR (Ex."
      },
      "fqn": "cdk8s-plus-28.NetworkPolicyIpBlock",
      "interfaces": [
        "cdk8s-plus-28.INetworkPolicyPeer"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/network-policy.ts",
        "line": 162
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Any IPv4 address."
          },
          "locationInModule": {
            "filename": "src/network-policy.ts",
            "line": 184
          },
          "name": "anyIpv4",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.NetworkPolicyIpBlock"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Any IPv6 address."
          },
          "locationInModule": {
            "filename": "src/network-policy.ts",
            "line": 209
          },
          "name": "anyIpv6",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.NetworkPolicyIpBlock"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Create an IPv4 peer from a CIDR."
          },
          "locationInModule": {
            "filename": "src/network-policy.ts",
            "line": 167
          },
          "name": "ipv4",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "cidrIp",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "except",
              "optional": true,
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.NetworkPolicyIpBlock"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Create an IPv6 peer from a CIDR."
          },
          "locationInModule": {
            "filename": "src/network-policy.ts",
            "line": 191
          },
          "name": "ipv6",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "cidrIp",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "except",
              "optional": true,
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.NetworkPolicyIpBlock"
            }
          },
          "static": true
        },
        {
          "docs": {
            "see": "INetworkPolicyPeer.toNetworkPolicyPeerConfig()",
            "stability": "stable",
            "summary": "Return the configuration of this peer."
          },
          "locationInModule": {
            "filename": "src/network-policy.ts",
            "line": 229
          },
          "name": "toNetworkPolicyPeerConfig",
          "overrides": "cdk8s-plus-28.INetworkPolicyPeer",
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.NetworkPolicyPeerConfig"
            }
          }
        },
        {
          "docs": {
            "see": "INetworkPolicyPeer.toPodSelector()",
            "stability": "stable",
            "summary": "Convert the peer into a pod selector, if possible."
          },
          "locationInModule": {
            "filename": "src/network-policy.ts",
            "line": 236
          },
          "name": "toPodSelector",
          "overrides": "cdk8s-plus-28.INetworkPolicyPeer",
          "returns": {
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.IPodSelector"
            }
          }
        }
      ],
      "name": "NetworkPolicyIpBlock",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "A string representing the IP Block Valid examples are \"192.168.1.1/24\" or \"2001:db9::/64\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/network-policy.ts",
            "line": 217
          },
          "name": "cidr",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A slice of CIDRs that should not be included within an IP Block Valid examples are \"192.168.1.1/24\" or \"2001:db9::/64\". Except values will be rejected if they are outside the CIDR range."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/network-policy.ts",
            "line": 222
          },
          "name": "except",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/network-policy:NetworkPolicyIpBlock"
    },
    "cdk8s-plus-28.NetworkPolicyPeerConfig": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "remarks": "A peer can either by an ip block, or a selection of pods, not both.",
        "stability": "stable",
        "summary": "Configuration for network peers."
      },
      "fqn": "cdk8s-plus-28.NetworkPolicyPeerConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/network-policy.ts",
        "line": 109
      },
      "name": "NetworkPolicyPeerConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The ip block this peer represents."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/network-policy.ts",
            "line": 114
          },
          "name": "ipBlock",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.NetworkPolicyIpBlock"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The pod selector this peer represents."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/network-policy.ts",
            "line": 119
          },
          "name": "podSelector",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.PodSelectorConfig"
          }
        }
      ],
      "symbolId": "src/network-policy:NetworkPolicyPeerConfig"
    },
    "cdk8s-plus-28.NetworkPolicyPort": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Describes a port to allow traffic on."
      },
      "fqn": "cdk8s-plus-28.NetworkPolicyPort",
      "kind": "class",
      "locationInModule": {
        "filename": "src/network-policy.ts",
        "line": 40
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Any TCP traffic."
          },
          "locationInModule": {
            "filename": "src/network-policy.ts",
            "line": 59
          },
          "name": "allTcp",
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.NetworkPolicyPort"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Any UDP traffic."
          },
          "locationInModule": {
            "filename": "src/network-policy.ts",
            "line": 80
          },
          "name": "allUdp",
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.NetworkPolicyPort"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Custom port configuration."
          },
          "locationInModule": {
            "filename": "src/network-policy.ts",
            "line": 87
          },
          "name": "of",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.NetworkPolicyPortProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.NetworkPolicyPort"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Distinct TCP ports."
          },
          "locationInModule": {
            "filename": "src/network-policy.ts",
            "line": 45
          },
          "name": "tcp",
          "parameters": [
            {
              "name": "port",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.NetworkPolicyPort"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A TCP port range."
          },
          "locationInModule": {
            "filename": "src/network-policy.ts",
            "line": 52
          },
          "name": "tcpRange",
          "parameters": [
            {
              "name": "startPort",
              "type": {
                "primitive": "number"
              }
            },
            {
              "name": "endPort",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.NetworkPolicyPort"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Distinct UDP ports."
          },
          "locationInModule": {
            "filename": "src/network-policy.ts",
            "line": 66
          },
          "name": "udp",
          "parameters": [
            {
              "name": "port",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.NetworkPolicyPort"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A UDP port range."
          },
          "locationInModule": {
            "filename": "src/network-policy.ts",
            "line": 73
          },
          "name": "udpRange",
          "parameters": [
            {
              "name": "startPort",
              "type": {
                "primitive": "number"
              }
            },
            {
              "name": "endPort",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.NetworkPolicyPort"
            }
          },
          "static": true
        }
      ],
      "name": "NetworkPolicyPort",
      "symbolId": "src/network-policy:NetworkPolicyPort"
    },
    "cdk8s-plus-28.NetworkPolicyPortProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for `NetworkPolicyPort`."
      },
      "fqn": "cdk8s-plus-28.NetworkPolicyPortProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/network-policy.ts",
        "line": 12
      },
      "name": "NetworkPolicyPortProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- not a port range.",
            "remarks": "Only applies if `port` is defined.\nUse this to specify a port range, rather that a specific one.",
            "stability": "stable",
            "summary": "End port (relative to `port`)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/network-policy.ts",
            "line": 27
          },
          "name": "endPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- all ports are allowed.",
            "stability": "stable",
            "summary": "Specific port number."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/network-policy.ts",
            "line": 19
          },
          "name": "port",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "NetworkProtocol.TCP",
            "stability": "stable",
            "summary": "Protocol."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/network-policy.ts",
            "line": 34
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.NetworkProtocol"
          }
        }
      ],
      "symbolId": "src/network-policy:NetworkPolicyPortProps"
    },
    "cdk8s-plus-28.NetworkPolicyProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for `NetworkPolicy`."
      },
      "fqn": "cdk8s-plus-28.NetworkPolicyProps",
      "interfaces": [
        "cdk8s-plus-28.ResourceProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/network-policy.ts",
        "line": 325
      },
      "name": "NetworkPolicyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- the policy doesn't change egress behavior of the pods it selects.",
            "stability": "stable",
            "summary": "Egress traffic configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/network-policy.ts",
            "line": 346
          },
          "name": "egress",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.NetworkPolicyTraffic"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- the policy doesn't change ingress behavior of the pods it selects.",
            "stability": "stable",
            "summary": "Ingress traffic configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/network-policy.ts",
            "line": 353
          },
          "name": "ingress",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.NetworkPolicyTraffic"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- will select all pods in the namespace of the policy.",
            "remarks": "This can either be a single pod / workload, or a grouping of pods selected\nvia the `Pods.select` function. Rules is applied to any pods selected by this property.\nMultiple network policies can select the same set of pods.\nIn this case, the rules for each are combined additively.\n\nNote that",
            "stability": "stable",
            "summary": "Which pods does this policy object applies to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/network-policy.ts",
            "line": 339
          },
          "name": "selector",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.IPodSelector"
          }
        }
      ],
      "symbolId": "src/network-policy:NetworkPolicyProps"
    },
    "cdk8s-plus-28.NetworkPolicyRule": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Describes a rule allowing traffic from / to pods matched by a network policy selector."
      },
      "fqn": "cdk8s-plus-28.NetworkPolicyRule",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/network-policy.ts",
        "line": 141
      },
      "name": "NetworkPolicyRule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Peer this rule interacts with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/network-policy.ts",
            "line": 153
          },
          "name": "peer",
          "type": {
            "fqn": "cdk8s-plus-28.INetworkPolicyPeer"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- traffic is allowed on all ports.",
            "stability": "stable",
            "summary": "The ports of the rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/network-policy.ts",
            "line": 148
          },
          "name": "ports",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.NetworkPolicyPort"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/network-policy:NetworkPolicyRule"
    },
    "cdk8s-plus-28.NetworkPolicyTraffic": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Describes how the network policy should configure egress / ingress traffic."
      },
      "fqn": "cdk8s-plus-28.NetworkPolicyTraffic",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/network-policy.ts",
        "line": 288
      },
      "name": "NetworkPolicyTraffic",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- unset, the policy does not change the behavior.",
            "stability": "stable",
            "summary": "Specifies the default behavior of the policy when no rules are defined."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/network-policy.ts",
            "line": 296
          },
          "name": "default",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.NetworkPolicyTrafficDefault"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no rules",
            "remarks": "If empty, the behavior of the policy is dictated by the `default` property.",
            "stability": "stable",
            "summary": "List of rules to be applied to the selected pods."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/network-policy.ts",
            "line": 304
          },
          "name": "rules",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.NetworkPolicyRule"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/network-policy:NetworkPolicyTraffic"
    },
    "cdk8s-plus-28.NetworkPolicyTrafficDefault": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Default behaviors of network traffic in policies."
      },
      "fqn": "cdk8s-plus-28.NetworkPolicyTrafficDefault",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/network-policy.ts",
        "line": 270
      },
      "members": [
        {
          "docs": {
            "remarks": "Since rules are additive, additional rules or policies can allow\nspecific traffic.",
            "stability": "stable",
            "summary": "The policy denies all traffic."
          },
          "name": "DENY"
        },
        {
          "docs": {
            "remarks": "Since rules are additive, no additional rule or policies can\nsubsequently deny the traffic.",
            "stability": "stable",
            "summary": "The policy allows all traffic (either ingress or egress)."
          },
          "name": "ALLOW"
        }
      ],
      "name": "NetworkPolicyTrafficDefault",
      "symbolId": "src/network-policy:NetworkPolicyTrafficDefault"
    },
    "cdk8s-plus-28.NetworkProtocol": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Network protocols."
      },
      "fqn": "cdk8s-plus-28.NetworkProtocol",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/network-policy.ts",
        "line": 252
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "TCP."
          },
          "name": "TCP"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "UDP."
          },
          "name": "UDP"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "SCTP."
          },
          "name": "SCTP"
        }
      ],
      "name": "NetworkProtocol",
      "symbolId": "src/network-policy:NetworkProtocol"
    },
    "cdk8s-plus-28.NfsVolumeOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for the NFS based volume."
      },
      "fqn": "cdk8s-plus-28.NfsVolumeOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/volume.ts",
        "line": 701
      },
      "name": "NfsVolumeOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Path that is exported by the NFS server."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 718
          },
          "name": "path",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Server is the hostname or IP address of the NFS server."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 706
          },
          "name": "server",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- false",
            "stability": "stable",
            "summary": "If set to true, will force the NFS export to be mounted with read-only permissions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 713
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/volume:NfsVolumeOptions"
    },
    "cdk8s-plus-28.Node": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Represents a node in the cluster."
      },
      "fqn": "cdk8s-plus-28.Node",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/pod.ts",
        "line": 1270
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Match a node by its labels."
          },
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1275
          },
          "name": "labeled",
          "parameters": [
            {
              "name": "labelSelector",
              "type": {
                "fqn": "cdk8s-plus-28.NodeLabelQuery"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.LabeledNode"
            }
          },
          "static": true,
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Match a node by its name."
          },
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1282
          },
          "name": "named",
          "parameters": [
            {
              "name": "nodeName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.NamedNode"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Match a node by its taints."
          },
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1289
          },
          "name": "tainted",
          "parameters": [
            {
              "name": "taintSelector",
              "type": {
                "fqn": "cdk8s-plus-28.NodeTaintQuery"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.TaintedNode"
            }
          },
          "static": true,
          "variadic": true
        }
      ],
      "name": "Node",
      "symbolId": "src/pod:Node"
    },
    "cdk8s-plus-28.NodeLabelQuery": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Represents a query that can be performed against nodes with labels."
      },
      "fqn": "cdk8s-plus-28.NodeLabelQuery",
      "kind": "class",
      "locationInModule": {
        "filename": "src/pod.ts",
        "line": 939
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Requires label `key` to not exist."
          },
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 972
          },
          "name": "doesNotExist",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.NodeLabelQuery"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Requires label `key` to exist."
          },
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 965
          },
          "name": "exists",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.NodeLabelQuery"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Requires value of label `key` to greater than all elements in `values`."
          },
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 979
          },
          "name": "gt",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "values",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.NodeLabelQuery"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Requires value of label `key` to be one of `values`."
          },
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 951
          },
          "name": "in",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "values",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.NodeLabelQuery"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Requires value of label `key` to equal `value`."
          },
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 944
          },
          "name": "is",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.NodeLabelQuery"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Requires value of label `key` to less than all elements in `values`."
          },
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 986
          },
          "name": "lt",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "values",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.NodeLabelQuery"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Requires value of label `key` to be none of `values`."
          },
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 958
          },
          "name": "notIn",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "values",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.NodeLabelQuery"
            }
          },
          "static": true
        }
      ],
      "name": "NodeLabelQuery",
      "symbolId": "src/pod:NodeLabelQuery"
    },
    "cdk8s-plus-28.NodeTaintQuery": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Taint queries that can be perfomed against nodes."
      },
      "fqn": "cdk8s-plus-28.NodeTaintQuery",
      "kind": "class",
      "locationInModule": {
        "filename": "src/pod.ts",
        "line": 1100
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Matches any taint."
          },
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1119
          },
          "name": "any",
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.NodeTaintQuery"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Matches a tain with any value of a specific key."
          },
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1112
          },
          "name": "exists",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.NodeTaintQueryOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.NodeTaintQuery"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Matches a taint with a specific key and value."
          },
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1105
          },
          "name": "is",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.NodeTaintQueryOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.NodeTaintQuery"
            }
          },
          "static": true
        }
      ],
      "name": "NodeTaintQuery",
      "symbolId": "src/pod:NodeTaintQuery"
    },
    "cdk8s-plus-28.NodeTaintQueryOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for `NodeTaintQuery`."
      },
      "fqn": "cdk8s-plus-28.NodeTaintQueryOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/pod.ts",
        "line": 1080
      },
      "name": "NodeTaintQueryOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- all effects are matched.",
            "stability": "stable",
            "summary": "The taint effect to match."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1086
          },
          "name": "effect",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.TaintEffect"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- bound forever.",
            "remarks": "Only applies for the `NO_EXECUTE` effect.",
            "stability": "stable",
            "summary": "How much time should a pod that tolerates the `NO_EXECUTE` effect be bound to the node."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1094
          },
          "name": "evictAfter",
          "optional": true,
          "type": {
            "fqn": "cdk8s.Duration"
          }
        }
      ],
      "symbolId": "src/pod:NodeTaintQueryOptions"
    },
    "cdk8s-plus-28.NonApiResource": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Factory for creating non api resources."
      },
      "fqn": "cdk8s-plus-28.NonApiResource",
      "interfaces": [
        "cdk8s-plus-28.IApiEndpoint"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/api-resource.generated.ts",
        "line": 532
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 534
          },
          "name": "of",
          "parameters": [
            {
              "name": "url",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.NonApiResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the IApiResource this object represents."
          },
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 540
          },
          "name": "asApiResource",
          "overrides": "cdk8s-plus-28.IApiEndpoint",
          "returns": {
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.IApiResource"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the non resource url this object represents."
          },
          "locationInModule": {
            "filename": "src/api-resource.generated.ts",
            "line": 544
          },
          "name": "asNonApiResource",
          "overrides": "cdk8s-plus-28.IApiEndpoint",
          "returns": {
            "optional": true,
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "NonApiResource",
      "symbolId": "src/api-resource.generated:NonApiResource"
    },
    "cdk8s-plus-28.PathMapping": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Maps a string key to a path within a volume."
      },
      "fqn": "cdk8s-plus-28.PathMapping",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/volume.ts",
        "line": 462
      },
      "name": "PathMapping",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "May not be an absolute\npath. May not contain the path element '..'. May not start with the string\n'..'.",
            "stability": "stable",
            "summary": "The relative path of the file to map the key to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 468
          },
          "name": "path",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If not specified, the volume defaultMode will be used. This might be\nin conflict with other options that affect the file mode, like fsGroup, and\nthe result can be other mode bits set.",
            "stability": "stable",
            "summary": "Optional: mode bits to use on this file, must be a value between 0 and 0777."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 476
          },
          "name": "mode",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/volume:PathMapping"
    },
    "cdk8s-plus-28.PercentOrAbsolute": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Union like class repsenting either a ration in percents or an absolute number."
      },
      "fqn": "cdk8s-plus-28.PercentOrAbsolute",
      "kind": "class",
      "locationInModule": {
        "filename": "src/deployment.ts",
        "line": 306
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Absolute number."
          },
          "locationInModule": {
            "filename": "src/deployment.ts",
            "line": 318
          },
          "name": "absolute",
          "parameters": [
            {
              "name": "num",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.PercentOrAbsolute"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Percent ratio."
          },
          "locationInModule": {
            "filename": "src/deployment.ts",
            "line": 311
          },
          "name": "percent",
          "parameters": [
            {
              "name": "percent",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.PercentOrAbsolute"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/deployment.ts",
            "line": 324
          },
          "name": "isZero",
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        }
      ],
      "name": "PercentOrAbsolute",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/deployment.ts",
            "line": 322
          },
          "name": "value",
          "type": {
            "primitive": "any"
          }
        }
      ],
      "symbolId": "src/deployment:PercentOrAbsolute"
    },
    "cdk8s-plus-28.PersistentVolume": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s-plus-28.Resource",
      "docs": {
        "remarks": "It is a resource in the cluster just like a node is a cluster resource.\nPVs are volume plugins like Volumes, but have a lifecycle independent of any\nindividual Pod that uses the PV. This API object captures the details of the\nimplementation of the storage, be that NFS, iSCSI, or a\ncloud-provider-specific storage system.",
        "stability": "stable",
        "summary": "A PersistentVolume (PV) is a piece of storage in the cluster that has been provisioned by an administrator or dynamically provisioned using Storage Classes."
      },
      "fqn": "cdk8s-plus-28.PersistentVolume",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/pv.ts",
          "line": 168
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.PersistentVolumeProps"
            }
          }
        ],
        "protected": true
      },
      "interfaces": [
        "cdk8s-plus-28.IPersistentVolume",
        "cdk8s-plus-28.IStorage"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/pv.ts",
        "line": 120
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Imports a pv from the cluster as a reference."
          },
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 125
          },
          "name": "fromPersistentVolumeName",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "volumeName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.IPersistentVolume"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Convert the piece of storage into a concrete volume."
          },
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 243
          },
          "name": "asVolume",
          "overrides": "cdk8s-plus-28.IStorage",
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.Volume"
            }
          }
        },
        {
          "docs": {
            "remarks": "Note that you must also bind the claim to the volume.",
            "see": "https://kubernetes.io/docs/concepts/storage/persistent-volumes/#binding",
            "stability": "stable",
            "summary": "Bind a volume to a specific claim."
          },
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 236
          },
          "name": "bind",
          "parameters": [
            {
              "docs": {
                "summary": "The PVC to bind to."
              },
              "name": "claim",
              "type": {
                "fqn": "cdk8s-plus-28.IPersistentVolumeClaim"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "Note that this method will throw in case the volume is already claimed.",
            "see": "https://kubernetes.io/docs/concepts/storage/persistent-volumes/#reserving-a-persistentvolume",
            "stability": "stable",
            "summary": "Reserve a `PersistentVolume` by creating a `PersistentVolumeClaim` that is wired to claim this volume."
          },
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 211
          },
          "name": "reserve",
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.PersistentVolumeClaim"
            }
          }
        }
      ],
      "name": "PersistentVolume",
      "properties": [
        {
          "docs": {
            "see": "base.Resource.apiObject",
            "stability": "stable",
            "summary": "The underlying cdk8s API object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 132
          },
          "name": "apiObject",
          "overrides": "cdk8s-plus-28.Resource",
          "protected": true,
          "type": {
            "fqn": "cdk8s.ApiObject"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Volume mode of this volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 146
          },
          "name": "mode",
          "type": {
            "fqn": "cdk8s-plus-28.PersistentVolumeMode"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Reclaim policy of this volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 166
          },
          "name": "reclaimPolicy",
          "type": {
            "fqn": "cdk8s-plus-28.PersistentVolumeReclaimPolicy"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of a resource type as it appears in the relevant API endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 134
          },
          "name": "resourceType",
          "overrides": "cdk8s-plus-28.Resource",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Access modes requirement of this claim."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 191
          },
          "name": "accessModes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.PersistentVolumeAccessMode"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "remarks": "Undefined means this volume is not yet\nclaimed by any PVC.",
            "stability": "stable",
            "summary": "PVC this volume is bound to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 199
          },
          "name": "claim",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.IPersistentVolumeClaim"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Mount options of this volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 161
          },
          "name": "mountOptions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Storage size of this volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 141
          },
          "name": "storage",
          "optional": true,
          "type": {
            "fqn": "cdk8s.Size"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Storage class this volume belongs to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 151
          },
          "name": "storageClassName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/pv:PersistentVolume"
    },
    "cdk8s-plus-28.PersistentVolumeAccessMode": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Access Modes."
      },
      "fqn": "cdk8s-plus-28.PersistentVolumeAccessMode",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/pvc.ts",
        "line": 215
      },
      "members": [
        {
          "docs": {
            "remarks": "ReadWriteOnce access mode still can allow multiple pods to access\nthe volume when the pods are running on the same node.",
            "stability": "stable",
            "summary": "The volume can be mounted as read-write by a single node."
          },
          "name": "READ_WRITE_ONCE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The volume can be mounted as read-only by many nodes."
          },
          "name": "READ_ONLY_MANY"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The volume can be mounted as read-write by many nodes."
          },
          "name": "READ_WRITE_MANY"
        },
        {
          "docs": {
            "remarks": "Use ReadWriteOncePod access mode if you want to ensure that\nonly one pod across whole cluster can read that PVC or write to it.\nThis is only supported for CSI volumes and Kubernetes version 1.22+.",
            "stability": "stable",
            "summary": "The volume can be mounted as read-write by a single Pod."
          },
          "name": "READ_WRITE_ONCE_POD"
        }
      ],
      "name": "PersistentVolumeAccessMode",
      "symbolId": "src/pvc:PersistentVolumeAccessMode"
    },
    "cdk8s-plus-28.PersistentVolumeClaim": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s-plus-28.Resource",
      "docs": {
        "remarks": "It is similar to a Pod. Pods consume node resources and PVCs consume PV resources.\nPods can request specific levels of resources (CPU and Memory).\nClaims can request specific size and access modes",
        "stability": "stable",
        "summary": "A PersistentVolumeClaim (PVC) is a request for storage by a user."
      },
      "fqn": "cdk8s-plus-28.PersistentVolumeClaim",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/pvc.ts",
          "line": 148
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.PersistentVolumeClaimProps"
            }
          }
        ]
      },
      "interfaces": [
        "cdk8s-plus-28.IPersistentVolumeClaim"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/pvc.ts",
        "line": 113
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Imports a pvc from the cluster as a reference."
          },
          "locationInModule": {
            "filename": "src/pvc.ts",
            "line": 118
          },
          "name": "fromClaimName",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "claimName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.IPersistentVolumeClaim"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Note that you must also bind the volume to the claim.",
            "see": "https://kubernetes.io/docs/concepts/storage/persistent-volumes/#binding",
            "stability": "stable",
            "summary": "Bind a claim to a specific volume."
          },
          "locationInModule": {
            "filename": "src/pvc.ts",
            "line": 189
          },
          "name": "bind",
          "parameters": [
            {
              "docs": {
                "summary": "The PV to bind to."
              },
              "name": "vol",
              "type": {
                "fqn": "cdk8s-plus-28.IPersistentVolume"
              }
            }
          ]
        }
      ],
      "name": "PersistentVolumeClaim",
      "properties": [
        {
          "docs": {
            "see": "base.Resource.apiObject",
            "stability": "stable",
            "summary": "The underlying cdk8s API object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pvc.ts",
            "line": 125
          },
          "name": "apiObject",
          "overrides": "cdk8s-plus-28.Resource",
          "protected": true,
          "type": {
            "fqn": "cdk8s.ApiObject"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of a resource type as it appears in the relevant API endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pvc.ts",
            "line": 127
          },
          "name": "resourceType",
          "overrides": "cdk8s-plus-28.Resource",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Volume mode requirement of this claim."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pvc.ts",
            "line": 137
          },
          "name": "volumeMode",
          "type": {
            "fqn": "cdk8s-plus-28.PersistentVolumeMode"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Access modes requirement of this claim."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pvc.ts",
            "line": 169
          },
          "name": "accessModes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.PersistentVolumeAccessMode"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Storage requirement of this claim."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pvc.ts",
            "line": 132
          },
          "name": "storage",
          "optional": true,
          "type": {
            "fqn": "cdk8s.Size"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Storage class requirment of this claim."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pvc.ts",
            "line": 142
          },
          "name": "storageClassName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "remarks": "Undefined means the claim is not bound\nto any specific volume.",
            "stability": "stable",
            "summary": "PV this claim is bound to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pvc.ts",
            "line": 177
          },
          "name": "volume",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.IPersistentVolume"
          }
        }
      ],
      "symbolId": "src/pvc:PersistentVolumeClaim"
    },
    "cdk8s-plus-28.PersistentVolumeClaimProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for `PersistentVolumeClaim`."
      },
      "fqn": "cdk8s-plus-28.PersistentVolumeClaimProps",
      "interfaces": [
        "cdk8s-plus-28.ResourceProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/pvc.ts",
        "line": 17
      },
      "name": "PersistentVolumeClaimProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No access modes requirement.",
            "see": "https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
            "stability": "stable",
            "summary": "Contains the access modes the volume should support."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pvc.ts",
            "line": 25
          },
          "name": "accessModes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.PersistentVolumeAccessMode"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No storage requirement.",
            "see": "https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
            "stability": "stable",
            "summary": "Minimum storage size the volume should have."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pvc.ts",
            "line": 33
          },
          "name": "storage",
          "optional": true,
          "type": {
            "fqn": "cdk8s.Size"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Not set.",
            "remarks": "- If the admission plugin is turned on, the storage class marked as default will be used.\n- If the admission plugin is turned off, the pvc can only be bound to volumes without a storage class.",
            "see": "https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1",
            "stability": "stable",
            "summary": "Name of the StorageClass required by the claim. When this property is not set, the behavior is as follows:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pvc.ts",
            "line": 45
          },
          "name": "storageClassName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No specific volume binding.",
            "remarks": "The control plane still checks that storage class, access modes,\nand requested storage size on the volume are valid.\n\nNote that in order to guarantee a proper binding, the volume should\nalso define a `claimRef` referring to this claim. Otherwise, the volume may be\nclaimed be other pvc's before it gets a chance to bind to this one.\n\nIf the volume is managed (i.e not imported), you can use `pv.claim()` to easily\ncreate a bi-directional bounded claim.",
            "see": "https://kubernetes.io/docs/concepts/storage/persistent-volumes/#binding.",
            "stability": "stable",
            "summary": "The PersistentVolume backing this claim."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pvc.ts",
            "line": 70
          },
          "name": "volume",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.IPersistentVolume"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "VolumeMode.FILE_SYSTEM",
            "stability": "stable",
            "summary": "Defines what type of volume is required by the claim."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pvc.ts",
            "line": 52
          },
          "name": "volumeMode",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.PersistentVolumeMode"
          }
        }
      ],
      "symbolId": "src/pvc:PersistentVolumeClaimProps"
    },
    "cdk8s-plus-28.PersistentVolumeClaimVolumeOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for a PersistentVolumeClaim-based volume."
      },
      "fqn": "cdk8s-plus-28.PersistentVolumeClaimVolumeOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/volume.ts",
        "line": 527
      },
      "name": "PersistentVolumeClaimVolumeOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Derived from the PVC name.",
            "stability": "stable",
            "summary": "The volume name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 533
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Will force the ReadOnly setting in VolumeMounts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 540
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/volume:PersistentVolumeClaimVolumeOptions"
    },
    "cdk8s-plus-28.PersistentVolumeMode": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Volume Modes."
      },
      "fqn": "cdk8s-plus-28.PersistentVolumeMode",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/pvc.ts",
        "line": 247
      },
      "members": [
        {
          "docs": {
            "remarks": "If the volume is backed by a block device and the device is empty,\nKubernetes creates a filesystem on the device before mounting it\nfor the first time.",
            "stability": "stable",
            "summary": "Volume is ounted into Pods into a directory."
          },
          "name": "FILE_SYSTEM"
        },
        {
          "docs": {
            "remarks": "Such volume is presented into a Pod as a block device,\nwithout any filesystem on it. This mode is useful to provide a Pod the fastest possible way\nto access a volume, without any filesystem layer between the Pod\nand the volume. On the other hand, the application running in\nthe Pod must know how to handle a raw block device",
            "stability": "stable",
            "summary": "Use a volume as a raw block device."
          },
          "name": "BLOCK"
        }
      ],
      "name": "PersistentVolumeMode",
      "symbolId": "src/pvc:PersistentVolumeMode"
    },
    "cdk8s-plus-28.PersistentVolumeProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for `PersistentVolume`."
      },
      "fqn": "cdk8s-plus-28.PersistentVolumeProps",
      "interfaces": [
        "cdk8s-plus-28.ResourceProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/pv.ts",
        "line": 17
      },
      "name": "PersistentVolumeProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No access modes.",
            "see": "https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes",
            "stability": "stable",
            "summary": "Contains all ways the volume can be mounted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 25
          },
          "name": "accessModes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.PersistentVolumeAccessMode"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Not bound to a specific claim.",
            "remarks": "Expected to be non-nil when bound.",
            "see": "https://kubernetes.io/docs/concepts/storage/persistent-volumes#binding",
            "stability": "stable",
            "summary": "Part of a bi-directional binding between PersistentVolume and PersistentVolumeClaim."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 42
          },
          "name": "claim",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.IPersistentVolumeClaim"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No options.",
            "see": "https://kubernetes.io/docs/concepts/storage/persistent-volumes/#mount-options",
            "stability": "stable",
            "summary": "A list of mount options, e.g. [\"ro\", \"soft\"]. Not validated - mount will simply fail if one is invalid."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 50
          },
          "name": "mountOptions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "PersistentVolumeReclaimPolicy.RETAIN",
            "remarks": "The reclaim policy tells the cluster what to do with\nthe volume after it has been released of its claim.",
            "see": "https://kubernetes.io/docs/concepts/storage/persistent-volumes#reclaiming",
            "stability": "stable",
            "summary": "When a user is done with their volume, they can delete the PVC objects from the API that allows reclamation of the resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 60
          },
          "name": "reclaimPolicy",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.PersistentVolumeReclaimPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No specified.",
            "see": "https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
            "stability": "stable",
            "summary": "What is the storage capacity of this volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 33
          },
          "name": "storage",
          "optional": true,
          "type": {
            "fqn": "cdk8s.Size"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Volume does not belong to any storage class.",
            "stability": "stable",
            "summary": "Name of StorageClass to which this persistent volume belongs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 67
          },
          "name": "storageClassName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "VolumeMode.FILE_SYSTEM",
            "stability": "stable",
            "summary": "Defines what type of volume is required by the claim."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pv.ts",
            "line": 74
          },
          "name": "volumeMode",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.PersistentVolumeMode"
          }
        }
      ],
      "symbolId": "src/pv:PersistentVolumeProps"
    },
    "cdk8s-plus-28.PersistentVolumeReclaimPolicy": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Reclaim Policies."
      },
      "fqn": "cdk8s-plus-28.PersistentVolumeReclaimPolicy",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/pv.ts",
        "line": 270
      },
      "members": [
        {
          "docs": {
            "remarks": "When the PersistentVolumeClaim is deleted, the PersistentVolume still exists and the\nvolume is considered \"released\". But it is not yet available for another claim\nbecause the previous claimant's data remains on the volume.\nAn administrator can manually reclaim the volume with the following steps:\n\n1. Delete the PersistentVolume. The associated storage asset in external\n    infrastructure (such as an AWS EBS, GCE PD, Azure Disk, or Cinder volume) still exists after the PV is deleted.\n2. Manually clean up the data on the associated storage asset accordingly.\n3. Manually delete the associated storage asset.\n\nIf you want to reuse the same storage asset, create a new PersistentVolume\nwith the same storage asset definition.",
            "stability": "stable",
            "summary": "The Retain reclaim policy allows for manual reclamation of the resource."
          },
          "name": "RETAIN"
        },
        {
          "docs": {
            "remarks": "Volumes that were dynamically provisioned inherit the reclaim policy of their StorageClass, which defaults to Delete.\nThe administrator should configure the StorageClass according to users' expectations; otherwise,\nthe PV must be edited or patched after it is created",
            "stability": "stable",
            "summary": "For volume plugins that support the Delete reclaim policy, deletion removes both the PersistentVolume object from Kubernetes, as well as the associated storage asset in the external infrastructure, such as an AWS EBS, GCE PD, Azure Disk, or Cinder volume."
          },
          "name": "DELETE"
        }
      ],
      "name": "PersistentVolumeReclaimPolicy",
      "symbolId": "src/pv:PersistentVolumeReclaimPolicy"
    },
    "cdk8s-plus-28.Pod": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s-plus-28.AbstractPod",
      "docs": {
        "remarks": "This resource is\ncreated by clients and scheduled onto hosts.",
        "stability": "stable",
        "summary": "Pod is a collection of containers that can run on a host."
      },
      "fqn": "cdk8s-plus-28.Pod",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/pod.ts",
          "line": 564
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.PodProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/pod.ts",
        "line": 546
      },
      "name": "Pod",
      "properties": [
        {
          "const": true,
          "docs": {
            "remarks": "It provides\na unique and stable identifier for the pod.",
            "stability": "stable",
            "summary": "This label is autoamtically added by cdk8s to any pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 552
          },
          "name": "ADDRESS_LABEL",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "base.Resource.apiObject",
            "stability": "stable",
            "summary": "The underlying cdk8s API object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 557
          },
          "name": "apiObject",
          "overrides": "cdk8s-plus-28.Resource",
          "protected": true,
          "type": {
            "fqn": "cdk8s.ApiObject"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 562
          },
          "name": "connections",
          "type": {
            "fqn": "cdk8s-plus-28.PodConnections"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 582
          },
          "name": "podMetadata",
          "overrides": "cdk8s-plus-28.AbstractPod",
          "type": {
            "fqn": "cdk8s.ApiObjectMetadataDefinition"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of a resource type as it appears in the relevant API endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 559
          },
          "name": "resourceType",
          "overrides": "cdk8s-plus-28.Resource",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 561
          },
          "name": "scheduling",
          "type": {
            "fqn": "cdk8s-plus-28.PodScheduling"
          }
        }
      ],
      "symbolId": "src/pod:Pod"
    },
    "cdk8s-plus-28.PodConnections": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Controls network isolation rules for inter-pod communication."
      },
      "fqn": "cdk8s-plus-28.PodConnections",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/pod.ts",
          "line": 1669
        },
        "parameters": [
          {
            "name": "instance",
            "type": {
              "fqn": "cdk8s-plus-28.AbstractPod"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/pod.ts",
        "line": 1667
      },
      "methods": [
        {
          "docs": {
            "example": "// create only an egress policy that selects the 'web' pod to allow outgoing traffic\n// to the 'redis' pod. this requires the 'redis' pod to not be isolated for ingress.\nredis.connections.allowFrom(web, { isolation: Isolation.PEER })\n\n// create only an ingress policy that selects the 'redis' peer to allow incoming traffic\n// from the 'web' pod. this requires the 'web' pod to not be isolated for egress.\nredis.connections.allowFrom(web, { isolation: Isolation.POD })",
            "remarks": "By default, this will create an ingress network policy for this pod, and an egress\nnetwork policy for the peer. This is required if both sides are already isolated.\nUse `options.isolation` to control this behavior.",
            "stability": "stable",
            "summary": "Allow network traffic from the peer to this pod."
          },
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1711
          },
          "name": "allowFrom",
          "parameters": [
            {
              "name": "peer",
              "type": {
                "fqn": "cdk8s-plus-28.INetworkPolicyPeer"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.PodConnectionsAllowFromOptions"
              }
            }
          ]
        },
        {
          "docs": {
            "example": "// create only an egress policy that selects the 'web' pod to allow outgoing traffic\n// to the 'redis' pod. this requires the 'redis' pod to not be isolated for ingress.\nweb.connections.allowTo(redis, { isolation: Isolation.POD })\n\n// create only an ingress policy that selects the 'redis' peer to allow incoming traffic\n// from the 'web' pod. this requires the 'web' pod to not be isolated for egress.\nweb.connections.allowTo(redis, { isolation: Isolation.PEER })",
            "remarks": "By default, this will create an egress network policy for this pod, and an ingress\nnetwork policy for the peer. This is required if both sides are already isolated.\nUse `options.isolation` to control this behavior.",
            "stability": "stable",
            "summary": "Allow network traffic from this pod to the peer."
          },
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1689
          },
          "name": "allowTo",
          "parameters": [
            {
              "name": "peer",
              "type": {
                "fqn": "cdk8s-plus-28.INetworkPolicyPeer"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.PodConnectionsAllowToOptions"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Sets the default network policy for Pod/Workload to have all egress and ingress connections as disabled."
          },
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1810
          },
          "name": "isolate"
        }
      ],
      "name": "PodConnections",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1669
          },
          "name": "instance",
          "protected": true,
          "type": {
            "fqn": "cdk8s-plus-28.AbstractPod"
          }
        }
      ],
      "symbolId": "src/pod:PodConnections"
    },
    "cdk8s-plus-28.PodConnectionsAllowFromOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for `PodConnections.allowFrom`."
      },
      "fqn": "cdk8s-plus-28.PodConnectionsAllowFromOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/pod.ts",
        "line": 1646
      },
      "name": "PodConnectionsAllowFromOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- unset, isolates both the pod and the peer.",
            "stability": "stable",
            "summary": "Which isolation should be applied to establish the connection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1653
          },
          "name": "isolation",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.PodConnectionsIsolation"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The pod ports.",
            "stability": "stable",
            "summary": "Ports to allow incoming traffic to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1660
          },
          "name": "ports",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.NetworkPolicyPort"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/pod:PodConnectionsAllowFromOptions"
    },
    "cdk8s-plus-28.PodConnectionsAllowToOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for `PodConnections.allowTo`."
      },
      "fqn": "cdk8s-plus-28.PodConnectionsAllowToOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/pod.ts",
        "line": 1625
      },
      "name": "PodConnectionsAllowToOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- unset, isolates both the pod and the peer.",
            "stability": "stable",
            "summary": "Which isolation should be applied to establish the connection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1632
          },
          "name": "isolation",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.PodConnectionsIsolation"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- If the peer is a managed pod, take its ports. Otherwise, all ports are allowed.",
            "stability": "stable",
            "summary": "Ports to allow outgoing traffic to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1639
          },
          "name": "ports",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.NetworkPolicyPort"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/pod:PodConnectionsAllowToOptions"
    },
    "cdk8s-plus-28.PodConnectionsIsolation": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Isolation determines which policies are created when allowing connections from a a pod / workload to peers."
      },
      "fqn": "cdk8s-plus-28.PodConnectionsIsolation",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/pod.ts",
        "line": 1608
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Only creates network policies that select the pod."
          },
          "name": "POD"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Only creates network policies that select the peer."
          },
          "name": "PEER"
        }
      ],
      "name": "PodConnectionsIsolation",
      "symbolId": "src/pod:PodConnectionsIsolation"
    },
    "cdk8s-plus-28.PodDns": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Holds dns settings of the pod."
      },
      "fqn": "cdk8s-plus-28.PodDns",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/pod.ts",
          "line": 698
        },
        "parameters": [
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.PodDnsProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/pod.ts",
        "line": 672
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Add a nameserver."
          },
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 732
          },
          "name": "addNameserver",
          "parameters": [
            {
              "name": "nameservers",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add a custom option."
          },
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 746
          },
          "name": "addOption",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "cdk8s-plus-28.DnsOption"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add a search domain."
          },
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 739
          },
          "name": "addSearch",
          "parameters": [
            {
              "name": "searches",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "variadic": true
        }
      ],
      "name": "PodDns",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Whether or not the pods hostname is set to its FQDN."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 692
          },
          "name": "hostnameAsFQDN",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Nameservers defined for this pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 711
          },
          "name": "nameservers",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Custom dns options defined for this pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 725
          },
          "name": "options",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.DnsOption"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The DNS policy of this pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 677
          },
          "name": "policy",
          "type": {
            "fqn": "cdk8s-plus-28.DnsPolicy"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Search domains defined for this pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 718
          },
          "name": "searches",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "remarks": "Undefined means its set to a system-defined value.",
            "stability": "stable",
            "summary": "The configured hostname of the pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 682
          },
          "name": "hostname",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The configured subdomain of the pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 687
          },
          "name": "subdomain",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/pod:PodDns"
    },
    "cdk8s-plus-28.PodDnsProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for `PodDns`."
      },
      "fqn": "cdk8s-plus-28.PodDnsProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/pod.ts",
        "line": 605
      },
      "name": "PodDnsProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Set to a system-defined value.",
            "stability": "stable",
            "summary": "Specifies the hostname of the Pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 612
          },
          "name": "hostname",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "In Linux containers, this means setting the FQDN in the hostname field of the kernel (the nodename field of struct utsname).\nIn Windows containers, this means setting the registry value of hostname for the registry\nkey HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters to FQDN.\nIf a pod does not have FQDN, this has no effect.",
            "stability": "stable",
            "summary": "If true the pod's hostname will be configured as the pod's FQDN, rather than the leaf name (the default)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 630
          },
          "name": "hostnameAsFQDN",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "There can be at most 3 IP addresses specified.\nWhen the policy is set to \"NONE\", the list must contain at least one IP address,\notherwise this property is optional.\nThe servers listed will be combined to the base nameservers generated from\nthe specified DNS policy with duplicate addresses removed.",
            "stability": "stable",
            "summary": "A list of IP addresses that will be used as DNS servers for the Pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 648
          },
          "name": "nameservers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "The contents in this property\nwill be merged to the options generated from the specified DNS policy.\nDuplicate entries are removed.",
            "stability": "stable",
            "summary": "List of objects where each object may have a name property (required) and a value property (optional)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 666
          },
          "name": "options",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.DnsOption"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "DnsPolicy.CLUSTER_FIRST",
            "remarks": "If policy is set to `None`, other configuration must be supplied.",
            "stability": "stable",
            "summary": "Set DNS policy for the pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 639
          },
          "name": "policy",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.DnsPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "When specified, the provided list will be merged into the base\nsearch domain names generated from the chosen DNS policy.\nDuplicate domain names are removed.\n\nKubernetes allows for at most 6 search domains.",
            "stability": "stable",
            "summary": "A list of DNS search domains for hostname lookup in the Pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 658
          },
          "name": "searches",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No subdomain.",
            "stability": "stable",
            "summary": "If specified, the fully qualified Pod hostname will be \"<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 619
          },
          "name": "subdomain",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/pod:PodDnsProps"
    },
    "cdk8s-plus-28.PodManagementPolicy": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "remarks": "The default policy is `OrderedReady`, where pods are created in increasing order\n(pod-0, then pod-1, etc) and the controller will wait until each pod is ready before\ncontinuing. When scaling down, the pods are removed in the opposite order.\n\nThe alternative policy is `Parallel` which will create pods in parallel to match the\ndesired scale without waiting, and on scale down will delete all pods at once.",
        "stability": "stable",
        "summary": "Controls how pods are created during initial scale up, when replacing pods on nodes, or when scaling down."
      },
      "fqn": "cdk8s-plus-28.PodManagementPolicy",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/stateful-set.ts",
        "line": 20
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ORDERED_READY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "PARALLEL"
        }
      ],
      "name": "PodManagementPolicy",
      "symbolId": "src/stateful-set:PodManagementPolicy"
    },
    "cdk8s-plus-28.PodProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for `Pod`."
      },
      "fqn": "cdk8s-plus-28.PodProps",
      "interfaces": [
        "cdk8s-plus-28.AbstractPodProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/pod.ts",
        "line": 466
      },
      "name": "PodProps",
      "symbolId": "src/pod:PodProps"
    },
    "cdk8s-plus-28.PodScheduling": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Controls the pod scheduling strategy."
      },
      "fqn": "cdk8s-plus-28.PodScheduling",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/pod.ts",
          "line": 1407
        },
        "parameters": [
          {
            "name": "instance",
            "type": {
              "fqn": "cdk8s-plus-28.AbstractPod"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/pod.ts",
        "line": 1396
      },
      "methods": [
        {
          "docs": {
            "remarks": "The scheduler ignores the Pod, and the kubelet on the named node\ntries to place the Pod on that node. Overrules any affinity rules of the pod.\n\nSome limitations of static assignment are:\n\n- If the named node does not exist, the Pod will not run, and in some\n   cases may be automatically deleted.\n- If the named node does not have the resources to accommodate the Pod,\n   the Pod will fail and its reason will indicate why, for example OutOfmemory or OutOfcpu.\n- Node names in cloud environments are not always predictable or stable.\n\nWill throw is the pod is already assigned to named node.\n\nUnder the hood, this method utilizes the `nodeName` property.",
            "stability": "stable",
            "summary": "Assign this pod a specific node by name."
          },
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1427
          },
          "name": "assign",
          "parameters": [
            {
              "name": "node",
              "type": {
                "fqn": "cdk8s-plus-28.NamedNode"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "Attracting to multiple nodes (i.e invoking this method multiple times) acts as\nan OR condition, meaning the pod will be assigned to either one of the nodes.\n\nUnder the hood, this method utilizes the `nodeAffinity` property.",
            "see": "https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity",
            "stability": "stable",
            "summary": "Attract this pod to a node matched by selectors. You can select a node by using `Node.labeled()`."
          },
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1474
          },
          "name": "attract",
          "parameters": [
            {
              "name": "node",
              "type": {
                "fqn": "cdk8s-plus-28.LabeledNode"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.PodSchedulingAttractOptions"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "A selection can be one of:\n\n- An instance of a `Pod`.\n- An instance of a `Workload` (e.g `Deployment`, `StatefulSet`).\n- An un-managed pod that can be selected via `Pods.select()`.\n\nCo-locating with multiple selections ((i.e invoking this method multiple times)) acts as\nan AND condition. meaning the pod will be assigned to a node that satisfies all\nselections (i.e runs at least one pod that satisifies each selection).\n\nUnder the hood, this method utilizes the `podAffinity` property.",
            "see": "https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity",
            "stability": "stable",
            "summary": "Co-locate this pod with a scheduling selection."
          },
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1503
          },
          "name": "colocate",
          "parameters": [
            {
              "name": "selector",
              "type": {
                "fqn": "cdk8s-plus-28.IPodSelector"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.PodSchedulingColocateOptions"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "A selection can be one of:\n\n- An instance of a `Pod`.\n- An instance of a `Workload` (e.g `Deployment`, `StatefulSet`).\n- An un-managed pod that can be selected via `Pods.select()`.\n\nSeperating from multiple selections acts as an AND condition. meaning the pod\nwill not be assigned to a node that satisfies all selections (i.e runs at least one pod that satisifies each selection).\n\nUnder the hood, this method utilizes the `podAntiAffinity` property.",
            "see": "https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity",
            "stability": "stable",
            "summary": "Seperate this pod from a scheduling selection."
          },
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1532
          },
          "name": "separate",
          "parameters": [
            {
              "name": "selector",
              "type": {
                "fqn": "cdk8s-plus-28.IPodSelector"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.PodSchedulingSeparateOptions"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "You can put multiple taints on the same node and multiple tolerations on the same pod.\nThe way Kubernetes processes multiple taints and tolerations is like a filter: start with\nall of a node's taints, then ignore the ones for which the pod has a matching toleration;\nthe remaining un-ignored taints have the indicated effects on the pod. In particular:\n\n- if there is at least one un-ignored taint with effect NoSchedule then Kubernetes will\n   not schedule the pod onto that node\n- if there is no un-ignored taint with effect NoSchedule but there is at least one un-ignored\n   taint with effect PreferNoSchedule then Kubernetes will try to not schedule the pod onto the node\n- if there is at least one un-ignored taint with effect NoExecute then the pod will be evicted from\n   the node (if it is already running on the node), and will not be scheduled onto the node (if it is\n   not yet running on the node).\n\nUnder the hood, this method utilizes the `tolerations` property.",
            "see": "https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/",
            "stability": "stable",
            "summary": "Allow this pod to tolerate taints matching these tolerations."
          },
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1457
          },
          "name": "tolerate",
          "parameters": [
            {
              "name": "node",
              "type": {
                "fqn": "cdk8s-plus-28.TaintedNode"
              }
            }
          ]
        }
      ],
      "name": "PodScheduling",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1407
          },
          "name": "instance",
          "protected": true,
          "type": {
            "fqn": "cdk8s-plus-28.AbstractPod"
          }
        }
      ],
      "symbolId": "src/pod:PodScheduling"
    },
    "cdk8s-plus-28.PodSchedulingAttractOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for `PodScheduling.attract`."
      },
      "fqn": "cdk8s-plus-28.PodSchedulingAttractOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/pod.ts",
        "line": 1384
      },
      "name": "PodSchedulingAttractOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- no weight. assignment is assumed to be required (hard).",
            "stability": "stable",
            "summary": "Indicates the attraction is optional (soft), with this weight score."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1390
          },
          "name": "weight",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/pod:PodSchedulingAttractOptions"
    },
    "cdk8s-plus-28.PodSchedulingColocateOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for `PodScheduling.colocate`."
      },
      "fqn": "cdk8s-plus-28.PodSchedulingColocateOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/pod.ts",
        "line": 1346
      },
      "name": "PodSchedulingColocateOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Topology.HOSTNAME",
            "stability": "stable",
            "summary": "Which topology to coloate on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1352
          },
          "name": "topology",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.Topology"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no weight. co-location is assumed to be required (hard).",
            "stability": "stable",
            "summary": "Indicates the co-location is optional (soft), with this weight score."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1359
          },
          "name": "weight",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/pod:PodSchedulingColocateOptions"
    },
    "cdk8s-plus-28.PodSchedulingSeparateOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for `PodScheduling.separate`."
      },
      "fqn": "cdk8s-plus-28.PodSchedulingSeparateOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/pod.ts",
        "line": 1365
      },
      "name": "PodSchedulingSeparateOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Topology.HOSTNAME",
            "stability": "stable",
            "summary": "Which topology to separate on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1371
          },
          "name": "topology",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.Topology"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no weight. separation is assumed to be required (hard).",
            "stability": "stable",
            "summary": "Indicates the separation is optional (soft), with this weight score."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1378
          },
          "name": "weight",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/pod:PodSchedulingSeparateOptions"
    },
    "cdk8s-plus-28.PodSecurityContext": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Holds pod-level security attributes and common container settings."
      },
      "fqn": "cdk8s-plus-28.PodSecurityContext",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/pod.ts",
          "line": 800
        },
        "parameters": [
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.PodSecurityContextProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/pod.ts",
        "line": 790
      },
      "name": "PodSecurityContext",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 792
          },
          "name": "ensureNonRoot",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 796
          },
          "name": "fsGroupChangePolicy",
          "type": {
            "fqn": "cdk8s-plus-28.FsGroupChangePolicy"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 813
          },
          "name": "sysctls",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.Sysctl"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 795
          },
          "name": "fsGroup",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 794
          },
          "name": "group",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 793
          },
          "name": "user",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/pod:PodSecurityContext"
    },
    "cdk8s-plus-28.PodSecurityContextProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for `PodSecurityContext`."
      },
      "fqn": "cdk8s-plus-28.PodSecurityContextProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/pod.ts",
        "line": 278
      },
      "name": "PodSecurityContextProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "If true, the Kubelet will validate the image at runtime to ensure that it does\nnot run as UID 0 (root) and fail to start the container if it does.",
            "stability": "stable",
            "summary": "Indicates that the container must run as a non-root user."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 317
          },
          "name": "ensureNonRoot",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Volume ownership is not changed.",
            "stability": "stable",
            "summary": "Modify the ownership and permissions of pod volumes to this GID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 285
          },
          "name": "fsGroup",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "FsGroupChangePolicy.ALWAYS",
            "remarks": "This field will only apply to volume types which support fsGroup based ownership(and permissions).\nIt will have no effect on ephemeral volume types such as: secret, configmaps and emptydir.",
            "stability": "stable",
            "summary": "Defines behavior of changing ownership and permission of the volume before being exposed inside Pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 294
          },
          "name": "fsGroupChangePolicy",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.FsGroupChangePolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Group configured by container runtime",
            "stability": "stable",
            "summary": "The GID to run the entrypoint of the container process."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 308
          },
          "name": "group",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No sysctls",
            "remarks": "Pods with unsupported sysctls (by the container runtime) might fail to launch.",
            "stability": "stable",
            "summary": "Sysctls hold a list of namespaced sysctls used for the pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 325
          },
          "name": "sysctls",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.Sysctl"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- User specified in image metadata",
            "stability": "stable",
            "summary": "The UID to run the entrypoint of the container process."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 301
          },
          "name": "user",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/pod:PodSecurityContextProps"
    },
    "cdk8s-plus-28.PodSelectorConfig": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Configuration for selecting pods, optionally in particular namespaces."
      },
      "fqn": "cdk8s-plus-28.PodSelectorConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/pod.ts",
        "line": 518
      },
      "name": "PodSelectorConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "A selector to select pods by labels."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 523
          },
          "name": "labelSelector",
          "type": {
            "fqn": "cdk8s-plus-28.LabelSelector"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Configuration for selecting which namepsaces are the pods allowed to be in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 528
          },
          "name": "namespaces",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.NamespaceSelectorConfig"
          }
        }
      ],
      "symbolId": "src/pod:PodSelectorConfig"
    },
    "cdk8s-plus-28.Pods": {
      "assembly": "cdk8s-plus-28",
      "base": "constructs.Construct",
      "docs": {
        "stability": "stable",
        "summary": "Represents a group of pods."
      },
      "fqn": "cdk8s-plus-28.Pods",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/pod.ts",
          "line": 1213
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "expressions",
            "optional": true,
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "cdk8s-plus-28.LabelExpression"
                },
                "kind": "array"
              }
            }
          },
          {
            "name": "labels",
            "optional": true,
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "map"
              }
            }
          },
          {
            "name": "namespaces",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.INamespaceSelector"
            }
          }
        ]
      },
      "interfaces": [
        "cdk8s-plus-28.IPodSelector"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/pod.ts",
        "line": 1197
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Select all pods."
          },
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1209
          },
          "name": "all",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.PodsAllOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.Pods"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Select pods in the cluster with various selectors."
          },
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1202
          },
          "name": "select",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "cdk8s-plus-28.PodsSelectOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.Pods"
            }
          },
          "static": true
        },
        {
          "docs": {
            "see": "INetworkPolicyPeer.toNetworkPolicyPeerConfig()",
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1233
          },
          "name": "toNetworkPolicyPeerConfig",
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.NetworkPolicyPeerConfig"
            }
          }
        },
        {
          "docs": {
            "see": "INetworkPolicyPeer.toPodSelector()",
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1240
          },
          "name": "toPodSelector",
          "returns": {
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.IPodSelector"
            }
          }
        },
        {
          "docs": {
            "see": "IPodSelector.toPodSelectorConfig()",
            "stability": "stable",
            "summary": "Return the configuration of this selector."
          },
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1223
          },
          "name": "toPodSelectorConfig",
          "overrides": "cdk8s-plus-28.IPodSelector",
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.PodSelectorConfig"
            }
          }
        }
      ],
      "name": "Pods",
      "symbolId": "src/pod:Pods"
    },
    "cdk8s-plus-28.PodsAllOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for `Pods.all`."
      },
      "fqn": "cdk8s-plus-28.PodsAllOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/pod.ts",
        "line": 1154
      },
      "name": "PodsAllOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- unset, implies the namespace of the resource this selection is used in.",
            "remarks": "Use `Namespaces.all()` to allow all namespaces.",
            "stability": "stable",
            "summary": "Namespaces the pods are allowed to be in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1162
          },
          "name": "namespaces",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.Namespaces"
          }
        }
      ],
      "symbolId": "src/pod:PodsAllOptions"
    },
    "cdk8s-plus-28.PodsSelectOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for `Pods.select`."
      },
      "fqn": "cdk8s-plus-28.PodsSelectOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/pod.ts",
        "line": 1168
      },
      "name": "PodsSelectOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- no expressions requirements.",
            "stability": "stable",
            "summary": "Expressions the pods must satisify."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1182
          },
          "name": "expressions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.LabelExpression"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no strict labels requirements.",
            "stability": "stable",
            "summary": "Labels the pods must have."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1175
          },
          "name": "labels",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- unset, implies the namespace of the resource this selection is used in.",
            "remarks": "Use `Namespaces.all()` to allow all namespaces.",
            "stability": "stable",
            "summary": "Namespaces the pods are allowed to be in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1190
          },
          "name": "namespaces",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.Namespaces"
          }
        }
      ],
      "symbolId": "src/pod:PodsSelectOptions"
    },
    "cdk8s-plus-28.Probe": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic."
      },
      "fqn": "cdk8s-plus-28.Probe",
      "kind": "class",
      "locationInModule": {
        "filename": "src/probe.ts",
        "line": 127
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Defines a probe based on a command which is executed within the container."
          },
          "locationInModule": {
            "filename": "src/probe.ts",
            "line": 145
          },
          "name": "fromCommand",
          "parameters": [
            {
              "docs": {
                "summary": "The command to execute."
              },
              "name": "command",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            },
            {
              "docs": {
                "summary": "Options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.CommandProbeOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.Probe"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Defines a probe based on an HTTP GET request to the IP address of the container."
          },
          "locationInModule": {
            "filename": "src/probe.ts",
            "line": 135
          },
          "name": "fromHttpGet",
          "parameters": [
            {
              "docs": {
                "summary": "The URL path to hit."
              },
              "name": "path",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.HttpGetProbeOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.Probe"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Defines a probe based opening a connection to a TCP socket on the container."
          },
          "locationInModule": {
            "filename": "src/probe.ts",
            "line": 154
          },
          "name": "fromTcpSocket",
          "parameters": [
            {
              "docs": {
                "summary": "Options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.TcpSocketProbeOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.Probe"
            }
          },
          "static": true
        }
      ],
      "name": "Probe",
      "symbolId": "src/probe:Probe"
    },
    "cdk8s-plus-28.ProbeOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Probe options."
      },
      "fqn": "cdk8s-plus-28.ProbeOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/probe.ts",
        "line": 9
      },
      "name": "ProbeOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "3",
            "remarks": "Defaults to 3. Minimum value is 1.",
            "stability": "stable",
            "summary": "Minimum consecutive failures for the probe to be considered failed after having succeeded."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/probe.ts",
            "line": 18
          },
          "name": "failureThreshold",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- immediate",
            "see": "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "stability": "stable",
            "summary": "Number of seconds after the container has started before liveness probes are initiated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/probe.ts",
            "line": 27
          },
          "name": "initialDelaySeconds",
          "optional": true,
          "type": {
            "fqn": "cdk8s.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.seconds(10) Minimum value is 1.",
            "remarks": "Default to 10 seconds. Minimum value is 1.",
            "stability": "stable",
            "summary": "How often (in seconds) to perform the probe."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/probe.ts",
            "line": 36
          },
          "name": "periodSeconds",
          "optional": true,
          "type": {
            "fqn": "cdk8s.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "1 Must be 1 for liveness and startup. Minimum value is 1.",
            "remarks": "Must be 1 for liveness and startup. Minimum value is 1.",
            "stability": "stable",
            "summary": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/probe.ts",
            "line": 46
          },
          "name": "successThreshold",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.seconds(1)",
            "remarks": "Defaults to 1 second. Minimum value is 1.",
            "see": "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "stability": "stable",
            "summary": "Number of seconds after which the probe times out."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/probe.ts",
            "line": 56
          },
          "name": "timeoutSeconds",
          "optional": true,
          "type": {
            "fqn": "cdk8s.Duration"
          }
        }
      ],
      "symbolId": "src/probe:ProbeOptions"
    },
    "cdk8s-plus-28.Protocol": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Network protocols."
      },
      "fqn": "cdk8s-plus-28.Protocol",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 341
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "TCP."
          },
          "name": "TCP"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "UDP."
          },
          "name": "UDP"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "SCTP."
          },
          "name": "SCTP"
        }
      ],
      "name": "Protocol",
      "symbolId": "src/container:Protocol"
    },
    "cdk8s-plus-28.Replicas": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "The amount of replicas that will change."
      },
      "fqn": "cdk8s-plus-28.Replicas",
      "kind": "class",
      "locationInModule": {
        "filename": "src/horizontal-pod-autoscaler.ts",
        "line": 783
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Changes the pods by a percentage of the it's current value."
          },
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 802
          },
          "name": "absolute",
          "parameters": [
            {
              "docs": {
                "remarks": "Must be greater than 0.",
                "summary": "The amount of change to apply."
              },
              "name": "value",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.Replicas"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Changes the pods by a percentage of the it's current value."
          },
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 790
          },
          "name": "percent",
          "parameters": [
            {
              "docs": {
                "remarks": "Must be greater than 0.",
                "summary": "The percentage of change to apply."
              },
              "name": "value",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.Replicas"
            }
          },
          "static": true
        }
      ],
      "name": "Replicas",
      "symbolId": "src/horizontal-pod-autoscaler:Replicas"
    },
    "cdk8s-plus-28.Resource": {
      "abstract": true,
      "assembly": "cdk8s-plus-28",
      "base": "constructs.Construct",
      "docs": {
        "remarks": "Represents a single\nresource.",
        "stability": "stable",
        "summary": "Base class for all Kubernetes objects in stdk8s."
      },
      "fqn": "cdk8s-plus-28.Resource",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/base.ts",
          "line": 51
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "interfaces": [
        "cdk8s-plus-28.IResource",
        "cdk8s-plus-28.IApiResource",
        "cdk8s-plus-28.IApiEndpoint"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/base.ts",
        "line": 40
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the IApiResource this object represents."
          },
          "locationInModule": {
            "filename": "src/base.ts",
            "line": 92
          },
          "name": "asApiResource",
          "overrides": "cdk8s-plus-28.IApiEndpoint",
          "returns": {
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.IApiResource"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the non resource url this object represents."
          },
          "locationInModule": {
            "filename": "src/base.ts",
            "line": 96
          },
          "name": "asNonApiResource",
          "overrides": "cdk8s-plus-28.IApiEndpoint",
          "returns": {
            "optional": true,
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "Resource",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The group portion of the API version (e.g. \"authorization.k8s.io\")."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base.ts",
            "line": 77
          },
          "name": "apiGroup",
          "overrides": "cdk8s-plus-28.IApiResource",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The underlying cdk8s API object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base.ts",
            "line": 45
          },
          "name": "apiObject",
          "protected": true,
          "type": {
            "fqn": "cdk8s.ApiObject"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The object's API version (e.g. \"authorization.k8s.io/v1\")."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base.ts",
            "line": 70
          },
          "name": "apiVersion",
          "overrides": "cdk8s-plus-28.IResource",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The object kind (e.g. \"Deployment\")."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base.ts",
            "line": 84
          },
          "name": "kind",
          "overrides": "cdk8s-plus-28.IResource",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base.ts",
            "line": 56
          },
          "name": "metadata",
          "type": {
            "fqn": "cdk8s.ApiObjectMetadataDefinition"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of this API object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base.ts",
            "line": 63
          },
          "name": "name",
          "overrides": "cdk8s-plus-28.IResource",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base.ts",
            "line": 49
          },
          "name": "permissions",
          "type": {
            "fqn": "cdk8s-plus-28.ResourcePermissions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of a resource type as it appears in the relevant API endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base.ts",
            "line": 47
          },
          "name": "resourceType",
          "overrides": "cdk8s-plus-28.IApiResource",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "remarks": "If this is omitted, the ApiResource should represent all objects of the given type.",
            "stability": "stable",
            "summary": "The unique, namespace-global, name of an object inside the Kubernetes cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base.ts",
            "line": 88
          },
          "name": "resourceName",
          "optional": true,
          "overrides": "cdk8s-plus-28.IApiResource",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/base:Resource"
    },
    "cdk8s-plus-28.ResourceFieldPaths": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable"
      },
      "fqn": "cdk8s-plus-28.ResourceFieldPaths",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 458
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "CPU limit of the container."
          },
          "name": "CPU_LIMIT"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Memory limit of the container."
          },
          "name": "MEMORY_LIMIT"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "CPU request of the container."
          },
          "name": "CPU_REQUEST"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Memory request of the container."
          },
          "name": "MEMORY_REQUEST"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Ephemeral storage limit of the container."
          },
          "name": "STORAGE_LIMIT"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Ephemeral storage request of the container."
          },
          "name": "STORAGE_REQUEST"
        }
      ],
      "name": "ResourceFieldPaths",
      "symbolId": "src/container:ResourceFieldPaths"
    },
    "cdk8s-plus-28.ResourcePermissions": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Controls permissions for operations on resources."
      },
      "fqn": "cdk8s-plus-28.ResourcePermissions",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/base.ts",
          "line": 107
        },
        "parameters": [
          {
            "name": "instance",
            "type": {
              "fqn": "cdk8s-plus-28.Resource"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/base.ts",
        "line": 105
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Grants the list of subjects permissions to read this resource."
          },
          "locationInModule": {
            "filename": "src/base.ts",
            "line": 112
          },
          "name": "grantRead",
          "parameters": [
            {
              "name": "subjects",
              "type": {
                "fqn": "cdk8s-plus-28.ISubject"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.RoleBinding"
            }
          },
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Grants the list of subjects permissions to read and write this resource."
          },
          "locationInModule": {
            "filename": "src/base.ts",
            "line": 124
          },
          "name": "grantReadWrite",
          "parameters": [
            {
              "name": "subjects",
              "type": {
                "fqn": "cdk8s-plus-28.ISubject"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.RoleBinding"
            }
          },
          "variadic": true
        }
      ],
      "name": "ResourcePermissions",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base.ts",
            "line": 107
          },
          "name": "instance",
          "protected": true,
          "type": {
            "fqn": "cdk8s-plus-28.Resource"
          }
        }
      ],
      "symbolId": "src/base:ResourcePermissions"
    },
    "cdk8s-plus-28.ResourceProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Initialization properties for resources."
      },
      "fqn": "cdk8s-plus-28.ResourceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/base.ts",
        "line": 8
      },
      "name": "ResourceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Metadata that all persisted resources must have, which includes all objects users must create."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base.ts",
            "line": 13
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s.ApiObjectMetadata"
          }
        }
      ],
      "symbolId": "src/base:ResourceProps"
    },
    "cdk8s-plus-28.RestartPolicy": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Restart policy for all containers within the pod."
      },
      "fqn": "cdk8s-plus-28.RestartPolicy",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/pod.ts",
        "line": 836
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Always restart the pod after it exits."
          },
          "name": "ALWAYS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Only restart if the pod exits with a non-zero exit code."
          },
          "name": "ON_FAILURE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Never restart the pod."
          },
          "name": "NEVER"
        }
      ],
      "name": "RestartPolicy",
      "symbolId": "src/pod:RestartPolicy"
    },
    "cdk8s-plus-28.Role": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s-plus-28.Resource",
      "docs": {
        "stability": "stable",
        "summary": "Role is a namespaced, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding."
      },
      "fqn": "cdk8s-plus-28.Role",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/role.ts",
          "line": 100
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.RoleProps"
            }
          }
        ]
      },
      "interfaces": [
        "cdk8s-plus-28.IRole"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/role.ts",
        "line": 82
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Imports a role from the cluster as a reference."
          },
          "locationInModule": {
            "filename": "src/role.ts",
            "line": 87
          },
          "name": "fromRoleName",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.IRole"
            }
          },
          "static": true
        },
        {
          "docs": {
            "see": "https://kubernetes.io/docs/reference/access-authn-authz/authorization/#determine-the-request-verb",
            "stability": "stable",
            "summary": "Add permission to perform a list of HTTP verbs on a collection of resources."
          },
          "locationInModule": {
            "filename": "src/role.ts",
            "line": 128
          },
          "name": "allow",
          "parameters": [
            {
              "name": "verbs",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            },
            {
              "docs": {
                "summary": "The resource(s) to apply to."
              },
              "name": "resources",
              "type": {
                "fqn": "cdk8s-plus-28.IApiResource"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add \"create\" permission for the resources."
          },
          "locationInModule": {
            "filename": "src/role.ts",
            "line": 136
          },
          "name": "allowCreate",
          "parameters": [
            {
              "docs": {
                "summary": "The resource(s) to apply to."
              },
              "name": "resources",
              "type": {
                "fqn": "cdk8s-plus-28.IApiResource"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add \"delete\" permission for the resources."
          },
          "locationInModule": {
            "filename": "src/role.ts",
            "line": 184
          },
          "name": "allowDelete",
          "parameters": [
            {
              "docs": {
                "summary": "The resource(s) to apply to."
              },
              "name": "resources",
              "type": {
                "fqn": "cdk8s-plus-28.IApiResource"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add \"deletecollection\" permission for the resources."
          },
          "locationInModule": {
            "filename": "src/role.ts",
            "line": 192
          },
          "name": "allowDeleteCollection",
          "parameters": [
            {
              "docs": {
                "summary": "The resource(s) to apply to."
              },
              "name": "resources",
              "type": {
                "fqn": "cdk8s-plus-28.IApiResource"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add \"get\" permission for the resources."
          },
          "locationInModule": {
            "filename": "src/role.ts",
            "line": 144
          },
          "name": "allowGet",
          "parameters": [
            {
              "docs": {
                "summary": "The resource(s) to apply to."
              },
              "name": "resources",
              "type": {
                "fqn": "cdk8s-plus-28.IApiResource"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add \"list\" permission for the resources."
          },
          "locationInModule": {
            "filename": "src/role.ts",
            "line": 152
          },
          "name": "allowList",
          "parameters": [
            {
              "docs": {
                "summary": "The resource(s) to apply to."
              },
              "name": "resources",
              "type": {
                "fqn": "cdk8s-plus-28.IApiResource"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add \"patch\" permission for the resources."
          },
          "locationInModule": {
            "filename": "src/role.ts",
            "line": 176
          },
          "name": "allowPatch",
          "parameters": [
            {
              "docs": {
                "summary": "The resource(s) to apply to."
              },
              "name": "resources",
              "type": {
                "fqn": "cdk8s-plus-28.IApiResource"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add \"get\", \"list\", and \"watch\" permissions for the resources."
          },
          "locationInModule": {
            "filename": "src/role.ts",
            "line": 200
          },
          "name": "allowRead",
          "parameters": [
            {
              "docs": {
                "summary": "The resource(s) to apply to."
              },
              "name": "resources",
              "type": {
                "fqn": "cdk8s-plus-28.IApiResource"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add \"get\", \"list\", \"watch\", \"create\", \"update\", \"patch\", \"delete\", and \"deletecollection\" permissions for the resources."
          },
          "locationInModule": {
            "filename": "src/role.ts",
            "line": 210
          },
          "name": "allowReadWrite",
          "parameters": [
            {
              "docs": {
                "summary": "The resource(s) to apply to."
              },
              "name": "resources",
              "type": {
                "fqn": "cdk8s-plus-28.IApiResource"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add \"update\" permission for the resources."
          },
          "locationInModule": {
            "filename": "src/role.ts",
            "line": 168
          },
          "name": "allowUpdate",
          "parameters": [
            {
              "docs": {
                "summary": "The resource(s) to apply to."
              },
              "name": "resources",
              "type": {
                "fqn": "cdk8s-plus-28.IApiResource"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add \"watch\" permission for the resources."
          },
          "locationInModule": {
            "filename": "src/role.ts",
            "line": 160
          },
          "name": "allowWatch",
          "parameters": [
            {
              "docs": {
                "summary": "The resource(s) to apply to."
              },
              "name": "resources",
              "type": {
                "fqn": "cdk8s-plus-28.IApiResource"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a RoleBinding that binds the permissions in this Role to a list of subjects, that will only apply this role's namespace."
          },
          "locationInModule": {
            "filename": "src/role.ts",
            "line": 219
          },
          "name": "bind",
          "parameters": [
            {
              "docs": {
                "summary": "a list of subjects to bind to."
              },
              "name": "subjects",
              "type": {
                "fqn": "cdk8s-plus-28.ISubject"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.RoleBinding"
            }
          },
          "variadic": true
        }
      ],
      "name": "Role",
      "properties": [
        {
          "docs": {
            "see": "base.Resource.apiObject",
            "stability": "stable",
            "summary": "The underlying cdk8s API object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/role.ts",
            "line": 94
          },
          "name": "apiObject",
          "overrides": "cdk8s-plus-28.Resource",
          "protected": true,
          "type": {
            "fqn": "cdk8s.ApiObject"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of a resource type as it appears in the relevant API endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/role.ts",
            "line": 96
          },
          "name": "resourceType",
          "overrides": "cdk8s-plus-28.Resource",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "remarks": "Returns a copy, use `allow` to add rules.",
            "stability": "stable",
            "summary": "Rules associaated with this Role."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/role.ts",
            "line": 117
          },
          "name": "rules",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.RolePolicyRule"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/role:Role"
    },
    "cdk8s-plus-28.RoleBinding": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s-plus-28.Resource",
      "docs": {
        "stability": "stable",
        "summary": "A RoleBinding grants permissions within a specific namespace to a user or set of users."
      },
      "fqn": "cdk8s-plus-28.RoleBinding",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/role-binding.ts",
          "line": 81
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.RoleBindingProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/role-binding.ts",
        "line": 69
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a subject to the role."
          },
          "locationInModule": {
            "filename": "src/role-binding.ts",
            "line": 99
          },
          "name": "addSubjects",
          "parameters": [
            {
              "docs": {
                "summary": "The subjects to add."
              },
              "name": "subjects",
              "type": {
                "fqn": "cdk8s-plus-28.ISubject"
              },
              "variadic": true
            }
          ],
          "variadic": true
        }
      ],
      "name": "RoleBinding",
      "properties": [
        {
          "docs": {
            "see": "base.Resource.apiObject",
            "stability": "stable",
            "summary": "The underlying cdk8s API object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/role-binding.ts",
            "line": 73
          },
          "name": "apiObject",
          "overrides": "cdk8s-plus-28.Resource",
          "protected": true,
          "type": {
            "fqn": "cdk8s.ApiObject"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of a resource type as it appears in the relevant API endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/role-binding.ts",
            "line": 75
          },
          "name": "resourceType",
          "overrides": "cdk8s-plus-28.Resource",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/role-binding.ts",
            "line": 77
          },
          "name": "role",
          "type": {
            "fqn": "cdk8s-plus-28.IRole"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/role-binding.ts",
            "line": 105
          },
          "name": "subjects",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.ISubject"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/role-binding:RoleBinding"
    },
    "cdk8s-plus-28.RoleBindingProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for `RoleBinding`."
      },
      "fqn": "cdk8s-plus-28.RoleBindingProps",
      "interfaces": [
        "cdk8s-plus-28.ResourceProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/role-binding.ts",
        "line": 58
      },
      "name": "RoleBindingProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "A RoleBinding can reference a Role or a ClusterRole.",
            "stability": "stable",
            "summary": "The role to bind to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/role-binding.ts",
            "line": 62
          },
          "name": "role",
          "type": {
            "fqn": "cdk8s-plus-28.IRole"
          }
        }
      ],
      "symbolId": "src/role-binding:RoleBindingProps"
    },
    "cdk8s-plus-28.RolePolicyRule": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Policy rule of a `Role."
      },
      "fqn": "cdk8s-plus-28.RolePolicyRule",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/role.ts",
        "line": 32
      },
      "name": "RolePolicyRule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Resources this rule applies to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/role.ts",
            "line": 42
          },
          "name": "resources",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.IApiResource"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "(e.g ['get', 'watch'])",
            "stability": "stable",
            "summary": "Verbs to allow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/role.ts",
            "line": 37
          },
          "name": "verbs",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/role:RolePolicyRule"
    },
    "cdk8s-plus-28.RoleProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for `Role`."
      },
      "fqn": "cdk8s-plus-28.RoleProps",
      "interfaces": [
        "cdk8s-plus-28.ResourceProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/role.ts",
        "line": 19
      },
      "name": "RoleProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "[]",
            "stability": "stable",
            "summary": "A list of rules the role should allow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/role.ts",
            "line": 26
          },
          "name": "rules",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.RolePolicyRule"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/role:RoleProps"
    },
    "cdk8s-plus-28.ScalingPolicy": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "cdk8s-plus-28.ScalingPolicy",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/horizontal-pod-autoscaler.ts",
        "line": 762
      },
      "name": "ScalingPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The type and quantity of replicas to change."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 766
          },
          "name": "replicas",
          "type": {
            "fqn": "cdk8s-plus-28.Replicas"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- 15 seconds",
            "remarks": "Must be greater than 0 seconds and no longer than 30 minutes.",
            "stability": "stable",
            "summary": "The amount of time the scaling policy has to continue scaling before the target metric must be revalidated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 776
          },
          "name": "duration",
          "optional": true,
          "type": {
            "fqn": "cdk8s.Duration"
          }
        }
      ],
      "symbolId": "src/horizontal-pod-autoscaler:ScalingPolicy"
    },
    "cdk8s-plus-28.ScalingRules": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Defines the scaling behavior for one direction."
      },
      "fqn": "cdk8s-plus-28.ScalingRules",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/horizontal-pod-autoscaler.ts",
        "line": 711
      },
      "name": "ScalingRules",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "* Scale up\n  * Increase no more than 4 pods per 60 seconds\n  * Double the number of pods per 60 seconds\n* Scale down\n  * Decrease to minReplica count",
            "stability": "stable",
            "summary": "The scaling policies."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 741
          },
          "name": "policies",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.ScalingPolicy"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "* On scale down no stabilization is performed.\n* On scale up stabilization is performed for 5 minutes.",
            "example": "stabilizationWindow: Duration.minutes(30)\n// Autoscaler considers the last 30 minutes of metrics when deciding whether to scale.",
            "remarks": "Minimum duration is 1 second, max is 1 hour.",
            "stability": "stable",
            "summary": "Defines the window of past metrics that the autoscaler should consider when calculating wether or not autoscaling should occur."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 725
          },
          "name": "stabilizationWindow",
          "optional": true,
          "type": {
            "fqn": "cdk8s.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "MAX_CHANGE",
            "stability": "stable",
            "summary": "The strategy to use when scaling."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 731
          },
          "name": "strategy",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.ScalingStrategy"
          }
        }
      ],
      "symbolId": "src/horizontal-pod-autoscaler:ScalingRules"
    },
    "cdk8s-plus-28.ScalingStrategy": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable"
      },
      "fqn": "cdk8s-plus-28.ScalingStrategy",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/horizontal-pod-autoscaler.ts",
        "line": 745
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Use the policy that provisions the most changes."
          },
          "name": "MAX_CHANGE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Use the policy that provisions the least amount of changes."
          },
          "name": "MIN_CHANGE"
        },
        {
          "docs": {
            "deprecated": "- Omit the ScalingRule instead",
            "stability": "deprecated",
            "summary": "Disables scaling in this direction."
          },
          "name": "DISABLED"
        }
      ],
      "name": "ScalingStrategy",
      "symbolId": "src/horizontal-pod-autoscaler:ScalingStrategy"
    },
    "cdk8s-plus-28.ScalingTarget": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties used to configure the target of an Autoscaler."
      },
      "fqn": "cdk8s-plus-28.ScalingTarget",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/horizontal-pod-autoscaler.ts",
        "line": 12
      },
      "name": "ScalingTarget",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The object's API version (e.g. \"authorization.k8s.io/v1\")."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 20
          },
          "name": "apiVersion",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Container definitions associated with the target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 28
          },
          "name": "containers",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.Container"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The object kind (e.g. \"Deployment\")."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 16
          },
          "name": "kind",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Kubernetes name of this resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 24
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This is used\nfor validation purposes as Scalable targets should not have a\nfixed number of replicas.",
            "stability": "stable",
            "summary": "The fixed number of replicas defined on the target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/horizontal-pod-autoscaler.ts",
            "line": 34
          },
          "name": "replicas",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/horizontal-pod-autoscaler:ScalingTarget"
    },
    "cdk8s-plus-28.SeccompProfile": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "cdk8s-plus-28.SeccompProfile",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 199
      },
      "name": "SeccompProfile",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Indicates which kind of seccomp profile will be applied."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 212
          },
          "name": "type",
          "type": {
            "fqn": "cdk8s-plus-28.SeccompProfileType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- empty string",
            "remarks": "The profile must be preconfigured on the node to work. Must be a descending path,\nrelative to the kubelet's configured seccomp profile location.\nMust only be set if type is \"Localhost\".",
            "stability": "stable",
            "summary": "localhostProfile indicates a profile defined in a file on the node should be used."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 208
          },
          "name": "localhostProfile",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/container:SeccompProfile"
    },
    "cdk8s-plus-28.SeccompProfileType": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable"
      },
      "fqn": "cdk8s-plus-28.SeccompProfileType",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 184
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "A profile defined in a file on the node should be used."
          },
          "name": "LOCALHOST"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The container runtime default profile should be used."
          },
          "name": "RUNTIME_DEFAULT"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "No profile should be applied."
          },
          "name": "UNCONFINED"
        }
      ],
      "name": "SeccompProfileType",
      "symbolId": "src/container:SeccompProfileType"
    },
    "cdk8s-plus-28.Secret": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s-plus-28.Resource",
      "docs": {
        "remarks": "Storing confidential information in a\nSecret is safer and more flexible than putting it verbatim in a Pod\ndefinition or in a container image.",
        "see": "https://kubernetes.io/docs/concepts/configuration/secret",
        "stability": "stable",
        "summary": "Kubernetes Secrets let you store and manage sensitive information, such as passwords, OAuth tokens, and ssh keys."
      },
      "fqn": "cdk8s-plus-28.Secret",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/secret.ts",
          "line": 137
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.SecretProps"
            }
          }
        ]
      },
      "interfaces": [
        "cdk8s-plus-28.ISecret"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/secret.ts",
        "line": 114
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Imports a secret from the cluster as a reference."
          },
          "locationInModule": {
            "filename": "src/secret.ts",
            "line": 119
          },
          "name": "fromSecretName",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.ISecret"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a string data field to the secret."
          },
          "locationInModule": {
            "filename": "src/secret.ts",
            "line": 156
          },
          "name": "addStringData",
          "parameters": [
            {
              "docs": {
                "summary": "Key."
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Value."
              },
              "name": "value",
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns EnvValue object from a secret's key."
          },
          "locationInModule": {
            "filename": "src/secret.ts",
            "line": 168
          },
          "name": "envValue",
          "overrides": "cdk8s-plus-28.ISecret",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.EnvValueFromSecretOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.EnvValue"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Gets a string data by key or undefined."
          },
          "locationInModule": {
            "filename": "src/secret.ts",
            "line": 164
          },
          "name": "getStringData",
          "parameters": [
            {
              "docs": {
                "summary": "Key."
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "optional": true,
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "Secret",
      "properties": [
        {
          "docs": {
            "see": "base.Resource.apiObject",
            "stability": "stable",
            "summary": "The underlying cdk8s API object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/secret.ts",
            "line": 126
          },
          "name": "apiObject",
          "overrides": "cdk8s-plus-28.Resource",
          "protected": true,
          "type": {
            "fqn": "cdk8s.ApiObject"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Whether or not the secret is immutable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/secret.ts",
            "line": 133
          },
          "name": "immutable",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of a resource type as it appears in the relevant API endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/secret.ts",
            "line": 128
          },
          "name": "resourceType",
          "overrides": "cdk8s-plus-28.Resource",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/secret:Secret"
    },
    "cdk8s-plus-28.SecretProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for `Secret`."
      },
      "fqn": "cdk8s-plus-28.SecretProps",
      "interfaces": [
        "cdk8s-plus-28.CommonSecretProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/secret.ts",
        "line": 26
      },
      "name": "SecretProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "It is\nprovided as a write-only convenience method. All keys and values are merged\ninto the data field on write, overwriting any existing values. It is never\noutput when reading from the API.",
            "stability": "stable",
            "summary": "stringData allows specifying non-binary secret data in string form."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/secret.ts",
            "line": 33
          },
          "name": "stringData",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "undefined - Don't set a type.",
            "remarks": "Used to facilitate programmatic\nhandling of secret data by various controllers.",
            "stability": "stable",
            "summary": "Optional type associated with the secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/secret.ts",
            "line": 41
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/secret:SecretProps"
    },
    "cdk8s-plus-28.SecretValue": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Represents a specific value in JSON secret."
      },
      "fqn": "cdk8s-plus-28.SecretValue",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/secret.ts",
        "line": 57
      },
      "name": "SecretValue",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The JSON key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/secret.ts",
            "line": 66
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/secret.ts",
            "line": 61
          },
          "name": "secret",
          "type": {
            "fqn": "cdk8s-plus-28.ISecret"
          }
        }
      ],
      "symbolId": "src/secret:SecretValue"
    },
    "cdk8s-plus-28.SecretVolumeOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for the Secret-based volume."
      },
      "fqn": "cdk8s-plus-28.SecretVolumeOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/volume.ts",
        "line": 547
      },
      "name": "SecretVolumeOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "0644. Directories within the path are not affected by this\nsetting. This might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
            "remarks": "Must be a value between 0 and\n0777. Defaults to 0644. Directories within the path are not affected by\nthis setting. This might be in conflict with other options that affect the\nfile mode, like fsGroup, and the result can be other mode bits set.",
            "stability": "stable",
            "summary": "Mode bits to use on created files by default."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 565
          },
          "name": "defaultMode",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no mapping",
            "remarks": "If specified, the listed keys will be projected\ninto the specified paths, and unlisted keys will not be present. If a key\nis specified which is not present in the secret, the volume setup will\nerror unless it is marked optional. Paths must be relative and may not\ncontain the '..' path or start with '..'.",
            "stability": "stable",
            "summary": "If unspecified, each key-value pair in the Data field of the referenced secret will be projected into the volume as a file whose name is the key and content is the value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 584
          },
          "name": "items",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.PathMapping"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- auto-generated",
            "stability": "stable",
            "summary": "The volume name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 553
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- undocumented",
            "stability": "stable",
            "summary": "Specify whether the secret or its keys must be defined."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 571
          },
          "name": "optional",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/volume:SecretVolumeOptions"
    },
    "cdk8s-plus-28.Service": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s-plus-28.Resource",
      "docs": {
        "remarks": "With Kubernetes you don't need to modify your application to use an unfamiliar service discovery mechanism.\nKubernetes gives Pods their own IP addresses and a single DNS name for a set of Pods, and can load-balance across them.\n\nFor example, consider a stateless image-processing backend which is running with 3 replicas. Those replicas are fungible—frontends do not care which backend they use.\nWhile the actual Pods that compose the backend set may change, the frontend clients should not need to be aware of that,\nnor should they need to keep track of the set of backends themselves.\nThe Service abstraction enables this decoupling.\n\nIf you're able to use Kubernetes APIs for service discovery in your application, you can query the API server for Endpoints,\nthat get updated whenever the set of Pods in a Service changes. For non-native applications, Kubernetes offers ways to place a network port\nor load balancer in between your application and the backend Pods.",
        "stability": "stable",
        "summary": "An abstract way to expose an application running on a set of Pods as a network service."
      },
      "fqn": "cdk8s-plus-28.Service",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/service.ts",
          "line": 225
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.ServiceProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/service.ts",
        "line": 194
      },
      "methods": [
        {
          "docs": {
            "remarks": "This method can be called multiple times.",
            "stability": "stable",
            "summary": "Configure a port the service will bind to."
          },
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 293
          },
          "name": "bind",
          "parameters": [
            {
              "docs": {
                "summary": "The port definition."
              },
              "name": "port",
              "type": {
                "primitive": "number"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.ServiceBindOptions"
              }
            }
          ]
        },
        {
          "docs": {
            "returns": "The `Ingress` resource that was used.",
            "stability": "stable",
            "summary": "Expose a service via an ingress using the specified path."
          },
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 265
          },
          "name": "exposeViaIngress",
          "parameters": [
            {
              "docs": {
                "summary": "The path to expose the service under."
              },
              "name": "path",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Additional options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.ExposeServiceViaIngressOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.Ingress"
            }
          }
        },
        {
          "docs": {
            "remarks": "Note that invoking this method multiple times acts as an AND operator\non the resulting labels.",
            "stability": "stable",
            "summary": "Require this service to select pods matching the selector."
          },
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 303
          },
          "name": "select",
          "parameters": [
            {
              "name": "selector",
              "type": {
                "fqn": "cdk8s-plus-28.IPodSelector"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "Note that invoking this method multiple times acts as an AND operator\non the resulting labels.",
            "stability": "stable",
            "summary": "Require this service to select pods with this label."
          },
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 316
          },
          "name": "selectLabel",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "string"
              }
            }
          ]
        }
      ],
      "name": "Service",
      "properties": [
        {
          "docs": {
            "see": "base.Resource.apiObject",
            "stability": "stable",
            "summary": "The underlying cdk8s API object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 215
          },
          "name": "apiObject",
          "overrides": "cdk8s-plus-28.Resource",
          "protected": true,
          "type": {
            "fqn": "cdk8s.ApiObject"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the first port of the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 283
          },
          "name": "port",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "remarks": "Use `bind()` to bind additional service ports.",
            "stability": "stable",
            "summary": "Ports for this service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 276
          },
          "name": "ports",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.ServicePort"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of a resource type as it appears in the relevant API endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 217
          },
          "name": "resourceType",
          "overrides": "cdk8s-plus-28.Resource",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Determines how the Service is exposed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 205
          },
          "name": "type",
          "type": {
            "fqn": "cdk8s-plus-28.ServiceType"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The IP address of the service and is usually assigned randomly by the master."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 200
          },
          "name": "clusterIP",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The externalName to be used for EXTERNAL_NAME types."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 210
          },
          "name": "externalName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/service:Service"
    },
    "cdk8s-plus-28.ServiceAccount": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s-plus-28.Resource",
      "docs": {
        "remarks": "When you (a human) access the cluster (for example, using kubectl), you are\nauthenticated by the apiserver as a particular User Account (currently this\nis usually admin, unless your cluster administrator has customized your\ncluster). Processes in containers inside pods can also contact the apiserver.\nWhen they do, they are authenticated as a particular Service Account (for\nexample, default).",
        "see": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account",
        "stability": "stable",
        "summary": "A service account provides an identity for processes that run in a Pod."
      },
      "fqn": "cdk8s-plus-28.ServiceAccount",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/service-account.ts",
          "line": 128
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.ServiceAccountProps"
            }
          }
        ]
      },
      "interfaces": [
        "cdk8s-plus-28.IServiceAccount",
        "cdk8s-plus-28.ISubject"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/service-account.ts",
        "line": 102
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Imports a service account from the cluster as a reference."
          },
          "locationInModule": {
            "filename": "src/service-account.ts",
            "line": 109
          },
          "name": "fromServiceAccountName",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The name of the service account resource."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "additional options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.FromServiceAccountNameOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.IServiceAccount"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Allow a secret to be accessed by pods using this service account."
          },
          "locationInModule": {
            "filename": "src/service-account.ts",
            "line": 145
          },
          "name": "addSecret",
          "parameters": [
            {
              "docs": {
                "summary": "The secret."
              },
              "name": "secr",
              "type": {
                "fqn": "cdk8s-plus-28.ISecret"
              }
            }
          ]
        },
        {
          "docs": {
            "see": "ISubect.toSubjectConfiguration()",
            "stability": "stable",
            "summary": "Return the subject configuration."
          },
          "locationInModule": {
            "filename": "src/service-account.ts",
            "line": 162
          },
          "name": "toSubjectConfiguration",
          "overrides": "cdk8s-plus-28.ISubject",
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.SubjectConfiguration"
            }
          }
        }
      ],
      "name": "ServiceAccount",
      "properties": [
        {
          "docs": {
            "see": "base.Resource.apiObject",
            "stability": "stable",
            "summary": "The underlying cdk8s API object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service-account.ts",
            "line": 116
          },
          "name": "apiObject",
          "overrides": "cdk8s-plus-28.Resource",
          "protected": true,
          "type": {
            "fqn": "cdk8s.ApiObject"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Whether or not a token is automatically mounted for this service account."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service-account.ts",
            "line": 126
          },
          "name": "automountToken",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of a resource type as it appears in the relevant API endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service-account.ts",
            "line": 118
          },
          "name": "resourceType",
          "overrides": "cdk8s-plus-28.Resource",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "remarks": "Returns a copy. To add a secret, use `addSecret()`.",
            "stability": "stable",
            "summary": "List of secrets allowed to be used by pods running using this service account."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service-account.ts",
            "line": 155
          },
          "name": "secrets",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.ISecret"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/service-account:ServiceAccount"
    },
    "cdk8s-plus-28.ServiceAccountProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for initialization of `ServiceAccount`."
      },
      "fqn": "cdk8s-plus-28.ServiceAccountProps",
      "interfaces": [
        "cdk8s-plus-28.ResourceProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/service-account.ts",
        "line": 17
      },
      "name": "ServiceAccountProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "Can be overridden at the pod level.",
            "see": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
            "stability": "stable",
            "summary": "Indicates whether pods running as this service account should have an API token automatically mounted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service-account.ts",
            "line": 33
          },
          "name": "automountToken",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://kubernetes.io/docs/concepts/configuration/secret",
            "stability": "stable",
            "summary": "List of secrets allowed to be used by pods running using this ServiceAccount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service-account.ts",
            "line": 24
          },
          "name": "secrets",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.ISecret"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/service-account:ServiceAccountProps"
    },
    "cdk8s-plus-28.ServiceAccountTokenSecret": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s-plus-28.Secret",
      "docs": {
        "see": "https://kubernetes.io/docs/concepts/configuration/secret/#service-account-token-secrets",
        "stability": "stable",
        "summary": "Create a secret for a service account token."
      },
      "fqn": "cdk8s-plus-28.ServiceAccountTokenSecret",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/secret.ts",
          "line": 251
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.ServiceAccountTokenSecretProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/secret.ts",
        "line": 250
      },
      "name": "ServiceAccountTokenSecret",
      "symbolId": "src/secret:ServiceAccountTokenSecret"
    },
    "cdk8s-plus-28.ServiceAccountTokenSecretProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for `ServiceAccountTokenSecret`."
      },
      "fqn": "cdk8s-plus-28.ServiceAccountTokenSecretProps",
      "interfaces": [
        "cdk8s-plus-28.CommonSecretProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/secret.ts",
        "line": 238
      },
      "name": "ServiceAccountTokenSecretProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The service account to store a secret for."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/secret.ts",
            "line": 242
          },
          "name": "serviceAccount",
          "type": {
            "fqn": "cdk8s-plus-28.IServiceAccount"
          }
        }
      ],
      "symbolId": "src/secret:ServiceAccountTokenSecretProps"
    },
    "cdk8s-plus-28.ServiceBindOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for `Service.bind`."
      },
      "fqn": "cdk8s-plus-28.ServiceBindOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/service.ts",
        "line": 363
      },
      "name": "ServiceBindOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "This must be a DNS_LABEL. All\nports within a ServiceSpec must have unique names. This maps to the 'Name'\nfield in EndpointPort objects. Optional if only one ServicePort is defined\non this service.",
            "stability": "stable",
            "summary": "The name of this port within the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 370
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- auto-allocate a port if the ServiceType of this Service requires one.",
            "remarks": "Usually assigned by the system. If specified, it will be\nallocated to the service if unused or else creation of the service will\nfail. Default is to auto-allocate a port if the ServiceType of this Service\nrequires one.",
            "see": "https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport",
            "stability": "stable",
            "summary": "The port on each node on which this service is exposed when type=NodePort or LoadBalancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 383
          },
          "name": "nodePort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Protocol.TCP",
            "remarks": "Supports \"TCP\", \"UDP\", and \"SCTP\". Default is TCP.",
            "stability": "stable",
            "summary": "The IP protocol for this port."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 390
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.Protocol"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The value of `port` will be used.",
            "stability": "stable",
            "summary": "The port number the service will redirect to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 397
          },
          "name": "targetPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/service:ServiceBindOptions"
    },
    "cdk8s-plus-28.ServiceIngressBackendOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for setting up backends for ingress rules."
      },
      "fqn": "cdk8s-plus-28.ServiceIngressBackendOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/ingress.ts",
        "line": 251
      },
      "name": "ServiceIngressBackendOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- if the service exposes a single port, this port will be used.",
            "remarks": "- This option will fail if the service does not expose any ports.\n- If the service exposes multiple ports, this option must be specified.\n- If the service exposes a single port, this option is optional and if\n   specified, it must be the same port exposed by the service.",
            "stability": "stable",
            "summary": "The port to use to access the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/ingress.ts",
            "line": 262
          },
          "name": "port",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/ingress:ServiceIngressBackendOptions"
    },
    "cdk8s-plus-28.ServicePort": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Definition of a service port."
      },
      "fqn": "cdk8s-plus-28.ServicePort",
      "interfaces": [
        "cdk8s-plus-28.ServiceBindOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/service.ts",
        "line": 403
      },
      "name": "ServicePort",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The port number the service will bind to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 408
          },
          "name": "port",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/service:ServicePort"
    },
    "cdk8s-plus-28.ServiceProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for `Service`."
      },
      "fqn": "cdk8s-plus-28.ServiceProps",
      "interfaces": [
        "cdk8s-plus-28.ResourceProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/service.ts",
        "line": 12
      },
      "name": "ServiceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Automatically assigned.",
            "remarks": "If an address is specified manually and is not in use by others, it\nwill be allocated to the service; otherwise, creation of the service will\nfail. This field can not be changed through updates. Valid values are\n\"None\", empty string (\"\"), or a valid IP address. \"None\" can be specified\nfor headless services when proxying is not required. Only applies to types\nClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName.",
            "see": "https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
            "stability": "stable",
            "summary": "The IP address of the service and is usually assigned randomly by the master."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 49
          },
          "name": "clusterIP",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No external IPs.",
            "remarks": "These IPs are not managed by Kubernetes. The user\nis responsible for ensuring that traffic arrives at a node with this IP. A\ncommon example is external load-balancers that are not part of the\nKubernetes system.",
            "stability": "stable",
            "summary": "A list of IP addresses for which nodes in the cluster will also accept traffic for this service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 60
          },
          "name": "externalIPs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No external name.",
            "stability": "stable",
            "summary": "The externalName to be used when ServiceType.EXTERNAL_NAME is set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 87
          },
          "name": "externalName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "More info: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/",
            "stability": "stable",
            "summary": "A list of CIDR IP addresses, if specified and supported by the platform, will restrict traffic through the cloud-provider load-balancer to the specified client IPs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 95
          },
          "name": "loadBalancerSourceRanges",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- either the selector ports, or none.",
            "remarks": "If the selector of the service is a managed pod / workload,\nits ports will are automatically extracted and used as the default value.\nOtherwise, no ports are bound.",
            "stability": "stable",
            "summary": "The ports this service binds to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 80
          },
          "name": "ports",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.ServicePort"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- false",
            "remarks": "More info: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.30/#servicespec-v1-core",
            "stability": "stable",
            "summary": "The publishNotReadyAddresses indicates that any agent which deals with endpoints for this Service should disregard any indications of ready/not-ready."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 105
          },
          "name": "publishNotReadyAddresses",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- unset, the service is assumed to have an external process managing\nits endpoints, which Kubernetes will not modify.",
            "example": "// select the pods of a specific deployment\nconst backend = new kplus.Deployment(this, 'Backend', ...);\nnew kplus.Service(this, 'Service', { selector: backend });\n\n// select all pods labeled with the `tier=backend` label\nconst backend = kplus.Pod.labeled({ tier: 'backend' });\nnew kplus.Service(this, 'Service', { selector: backend });",
            "remarks": "You can pass one of the following:\n\n- An instance of `Pod` or any workload resource (e.g `Deployment`, `StatefulSet`, ...)\n- Pods selected by the `Pods.select` function. Note that in this case only labels can be specified.",
            "stability": "stable",
            "summary": "Which pods should the service select and route to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 34
          },
          "name": "selector",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.IPodSelector"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ServiceType.ClusterIP",
            "remarks": "More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types",
            "stability": "stable",
            "summary": "Determines how the Service is exposed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/service.ts",
            "line": 69
          },
          "name": "type",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.ServiceType"
          }
        }
      ],
      "symbolId": "src/service:ServiceProps"
    },
    "cdk8s-plus-28.ServiceType": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "remarks": "Kubernetes ServiceTypes allow you to specify what kind of Service you want.\nThe default is ClusterIP.",
        "stability": "stable",
        "summary": "For some parts of your application (for example, frontends) you may want to expose a Service onto an external IP address, that's outside of your cluster."
      },
      "fqn": "cdk8s-plus-28.ServiceType",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/service.ts",
        "line": 135
      },
      "members": [
        {
          "docs": {
            "remarks": "Choosing this value makes the Service only reachable from within the cluster.\nThis is the default ServiceType",
            "stability": "stable",
            "summary": "Exposes the Service on a cluster-internal IP."
          },
          "name": "CLUSTER_IP"
        },
        {
          "docs": {
            "remarks": "A ClusterIP Service, to which the NodePort Service routes, is automatically created.\nYou'll be able to contact the NodePort Service, from outside the cluster,\nby requesting <NodeIP>:<NodePort>.",
            "stability": "stable",
            "summary": "Exposes the Service on each Node's IP at a static port (the NodePort)."
          },
          "name": "NODE_PORT"
        },
        {
          "docs": {
            "remarks": "NodePort and ClusterIP Services, to which the external load balancer routes,\nare automatically created.",
            "stability": "stable",
            "summary": "Exposes the Service externally using a cloud provider's load balancer."
          },
          "name": "LOAD_BALANCER"
        },
        {
          "docs": {
            "remarks": "> Note: You need either kube-dns version 1.7 or CoreDNS version 0.0.8 or higher to use the ExternalName type.",
            "stability": "stable",
            "summary": "Maps the Service to the contents of the externalName field (e.g. foo.bar.example.com), by returning a CNAME record with its value. No proxying of any kind is set up."
          },
          "name": "EXTERNAL_NAME"
        }
      ],
      "name": "ServiceType",
      "symbolId": "src/service:ServiceType"
    },
    "cdk8s-plus-28.SshAuthSecret": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s-plus-28.Secret",
      "docs": {
        "see": "https://kubernetes.io/docs/concepts/configuration/secret/#ssh-authentication-secrets",
        "stability": "stable",
        "summary": "Create a secret for ssh authentication."
      },
      "fqn": "cdk8s-plus-28.SshAuthSecret",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/secret.ts",
          "line": 223
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.SshAuthSecretProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/secret.ts",
        "line": 222
      },
      "name": "SshAuthSecret",
      "symbolId": "src/secret:SshAuthSecret"
    },
    "cdk8s-plus-28.SshAuthSecretProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for `SshAuthSecret`."
      },
      "fqn": "cdk8s-plus-28.SshAuthSecretProps",
      "interfaces": [
        "cdk8s-plus-28.CommonSecretProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/secret.ts",
        "line": 210
      },
      "name": "SshAuthSecretProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The SSH private key to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/secret.ts",
            "line": 214
          },
          "name": "sshPrivateKey",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/secret:SshAuthSecretProps"
    },
    "cdk8s-plus-28.StatefulSet": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s-plus-28.Workload",
      "docs": {
        "remarks": "Manages the deployment and scaling of a set of Pods, and provides guarantees\nabout the ordering and uniqueness of these Pods.\n\nLike a Deployment, a StatefulSet manages Pods that are based on an identical\ncontainer spec. Unlike a Deployment, a StatefulSet maintains a sticky identity\nfor each of their Pods. These pods are created from the same spec, but are not\ninterchangeable: each has a persistent identifier that it maintains across any\nrescheduling.\n\nIf you want to use storage volumes to provide persistence for your workload, you\ncan use a StatefulSet as part of the solution. Although individual Pods in a StatefulSet\nare susceptible to failure, the persistent Pod identifiers make it easier to match existing\nvolumes to the new Pods that replace any that have failed.\n\nUsing StatefulSets\n------------------\nStatefulSets are valuable for applications that require one or more of the following.\n\n- Stable, unique network identifiers.\n- Stable, persistent storage.\n- Ordered, graceful deployment and scaling.\n- Ordered, automated rolling updates.",
        "stability": "stable",
        "summary": "StatefulSet is the workload API object used to manage stateful applications."
      },
      "fqn": "cdk8s-plus-28.StatefulSet",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/stateful-set.ts",
          "line": 129
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.StatefulSetProps"
            }
          }
        ]
      },
      "interfaces": [
        "cdk8s-plus-28.IScalable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/stateful-set.ts",
        "line": 96
      },
      "methods": [
        {
          "docs": {
            "see": "IScalable.markHasAutoscaler()",
            "stability": "stable",
            "summary": "Called on all IScalable targets when they are associated with an autoscaler."
          },
          "locationInModule": {
            "filename": "src/stateful-set.ts",
            "line": 202
          },
          "name": "markHasAutoscaler",
          "overrides": "cdk8s-plus-28.IScalable"
        },
        {
          "docs": {
            "see": "IScalable.toScalingTarget()",
            "stability": "stable",
            "summary": "Return the target spec properties of this Scalable."
          },
          "locationInModule": {
            "filename": "src/stateful-set.ts",
            "line": 209
          },
          "name": "toScalingTarget",
          "overrides": "cdk8s-plus-28.IScalable",
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.ScalingTarget"
            }
          }
        }
      ],
      "name": "StatefulSet",
      "properties": [
        {
          "docs": {
            "see": "base.Resource.apiObject",
            "stability": "stable",
            "summary": "The underlying cdk8s API object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stateful-set.ts",
            "line": 121
          },
          "name": "apiObject",
          "overrides": "cdk8s-plus-28.Resource",
          "protected": true,
          "type": {
            "fqn": "cdk8s.ApiObject"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Minimum duration for which a newly created pod should be ready without any of its container crashing, for it to be considered available."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stateful-set.ts",
            "line": 116
          },
          "name": "minReady",
          "type": {
            "fqn": "cdk8s.Duration"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Management policy to use for the set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stateful-set.ts",
            "line": 105
          },
          "name": "podManagementPolicy",
          "type": {
            "fqn": "cdk8s-plus-28.PodManagementPolicy"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of a resource type as it appears in the relevant API endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stateful-set.ts",
            "line": 123
          },
          "name": "resourceType",
          "overrides": "cdk8s-plus-28.Resource",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stateful-set.ts",
            "line": 127
          },
          "name": "service",
          "type": {
            "fqn": "cdk8s-plus-28.Service"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The update startegy of this stateful set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stateful-set.ts",
            "line": 110
          },
          "name": "strategy",
          "type": {
            "fqn": "cdk8s-plus-28.StatefulSetUpdateStrategy"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Number of desired pods."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stateful-set.ts",
            "line": 100
          },
          "name": "replicas",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "If this is a target of an autoscaler."
          },
          "locationInModule": {
            "filename": "src/stateful-set.ts",
            "line": 125
          },
          "name": "hasAutoscaler",
          "overrides": "cdk8s-plus-28.IScalable",
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/stateful-set:StatefulSet"
    },
    "cdk8s-plus-28.StatefulSetProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for initialization of `StatefulSet`."
      },
      "fqn": "cdk8s-plus-28.StatefulSetProps",
      "interfaces": [
        "cdk8s-plus-28.WorkloadProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/stateful-set.ts",
        "line": 28
      },
      "name": "StatefulSetProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "Duration.seconds(0)",
            "remarks": "Zero means the pod will be considered available as soon as it is ready.\n\nThis is an alpha field and requires enabling StatefulSetMinReadySeconds feature gate.",
            "see": "https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#min-ready-seconds",
            "stability": "stable",
            "summary": "Minimum duration for which a newly created pod should be ready without any of its container crashing, for it to be considered available."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stateful-set.ts",
            "line": 66
          },
          "name": "minReady",
          "optional": true,
          "type": {
            "fqn": "cdk8s.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "PodManagementPolicy.ORDERED_READY",
            "stability": "stable",
            "summary": "Pod management policy to use for this statefulset."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stateful-set.ts",
            "line": 48
          },
          "name": "podManagementPolicy",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.PodManagementPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "1",
            "stability": "stable",
            "summary": "Number of desired pods."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stateful-set.ts",
            "line": 41
          },
          "name": "replicas",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A new headless service will be created.",
            "stability": "stable",
            "summary": "Service to associate with the statefulset."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stateful-set.ts",
            "line": 34
          },
          "name": "service",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.Service"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- RollingUpdate with partition set to 0",
            "stability": "stable",
            "summary": "Indicates the StatefulSetUpdateStrategy that will be employed to update Pods in the StatefulSet when a revision is made to Template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stateful-set.ts",
            "line": 55
          },
          "name": "strategy",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.StatefulSetUpdateStrategy"
          }
        }
      ],
      "symbolId": "src/stateful-set:StatefulSetProps"
    },
    "cdk8s-plus-28.StatefulSetUpdateStrategy": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "StatefulSet update strategies."
      },
      "fqn": "cdk8s-plus-28.StatefulSetUpdateStrategy",
      "kind": "class",
      "locationInModule": {
        "filename": "src/stateful-set.ts",
        "line": 245
      },
      "methods": [
        {
          "docs": {
            "remarks": "Users must manually delete Pods to cause the controller to create new Pods\nthat reflect modifications.",
            "stability": "stable",
            "summary": "The controller will not automatically update the Pods in a StatefulSet."
          },
          "locationInModule": {
            "filename": "src/stateful-set.ts",
            "line": 252
          },
          "name": "onDelete",
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.StatefulSetUpdateStrategy"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "It will proceed in the same order as Pod termination (from the largest ordinal to the smallest),\nupdating each Pod one at a time. The Kubernetes control plane waits until an updated\nPod is Running and Ready prior to updating its predecessor.",
            "stability": "stable",
            "summary": "The controller will delete and recreate each Pod in the StatefulSet."
          },
          "locationInModule": {
            "filename": "src/stateful-set.ts",
            "line": 264
          },
          "name": "rollingUpdate",
          "parameters": [
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.StatefulSetUpdateStrategyRollingUpdateOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.StatefulSetUpdateStrategy"
            }
          },
          "static": true
        }
      ],
      "name": "StatefulSetUpdateStrategy",
      "symbolId": "src/stateful-set:StatefulSetUpdateStrategy"
    },
    "cdk8s-plus-28.StatefulSetUpdateStrategyRollingUpdateOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for `StatefulSetUpdateStrategy.rollingUpdate`."
      },
      "fqn": "cdk8s-plus-28.StatefulSetUpdateStrategyRollingUpdateOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/stateful-set.ts",
        "line": 223
      },
      "name": "StatefulSetUpdateStrategyRollingUpdateOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "0",
            "remarks": "If the partition is greater than replicas, updates to the pod template will not be propagated to Pods.\nIn most cases you will not need to use a partition, but they are useful if you want to stage an\nupdate, roll out a canary, or perform a phased roll out.",
            "see": "https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#partitions",
            "stability": "stable",
            "summary": "If specified, all Pods with an ordinal that is greater than or equal to the partition will be updated when the StatefulSet's .spec.template is updated. All Pods with an ordinal that is less than the partition will not be updated, and, even if they are deleted, they will be recreated at the previous version."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/stateful-set.ts",
            "line": 238
          },
          "name": "partition",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/stateful-set:StatefulSetUpdateStrategyRollingUpdateOptions"
    },
    "cdk8s-plus-28.SubjectConfiguration": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "remarks": "This can either hold a direct API object reference, or a value\nfor non-objects such as user and group names.",
        "stability": "stable",
        "summary": "Subject contains a reference to the object or user identities a role binding applies to."
      },
      "fqn": "cdk8s-plus-28.SubjectConfiguration",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/role-binding.ts",
        "line": 13
      },
      "name": "SubjectConfiguration",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Values defined by this API group are\n\"User\", \"Group\", and \"ServiceAccount\". If the Authorizer does not\nrecognized the kind value, the Authorizer should report an error.",
            "stability": "stable",
            "summary": "Kind of object being referenced."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/role-binding.ts",
            "line": 27
          },
          "name": "kind",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Name of the object being referenced."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/role-binding.ts",
            "line": 32
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Defaults to \"\" for\nServiceAccount subjects. Defaults to \"rbac.authorization.k8s.io\" for User\nand Group subjects.",
            "stability": "stable",
            "summary": "APIGroup holds the API group of the referenced subject."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/role-binding.ts",
            "line": 20
          },
          "name": "apiGroup",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If the object kind is non-namespace,\nsuch as \"User\" or \"Group\", and this value is not empty the Authorizer\nshould report an error.",
            "stability": "stable",
            "summary": "Namespace of the referenced object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/role-binding.ts",
            "line": 39
          },
          "name": "namespace",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/role-binding:SubjectConfiguration"
    },
    "cdk8s-plus-28.Sysctl": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Sysctl defines a kernel parameter to be set."
      },
      "fqn": "cdk8s-plus-28.Sysctl",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/pod.ts",
        "line": 263
      },
      "name": "Sysctl",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Name of a property to set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 267
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Value of a property to set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 272
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/pod:Sysctl"
    },
    "cdk8s-plus-28.TaintEffect": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Taint effects."
      },
      "fqn": "cdk8s-plus-28.TaintEffect",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/pod.ts",
        "line": 1052
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "This means that no pod will be able to schedule onto the node unless it has a matching toleration."
          },
          "name": "NO_SCHEDULE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "This is a \"preference\" or \"soft\" version of `NO_SCHEDULE` -- the system will try to avoid placing a pod that does not tolerate the taint on the node, but it is not required."
          },
          "name": "PREFER_NO_SCHEDULE"
        },
        {
          "docs": {
            "remarks": "- Pods that do not tolerate the taint are evicted immediately.\n- Pods that tolerate the taint without specifying `duration` remain bound forever.\n- Pods that tolerate the taint with a specified `duration` remain bound for\n   the specified amount of time.",
            "stability": "stable",
            "summary": "This affects pods that are already running on the node as follows:."
          },
          "name": "NO_EXECUTE"
        }
      ],
      "name": "TaintEffect",
      "symbolId": "src/pod:TaintEffect"
    },
    "cdk8s-plus-28.TaintedNode": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "A node that is matched by taint selectors."
      },
      "fqn": "cdk8s-plus-28.TaintedNode",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/pod.ts",
          "line": 1257
        },
        "parameters": [
          {
            "name": "taintSelector",
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "cdk8s-plus-28.NodeTaintQuery"
                },
                "kind": "array"
              }
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/pod.ts",
        "line": 1256
      },
      "name": "TaintedNode",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1257
          },
          "name": "taintSelector",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.NodeTaintQuery"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/pod:TaintedNode"
    },
    "cdk8s-plus-28.TcpSocketProbeOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for `Probe.fromTcpSocket()`."
      },
      "fqn": "cdk8s-plus-28.TcpSocketProbeOptions",
      "interfaces": [
        "cdk8s-plus-28.ProbeOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/probe.ts",
        "line": 107
      },
      "name": "TcpSocketProbeOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- defaults to the pod IP",
            "stability": "stable",
            "summary": "The host name to connect to on the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/probe.ts",
            "line": 120
          },
          "name": "host",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- defaults to `container.port`.",
            "stability": "stable",
            "summary": "The TCP port to connect to on the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/probe.ts",
            "line": 113
          },
          "name": "port",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/probe:TcpSocketProbeOptions"
    },
    "cdk8s-plus-28.TlsSecret": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s-plus-28.Secret",
      "docs": {
        "see": "https://kubernetes.io/docs/concepts/configuration/secret/#tls-secrets",
        "stability": "stable",
        "summary": "Create a secret for storing a TLS certificate and its associated key."
      },
      "fqn": "cdk8s-plus-28.TlsSecret",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/secret.ts",
          "line": 283
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.TlsSecretProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/secret.ts",
        "line": 282
      },
      "name": "TlsSecret",
      "symbolId": "src/secret:TlsSecret"
    },
    "cdk8s-plus-28.TlsSecretProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for `TlsSecret`."
      },
      "fqn": "cdk8s-plus-28.TlsSecretProps",
      "interfaces": [
        "cdk8s-plus-28.CommonSecretProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/secret.ts",
        "line": 265
      },
      "name": "TlsSecretProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The TLS cert."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/secret.ts",
            "line": 269
          },
          "name": "tlsCert",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The TLS key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/secret.ts",
            "line": 274
          },
          "name": "tlsKey",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/secret:TlsSecretProps"
    },
    "cdk8s-plus-28.Topology": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "stability": "stable",
        "summary": "Available topology domains."
      },
      "fqn": "cdk8s-plus-28.Topology",
      "kind": "class",
      "locationInModule": {
        "filename": "src/pod.ts",
        "line": 1298
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Custom key for the node label that the system uses to denote the topology domain."
          },
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1336
          },
          "name": "custom",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.Topology"
            }
          },
          "static": true
        }
      ],
      "name": "Topology",
      "properties": [
        {
          "const": true,
          "docs": {
            "see": "https://kubernetes.io/docs/reference/labels-annotations-taints/#kubernetesiohostname",
            "stability": "stable",
            "summary": "A hostname represents a single node in the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1305
          },
          "name": "HOSTNAME",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.Topology"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "It is uncommon\nfor Kubernetes clusters to span multiple regions. While the exact definition of a\nzone or region is left to infrastructure implementations, common properties of a region\ninclude higher network latency between them than within them, non-zero cost for network\ntraffic between them, and failure independence from other zones or regions.\n\nFor example, nodes within a region might share power infrastructure (e.g. a UPS or generator), but\nnodes in different regions typically would not.",
            "see": "https://kubernetes.io/docs/reference/labels-annotations-taints/#topologykubernetesioregion",
            "stability": "stable",
            "summary": "A region represents a larger domain, made up of one or more zones."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1331
          },
          "name": "REGION",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.Topology"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "It is common for Kubernetes clusters to\nspan multiple zones for increased availability. While the exact definition of a zone is\nleft to infrastructure implementations, common properties of a zone include very low\nnetwork latency within a zone, no-cost network traffic within a zone, and failure\nindependence from other zones. For example, nodes within a zone might share a network\nswitch, but nodes in different zones should not.",
            "see": "https://kubernetes.io/docs/reference/labels-annotations-taints/#topologykubernetesiozone",
            "stability": "stable",
            "summary": "A zone represents a logical failure domain."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1317
          },
          "name": "ZONE",
          "static": true,
          "type": {
            "fqn": "cdk8s-plus-28.Topology"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pod.ts",
            "line": 1340
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/pod:Topology"
    },
    "cdk8s-plus-28.User": {
      "assembly": "cdk8s-plus-28",
      "base": "constructs.Construct",
      "docs": {
        "stability": "stable",
        "summary": "Represents a user."
      },
      "fqn": "cdk8s-plus-28.User",
      "interfaces": [
        "cdk8s-plus-28.ISubject"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/role-binding.ts",
        "line": 202
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Reference a user in the cluster by name."
          },
          "locationInModule": {
            "filename": "src/role-binding.ts",
            "line": 207
          },
          "name": "fromName",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.User"
            }
          },
          "static": true
        },
        {
          "docs": {
            "see": "ISubect.toSubjectConfiguration()",
            "stability": "stable",
            "summary": "Return the subject configuration."
          },
          "locationInModule": {
            "filename": "src/role-binding.ts",
            "line": 223
          },
          "name": "toSubjectConfiguration",
          "overrides": "cdk8s-plus-28.ISubject",
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.SubjectConfiguration"
            }
          }
        }
      ],
      "name": "User",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/role-binding.ts",
            "line": 212
          },
          "name": "kind",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/role-binding.ts",
            "line": 213
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/role-binding.ts",
            "line": 211
          },
          "name": "apiGroup",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/role-binding:User"
    },
    "cdk8s-plus-28.Volume": {
      "assembly": "cdk8s-plus-28",
      "base": "constructs.Construct",
      "docs": {
        "remarks": "Docker also has a concept of volumes, though it is somewhat looser and less\nmanaged. In Docker, a volume is simply a directory on disk or in another\nContainer. Lifetimes are not managed and until very recently there were only\nlocal-disk-backed volumes. Docker now provides volume drivers, but the\nfunctionality is very limited for now (e.g. as of Docker 1.7 only one volume\ndriver is allowed per Container and there is no way to pass parameters to\nvolumes).\n\nA Kubernetes volume, on the other hand, has an explicit lifetime - the same\nas the Pod that encloses it. Consequently, a volume outlives any Containers\nthat run within the Pod, and data is preserved across Container restarts. Of\ncourse, when a Pod ceases to exist, the volume will cease to exist, too.\nPerhaps more importantly than this, Kubernetes supports many types of\nvolumes, and a Pod can use any number of them simultaneously.\n\nAt its core, a volume is just a directory, possibly with some data in it,\nwhich is accessible to the Containers in a Pod. How that directory comes to\nbe, the medium that backs it, and the contents of it are determined by the\nparticular volume type used.\n\nTo use a volume, a Pod specifies what volumes to provide for the Pod (the\n.spec.volumes field) and where to mount those into Containers (the\n.spec.containers[*].volumeMounts field).\n\nA process in a container sees a filesystem view composed from their Docker\nimage and volumes. The Docker image is at the root of the filesystem\nhierarchy, and any volumes are mounted at the specified paths within the\nimage. Volumes can not mount onto other volumes",
        "stability": "stable",
        "summary": "Volume represents a named volume in a pod that may be accessed by any container in the pod."
      },
      "fqn": "cdk8s-plus-28.Volume",
      "interfaces": [
        "cdk8s-plus-28.IStorage"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "src/volume.ts",
        "line": 52
      },
      "methods": [
        {
          "docs": {
            "remarks": "Unlike emptyDir, which is erased when a pod is removed, the contents of an EBS volume are\npersisted and the volume is unmounted. This means that an EBS volume can be pre-populated with data,\nand that data can be shared between pods.\n\nThere are some restrictions when using an awsElasticBlockStore volume:\n\n- the nodes on which pods are running must be AWS EC2 instances.\n- those instances need to be in the same region and availability zone as the EBS volume.\n- EBS only supports a single EC2 instance mounting a volume.",
            "stability": "stable",
            "summary": "Mounts an Amazon Web Services (AWS) EBS volume into your pod."
          },
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 66
          },
          "name": "fromAwsElasticBlockStore",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "volumeId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.AwsElasticBlockStoreVolumeOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.Volume"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Mounts a Microsoft Azure Data Disk into a pod."
          },
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 80
          },
          "name": "fromAzureDisk",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "diskName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "diskUri",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.AzureDiskVolumeOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.Volume"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "The configMap resource provides a way to inject configuration data into\nPods. The data stored in a ConfigMap object can be referenced in a volume\nof type configMap and then consumed by containerized applications running\nin a Pod.\n\nWhen referencing a configMap object, you can simply provide its name in the\nvolume to reference it. You can also customize the path to use for a\nspecific entry in the ConfigMap.",
            "stability": "stable",
            "summary": "Populate the volume from a ConfigMap."
          },
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 130
          },
          "name": "fromConfigMap",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The config map to use to populate the volume."
              },
              "name": "configMap",
              "type": {
                "fqn": "cdk8s-plus-28.IConfigMap"
              }
            },
            {
              "docs": {
                "summary": "Options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.ConfigMapVolumeOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.Volume"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Populate the volume from a CSI driver, for example the Secrets Store CSI Driver: https://secrets-store-csi-driver.sigs.k8s.io/introduction.html. Which in turn needs an associated provider to source the secrets, such as the AWS Secrets Manager and Systems Manager Parameter Store provider: https://aws.github.io/secrets-store-csi-driver-provider-aws/."
          },
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 249
          },
          "name": "fromCsi",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The name of the CSI driver to use to populate the volume."
              },
              "name": "driver",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Options for the CSI volume, including driver-specific ones."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.CsiVolumeOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.Volume"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "As the name says, it is\ninitially empty. Containers in the Pod can all read and write the same\nfiles in the emptyDir volume, though that volume can be mounted at the same\nor different paths in each Container. When a Pod is removed from a node for\nany reason, the data in the emptyDir is deleted forever.",
            "see": "http://kubernetes.io/docs/user-guide/volumes#emptydir",
            "stability": "stable",
            "summary": "An emptyDir volume is first created when a Pod is assigned to a Node, and exists as long as that Pod is running on that node."
          },
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 153
          },
          "name": "fromEmptyDir",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "- Additional options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.EmptyDirVolumeOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.Volume"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Unlike emptyDir, which is erased when a pod is removed, the contents of a PD are\npreserved and the volume is merely unmounted. This means that a PD can be pre-populated\nwith data, and that data can be shared between pods.\n\nThere are some restrictions when using a gcePersistentDisk:\n\n- the nodes on which Pods are running must be GCE VMs\n- those VMs need to be in the same GCE project and zone as the persistent disk",
            "stability": "stable",
            "summary": "Mounts a Google Compute Engine (GCE) persistent disk (PD) into your Pod."
          },
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 104
          },
          "name": "fromGcePersistentDisk",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "pdName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.GCEPersistentDiskVolumeOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.Volume"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "This is not something that most Pods will need, but it offers a powerful\nescape hatch for some applications.",
            "see": "https://kubernetes.io/docs/concepts/storage/volumes/#hostpath",
            "stability": "stable",
            "summary": "Used to mount a file or directory from the host node's filesystem into a Pod."
          },
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 215
          },
          "name": "fromHostPath",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "cdk8s-plus-28.HostPathVolumeOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.Volume"
            }
          },
          "static": true
        },
        {
          "docs": {
            "see": "https://kubernetes.io/docs/concepts/storage/volumes/#nfs",
            "stability": "stable",
            "summary": "Used to mount an NFS share into a Pod."
          },
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 229
          },
          "name": "fromNfs",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "cdk8s-plus-28.NfsVolumeOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.Volume"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "PersistentVolumeClaims are a way for users to \"claim\" durable storage (such as a GCE PersistentDisk or an iSCSI volume)\nwithout knowing the details of the particular cloud environment.",
            "see": "https://kubernetes.io/docs/concepts/storage/persistent-volumes/",
            "stability": "stable",
            "summary": "Used to mount a PersistentVolume into a Pod."
          },
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 197
          },
          "name": "fromPersistentVolumeClaim",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "claim",
              "type": {
                "fqn": "cdk8s-plus-28.IPersistentVolumeClaim"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.PersistentVolumeClaimVolumeOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.Volume"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "A secret volume is used to pass sensitive information, such as passwords, to Pods.\nYou can store secrets in the Kubernetes API and mount them as files for use by pods\nwithout coupling to Kubernetes directly.\n\nsecret volumes are backed by tmpfs (a RAM-backed filesystem)\nso they are never written to non-volatile storage.",
            "see": "https://kubernetes.io/docs/concepts/storage/volumes/#secret",
            "stability": "stable",
            "summary": "Populate the volume from a Secret."
          },
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 179
          },
          "name": "fromSecret",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The secret to use to populate the volume."
              },
              "name": "secr",
              "type": {
                "fqn": "cdk8s-plus-28.ISecret"
              }
            },
            {
              "docs": {
                "summary": "Options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.SecretVolumeOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.Volume"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Convert the piece of storage into a concrete volume."
          },
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 284
          },
          "name": "asVolume",
          "overrides": "cdk8s-plus-28.IStorage",
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.Volume"
            }
          }
        }
      ],
      "name": "Volume",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/volume.ts",
            "line": 278
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/volume:Volume"
    },
    "cdk8s-plus-28.VolumeMount": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Mount a volume from the pod to the container."
      },
      "fqn": "cdk8s-plus-28.VolumeMount",
      "interfaces": [
        "cdk8s-plus-28.MountOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/container.ts",
        "line": 1253
      },
      "name": "VolumeMount",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Must not\ncontain ':'.",
            "stability": "stable",
            "summary": "Path within the container at which the volume should be mounted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1263
          },
          "name": "path",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The volume to mount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/container.ts",
            "line": 1257
          },
          "name": "volume",
          "type": {
            "fqn": "cdk8s-plus-28.Volume"
          }
        }
      ],
      "symbolId": "src/container:VolumeMount"
    },
    "cdk8s-plus-28.Workload": {
      "abstract": true,
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s-plus-28.AbstractPod",
      "docs": {
        "remarks": "Whether your workload is a single\ncomponent or several that work together, on Kubernetes you run it inside a set of pods.\nIn Kubernetes, a Pod represents a set of running containers on your cluster.",
        "stability": "stable",
        "summary": "A workload is an application running on Kubernetes."
      },
      "fqn": "cdk8s-plus-28.Workload",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/workload.ts",
          "line": 79
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.WorkloadProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/workload.ts",
        "line": 63
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Configure selectors for this workload."
          },
          "locationInModule": {
            "filename": "src/workload.ts",
            "line": 111
          },
          "name": "select",
          "parameters": [
            {
              "name": "selectors",
              "type": {
                "fqn": "cdk8s-plus-28.LabelSelector"
              },
              "variadic": true
            }
          ],
          "variadic": true
        }
      ],
      "name": "Workload",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/workload.ts",
            "line": 65
          },
          "name": "connections",
          "type": {
            "fqn": "cdk8s-plus-28.PodConnections"
          }
        },
        {
          "docs": {
            "remarks": "Returns a a copy. Use `select()` to add expression matchers.",
            "stability": "stable",
            "summary": "The expression matchers this workload will use in order to select pods."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/workload.ts",
            "line": 135
          },
          "name": "matchExpressions",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.LabelSelectorRequirement"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "remarks": "Returns a a copy. Use `select()` to add label matchers.",
            "stability": "stable",
            "summary": "The label matchers this workload will use in order to select pods."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/workload.ts",
            "line": 126
          },
          "name": "matchLabels",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The metadata of pods in this workload."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/workload.ts",
            "line": 97
          },
          "name": "podMetadata",
          "overrides": "cdk8s-plus-28.AbstractPod",
          "type": {
            "fqn": "cdk8s.ApiObjectMetadataDefinition"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/workload.ts",
            "line": 67
          },
          "name": "scheduling",
          "type": {
            "fqn": "cdk8s-plus-28.WorkloadScheduling"
          }
        }
      ],
      "symbolId": "src/workload:Workload"
    },
    "cdk8s-plus-28.WorkloadProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for `Workload`."
      },
      "fqn": "cdk8s-plus-28.WorkloadProps",
      "interfaces": [
        "cdk8s-plus-28.AbstractPodProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/workload.ts",
        "line": 10
      },
      "name": "WorkloadProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The pod metadata of this workload."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/workload.ts",
            "line": 15
          },
          "name": "podMetadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s.ApiObjectMetadata"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "This ensures this workload manages pods created by\nits pod template.",
            "stability": "stable",
            "summary": "Automatically allocates a pod label selector for this workload and add it to the pod metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/workload.ts",
            "line": 24
          },
          "name": "select",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "see": "https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/#internal-default-constraints",
            "stability": "stable",
            "summary": "Automatically spread pods across hostname and zones."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/workload.ts",
            "line": 32
          },
          "name": "spread",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/workload:WorkloadProps"
    },
    "cdk8s-plus-28.WorkloadScheduling": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s-plus-28.PodScheduling",
      "docs": {
        "remarks": "It offers some additional API's on top of the core pod scheduling.",
        "stability": "stable",
        "summary": "Controls the pod scheduling strategy of this workload."
      },
      "fqn": "cdk8s-plus-28.WorkloadScheduling",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/pod.ts",
          "line": 1407
        },
        "parameters": [
          {
            "name": "instance",
            "type": {
              "fqn": "cdk8s-plus-28.AbstractPod"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/workload.ts",
        "line": 200
      },
      "methods": [
        {
          "docs": {
            "remarks": "A spread is a separation of the pod from itself and is used to\nbalance out pod replicas across a given topology.",
            "stability": "stable",
            "summary": "Spread the pods in this workload by the topology key."
          },
          "locationInModule": {
            "filename": "src/workload.ts",
            "line": 207
          },
          "name": "spread",
          "parameters": [
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.WorkloadSchedulingSpreadOptions"
              }
            }
          ]
        }
      ],
      "name": "WorkloadScheduling",
      "symbolId": "src/workload:WorkloadScheduling"
    },
    "cdk8s-plus-28.WorkloadSchedulingSpreadOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for `WorkloadScheduling.spread`."
      },
      "fqn": "cdk8s-plus-28.WorkloadSchedulingSpreadOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/workload.ts",
        "line": 178
      },
      "name": "WorkloadSchedulingSpreadOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Topology.HOSTNAME",
            "stability": "stable",
            "summary": "Which topology to spread on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/workload.ts",
            "line": 192
          },
          "name": "topology",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.Topology"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no weight. spread is assumed to be required.",
            "stability": "stable",
            "summary": "Indicates the spread is optional, with this weight score."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/workload.ts",
            "line": 185
          },
          "name": "weight",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/workload:WorkloadSchedulingSpreadOptions"
    },
    "cdk8s-plus-28.k8s.Affinity": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.Affinity"
        },
        "stability": "stable",
        "summary": "Affinity is a group of affinity scheduling rules."
      },
      "fqn": "cdk8s-plus-28.k8s.Affinity",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 21771
      },
      "name": "Affinity",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Affinity#nodeAffinity"
            },
            "stability": "stable",
            "summary": "Describes node affinity scheduling rules for the pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21777
          },
          "name": "nodeAffinity",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.NodeAffinity"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Affinity#podAffinity"
            },
            "stability": "stable",
            "summary": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s))."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21784
          },
          "name": "podAffinity",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.PodAffinity"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Affinity#podAntiAffinity"
            },
            "stability": "stable",
            "summary": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s))."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21791
          },
          "name": "podAntiAffinity",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.PodAntiAffinity"
          }
        }
      ],
      "symbolId": "src/imports/k8s:Affinity"
    },
    "cdk8s-plus-28.k8s.AggregationRule": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.rbac.v1.AggregationRule"
        },
        "stability": "stable",
        "summary": "AggregationRule describes how to locate ClusterRoles to aggregate into the ClusterRole."
      },
      "fqn": "cdk8s-plus-28.k8s.AggregationRule",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 17369
      },
      "name": "AggregationRule",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.rbac.v1.AggregationRule#clusterRoleSelectors"
            },
            "remarks": "If any of the selectors match, then the ClusterRole's permissions will be added",
            "stability": "stable",
            "summary": "ClusterRoleSelectors holds a list of selectors which will be used to find ClusterRoles and create the rules."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17375
          },
          "name": "clusterRoleSelectors",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.LabelSelector"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:AggregationRule"
    },
    "cdk8s-plus-28.k8s.ApiServiceSpec": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceSpec"
        },
        "remarks": "Only https is supported, though you are able to disable certificate verification.",
        "stability": "stable",
        "summary": "APIServiceSpec contains information for locating and communicating with a server."
      },
      "fqn": "cdk8s-plus-28.k8s.ApiServiceSpec",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 18186
      },
      "name": "ApiServiceSpec",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceSpec#groupPriorityMinimum"
            },
            "remarks": "Higher priority means that the group is preferred by clients over lower priority ones. Note that other versions of this group might specify even higher GroupPriorityMininum values such that the whole group gets a higher priority. The primary sort is based on GroupPriorityMinimum, ordered highest number to lowest (20 before 10). The secondary sort is based on the alphabetical comparison of the name of the object.  (v1.bar before v1.foo) We'd recommend something like: *.k8s.io (except extensions) at 18000 and PaaSes (OpenShift, Deis) are recommended to be in the 2000s",
            "stability": "stable",
            "summary": "GroupPriorityMininum is the priority this group should have at least."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18206
          },
          "name": "groupPriorityMinimum",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceSpec#versionPriority"
            },
            "remarks": "Must be greater than zero. The primary sort is based on VersionPriority, ordered highest to lowest (20 before 10). Since it's inside of a group, the number can be small, probably in the 10s. In case of equal version priorities, the version string will be used to compute the order inside a group. If the version string is \"kube-like\", it will sort above non \"kube-like\" version strings, which are ordered lexicographically. \"Kube-like\" versions start with a \"v\", then are followed by a number (the major version), then optionally the string \"alpha\" or \"beta\" and another number (the minor version). These are sorted first by GA > beta > alpha (where GA is a version with no suffix such as beta or alpha), and then by comparing major version, then minor version. An example sorted list of versions: v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.",
            "stability": "stable",
            "summary": "VersionPriority controls the ordering of this API version inside of its group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18234
          },
          "name": "versionPriority",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceSpec#caBundle"
            },
            "remarks": "If unspecified, system trust roots on the apiserver are used.",
            "stability": "stable",
            "summary": "CABundle is a PEM encoded CA bundle which will be used to validate an API server's serving certificate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18192
          },
          "name": "caBundle",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceSpec#group"
            },
            "stability": "stable",
            "summary": "Group is the API group name this server hosts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18199
          },
          "name": "group",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceSpec#insecureSkipTLSVerify"
            },
            "remarks": "This is strongly discouraged.  You should use the CABundle instead.",
            "stability": "stable",
            "summary": "InsecureSkipTLSVerify disables TLS certificate verification when communicating with this server."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18213
          },
          "name": "insecureSkipTlsVerify",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceSpec#service"
            },
            "remarks": "It must communicate on port 443. If the Service is nil, that means the handling for the API groupversion is handled locally on this server. The call will simply delegate to the normal handler chain to be fulfilled.",
            "stability": "stable",
            "summary": "Service is a reference to the service for this API server."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18220
          },
          "name": "service",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ServiceReference"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceSpec#version"
            },
            "remarks": "For example, \"v1\"",
            "stability": "stable",
            "summary": "Version is the API version this server hosts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18227
          },
          "name": "version",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ApiServiceSpec"
    },
    "cdk8s-plus-28.k8s.AuditAnnotationV1Alpha1": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1alpha1.AuditAnnotation"
        },
        "stability": "stable",
        "summary": "AuditAnnotation describes how to produce an audit annotation for an API request."
      },
      "fqn": "cdk8s-plus-28.k8s.AuditAnnotationV1Alpha1",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 18582
      },
      "name": "AuditAnnotationV1Alpha1",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1alpha1.AuditAnnotation#key"
            },
            "remarks": "The audit annotation keys of a ValidatingAdmissionPolicy must be unique. The key must be a qualified name ([A-Za-z0-9][-A-Za-z0-9_.]*) no more than 63 bytes in length.\n\nThe key is combined with the resource name of the ValidatingAdmissionPolicy to construct an audit annotation key: \"{ValidatingAdmissionPolicy name}/{key}\".\n\nIf an admission webhook uses the same resource name as this ValidatingAdmissionPolicy and the same audit annotation key, the annotation key will be identical. In this case, the first annotation written with the key will be included in the audit event and all subsequent annotations with the same key will be discarded.\n\nRequired.",
            "stability": "stable",
            "summary": "key specifies the audit annotation key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18594
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1alpha1.AuditAnnotation#valueExpression"
            },
            "remarks": "The expression must evaluate to either a string or null value. If the expression evaluates to a string, the audit annotation is included with the string value. If the expression evaluates to null or empty string the audit annotation will be omitted. The valueExpression may be no longer than 5kb in length. If the result of the valueExpression is more than 10kb in length, it will be truncated to 10kb.\n\nIf multiple ValidatingAdmissionPolicyBinding resources match an API request, then the valueExpression will be evaluated for each binding. All unique values produced by the valueExpressions will be joined together in a comma-separated list.\n\nRequired.",
            "stability": "stable",
            "summary": "valueExpression represents the expression which is evaluated by CEL to produce an audit annotation value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18605
          },
          "name": "valueExpression",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:AuditAnnotationV1Alpha1"
    },
    "cdk8s-plus-28.k8s.AuditAnnotationV1Beta1": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1beta1.AuditAnnotation"
        },
        "stability": "stable",
        "summary": "AuditAnnotation describes how to produce an audit annotation for an API request."
      },
      "fqn": "cdk8s-plus-28.k8s.AuditAnnotationV1Beta1",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 18994
      },
      "name": "AuditAnnotationV1Beta1",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1beta1.AuditAnnotation#key"
            },
            "remarks": "The audit annotation keys of a ValidatingAdmissionPolicy must be unique. The key must be a qualified name ([A-Za-z0-9][-A-Za-z0-9_.]*) no more than 63 bytes in length.\n\nThe key is combined with the resource name of the ValidatingAdmissionPolicy to construct an audit annotation key: \"{ValidatingAdmissionPolicy name}/{key}\".\n\nIf an admission webhook uses the same resource name as this ValidatingAdmissionPolicy and the same audit annotation key, the annotation key will be identical. In this case, the first annotation written with the key will be included in the audit event and all subsequent annotations with the same key will be discarded.\n\nRequired.",
            "stability": "stable",
            "summary": "key specifies the audit annotation key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19006
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1beta1.AuditAnnotation#valueExpression"
            },
            "remarks": "The expression must evaluate to either a string or null value. If the expression evaluates to a string, the audit annotation is included with the string value. If the expression evaluates to null or empty string the audit annotation will be omitted. The valueExpression may be no longer than 5kb in length. If the result of the valueExpression is more than 10kb in length, it will be truncated to 10kb.\n\nIf multiple ValidatingAdmissionPolicyBinding resources match an API request, then the valueExpression will be evaluated for each binding. All unique values produced by the valueExpressions will be joined together in a comma-separated list.\n\nRequired.",
            "stability": "stable",
            "summary": "valueExpression represents the expression which is evaluated by CEL to produce an audit annotation value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19017
          },
          "name": "valueExpression",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:AuditAnnotationV1Beta1"
    },
    "cdk8s-plus-28.k8s.AwsElasticBlockStoreVolumeSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource"
        },
        "remarks": "An AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.",
        "stability": "stable",
        "summary": "Represents a Persistent Disk resource in AWS."
      },
      "fqn": "cdk8s-plus-28.k8s.AwsElasticBlockStoreVolumeSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 20232
      },
      "name": "AwsElasticBlockStoreVolumeSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource#volumeID"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
            "stability": "stable",
            "summary": "volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20259
          },
          "name": "volumeId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource#fsType"
            },
            "remarks": "Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
            "stability": "stable",
            "summary": "fsType is the filesystem type of the volume that you want to mount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20238
          },
          "name": "fsType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource#partition"
            },
            "remarks": "If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).",
            "stability": "stable",
            "summary": "partition is the partition in the volume that you want to mount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20245
          },
          "name": "partition",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource#readOnly"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
            "stability": "stable",
            "summary": "readOnly value true will force the readOnly setting in VolumeMounts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20252
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/imports/k8s:AwsElasticBlockStoreVolumeSource"
    },
    "cdk8s-plus-28.k8s.AzureDiskVolumeSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.AzureDiskVolumeSource"
        },
        "stability": "stable",
        "summary": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod."
      },
      "fqn": "cdk8s-plus-28.k8s.AzureDiskVolumeSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 20285
      },
      "name": "AzureDiskVolumeSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.AzureDiskVolumeSource#diskName"
            },
            "stability": "stable",
            "summary": "diskName is the Name of the data disk in the blob storage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20298
          },
          "name": "diskName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.AzureDiskVolumeSource#diskURI"
            },
            "stability": "stable",
            "summary": "diskURI is the URI of data disk in the blob storage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20305
          },
          "name": "diskUri",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.AzureDiskVolumeSource#cachingMode"
            },
            "stability": "stable",
            "summary": "cachingMode is the Host Caching mode: None, Read Only, Read Write."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20291
          },
          "name": "cachingMode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.AzureDiskVolumeSource#fsType"
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
            "stability": "stable",
            "summary": "fsType is Filesystem type to mount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20312
          },
          "name": "fsType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.AzureDiskVolumeSource#kind"
            },
            "remarks": "defaults to shared",
            "stability": "stable",
            "summary": "kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20319
          },
          "name": "kind",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.AzureDiskVolumeSource#readOnly"
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "stability": "stable",
            "summary": "readOnly Defaults to false (read/write)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20327
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/imports/k8s:AzureDiskVolumeSource"
    },
    "cdk8s-plus-28.k8s.AzureFilePersistentVolumeSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.AzureFilePersistentVolumeSource"
        },
        "stability": "stable",
        "summary": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod."
      },
      "fqn": "cdk8s-plus-28.k8s.AzureFilePersistentVolumeSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 20355
      },
      "name": "AzureFilePersistentVolumeSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.AzureFilePersistentVolumeSource#secretName"
            },
            "stability": "stable",
            "summary": "secretName is the name of secret that contains Azure Storage Account Name and Key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20368
          },
          "name": "secretName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.AzureFilePersistentVolumeSource#shareName"
            },
            "stability": "stable",
            "summary": "shareName is the azure Share Name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20382
          },
          "name": "shareName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.AzureFilePersistentVolumeSource#readOnly"
            },
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "stability": "stable",
            "summary": "readOnly defaults to false (read/write)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20361
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.AzureFilePersistentVolumeSource#secretNamespace"
            },
            "stability": "stable",
            "summary": "secretNamespace is the namespace of the secret that contains Azure Storage Account Name and Key default is the same as the Pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20375
          },
          "name": "secretNamespace",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:AzureFilePersistentVolumeSource"
    },
    "cdk8s-plus-28.k8s.AzureFileVolumeSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.AzureFileVolumeSource"
        },
        "stability": "stable",
        "summary": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod."
      },
      "fqn": "cdk8s-plus-28.k8s.AzureFileVolumeSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 26230
      },
      "name": "AzureFileVolumeSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.AzureFileVolumeSource#secretName"
            },
            "stability": "stable",
            "summary": "secretName is the  name of secret that contains Azure Storage Account Name and Key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26243
          },
          "name": "secretName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.AzureFileVolumeSource#shareName"
            },
            "stability": "stable",
            "summary": "shareName is the azure share Name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26250
          },
          "name": "shareName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.AzureFileVolumeSource#readOnly"
            },
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "stability": "stable",
            "summary": "readOnly defaults to false (read/write)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26236
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/imports/k8s:AzureFileVolumeSource"
    },
    "cdk8s-plus-28.k8s.BoundObjectReference": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.authentication.v1.BoundObjectReference"
        },
        "stability": "stable",
        "summary": "BoundObjectReference is a reference to an object that a token is bound to."
      },
      "fqn": "cdk8s-plus-28.k8s.BoundObjectReference",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 19594
      },
      "name": "BoundObjectReference",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.authentication.v1.BoundObjectReference#apiVersion"
            },
            "stability": "stable",
            "summary": "API version of the referent."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19600
          },
          "name": "apiVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.authentication.v1.BoundObjectReference#kind"
            },
            "remarks": "Valid kinds are 'Pod' and 'Secret'.",
            "stability": "stable",
            "summary": "Kind of the referent."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19607
          },
          "name": "kind",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.authentication.v1.BoundObjectReference#name"
            },
            "stability": "stable",
            "summary": "Name of the referent."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19614
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.authentication.v1.BoundObjectReference#uid"
            },
            "stability": "stable",
            "summary": "UID of the referent."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19621
          },
          "name": "uid",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:BoundObjectReference"
    },
    "cdk8s-plus-28.k8s.Capabilities": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.Capabilities"
        },
        "stability": "stable",
        "summary": "Adds and removes POSIX capabilities from running containers."
      },
      "fqn": "cdk8s-plus-28.k8s.Capabilities",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 28867
      },
      "name": "Capabilities",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Capabilities#add"
            },
            "stability": "stable",
            "summary": "Added capabilities."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28873
          },
          "name": "add",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Capabilities#drop"
            },
            "stability": "stable",
            "summary": "Removed capabilities."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28880
          },
          "name": "drop",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:Capabilities"
    },
    "cdk8s-plus-28.k8s.CephFsPersistentVolumeSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.CephFSPersistentVolumeSource"
        },
        "stability": "stable",
        "summary": "Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling."
      },
      "fqn": "cdk8s-plus-28.k8s.CephFsPersistentVolumeSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 20408
      },
      "name": "CephFsPersistentVolumeSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.CephFSPersistentVolumeSource#monitors"
            },
            "stability": "stable",
            "summary": "monitors is Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20414
          },
          "name": "monitors",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.CephFSPersistentVolumeSource#path"
            },
            "stability": "stable",
            "summary": "path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20421
          },
          "name": "path",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.CephFSPersistentVolumeSource#readOnly"
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
            "stability": "stable",
            "summary": "readOnly is Optional: Defaults to false (read/write)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20429
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.CephFSPersistentVolumeSource#secretFile"
            },
            "stability": "stable",
            "summary": "secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20436
          },
          "name": "secretFile",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.CephFSPersistentVolumeSource#secretRef"
            },
            "remarks": "More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
            "stability": "stable",
            "summary": "secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20443
          },
          "name": "secretRef",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.SecretReference"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.CephFSPersistentVolumeSource#user"
            },
            "stability": "stable",
            "summary": "user is Optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20450
          },
          "name": "user",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:CephFsPersistentVolumeSource"
    },
    "cdk8s-plus-28.k8s.CephFsVolumeSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.CephFSVolumeSource"
        },
        "stability": "stable",
        "summary": "Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling."
      },
      "fqn": "cdk8s-plus-28.k8s.CephFsVolumeSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 26275
      },
      "name": "CephFsVolumeSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.CephFSVolumeSource#monitors"
            },
            "stability": "stable",
            "summary": "monitors is Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26281
          },
          "name": "monitors",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.CephFSVolumeSource#path"
            },
            "stability": "stable",
            "summary": "path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26288
          },
          "name": "path",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.CephFSVolumeSource#readOnly"
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
            "stability": "stable",
            "summary": "readOnly is Optional: Defaults to false (read/write)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26296
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.CephFSVolumeSource#secretFile"
            },
            "stability": "stable",
            "summary": "secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26303
          },
          "name": "secretFile",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.CephFSVolumeSource#secretRef"
            },
            "remarks": "More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
            "stability": "stable",
            "summary": "secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26310
          },
          "name": "secretRef",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.LocalObjectReference"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.CephFSVolumeSource#user"
            },
            "stability": "stable",
            "summary": "user is optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26317
          },
          "name": "user",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:CephFsVolumeSource"
    },
    "cdk8s-plus-28.k8s.CertificateSigningRequestSpec": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.certificates.v1.CertificateSigningRequestSpec"
        },
        "stability": "stable",
        "summary": "CertificateSigningRequestSpec contains the certificate request."
      },
      "fqn": "cdk8s-plus-28.k8s.CertificateSigningRequestSpec",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 14904
      },
      "name": "CertificateSigningRequestSpec",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.certificates.v1.CertificateSigningRequestSpec#request"
            },
            "remarks": "When serialized as JSON or YAML, the data is additionally base64-encoded.",
            "stability": "stable",
            "summary": "request contains an x509 certificate signing request encoded in a \"CERTIFICATE REQUEST\" PEM block."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14942
          },
          "name": "request",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.certificates.v1.CertificateSigningRequestSpec#signerName"
            },
            "remarks": "List/watch requests for CertificateSigningRequests can filter on this field using a \"spec.signerName=NAME\" fieldSelector.\n\nWell-known Kubernetes signers are:\n1. \"kubernetes.io/kube-apiserver-client\": issues client certificates that can be used to authenticate to kube-apiserver.\nRequests for this signer are never auto-approved by kube-controller-manager, can be issued by the \"csrsigning\" controller in kube-controller-manager.\n2. \"kubernetes.io/kube-apiserver-client-kubelet\": issues client certificates that kubelets use to authenticate to kube-apiserver.\nRequests for this signer can be auto-approved by the \"csrapproving\" controller in kube-controller-manager, and can be issued by the \"csrsigning\" controller in kube-controller-manager.\n3. \"kubernetes.io/kubelet-serving\" issues serving certificates that kubelets use to serve TLS endpoints, which kube-apiserver can connect to securely.\nRequests for this signer are never auto-approved by kube-controller-manager, and can be issued by the \"csrsigning\" controller in kube-controller-manager.\n\nMore details are available at https://k8s.io/docs/reference/access-authn-authz/certificate-signing-requests/#kubernetes-signers\n\nCustom signerNames can also be specified. The signer defines:\n1. Trust distribution: how trust (CA bundles) are distributed.\n2. Permitted subjects: and behavior when a disallowed subject is requested.\n3. Required, permitted, or forbidden x509 extensions in the request (including whether subjectAltNames are allowed, which types, restrictions on allowed values) and behavior when a disallowed extension is requested.\n4. Required, permitted, or forbidden key usages / extended key usages.\n5. Expiration/certificate lifetime: whether it is fixed by the signer, configurable by the admin.\n6. Whether or not requests for CA certificates are allowed.",
            "stability": "stable",
            "summary": "signerName indicates the requested signer, and is a qualified name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14969
          },
          "name": "signerName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.certificates.v1.CertificateSigningRequestSpec#expirationSeconds"
            },
            "remarks": "The certificate signer may issue a certificate with a different validity duration so a client must check the delta between the notBefore and and notAfter fields in the issued certificate to determine the actual duration.\n\nThe v1.22+ in-tree implementations of the well-known Kubernetes signers will honor this field as long as the requested duration is not greater than the maximum duration they will honor per the --cluster-signing-duration CLI flag to the Kubernetes controller manager.\n\nCertificate signers may not honor this field for various reasons:\n\n1. Old signer that is unaware of the field (such as the in-tree\nimplementations prior to v1.22)\n2. Signer whose configured maximum is shorter than the requested duration\n3. Signer whose configured minimum is longer than the requested duration\n\nThe minimum valid value for expirationSeconds is 600, i.e. 10 minutes.",
            "stability": "stable",
            "summary": "expirationSeconds is the requested duration of validity of the issued certificate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14921
          },
          "name": "expirationSeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.certificates.v1.CertificateSigningRequestSpec#extra"
            },
            "remarks": "Populated by the API server on creation and immutable.",
            "stability": "stable",
            "summary": "extra contains extra attributes of the user that created the CertificateSigningRequest."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14928
          },
          "name": "extra",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.certificates.v1.CertificateSigningRequestSpec#groups"
            },
            "remarks": "Populated by the API server on creation and immutable.",
            "stability": "stable",
            "summary": "groups contains group membership of the user that created the CertificateSigningRequest."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14935
          },
          "name": "groups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.certificates.v1.CertificateSigningRequestSpec#uid"
            },
            "remarks": "Populated by the API server on creation and immutable.",
            "stability": "stable",
            "summary": "uid contains the uid of the user that created the CertificateSigningRequest."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14976
          },
          "name": "uid",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.certificates.v1.CertificateSigningRequestSpec#usages"
            },
            "remarks": "Requests for TLS client certificates typically request: \"digital signature\", \"key encipherment\", \"client auth\".\n\nRequests for TLS serving certificates typically request: \"key encipherment\", \"digital signature\", \"server auth\".\n\nValid values are:\n\"signing\", \"digital signature\", \"content commitment\",\n\"key encipherment\", \"key agreement\", \"data encipherment\",\n\"cert sign\", \"crl sign\", \"encipher only\", \"decipher only\", \"any\",\n\"server auth\", \"client auth\",\n\"code signing\", \"email protection\", \"s/mime\",\n\"ipsec end system\", \"ipsec tunnel\", \"ipsec user\",\n\"timestamping\", \"ocsp signing\", \"microsoft sgc\", \"netscape sgc\"",
            "stability": "stable",
            "summary": "usages specifies a set of key usages requested in the issued certificate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14996
          },
          "name": "usages",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.certificates.v1.CertificateSigningRequestSpec#username"
            },
            "remarks": "Populated by the API server on creation and immutable.",
            "stability": "stable",
            "summary": "username contains the name of the user that created the CertificateSigningRequest."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15003
          },
          "name": "username",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:CertificateSigningRequestSpec"
    },
    "cdk8s-plus-28.k8s.CinderPersistentVolumeSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.CinderPersistentVolumeSource"
        },
        "remarks": "A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.",
        "stability": "stable",
        "summary": "Represents a cinder volume resource in Openstack."
      },
      "fqn": "cdk8s-plus-28.k8s.CinderPersistentVolumeSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 20478
      },
      "name": "CinderPersistentVolumeSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.CinderPersistentVolumeSource#volumeID"
            },
            "remarks": "More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
            "stability": "stable",
            "summary": "volumeID used to identify the volume in cinder."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20506
          },
          "name": "volumeId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.CinderPersistentVolumeSource#fsType"
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
            "stability": "stable",
            "summary": "fsType Filesystem type to mount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20484
          },
          "name": "fsType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.CinderPersistentVolumeSource#readOnly"
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
            "stability": "stable",
            "summary": "readOnly is Optional: Defaults to false (read/write)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20492
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.CinderPersistentVolumeSource#secretRef"
            },
            "stability": "stable",
            "summary": "secretRef is Optional: points to a secret object containing parameters used to connect to OpenStack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20499
          },
          "name": "secretRef",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.SecretReference"
          }
        }
      ],
      "symbolId": "src/imports/k8s:CinderPersistentVolumeSource"
    },
    "cdk8s-plus-28.k8s.CinderVolumeSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.CinderVolumeSource"
        },
        "remarks": "A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.",
        "stability": "stable",
        "summary": "Represents a cinder volume resource in Openstack."
      },
      "fqn": "cdk8s-plus-28.k8s.CinderVolumeSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 26345
      },
      "name": "CinderVolumeSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.CinderVolumeSource#volumeID"
            },
            "remarks": "More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
            "stability": "stable",
            "summary": "volumeID used to identify the volume in cinder."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26372
          },
          "name": "volumeId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.CinderVolumeSource#fsType"
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
            "stability": "stable",
            "summary": "fsType is the filesystem type to mount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26351
          },
          "name": "fsType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.CinderVolumeSource#readOnly"
            },
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
            "stability": "stable",
            "summary": "readOnly defaults to false (read/write)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26358
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.CinderVolumeSource#secretRef"
            },
            "stability": "stable",
            "summary": "secretRef is optional: points to a secret object containing parameters used to connect to OpenStack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26365
          },
          "name": "secretRef",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.LocalObjectReference"
          }
        }
      ],
      "symbolId": "src/imports/k8s:CinderVolumeSource"
    },
    "cdk8s-plus-28.k8s.ClaimSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ClaimSource"
        },
        "remarks": "Exactly one of these fields should be set.  Consumers of this type must treat an empty object as if it has an unknown value.",
        "stability": "stable",
        "summary": "ClaimSource describes a reference to a ResourceClaim."
      },
      "fqn": "cdk8s-plus-28.k8s.ClaimSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 26006
      },
      "name": "ClaimSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ClaimSource#resourceClaimName"
            },
            "stability": "stable",
            "summary": "ResourceClaimName is the name of a ResourceClaim object in the same namespace as this pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26012
          },
          "name": "resourceClaimName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ClaimSource#resourceClaimTemplateName"
            },
            "remarks": "The template will be used to create a new ResourceClaim, which will be bound to this pod. When this pod is deleted, the ResourceClaim will also be deleted. The pod name and resource name, along with a generated component, will be used to form a unique name for the ResourceClaim, which will be recorded in pod.status.resourceClaimStatuses.\n\nThis field is immutable and no changes will be made to the corresponding ResourceClaim by the control plane after creating the ResourceClaim.",
            "stability": "stable",
            "summary": "ResourceClaimTemplateName is the name of a ResourceClaimTemplate object in the same namespace as this pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26023
          },
          "name": "resourceClaimTemplateName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ClaimSource"
    },
    "cdk8s-plus-28.k8s.ClientIpConfig": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ClientIPConfig"
        },
        "stability": "stable",
        "summary": "ClientIPConfig represents the configurations of Client IP based session affinity."
      },
      "fqn": "cdk8s-plus-28.k8s.ClientIpConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 27321
      },
      "name": "ClientIpConfig",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ClientIPConfig#timeoutSeconds"
            },
            "remarks": "The value must be >0 && <=86400(for 1 day) if ServiceAffinity == \"ClientIP\". Default value is 10800(for 3 hours).",
            "stability": "stable",
            "summary": "timeoutSeconds specifies the seconds of ClientIP type session sticky time."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27327
          },
          "name": "timeoutSeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ClientIpConfig"
    },
    "cdk8s-plus-28.k8s.ClusterCidrSpecV1Alpha1": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.networking.v1alpha1.ClusterCIDRSpec"
        },
        "stability": "stable",
        "summary": "ClusterCIDRSpec defines the desired state of ClusterCIDR."
      },
      "fqn": "cdk8s-plus-28.k8s.ClusterCidrSpecV1Alpha1",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 17080
      },
      "name": "ClusterCidrSpecV1Alpha1",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1alpha1.ClusterCIDRSpec#perNodeHostBits"
            },
            "remarks": "A subnet mask determines how much of the address is used for network bits and host bits. For example an IPv4 address of 192.168.0.0/24, splits the address into 24 bits for the network portion and 8 bits for the host portion. To allocate 256 IPs, set this field to 8 (a /24 mask for IPv4 or a /120 for IPv6). Minimum value is 4 (16 IPs). This field is immutable.",
            "stability": "stable",
            "summary": "perNodeHostBits defines the number of host bits to be configured per node."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17107
          },
          "name": "perNodeHostBits",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1alpha1.ClusterCIDRSpec#ipv4"
            },
            "stability": "stable",
            "summary": "ipv4 defines an IPv4 IP block in CIDR notation(e.g. \"10.0.0.0/8\"). At least one of ipv4 and ipv6 must be specified. This field is immutable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17086
          },
          "name": "ipv4",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1alpha1.ClusterCIDRSpec#ipv6"
            },
            "stability": "stable",
            "summary": "ipv6 defines an IPv6 IP block in CIDR notation(e.g. \"2001:db8::/64\"). At least one of ipv4 and ipv6 must be specified. This field is immutable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17093
          },
          "name": "ipv6",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1alpha1.ClusterCIDRSpec#nodeSelector"
            },
            "remarks": "An empty or nil nodeSelector selects all nodes. This field is immutable.",
            "stability": "stable",
            "summary": "nodeSelector defines which nodes the config is applicable to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17100
          },
          "name": "nodeSelector",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.NodeSelector"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ClusterCidrSpecV1Alpha1"
    },
    "cdk8s-plus-28.k8s.ClusterTrustBundleSpecV1Alpha1": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.certificates.v1alpha1.ClusterTrustBundleSpec"
        },
        "stability": "stable",
        "summary": "ClusterTrustBundleSpec contains the signer and trust anchors."
      },
      "fqn": "cdk8s-plus-28.k8s.ClusterTrustBundleSpecV1Alpha1",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 15033
      },
      "name": "ClusterTrustBundleSpecV1Alpha1",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.certificates.v1alpha1.ClusterTrustBundleSpec#trustBundle"
            },
            "remarks": "The data must consist only of PEM certificate blocks that parse as valid X.509 certificates.  Each certificate must include a basic constraints extension with the CA bit set.  The API server will reject objects that contain duplicate certificates, or that use PEM block headers.\n\nUsers of ClusterTrustBundles, including Kubelet, are free to reorder and deduplicate certificate blocks in this file according to their own logic, as well as to drop PEM block headers and inter-block data.",
            "stability": "stable",
            "summary": "trustBundle contains the individual X.509 trust anchors for this bundle, as PEM bundle of PEM-wrapped, DER-formatted X.509 certificates."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15058
          },
          "name": "trustBundle",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.certificates.v1alpha1.ClusterTrustBundleSpec#signerName"
            },
            "remarks": "In order to create or update a ClusterTrustBundle that sets signerName, you must have the following cluster-scoped permission: group=certificates.k8s.io resource=signers resourceName=<the signer name> verb=attest.\n\nIf signerName is not empty, then the ClusterTrustBundle object must be named with the signer name as a prefix (translating slashes to colons). For example, for the signer name `example.com/foo`, valid ClusterTrustBundle object names include `example.com:foo:abc` and `example.com:foo:v1`.\n\nIf signerName is empty, then the ClusterTrustBundle object's name must not have such a prefix.\n\nList/watch requests for ClusterTrustBundles can filter on this field using a `spec.signerName=NAME` field selector.",
            "stability": "stable",
            "summary": "signerName indicates the associated signer, if any."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15047
          },
          "name": "signerName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ClusterTrustBundleSpecV1Alpha1"
    },
    "cdk8s-plus-28.k8s.ComponentCondition": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ComponentCondition"
        },
        "stability": "stable",
        "summary": "Information about the condition of a component."
      },
      "fqn": "cdk8s-plus-28.k8s.ComponentCondition",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 15220
      },
      "name": "ComponentCondition",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ComponentCondition#status"
            },
            "remarks": "Valid values for \"Healthy\": \"True\", \"False\", or \"Unknown\".",
            "stability": "stable",
            "summary": "Status of the condition for a component."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15240
          },
          "name": "status",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ComponentCondition#type"
            },
            "remarks": "Valid value: \"Healthy\"",
            "stability": "stable",
            "summary": "Type of condition for a component."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15247
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ComponentCondition#error"
            },
            "remarks": "For example, a health check error code.",
            "stability": "stable",
            "summary": "Condition error code for a component."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15226
          },
          "name": "error",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ComponentCondition#message"
            },
            "remarks": "For example, information about a health check.",
            "stability": "stable",
            "summary": "Message about the condition for a component."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15233
          },
          "name": "message",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ComponentCondition"
    },
    "cdk8s-plus-28.k8s.ConfigMapEnvSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ConfigMapEnvSource"
        },
        "remarks": "The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.",
        "stability": "stable",
        "summary": "ConfigMapEnvSource selects a ConfigMap to populate the environment variables with."
      },
      "fqn": "cdk8s-plus-28.k8s.ConfigMapEnvSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 28581
      },
      "name": "ConfigMapEnvSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ConfigMapEnvSource#name"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
            "stability": "stable",
            "summary": "Name of the referent."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28587
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ConfigMapEnvSource#optional"
            },
            "stability": "stable",
            "summary": "Specify whether the ConfigMap must be defined."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28594
          },
          "name": "optional",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ConfigMapEnvSource"
    },
    "cdk8s-plus-28.k8s.ConfigMapKeySelector": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ConfigMapKeySelector"
        },
        "stability": "stable",
        "summary": "Selects a key from a ConfigMap."
      },
      "fqn": "cdk8s-plus-28.k8s.ConfigMapKeySelector",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 29885
      },
      "name": "ConfigMapKeySelector",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ConfigMapKeySelector#key"
            },
            "stability": "stable",
            "summary": "The key to select."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29891
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ConfigMapKeySelector#name"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
            "stability": "stable",
            "summary": "Name of the referent."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29898
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ConfigMapKeySelector#optional"
            },
            "stability": "stable",
            "summary": "Specify whether the ConfigMap or its key must be defined."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29905
          },
          "name": "optional",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ConfigMapKeySelector"
    },
    "cdk8s-plus-28.k8s.ConfigMapNodeConfigSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ConfigMapNodeConfigSource"
        },
        "remarks": "This API is deprecated since 1.22: https://git.k8s.io/enhancements/keps/sig-node/281-dynamic-kubelet-configuration",
        "stability": "stable",
        "summary": "ConfigMapNodeConfigSource contains the information to reference a ConfigMap as a config source for the Node."
      },
      "fqn": "cdk8s-plus-28.k8s.ConfigMapNodeConfigSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 25177
      },
      "name": "ConfigMapNodeConfigSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ConfigMapNodeConfigSource#kubeletConfigKey"
            },
            "stability": "stable",
            "summary": "KubeletConfigKey declares which key of the referenced ConfigMap corresponds to the KubeletConfiguration structure This field is required in all cases."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25183
          },
          "name": "kubeletConfigKey",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ConfigMapNodeConfigSource#name"
            },
            "stability": "stable",
            "summary": "Name is the metadata.name of the referenced ConfigMap. This field is required in all cases."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25190
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ConfigMapNodeConfigSource#namespace"
            },
            "stability": "stable",
            "summary": "Namespace is the metadata.namespace of the referenced ConfigMap. This field is required in all cases."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25197
          },
          "name": "namespace",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ConfigMapNodeConfigSource#resourceVersion"
            },
            "stability": "stable",
            "summary": "ResourceVersion is the metadata.ResourceVersion of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25204
          },
          "name": "resourceVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ConfigMapNodeConfigSource#uid"
            },
            "stability": "stable",
            "summary": "UID is the metadata.UID of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25211
          },
          "name": "uid",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ConfigMapNodeConfigSource"
    },
    "cdk8s-plus-28.k8s.ConfigMapProjection": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ConfigMapProjection"
        },
        "remarks": "The contents of the target ConfigMap's Data field will be presented in a projected volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. Note that this is identical to a configmap volume source without the default mode.",
        "stability": "stable",
        "summary": "Adapts a ConfigMap into a projected volume."
      },
      "fqn": "cdk8s-plus-28.k8s.ConfigMapProjection",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 30096
      },
      "name": "ConfigMapProjection",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ConfigMapProjection#items"
            },
            "remarks": "If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
            "stability": "stable",
            "summary": "items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 30102
          },
          "name": "items",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KeyToPath"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ConfigMapProjection#name"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
            "stability": "stable",
            "summary": "Name of the referent."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 30109
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ConfigMapProjection#optional"
            },
            "stability": "stable",
            "summary": "optional specify whether the ConfigMap or its keys must be defined."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 30116
          },
          "name": "optional",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ConfigMapProjection"
    },
    "cdk8s-plus-28.k8s.ConfigMapVolumeSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ConfigMapVolumeSource"
        },
        "remarks": "The contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling.",
        "stability": "stable",
        "summary": "Adapts a ConfigMap into a volume."
      },
      "fqn": "cdk8s-plus-28.k8s.ConfigMapVolumeSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 26400
      },
      "name": "ConfigMapVolumeSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ConfigMapVolumeSource#defaultMode"
            },
            "default": "0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "remarks": "Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "stability": "stable",
            "summary": "defaultMode is optional: mode bits used to set permissions on created files by default."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26407
          },
          "name": "defaultMode",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ConfigMapVolumeSource#items"
            },
            "remarks": "If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
            "stability": "stable",
            "summary": "items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26414
          },
          "name": "items",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KeyToPath"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ConfigMapVolumeSource#name"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
            "stability": "stable",
            "summary": "Name of the referent."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26421
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ConfigMapVolumeSource#optional"
            },
            "stability": "stable",
            "summary": "optional specify whether the ConfigMap or its keys must be defined."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26428
          },
          "name": "optional",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ConfigMapVolumeSource"
    },
    "cdk8s-plus-28.k8s.Container": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.Container"
        },
        "stability": "stable",
        "summary": "A single application container that you want to run within a pod."
      },
      "fqn": "cdk8s-plus-28.k8s.Container",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 21816
      },
      "name": "Container",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Container#name"
            },
            "remarks": "Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.",
            "stability": "stable",
            "summary": "Name of the container specified as a DNS_LABEL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21879
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Container#args"
            },
            "remarks": "The container image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
            "stability": "stable",
            "summary": "Arguments to the entrypoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21822
          },
          "name": "args",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Container#command"
            },
            "remarks": "Not executed within a shell. The container image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
            "stability": "stable",
            "summary": "Entrypoint array."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21829
          },
          "name": "command",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Container#env"
            },
            "remarks": "Cannot be updated.",
            "stability": "stable",
            "summary": "List of environment variables to set in the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21836
          },
          "name": "env",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.EnvVar"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Container#envFrom"
            },
            "remarks": "The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.",
            "stability": "stable",
            "summary": "List of sources to populate environment variables in the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21843
          },
          "name": "envFrom",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.EnvFromSource"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Container#image"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.",
            "stability": "stable",
            "summary": "Container image name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21850
          },
          "name": "image",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Container#imagePullPolicy"
            },
            "default": "Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
            "remarks": "One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
            "stability": "stable",
            "summary": "Image pull policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21858
          },
          "name": "imagePullPolicy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Container#lifecycle"
            },
            "remarks": "Cannot be updated.",
            "stability": "stable",
            "summary": "Actions that the management system should take in response to container lifecycle events."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21865
          },
          "name": "lifecycle",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.Lifecycle"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Container#livenessProbe"
            },
            "remarks": "Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "stability": "stable",
            "summary": "Periodic probe of container liveness."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21872
          },
          "name": "livenessProbe",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.Probe"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Container#ports"
            },
            "remarks": "Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Modifying this array with strategic merge patch may corrupt the data. For more information See https://github.com/kubernetes/kubernetes/issues/108255. Cannot be updated.",
            "stability": "stable",
            "summary": "List of ports to expose from the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21886
          },
          "name": "ports",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.ContainerPort"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Container#readinessProbe"
            },
            "remarks": "Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "stability": "stable",
            "summary": "Periodic probe of container service readiness."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21893
          },
          "name": "readinessProbe",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.Probe"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Container#resizePolicy"
            },
            "stability": "stable",
            "summary": "Resources resize policy for the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21900
          },
          "name": "resizePolicy",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.ContainerResizePolicy"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Container#resources"
            },
            "remarks": "Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
            "stability": "stable",
            "summary": "Compute Resources required by this container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21907
          },
          "name": "resources",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ResourceRequirements"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Container#restartPolicy"
            },
            "remarks": "This field may only be set for init containers, and the only allowed value is \"Always\". For non-init containers or when this field is not specified, the restart behavior is defined by the Pod's restart policy and the container type. Setting the RestartPolicy as \"Always\" for the init container will have the following effect: this init container will be continually restarted on exit until all regular containers have terminated. Once all regular containers have completed, all init containers with restartPolicy \"Always\" will be shut down. This lifecycle differs from normal init containers and is often referred to as a \"sidecar\" container. Although this init container still starts in the init container sequence, it does not wait for the container to complete before proceeding to the next init container. Instead, the next init container starts immediately after this init container is started, or after any startupProbe has successfully completed.",
            "stability": "stable",
            "summary": "RestartPolicy defines the restart behavior of individual containers in a pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21914
          },
          "name": "restartPolicy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Container#securityContext"
            },
            "remarks": "If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext. More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
            "stability": "stable",
            "summary": "SecurityContext defines the security options the container should be run with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21921
          },
          "name": "securityContext",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.SecurityContext"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Container#startupProbe"
            },
            "remarks": "If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "stability": "stable",
            "summary": "StartupProbe indicates that the Pod has successfully initialized."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21928
          },
          "name": "startupProbe",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.Probe"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Container#stdin"
            },
            "default": "false.",
            "remarks": "If this is not set, reads from stdin in the container will always result in EOF. Default is false.",
            "stability": "stable",
            "summary": "Whether this container should allocate a buffer for stdin in the container runtime."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21936
          },
          "name": "stdin",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Container#stdinOnce"
            },
            "default": "false",
            "remarks": "When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false",
            "stability": "stable",
            "summary": "Whether the container runtime should close the stdin channel after it has been opened by a single attach."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21944
          },
          "name": "stdinOnce",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Container#terminationMessagePath"
            },
            "default": "dev/termination-log. Cannot be updated.",
            "remarks": "Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.",
            "stability": "stable",
            "summary": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21952
          },
          "name": "terminationMessagePath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Container#terminationMessagePolicy"
            },
            "default": "File. Cannot be updated.",
            "remarks": "File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.",
            "stability": "stable",
            "summary": "Indicate how the termination message should be populated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21960
          },
          "name": "terminationMessagePolicy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Container#tty"
            },
            "default": "false.",
            "remarks": "Default is false.",
            "stability": "stable",
            "summary": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21968
          },
          "name": "tty",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Container#volumeDevices"
            },
            "stability": "stable",
            "summary": "volumeDevices is the list of block devices to be used by the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21975
          },
          "name": "volumeDevices",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.VolumeDevice"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Container#volumeMounts"
            },
            "remarks": "Cannot be updated.",
            "stability": "stable",
            "summary": "Pod volumes to mount into the container's filesystem."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21982
          },
          "name": "volumeMounts",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.VolumeMount"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Container#workingDir"
            },
            "remarks": "If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
            "stability": "stable",
            "summary": "Container's working directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21989
          },
          "name": "workingDir",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:Container"
    },
    "cdk8s-plus-28.k8s.ContainerPort": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ContainerPort"
        },
        "stability": "stable",
        "summary": "ContainerPort represents a network port in a single container."
      },
      "fqn": "cdk8s-plus-28.k8s.ContainerPort",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 25648
      },
      "name": "ContainerPort",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ContainerPort#containerPort"
            },
            "remarks": "This must be a valid port number, 0 < x < 65536.",
            "stability": "stable",
            "summary": "Number of port to expose on the pod's IP address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25654
          },
          "name": "containerPort",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ContainerPort#hostIP"
            },
            "stability": "stable",
            "summary": "What host IP to bind the external port to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25661
          },
          "name": "hostIp",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ContainerPort#hostPort"
            },
            "remarks": "If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.",
            "stability": "stable",
            "summary": "Number of port to expose on the host."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25668
          },
          "name": "hostPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ContainerPort#name"
            },
            "remarks": "Each named port in a pod must have a unique name. Name for the port that can be referred to by services.",
            "stability": "stable",
            "summary": "If specified, this must be an IANA_SVC_NAME and unique within the pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25675
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ContainerPort#protocol"
            },
            "default": "TCP\".",
            "remarks": "Must be UDP, TCP, or SCTP. Defaults to \"TCP\".",
            "stability": "stable",
            "summary": "Protocol for port."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25683
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ContainerPort"
    },
    "cdk8s-plus-28.k8s.ContainerResizePolicy": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ContainerResizePolicy"
        },
        "stability": "stable",
        "summary": "ContainerResizePolicy represents resource resize policy for the container."
      },
      "fqn": "cdk8s-plus-28.k8s.ContainerResizePolicy",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 25710
      },
      "name": "ContainerResizePolicy",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ContainerResizePolicy#resourceName"
            },
            "remarks": "Supported values: cpu, memory.",
            "stability": "stable",
            "summary": "Name of the resource to which this resource resize policy applies."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25716
          },
          "name": "resourceName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ContainerResizePolicy#restartPolicy"
            },
            "remarks": "If not specified, it defaults to NotRequired.",
            "stability": "stable",
            "summary": "Restart policy to apply when specified resource is resized."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25723
          },
          "name": "restartPolicy",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ContainerResizePolicy"
    },
    "cdk8s-plus-28.k8s.ContainerResourceMetricSourceV2": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.autoscaling.v2.ContainerResourceMetricSource"
        },
        "stability": "stable",
        "summary": "ContainerResourceMetricSource indicates how to scale on a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  The values will be averaged together before being compared to the target.  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the \"pods\" source.  Only one \"target\" type should be set."
      },
      "fqn": "cdk8s-plus-28.k8s.ContainerResourceMetricSourceV2",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 24919
      },
      "name": "ContainerResourceMetricSourceV2",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v2.ContainerResourceMetricSource#container"
            },
            "stability": "stable",
            "summary": "container is the name of the container in the pods of the scaling target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24925
          },
          "name": "container",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v2.ContainerResourceMetricSource#name"
            },
            "stability": "stable",
            "summary": "name is the name of the resource in question."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24932
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v2.ContainerResourceMetricSource#target"
            },
            "stability": "stable",
            "summary": "target specifies the target value for the given metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24939
          },
          "name": "target",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.MetricTargetV2"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ContainerResourceMetricSourceV2"
    },
    "cdk8s-plus-28.k8s.CronJobSpec": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.batch.v1.CronJobSpec"
        },
        "stability": "stable",
        "summary": "CronJobSpec describes how the job execution will look like and when it will actually run."
      },
      "fqn": "cdk8s-plus-28.k8s.CronJobSpec",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 14666
      },
      "name": "CronJobSpec",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.batch.v1.CronJobSpec#jobTemplate"
            },
            "stability": "stable",
            "summary": "Specifies the job that will be created when executing a CronJob."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14689
          },
          "name": "jobTemplate",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.JobTemplateSpec"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.batch.v1.CronJobSpec#schedule"
            },
            "stability": "stable",
            "summary": "The schedule in Cron format, see https://en.wikipedia.org/wiki/Cron."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14696
          },
          "name": "schedule",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.batch.v1.CronJobSpec#concurrencyPolicy"
            },
            "remarks": "- \"Allow\" (default): allows CronJobs to run concurrently; - \"Forbid\": forbids concurrent runs, skipping next run if previous run hasn't finished yet; - \"Replace\": cancels currently running job and replaces it with a new one",
            "stability": "stable",
            "summary": "Specifies how to treat concurrent executions of a Job. Valid values are:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14674
          },
          "name": "concurrencyPolicy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.batch.v1.CronJobSpec#failedJobsHistoryLimit"
            },
            "default": "1.",
            "remarks": "Value must be non-negative integer. Defaults to 1.",
            "stability": "stable",
            "summary": "The number of failed finished jobs to retain."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14682
          },
          "name": "failedJobsHistoryLimit",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.batch.v1.CronJobSpec#startingDeadlineSeconds"
            },
            "remarks": "Missed jobs executions will be counted as failed ones.",
            "stability": "stable",
            "summary": "Optional deadline in seconds for starting the job if it misses scheduled time for any reason."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14703
          },
          "name": "startingDeadlineSeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.batch.v1.CronJobSpec#successfulJobsHistoryLimit"
            },
            "default": "3.",
            "remarks": "Value must be non-negative integer. Defaults to 3.",
            "stability": "stable",
            "summary": "The number of successful finished jobs to retain."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14711
          },
          "name": "successfulJobsHistoryLimit",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.batch.v1.CronJobSpec#suspend"
            },
            "default": "false.",
            "remarks": "Defaults to false.",
            "stability": "stable",
            "summary": "This flag tells the controller to suspend subsequent executions, it does not apply to already started executions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14719
          },
          "name": "suspend",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.batch.v1.CronJobSpec#timeZone"
            },
            "stability": "stable",
            "summary": "The time zone name for the given schedule, see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones. If not specified, this will default to the time zone of the kube-controller-manager process. The set of valid time zone names and the time zone offset is loaded from the system-wide time zone database by the API server during CronJob validation and the controller manager during execution. If no system-wide time zone database can be found a bundled version of the database is used instead. If the time zone name becomes invalid during the lifetime of a CronJob or due to a change in host configuration, the controller will stop creating new new Jobs and will create a system event with the reason UnknownTimeZone. More information can be found in https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/#time-zones."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14726
          },
          "name": "timeZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:CronJobSpec"
    },
    "cdk8s-plus-28.k8s.CrossVersionObjectReference": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.autoscaling.v1.CrossVersionObjectReference"
        },
        "stability": "stable",
        "summary": "CrossVersionObjectReference contains enough information to let you identify the referred resource."
      },
      "fqn": "cdk8s-plus-28.k8s.CrossVersionObjectReference",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 19761
      },
      "name": "CrossVersionObjectReference",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v1.CrossVersionObjectReference#kind"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "stability": "stable",
            "summary": "kind is the kind of the referent;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19774
          },
          "name": "kind",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v1.CrossVersionObjectReference#name"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
            "stability": "stable",
            "summary": "name is the name of the referent;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19781
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v1.CrossVersionObjectReference#apiVersion"
            },
            "stability": "stable",
            "summary": "apiVersion is the API version of the referent."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19767
          },
          "name": "apiVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:CrossVersionObjectReference"
    },
    "cdk8s-plus-28.k8s.CrossVersionObjectReferenceV2": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.autoscaling.v2.CrossVersionObjectReference"
        },
        "stability": "stable",
        "summary": "CrossVersionObjectReference contains enough information to let you identify the referred resource."
      },
      "fqn": "cdk8s-plus-28.k8s.CrossVersionObjectReferenceV2",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 19915
      },
      "name": "CrossVersionObjectReferenceV2",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v2.CrossVersionObjectReference#kind"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "stability": "stable",
            "summary": "kind is the kind of the referent;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19928
          },
          "name": "kind",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v2.CrossVersionObjectReference#name"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
            "stability": "stable",
            "summary": "name is the name of the referent;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19935
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v2.CrossVersionObjectReference#apiVersion"
            },
            "stability": "stable",
            "summary": "apiVersion is the API version of the referent."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19921
          },
          "name": "apiVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:CrossVersionObjectReferenceV2"
    },
    "cdk8s-plus-28.k8s.CsiDriverSpec": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.storage.v1.CSIDriverSpec"
        },
        "stability": "stable",
        "summary": "CSIDriverSpec is the specification of a CSIDriver."
      },
      "fqn": "cdk8s-plus-28.k8s.CsiDriverSpec",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 17763
      },
      "name": "CsiDriverSpec",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.CSIDriverSpec#attachRequired"
            },
            "remarks": "The CSI external-attacher coordinates with CSI volume driver and updates the volumeattachment status when the attach operation is complete. If the CSIDriverRegistry feature gate is enabled and the value is specified to false, the attach operation will be skipped. Otherwise the attach operation will be called.\n\nThis field is immutable.",
            "stability": "stable",
            "summary": "attachRequired indicates this CSI volume driver requires an attach operation (because it implements the CSI ControllerPublishVolume() method), and that the Kubernetes attach detach controller should call the attach volume interface which checks the volumeattachment status and waits until the volume is attached before proceeding to mounting."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17771
          },
          "name": "attachRequired",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.CSIDriverSpec#fsGroupPolicy"
            },
            "default": "ReadWriteOnceWithFSType, which will examine each volume to determine if Kubernetes should modify ownership and permissions of the volume. With the default policy the defined fsGroup will only be applied if a fstype is defined and the volume's access mode contains ReadWriteOnce.",
            "remarks": "Refer to the specific FSGroupPolicy values for additional details.\n\nThis field is immutable.\n\nDefaults to ReadWriteOnceWithFSType, which will examine each volume to determine if Kubernetes should modify ownership and permissions of the volume. With the default policy the defined fsGroup will only be applied if a fstype is defined and the volume's access mode contains ReadWriteOnce.",
            "stability": "stable",
            "summary": "fsGroupPolicy defines if the underlying volume supports changing ownership and permission of the volume before being mounted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17783
          },
          "name": "fsGroupPolicy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.CSIDriverSpec#podInfoOnMount"
            },
            "default": "false.",
            "remarks": "The CSI driver specifies podInfoOnMount as part of driver deployment. If true, Kubelet will pass pod information as VolumeContext in the CSI NodePublishVolume() calls. The CSI driver is responsible for parsing and validating the information passed in as VolumeContext.\n\nThe following VolumeConext will be passed if podInfoOnMount is set to true. This list might grow, but the prefix will be used. \"csi.storage.k8s.io/pod.name\": pod.Name \"csi.storage.k8s.io/pod.namespace\": pod.Namespace \"csi.storage.k8s.io/pod.uid\": string(pod.UID) \"csi.storage.k8s.io/ephemeral\": \"true\" if the volume is an ephemeral inline volume\ndefined by a CSIVolumeSource, otherwise \"false\"\n\n\"csi.storage.k8s.io/ephemeral\" is a new feature in Kubernetes 1.16. It is only required for drivers which support both the \"Persistent\" and \"Ephemeral\" VolumeLifecycleMode. Other drivers can leave pod info disabled and/or ignore this field. As Kubernetes 1.15 doesn't support this field, drivers can only support one mode when deployed on such a cluster and the deployment determines which mode that is, for example via a command line parameter of the driver.\n\nThis field is immutable.",
            "stability": "stable",
            "summary": "podInfoOnMount indicates this CSI volume driver requires additional pod information (like podName, podUID, etc.) during mount operations, if set to true. If set to false, pod information will not be passed on mount. Default is false."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17800
          },
          "name": "podInfoOnMount",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.CSIDriverSpec#requiresRepublish"
            },
            "remarks": "This field defaults to false.\n\nNote: After a successful initial NodePublishVolume call, subsequent calls to NodePublishVolume should only update the contents of the volume. New mount points will not be seen by a running container.",
            "stability": "stable",
            "summary": "requiresRepublish indicates the CSI driver wants `NodePublishVolume` being periodically called to reflect any possible change in the mounted volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17809
          },
          "name": "requiresRepublish",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.CSIDriverSpec#seLinuxMount"
            },
            "default": "false\".",
            "remarks": "When \"true\", the CSI driver must ensure that all volumes provided by this CSI driver can be mounted separately with different `-o context` options. This is typical for storage backends that provide volumes as filesystems on block devices or as independent shared volumes. Kubernetes will call NodeStage / NodePublish with \"-o context=xyz\" mount option when mounting a ReadWriteOncePod volume used in Pod that has explicitly set SELinux context. In the future, it may be expanded to other volume AccessModes. In any case, Kubernetes will ensure that the volume is mounted only with a single SELinux context.\n\nWhen \"false\", Kubernetes won't pass any special SELinux mount options to the driver. This is typical for volumes that represent subdirectories of a bigger shared filesystem.\n\nDefault is \"false\".",
            "stability": "stable",
            "summary": "seLinuxMount specifies if the CSI driver supports \"-o context\" mount option."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17823
          },
          "name": "seLinuxMount",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.CSIDriverSpec#storageCapacity"
            },
            "remarks": "The check can be enabled immediately when deploying a driver. In that case, provisioning new volumes with late binding will pause until the driver deployment has published some suitable CSIStorageCapacity object.\n\nAlternatively, the driver can be deployed with the field unset or false and it can be flipped later when storage capacity information has been published.\n\nThis field was immutable in Kubernetes <= 1.22 and now is mutable.",
            "stability": "stable",
            "summary": "storageCapacity indicates that the CSI volume driver wants pod scheduling to consider the storage capacity that the driver deployment will report by creating CSIStorageCapacity objects with capacity information, if set to true."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17836
          },
          "name": "storageCapacity",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.CSIDriverSpec#tokenRequests"
            },
            "remarks": "Kubelet will pass the tokens in VolumeContext in the CSI NodePublishVolume calls. The CSI driver should parse and validate the following VolumeContext: \"csi.storage.k8s.io/serviceAccount.tokens\": {\n\"<audience>\": {\n\"token\": <token>,\n\"expirationTimestamp\": <expiration timestamp in RFC3339>,\n},\n...\n}\n\nNote: Audience in each TokenRequest should be different and at most one token is empty string. To receive a new token after expiry, RequiresRepublish can be used to trigger NodePublishVolume periodically.",
            "stability": "stable",
            "summary": "tokenRequests indicates the CSI driver needs pods' service account tokens it is mounting volume for to do necessary authentication."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17851
          },
          "name": "tokenRequests",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.TokenRequest"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.CSIDriverSpec#volumeLifecycleModes"
            },
            "remarks": "The default if the list is empty is \"Persistent\", which is the usage defined by the CSI specification and implemented in Kubernetes via the usual PV/PVC mechanism.\n\nThe other mode is \"Ephemeral\". In this mode, volumes are defined inline inside the pod spec with CSIVolumeSource and their lifecycle is tied to the lifecycle of that pod. A driver has to be aware of this because it is only going to get a NodePublishVolume call for such a volume.\n\nFor more information about implementing this mode, see https://kubernetes-csi.github.io/docs/ephemeral-local-volumes.html A driver can support one or more of these modes and more modes may be added in the future.\n\nThis field is beta. This field is immutable.",
            "stability": "stable",
            "summary": "volumeLifecycleModes defines what kind of volumes this CSI volume driver supports."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17864
          },
          "name": "volumeLifecycleModes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:CsiDriverSpec"
    },
    "cdk8s-plus-28.k8s.CsiNodeDriver": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.storage.v1.CSINodeDriver"
        },
        "stability": "stable",
        "summary": "CSINodeDriver holds information about the specification of one CSI driver installed on a node."
      },
      "fqn": "cdk8s-plus-28.k8s.CsiNodeDriver",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 24138
      },
      "name": "CsiNodeDriver",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.CSINodeDriver#name"
            },
            "remarks": "This MUST be the same name returned by the CSI GetPluginName() call for that driver.",
            "stability": "stable",
            "summary": "name represents the name of the CSI driver that this object refers to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24151
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.CSINodeDriver#nodeID"
            },
            "remarks": "This field enables Kubernetes to communicate with storage systems that do not share the same nomenclature for nodes. For example, Kubernetes may refer to a given node as \"node1\", but the storage system may refer to the same node as \"nodeA\". When Kubernetes issues a command to the storage system to attach a volume to a specific node, it can use this field to refer to the node name using the ID that the storage system will understand, e.g. \"nodeA\" instead of \"node1\". This field is required.",
            "stability": "stable",
            "summary": "nodeID of the node from the driver point of view."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24158
          },
          "name": "nodeId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.CSINodeDriver#allocatable"
            },
            "remarks": "This field is beta.",
            "stability": "stable",
            "summary": "allocatable represents the volume resources of a node that are available for scheduling."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24144
          },
          "name": "allocatable",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.VolumeNodeResources"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.CSINodeDriver#topologyKeys"
            },
            "remarks": "When a driver is initialized on a cluster, it provides a set of topology keys that it understands (e.g. \"company.com/zone\", \"company.com/region\"). When a driver is initialized on a node, it provides the same topology keys along with values. Kubelet will expose these topology keys as labels on its own node object. When Kubernetes does topology aware provisioning, it can use this list to determine which labels it should retrieve from the node object and pass back to the driver. It is possible for different nodes to use different topology keys. This can be empty if driver does not support topology.",
            "stability": "stable",
            "summary": "topologyKeys is the list of keys supported by the driver."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24165
          },
          "name": "topologyKeys",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:CsiNodeDriver"
    },
    "cdk8s-plus-28.k8s.CsiNodeSpec": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.storage.v1.CSINodeSpec"
        },
        "stability": "stable",
        "summary": "CSINodeSpec holds information about the specification of all CSI drivers installed on a node."
      },
      "fqn": "cdk8s-plus-28.k8s.CsiNodeSpec",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 17894
      },
      "name": "CsiNodeSpec",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.CSINodeSpec#drivers"
            },
            "remarks": "If all drivers in the list are uninstalled, this can become empty.",
            "stability": "stable",
            "summary": "drivers is a list of information of all CSI Drivers existing on a node."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17900
          },
          "name": "drivers",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.CsiNodeDriver"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:CsiNodeSpec"
    },
    "cdk8s-plus-28.k8s.CsiPersistentVolumeSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.CSIPersistentVolumeSource"
        },
        "stability": "stable",
        "summary": "Represents storage that is managed by an external CSI volume driver (Beta feature)."
      },
      "fqn": "cdk8s-plus-28.k8s.CsiPersistentVolumeSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 20532
      },
      "name": "CsiPersistentVolumeSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.CSIPersistentVolumeSource#driver"
            },
            "remarks": "Required.",
            "stability": "stable",
            "summary": "driver is the name of the driver to use for this volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20552
          },
          "name": "driver",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.CSIPersistentVolumeSource#volumeHandle"
            },
            "remarks": "Required.",
            "stability": "stable",
            "summary": "volumeHandle is the unique volume name returned by the CSI volume plugin’s CreateVolume to refer to the volume on all subsequent calls."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20602
          },
          "name": "volumeHandle",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.CSIPersistentVolumeSource#controllerExpandSecretRef"
            },
            "remarks": "This field is optional, and may be empty if no secret is required. If the secret object contains more than one secret, all secrets are passed.",
            "stability": "stable",
            "summary": "controllerExpandSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI ControllerExpandVolume call."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20538
          },
          "name": "controllerExpandSecretRef",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.SecretReference"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.CSIPersistentVolumeSource#controllerPublishSecretRef"
            },
            "remarks": "This field is optional, and may be empty if no secret is required. If the secret object contains more than one secret, all secrets are passed.",
            "stability": "stable",
            "summary": "controllerPublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI ControllerPublishVolume and ControllerUnpublishVolume calls."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20545
          },
          "name": "controllerPublishSecretRef",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.SecretReference"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.CSIPersistentVolumeSource#fsType"
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\".",
            "stability": "stable",
            "summary": "fsType to mount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20559
          },
          "name": "fsType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.CSIPersistentVolumeSource#nodeExpandSecretRef"
            },
            "remarks": "This is a beta field which is enabled default by CSINodeExpandSecret feature gate. This field is optional, may be omitted if no secret is required. If the secret object contains more than one secret, all secrets are passed.",
            "stability": "stable",
            "summary": "nodeExpandSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodeExpandVolume call."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20566
          },
          "name": "nodeExpandSecretRef",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.SecretReference"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.CSIPersistentVolumeSource#nodePublishSecretRef"
            },
            "remarks": "This field is optional, and may be empty if no secret is required. If the secret object contains more than one secret, all secrets are passed.",
            "stability": "stable",
            "summary": "nodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20573
          },
          "name": "nodePublishSecretRef",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.SecretReference"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.CSIPersistentVolumeSource#nodeStageSecretRef"
            },
            "remarks": "This field is optional, and may be empty if no secret is required. If the secret object contains more than one secret, all secrets are passed.",
            "stability": "stable",
            "summary": "nodeStageSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodeStageVolume and NodeStageVolume and NodeUnstageVolume calls."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20580
          },
          "name": "nodeStageSecretRef",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.SecretReference"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.CSIPersistentVolumeSource#readOnly"
            },
            "default": "false (read/write).",
            "remarks": "Defaults to false (read/write).",
            "stability": "stable",
            "summary": "readOnly value to pass to ControllerPublishVolumeRequest."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20588
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.CSIPersistentVolumeSource#volumeAttributes"
            },
            "stability": "stable",
            "summary": "volumeAttributes of the volume to publish."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20595
          },
          "name": "volumeAttributes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:CsiPersistentVolumeSource"
    },
    "cdk8s-plus-28.k8s.CsiVolumeSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.CSIVolumeSource"
        },
        "stability": "stable",
        "summary": "Represents a source location of a volume to mount, managed by an external CSI driver."
      },
      "fqn": "cdk8s-plus-28.k8s.CsiVolumeSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 26454
      },
      "name": "CsiVolumeSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.CSIVolumeSource#driver"
            },
            "remarks": "Consult with your admin for the correct name as registered in the cluster.",
            "stability": "stable",
            "summary": "driver is the name of the CSI driver that handles this volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26460
          },
          "name": "driver",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.CSIVolumeSource#fsType"
            },
            "remarks": "Ex. \"ext4\", \"xfs\", \"ntfs\". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.",
            "stability": "stable",
            "summary": "fsType to mount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26467
          },
          "name": "fsType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.CSIVolumeSource#nodePublishSecretRef"
            },
            "remarks": "This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.",
            "stability": "stable",
            "summary": "nodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26474
          },
          "name": "nodePublishSecretRef",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.LocalObjectReference"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.CSIVolumeSource#readOnly"
            },
            "default": "false (read/write).",
            "remarks": "Defaults to false (read/write).",
            "stability": "stable",
            "summary": "readOnly specifies a read-only configuration for the volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26482
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.CSIVolumeSource#volumeAttributes"
            },
            "remarks": "Consult your driver's documentation for supported values.",
            "stability": "stable",
            "summary": "volumeAttributes stores driver-specific properties that are passed to the CSI driver."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26489
          },
          "name": "volumeAttributes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:CsiVolumeSource"
    },
    "cdk8s-plus-28.k8s.CustomResourceColumnDefinition": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceColumnDefinition"
        },
        "stability": "stable",
        "summary": "CustomResourceColumnDefinition specifies a column for server side printing."
      },
      "fqn": "cdk8s-plus-28.k8s.CustomResourceColumnDefinition",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 28038
      },
      "name": "CustomResourceColumnDefinition",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceColumnDefinition#jsonPath"
            },
            "stability": "stable",
            "summary": "jsonPath is a simple JSON path (i.e. with array notation) which is evaluated against each custom resource to produce the value for this column."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28058
          },
          "name": "jsonPath",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceColumnDefinition#name"
            },
            "stability": "stable",
            "summary": "name is a human readable name for the column."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28065
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceColumnDefinition#type"
            },
            "remarks": "See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.",
            "stability": "stable",
            "summary": "type is an OpenAPI type definition for this column."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28079
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceColumnDefinition#description"
            },
            "stability": "stable",
            "summary": "description is a human readable description of this column."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28044
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceColumnDefinition#format"
            },
            "remarks": "The 'name' format is applied to the primary identifier column to assist in clients identifying column is the resource name. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.",
            "stability": "stable",
            "summary": "format is an optional OpenAPI type definition for this column."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28051
          },
          "name": "format",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceColumnDefinition#priority"
            },
            "remarks": "Lower numbers are considered higher priority. Columns that may be omitted in limited space scenarios should be given a priority greater than 0.",
            "stability": "stable",
            "summary": "priority is an integer defining the relative importance of this column compared to others."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28072
          },
          "name": "priority",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/imports/k8s:CustomResourceColumnDefinition"
    },
    "cdk8s-plus-28.k8s.CustomResourceConversion": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceConversion"
        },
        "stability": "stable",
        "summary": "CustomResourceConversion describes how to convert different versions of a CR."
      },
      "fqn": "cdk8s-plus-28.k8s.CustomResourceConversion",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 24310
      },
      "name": "CustomResourceConversion",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceConversion#strategy"
            },
            "remarks": "Allowed values are: - `\"None\"`: The converter only change the apiVersion and would not touch any other field in the custom resource. - `\"Webhook\"`: API Server will call to an external webhook to do the conversion. Additional information\nis needed for this option. This requires spec.preserveUnknownFields to be false, and spec.conversion.webhook to be set.",
            "stability": "stable",
            "summary": "strategy specifies how custom resources are converted between versions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24317
          },
          "name": "strategy",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceConversion#webhook"
            },
            "remarks": "Required when `strategy` is set to `\"Webhook\"`.",
            "stability": "stable",
            "summary": "webhook describes how to call the conversion webhook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24324
          },
          "name": "webhook",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.WebhookConversion"
          }
        }
      ],
      "symbolId": "src/imports/k8s:CustomResourceConversion"
    },
    "cdk8s-plus-28.k8s.CustomResourceDefinitionNames": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionNames"
        },
        "stability": "stable",
        "summary": "CustomResourceDefinitionNames indicates the names to serve this CustomResourceDefinition."
      },
      "fqn": "cdk8s-plus-28.k8s.CustomResourceDefinitionNames",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 24348
      },
      "name": "CustomResourceDefinitionNames",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionNames#kind"
            },
            "remarks": "It is normally CamelCase and singular. Custom resource instances will use this value as the `kind` attribute in API calls.",
            "stability": "stable",
            "summary": "kind is the serialized kind of the resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24361
          },
          "name": "kind",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionNames#plural"
            },
            "remarks": "The custom resources are served under `/apis/<group>/<version>/.../<plural>`. Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`). Must be all lowercase.",
            "stability": "stable",
            "summary": "plural is the plural name of the resource to serve."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24376
          },
          "name": "plural",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionNames#categories"
            },
            "stability": "stable",
            "summary": "categories is a list of grouped resources this custom resource belongs to (e.g. 'all'). This is published in API discovery documents, and used by clients to support invocations like `kubectl get all`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24354
          },
          "name": "categories",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionNames#listKind"
            },
            "default": "kind`List\".",
            "remarks": "Defaults to \"`kind`List\".",
            "stability": "stable",
            "summary": "listKind is the serialized kind of the list for this resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24369
          },
          "name": "listKind",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionNames#shortNames"
            },
            "remarks": "It must be all lowercase.",
            "stability": "stable",
            "summary": "shortNames are short names for the resource, exposed in API discovery documents, and used by clients to support invocations like `kubectl get <shortname>`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24383
          },
          "name": "shortNames",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionNames#singular"
            },
            "default": "lowercased `kind`.",
            "remarks": "It must be all lowercase. Defaults to lowercased `kind`.",
            "stability": "stable",
            "summary": "singular is the singular name of the resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24391
          },
          "name": "singular",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:CustomResourceDefinitionNames"
    },
    "cdk8s-plus-28.k8s.CustomResourceDefinitionSpec": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionSpec"
        },
        "stability": "stable",
        "summary": "CustomResourceDefinitionSpec describes how a user wants their resource to appear."
      },
      "fqn": "cdk8s-plus-28.k8s.CustomResourceDefinitionSpec",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 18048
      },
      "name": "CustomResourceDefinitionSpec",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionSpec#group"
            },
            "remarks": "The custom resources are served under `/apis/<group>/...`. Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`).",
            "stability": "stable",
            "summary": "group is the API group of the defined custom resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18061
          },
          "name": "group",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionSpec#names"
            },
            "stability": "stable",
            "summary": "names specify the resource and kind names for the custom resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18068
          },
          "name": "names",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.CustomResourceDefinitionNames"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionSpec#scope"
            },
            "remarks": "Allowed values are `Cluster` and `Namespaced`.",
            "stability": "stable",
            "summary": "scope indicates whether the defined custom resource is cluster- or namespace-scoped."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18082
          },
          "name": "scope",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionSpec#versions"
            },
            "remarks": "Version names are used to compute the order in which served versions are listed in API discovery. If the version string is \"kube-like\", it will sort above non \"kube-like\" version strings, which are ordered lexicographically. \"Kube-like\" versions start with a \"v\", then are followed by a number (the major version), then optionally the string \"alpha\" or \"beta\" and another number (the minor version). These are sorted first by GA > beta > alpha (where GA is a version with no suffix such as beta or alpha), and then by comparing major version, then minor version. An example sorted list of versions: v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.",
            "stability": "stable",
            "summary": "versions is the list of all API versions of the defined custom resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18089
          },
          "name": "versions",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.CustomResourceDefinitionVersion"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionSpec#conversion"
            },
            "stability": "stable",
            "summary": "conversion defines conversion settings for the CRD."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18054
          },
          "name": "conversion",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.CustomResourceConversion"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionSpec#preserveUnknownFields"
            },
            "remarks": "apiVersion, kind, metadata and known fields inside metadata are always preserved. This field is deprecated in favor of setting `x-preserve-unknown-fields` to true in `spec.versions[*].schema.openAPIV3Schema`. See https://kubernetes.io/docs/tasks/extend-kubernetes/custom-resources/custom-resource-definitions/#field-pruning for details.",
            "stability": "stable",
            "summary": "preserveUnknownFields indicates that object fields which are not specified in the OpenAPI schema should be preserved when persisting to storage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18075
          },
          "name": "preserveUnknownFields",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/imports/k8s:CustomResourceDefinitionSpec"
    },
    "cdk8s-plus-28.k8s.CustomResourceDefinitionVersion": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionVersion"
        },
        "stability": "stable",
        "summary": "CustomResourceDefinitionVersion describes a version for CRD."
      },
      "fqn": "cdk8s-plus-28.k8s.CustomResourceDefinitionVersion",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 24419
      },
      "name": "CustomResourceDefinitionVersion",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionVersion#name"
            },
            "stability": "stable",
            "summary": "name is the version name, e.g. “v1”, “v2beta1”, etc. The custom resources are served under this version at `/apis/<group>/<version>/...` if `served` is true."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24447
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionVersion#served"
            },
            "stability": "stable",
            "summary": "served is a flag enabling/disabling this version from being served via REST APIs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24461
          },
          "name": "served",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionVersion#storage"
            },
            "remarks": "There must be exactly one version with storage=true.",
            "stability": "stable",
            "summary": "storage indicates this version should be used when persisting custom resources to storage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24468
          },
          "name": "storage",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionVersion#additionalPrinterColumns"
            },
            "remarks": "See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables for details. If no columns are specified, a single column displaying the age of the custom resource is used.",
            "stability": "stable",
            "summary": "additionalPrinterColumns specifies additional columns returned in Table output."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24425
          },
          "name": "additionalPrinterColumns",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.CustomResourceColumnDefinition"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionVersion#deprecated"
            },
            "default": "false.",
            "remarks": "When set to true, API requests to this version receive a warning header in the server response. Defaults to false.",
            "stability": "stable",
            "summary": "deprecated indicates this version of the custom resource API is deprecated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24433
          },
          "name": "deprecated",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionVersion#deprecationWarning"
            },
            "remarks": "May only be set when `deprecated` is true. The default warning indicates this version is deprecated and recommends use of the newest served version of equal or greater stability, if one exists.",
            "stability": "stable",
            "summary": "deprecationWarning overrides the default warning returned to API clients."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24440
          },
          "name": "deprecationWarning",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionVersion#schema"
            },
            "stability": "stable",
            "summary": "schema describes the schema used for validation, pruning, and defaulting of this version of the custom resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24454
          },
          "name": "schema",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.CustomResourceValidation"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionVersion#subresources"
            },
            "stability": "stable",
            "summary": "subresources specify what subresources this version of the defined custom resource have."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24475
          },
          "name": "subresources",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.CustomResourceSubresources"
          }
        }
      ],
      "symbolId": "src/imports/k8s:CustomResourceDefinitionVersion"
    },
    "cdk8s-plus-28.k8s.CustomResourceSubresourceScale": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresourceScale"
        },
        "stability": "stable",
        "summary": "CustomResourceSubresourceScale defines how to serve the scale subresource for CustomResources."
      },
      "fqn": "cdk8s-plus-28.k8s.CustomResourceSubresourceScale",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 29840
      },
      "name": "CustomResourceSubresourceScale",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresourceScale#specReplicasPath"
            },
            "stability": "stable",
            "summary": "specReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `spec.replicas`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.spec`. If there is no value under the given path in the custom resource, the `/scale` subresource will return an error on GET."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29853
          },
          "name": "specReplicasPath",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresourceScale#statusReplicasPath"
            },
            "stability": "stable",
            "summary": "statusReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `status.replicas`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.status`. If there is no value under the given path in the custom resource, the `status.replicas` value in the `/scale` subresource will default to 0."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29860
          },
          "name": "statusReplicasPath",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresourceScale#labelSelectorPath"
            },
            "stability": "stable",
            "summary": "labelSelectorPath defines the JSON path inside of a custom resource that corresponds to Scale `status.selector`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.status` or `.spec`. Must be set to work with HorizontalPodAutoscaler. The field pointed by this JSON path must be a string field (not a complex selector struct) which contains a serialized label selector in string form. More info: https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions#scale-subresource If there is no value under the given path in the custom resource, the `status.selector` value in the `/scale` subresource will default to the empty string."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29846
          },
          "name": "labelSelectorPath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:CustomResourceSubresourceScale"
    },
    "cdk8s-plus-28.k8s.CustomResourceSubresources": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresources"
        },
        "stability": "stable",
        "summary": "CustomResourceSubresources defines the status and scale subresources for CustomResources."
      },
      "fqn": "cdk8s-plus-28.k8s.CustomResourceSubresources",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 28136
      },
      "name": "CustomResourceSubresources",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresources#scale"
            },
            "stability": "stable",
            "summary": "scale indicates the custom resource should serve a `/scale` subresource that returns an `autoscaling/v1` Scale object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28142
          },
          "name": "scale",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.CustomResourceSubresourceScale"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresources#status"
            },
            "remarks": "When enabled: 1. requests to the custom resource primary endpoint ignore changes to the `status` stanza of the object. 2. requests to the custom resource `/status` subresource ignore changes to anything other than the `status` stanza of the object.",
            "stability": "stable",
            "summary": "status indicates the custom resource should serve a `/status` subresource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28149
          },
          "name": "status",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        }
      ],
      "symbolId": "src/imports/k8s:CustomResourceSubresources"
    },
    "cdk8s-plus-28.k8s.CustomResourceValidation": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceValidation"
        },
        "stability": "stable",
        "summary": "CustomResourceValidation is a list of validation methods for CustomResources."
      },
      "fqn": "cdk8s-plus-28.k8s.CustomResourceValidation",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 28107
      },
      "name": "CustomResourceValidation",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceValidation#openAPIV3Schema"
            },
            "stability": "stable",
            "summary": "openAPIV3Schema is the OpenAPI v3 schema to use for validation and pruning."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28113
          },
          "name": "openApiv3Schema",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.JsonSchemaProps"
          }
        }
      ],
      "symbolId": "src/imports/k8s:CustomResourceValidation"
    },
    "cdk8s-plus-28.k8s.DaemonSetSpec": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.apps.v1.DaemonSetSpec"
        },
        "stability": "stable",
        "summary": "DaemonSetSpec is the specification of a daemon set."
      },
      "fqn": "cdk8s-plus-28.k8s.DaemonSetSpec",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 13989
      },
      "name": "DaemonSetSpec",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.DaemonSetSpec#selector"
            },
            "remarks": "Must match in order to be controlled. It must match the pod template's labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors",
            "stability": "stable",
            "summary": "A label query over pods that are managed by the daemon set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14011
          },
          "name": "selector",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.LabelSelector"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.DaemonSetSpec#template"
            },
            "remarks": "The DaemonSet will create exactly one copy of this pod on every node that matches the template's node selector (or on every node if no node selector is specified). The only allowed template.spec.restartPolicy value is \"Always\". More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template",
            "stability": "stable",
            "summary": "An object that describes the pod that will be created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14018
          },
          "name": "template",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.PodTemplateSpec"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.DaemonSetSpec#minReadySeconds"
            },
            "default": "0 (pod will be considered available as soon as it is ready).",
            "remarks": "Defaults to 0 (pod will be considered available as soon as it is ready).",
            "stability": "stable",
            "summary": "The minimum number of seconds for which a newly created DaemonSet pod should be ready without any of its container crashing, for it to be considered available."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13996
          },
          "name": "minReadySeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.DaemonSetSpec#revisionHistoryLimit"
            },
            "default": "10.",
            "remarks": "This is a pointer to distinguish between explicit zero and not specified. Defaults to 10.",
            "stability": "stable",
            "summary": "The number of old history to retain to allow rollback."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14004
          },
          "name": "revisionHistoryLimit",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.DaemonSetSpec#updateStrategy"
            },
            "stability": "stable",
            "summary": "An update strategy to replace existing DaemonSet pods with new pods."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14025
          },
          "name": "updateStrategy",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.DaemonSetUpdateStrategy"
          }
        }
      ],
      "symbolId": "src/imports/k8s:DaemonSetSpec"
    },
    "cdk8s-plus-28.k8s.DaemonSetUpdateStrategy": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.apps.v1.DaemonSetUpdateStrategy"
        },
        "stability": "stable",
        "summary": "DaemonSetUpdateStrategy is a struct used to control the update strategy for a DaemonSet."
      },
      "fqn": "cdk8s-plus-28.k8s.DaemonSetUpdateStrategy",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 19411
      },
      "name": "DaemonSetUpdateStrategy",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.DaemonSetUpdateStrategy#rollingUpdate"
            },
            "remarks": "Present only if type = \"RollingUpdate\".",
            "stability": "stable",
            "summary": "Rolling update config params."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19417
          },
          "name": "rollingUpdate",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.RollingUpdateDaemonSet"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.DaemonSetUpdateStrategy#type"
            },
            "default": "RollingUpdate.",
            "remarks": "Can be \"RollingUpdate\" or \"OnDelete\". Default is RollingUpdate.",
            "stability": "stable",
            "summary": "Type of daemon set update."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19425
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:DaemonSetUpdateStrategy"
    },
    "cdk8s-plus-28.k8s.DeleteOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
        },
        "stability": "stable",
        "summary": "DeleteOptions may be provided when deleting an API object."
      },
      "fqn": "cdk8s-plus-28.k8s.DeleteOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 17228
      },
      "name": "DeleteOptions",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions#apiVersion"
            },
            "remarks": "Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "stability": "stable",
            "summary": "APIVersion defines the versioned schema of this representation of an object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17234
          },
          "name": "apiVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions#dryRun"
            },
            "remarks": "An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "stability": "stable",
            "summary": "When present, indicates that modifications should not be persisted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17241
          },
          "name": "dryRun",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions#gracePeriodSeconds"
            },
            "default": "a per object value if not specified. zero means delete immediately.",
            "remarks": "Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "stability": "stable",
            "summary": "The duration in seconds before the object should be deleted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17249
          },
          "name": "gracePeriodSeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions#kind"
            },
            "remarks": "Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "stability": "stable",
            "summary": "Kind is a string value representing the REST resource this object represents."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17256
          },
          "name": "kind",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.IoK8SApimachineryPkgApisMetaV1DeleteOptionsKind"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions#orphanDependents"
            },
            "stability": "stable",
            "summary": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17263
          },
          "name": "orphanDependents",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions#preconditions"
            },
            "remarks": "If not possible, a 409 Conflict status will be returned.",
            "stability": "stable",
            "summary": "Must be fulfilled before a deletion is carried out."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17270
          },
          "name": "preconditions",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.Preconditions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions#propagationPolicy"
            },
            "remarks": "Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "stability": "stable",
            "summary": "Whether and how garbage collection will be performed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17277
          },
          "name": "propagationPolicy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:DeleteOptions"
    },
    "cdk8s-plus-28.k8s.DeploymentSpec": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.apps.v1.DeploymentSpec"
        },
        "stability": "stable",
        "summary": "DeploymentSpec is the specification of the desired behavior of the Deployment."
      },
      "fqn": "cdk8s-plus-28.k8s.DeploymentSpec",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 14052
      },
      "name": "DeploymentSpec",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.DeploymentSpec#selector"
            },
            "remarks": "Existing ReplicaSets whose pods are selected by this will be the ones affected by this deployment. It must match the pod template's labels.",
            "stability": "stable",
            "summary": "Label selector for pods."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14097
          },
          "name": "selector",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.LabelSelector"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.DeploymentSpec#template"
            },
            "remarks": "The only allowed template.spec.restartPolicy value is \"Always\".",
            "stability": "stable",
            "summary": "Template describes the pods that will be created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14111
          },
          "name": "template",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.PodTemplateSpec"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.DeploymentSpec#minReadySeconds"
            },
            "default": "0 (pod will be considered available as soon as it is ready)",
            "remarks": "Defaults to 0 (pod will be considered available as soon as it is ready)",
            "stability": "stable",
            "summary": "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14059
          },
          "name": "minReadySeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.DeploymentSpec#paused"
            },
            "stability": "stable",
            "summary": "Indicates that the deployment is paused."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14066
          },
          "name": "paused",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.DeploymentSpec#progressDeadlineSeconds"
            },
            "default": "600s.",
            "remarks": "The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. Defaults to 600s.",
            "stability": "stable",
            "summary": "The maximum time in seconds for a deployment to make progress before it is considered to be failed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14074
          },
          "name": "progressDeadlineSeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.DeploymentSpec#replicas"
            },
            "default": "1.",
            "remarks": "This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.",
            "stability": "stable",
            "summary": "Number of desired pods."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14082
          },
          "name": "replicas",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.DeploymentSpec#revisionHistoryLimit"
            },
            "default": "10.",
            "remarks": "This is a pointer to distinguish between explicit zero and not specified. Defaults to 10.",
            "stability": "stable",
            "summary": "The number of old ReplicaSets to retain to allow rollback."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14090
          },
          "name": "revisionHistoryLimit",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.DeploymentSpec#strategy"
            },
            "stability": "stable",
            "summary": "The deployment strategy to use to replace existing pods with new ones."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14104
          },
          "name": "strategy",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.DeploymentStrategy"
          }
        }
      ],
      "symbolId": "src/imports/k8s:DeploymentSpec"
    },
    "cdk8s-plus-28.k8s.DeploymentStrategy": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.apps.v1.DeploymentStrategy"
        },
        "stability": "stable",
        "summary": "DeploymentStrategy describes how to replace existing pods with new ones."
      },
      "fqn": "cdk8s-plus-28.k8s.DeploymentStrategy",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 19449
      },
      "name": "DeploymentStrategy",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.DeploymentStrategy#rollingUpdate"
            },
            "remarks": "Present only if DeploymentStrategyType = RollingUpdate.",
            "stability": "stable",
            "summary": "Rolling update config params."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19455
          },
          "name": "rollingUpdate",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.RollingUpdateDeployment"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.DeploymentStrategy#type"
            },
            "default": "RollingUpdate.",
            "remarks": "Can be \"Recreate\" or \"RollingUpdate\". Default is RollingUpdate.",
            "stability": "stable",
            "summary": "Type of deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19463
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:DeploymentStrategy"
    },
    "cdk8s-plus-28.k8s.DownwardApiProjection": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.DownwardAPIProjection"
        },
        "remarks": "Note that this is identical to a downwardAPI volume source without the default mode.",
        "stability": "stable",
        "summary": "Represents downward API info for projecting into a projected volume."
      },
      "fqn": "cdk8s-plus-28.k8s.DownwardApiProjection",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 30141
      },
      "name": "DownwardApiProjection",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.DownwardAPIProjection#items"
            },
            "stability": "stable",
            "summary": "Items is a list of DownwardAPIVolume file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 30147
          },
          "name": "items",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.DownwardApiVolumeFile"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:DownwardApiProjection"
    },
    "cdk8s-plus-28.k8s.DownwardApiVolumeFile": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.DownwardAPIVolumeFile"
        },
        "stability": "stable",
        "summary": "DownwardAPIVolumeFile represents information to create the file containing the pod field."
      },
      "fqn": "cdk8s-plus-28.k8s.DownwardApiVolumeFile",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 28949
      },
      "name": "DownwardApiVolumeFile",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.DownwardAPIVolumeFile#path"
            },
            "remarks": "Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
            "stability": "stable",
            "summary": "Required: Path is  the relative path name of the file to be created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28969
          },
          "name": "path",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.DownwardAPIVolumeFile#fieldRef"
            },
            "stability": "stable",
            "summary": "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28955
          },
          "name": "fieldRef",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectFieldSelector"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.DownwardAPIVolumeFile#mode"
            },
            "remarks": "YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "stability": "stable",
            "summary": "Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28962
          },
          "name": "mode",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.DownwardAPIVolumeFile#resourceFieldRef"
            },
            "stability": "stable",
            "summary": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28976
          },
          "name": "resourceFieldRef",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ResourceFieldSelector"
          }
        }
      ],
      "symbolId": "src/imports/k8s:DownwardApiVolumeFile"
    },
    "cdk8s-plus-28.k8s.DownwardApiVolumeSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.DownwardAPIVolumeSource"
        },
        "remarks": "Downward API volumes support ownership management and SELinux relabeling.",
        "stability": "stable",
        "summary": "DownwardAPIVolumeSource represents a volume containing downward API info."
      },
      "fqn": "cdk8s-plus-28.k8s.DownwardApiVolumeSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 26516
      },
      "name": "DownwardApiVolumeSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.DownwardAPIVolumeSource#defaultMode"
            },
            "default": "0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "remarks": "Must be a Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "stability": "stable",
            "summary": "Optional: mode bits to use on created files by default."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26523
          },
          "name": "defaultMode",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.DownwardAPIVolumeSource#items"
            },
            "stability": "stable",
            "summary": "Items is a list of downward API volume file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26530
          },
          "name": "items",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.DownwardApiVolumeFile"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:DownwardApiVolumeSource"
    },
    "cdk8s-plus-28.k8s.EmptyDirVolumeSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.EmptyDirVolumeSource"
        },
        "remarks": "Empty directory volumes support ownership management and SELinux relabeling.",
        "stability": "stable",
        "summary": "Represents an empty directory for a pod."
      },
      "fqn": "cdk8s-plus-28.k8s.EmptyDirVolumeSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 26554
      },
      "name": "EmptyDirVolumeSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EmptyDirVolumeSource#medium"
            },
            "remarks": "The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
            "stability": "stable",
            "summary": "medium represents what type of storage medium should back this directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26560
          },
          "name": "medium",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EmptyDirVolumeSource#sizeLimit"
            },
            "remarks": "The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
            "stability": "stable",
            "summary": "sizeLimit is the total amount of local storage required for this EmptyDir volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26567
          },
          "name": "sizeLimit",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.Quantity"
          }
        }
      ],
      "symbolId": "src/imports/k8s:EmptyDirVolumeSource"
    },
    "cdk8s-plus-28.k8s.Endpoint": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.discovery.v1.Endpoint"
        },
        "stability": "stable",
        "summary": "Endpoint represents a single logical \"backend\" implementing a service."
      },
      "fqn": "cdk8s-plus-28.k8s.Endpoint",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 16593
      },
      "name": "Endpoint",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.discovery.v1.Endpoint#addresses"
            },
            "remarks": "The contents of this field are interpreted according to the corresponding EndpointSlice addressType field. Consumers must handle different types of addresses in the context of their own capabilities. This must contain at least one address but no more than 100. These are all assumed to be fungible and clients may choose to only use the first element. Refer to: https://issue.k8s.io/106267",
            "stability": "stable",
            "summary": "addresses of this endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16599
          },
          "name": "addresses",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.discovery.v1.Endpoint#conditions"
            },
            "stability": "stable",
            "summary": "conditions contains information about the current status of the endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16606
          },
          "name": "conditions",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.EndpointConditions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.discovery.v1.Endpoint#deprecatedTopology"
            },
            "remarks": "This field is deprecated, and will be removed when the v1beta1 API is removed (no sooner than kubernetes v1.24).  While this field can hold values, it is not writable through the v1 API, and any attempts to write to it will be silently ignored. Topology information can be found in the zone and nodeName fields instead.",
            "stability": "stable",
            "summary": "deprecatedTopology contains topology information part of the v1beta1 API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16613
          },
          "name": "deprecatedTopology",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.discovery.v1.Endpoint#hints"
            },
            "stability": "stable",
            "summary": "hints contains information associated with how an endpoint should be consumed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16620
          },
          "name": "hints",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.EndpointHints"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.discovery.v1.Endpoint#hostname"
            },
            "remarks": "This field may be used by consumers of endpoints to distinguish endpoints from each other (e.g. in DNS names). Multiple endpoints which use the same hostname should be considered fungible (e.g. multiple A values in DNS). Must be lowercase and pass DNS Label (RFC 1123) validation.",
            "stability": "stable",
            "summary": "hostname of this endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16627
          },
          "name": "hostname",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.discovery.v1.Endpoint#nodeName"
            },
            "remarks": "This can be used to determine endpoints local to a Node.",
            "stability": "stable",
            "summary": "nodeName represents the name of the Node hosting this endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16634
          },
          "name": "nodeName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.discovery.v1.Endpoint#targetRef"
            },
            "stability": "stable",
            "summary": "targetRef is a reference to a Kubernetes object that represents this endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16641
          },
          "name": "targetRef",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectReference"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.discovery.v1.Endpoint#zone"
            },
            "stability": "stable",
            "summary": "zone is the name of the Zone this endpoint exists in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16648
          },
          "name": "zone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:Endpoint"
    },
    "cdk8s-plus-28.k8s.EndpointAddress": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.EndpointAddress"
        },
        "stability": "stable",
        "summary": "EndpointAddress is a tuple that describes single IP address."
      },
      "fqn": "cdk8s-plus-28.k8s.EndpointAddress",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 20026
      },
      "name": "EndpointAddress",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EndpointAddress#ip"
            },
            "remarks": "May not be loopback (127.0.0.0/8 or ::1), link-local (169.254.0.0/16 or fe80::/10), or link-local multicast (224.0.0.0/24 or ff02::/16).",
            "stability": "stable",
            "summary": "The IP of this endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20039
          },
          "name": "ip",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EndpointAddress#hostname"
            },
            "stability": "stable",
            "summary": "The Hostname of this endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20032
          },
          "name": "hostname",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EndpointAddress#nodeName"
            },
            "remarks": "This can be used to determine endpoints local to a node.",
            "stability": "stable",
            "summary": "Optional: Node hosting this endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20046
          },
          "name": "nodeName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EndpointAddress#targetRef"
            },
            "stability": "stable",
            "summary": "Reference to object providing the endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20053
          },
          "name": "targetRef",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectReference"
          }
        }
      ],
      "symbolId": "src/imports/k8s:EndpointAddress"
    },
    "cdk8s-plus-28.k8s.EndpointConditions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.discovery.v1.EndpointConditions"
        },
        "stability": "stable",
        "summary": "EndpointConditions represents the current condition of an endpoint."
      },
      "fqn": "cdk8s-plus-28.k8s.EndpointConditions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 23149
      },
      "name": "EndpointConditions",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.discovery.v1.EndpointConditions#ready"
            },
            "remarks": "A nil value indicates an unknown state. In most cases consumers should interpret this unknown state as ready. For compatibility reasons, ready should never be \"true\" for terminating endpoints, except when the normal readiness behavior is being explicitly overridden, for example when the associated Service has set the publishNotReadyAddresses flag.",
            "stability": "stable",
            "summary": "ready indicates that this endpoint is prepared to receive traffic, according to whatever system is managing the endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23155
          },
          "name": "ready",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.discovery.v1.EndpointConditions#serving"
            },
            "remarks": "This condition should be set to true for a ready endpoint that is terminating. If nil, consumers should defer to the ready condition.",
            "stability": "stable",
            "summary": "serving is identical to ready except that it is set regardless of the terminating state of endpoints."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23162
          },
          "name": "serving",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.discovery.v1.EndpointConditions#terminating"
            },
            "remarks": "A nil value indicates an unknown state. Consumers should interpret this unknown state to mean that the endpoint is not terminating.",
            "stability": "stable",
            "summary": "terminating indicates that this endpoint is terminating."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23169
          },
          "name": "terminating",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/imports/k8s:EndpointConditions"
    },
    "cdk8s-plus-28.k8s.EndpointHints": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.discovery.v1.EndpointHints"
        },
        "stability": "stable",
        "summary": "EndpointHints provides hints describing how an endpoint should be consumed."
      },
      "fqn": "cdk8s-plus-28.k8s.EndpointHints",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 23194
      },
      "name": "EndpointHints",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.discovery.v1.EndpointHints#forZones"
            },
            "stability": "stable",
            "summary": "forZones indicates the zone(s) this endpoint should be consumed by to enable topology aware routing."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23200
          },
          "name": "forZones",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.ForZone"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:EndpointHints"
    },
    "cdk8s-plus-28.k8s.EndpointPort": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.EndpointPort"
        },
        "stability": "stable",
        "summary": "EndpointPort is a tuple that describes a single port."
      },
      "fqn": "cdk8s-plus-28.k8s.EndpointPort",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 16678
      },
      "name": "EndpointPort",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EndpointPort#port"
            },
            "stability": "stable",
            "summary": "The port number of the endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16707
          },
          "name": "port",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EndpointPort#appProtocol"
            },
            "remarks": "This is used as a hint for implementations to offer richer behavior for protocols that they understand. This field follows standard Kubernetes label syntax. Valid values are either:\n\n* Un-prefixed protocol names - reserved for IANA standard service names (as per RFC-6335 and https://www.iana.org/assignments/service-names).\n\n* Kubernetes-defined prefixed names:\n* 'kubernetes.io/h2c' - HTTP/2 over cleartext as described in https://www.rfc-editor.org/rfc/rfc7540\n* 'kubernetes.io/ws'  - WebSocket over cleartext as described in https://www.rfc-editor.org/rfc/rfc6455\n* 'kubernetes.io/wss' - WebSocket over TLS as described in https://www.rfc-editor.org/rfc/rfc6455\n\n* Other protocols should use implementation-defined prefixed names such as mycompany.com/my-custom-protocol.",
            "stability": "stable",
            "summary": "The application protocol for this port."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16693
          },
          "name": "appProtocol",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EndpointPort#name"
            },
            "remarks": "This must match the 'name' field in the corresponding ServicePort. Must be a DNS_LABEL. Optional only if one port is defined.",
            "stability": "stable",
            "summary": "The name of this port."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16700
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EndpointPort#protocol"
            },
            "default": "TCP.",
            "remarks": "Must be UDP, TCP, or SCTP. Default is TCP.",
            "stability": "stable",
            "summary": "The IP protocol for this port."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16715
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:EndpointPort"
    },
    "cdk8s-plus-28.k8s.EndpointSubset": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.EndpointSubset"
        },
        "remarks": "The expanded set of endpoints is the Cartesian product of Addresses x Ports. For example, given:\n\n{\nAddresses: [{\"ip\": \"10.10.1.1\"}, {\"ip\": \"10.10.2.2\"}],\nPorts:     [{\"name\": \"a\", \"port\": 8675}, {\"name\": \"b\", \"port\": 309}]\n}\n\nThe resulting set of endpoints can be viewed as:\n\na: [ 10.10.1.1:8675, 10.10.2.2:8675 ],\nb: [ 10.10.1.1:309, 10.10.2.2:309 ]",
        "stability": "stable",
        "summary": "EndpointSubset is a group of addresses with a common set of ports."
      },
      "fqn": "cdk8s-plus-28.k8s.EndpointSubset",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 15283
      },
      "name": "EndpointSubset",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EndpointSubset#addresses"
            },
            "remarks": "These endpoints should be considered safe for load balancers and clients to utilize.",
            "stability": "stable",
            "summary": "IP addresses which offer the related ports that are marked as ready."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15289
          },
          "name": "addresses",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.EndpointAddress"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EndpointSubset#notReadyAddresses"
            },
            "stability": "stable",
            "summary": "IP addresses which offer the related ports but are not currently marked as ready because they have not yet finished starting, have recently failed a readiness check, or have recently failed a liveness check."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15296
          },
          "name": "notReadyAddresses",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.EndpointAddress"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EndpointSubset#ports"
            },
            "stability": "stable",
            "summary": "Port numbers available on the related IP addresses."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15303
          },
          "name": "ports",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.EndpointPort"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:EndpointSubset"
    },
    "cdk8s-plus-28.k8s.EnvFromSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.EnvFromSource"
        },
        "stability": "stable",
        "summary": "EnvFromSource represents the source of a set of ConfigMaps."
      },
      "fqn": "cdk8s-plus-28.k8s.EnvFromSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 25461
      },
      "name": "EnvFromSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EnvFromSource#configMapRef"
            },
            "stability": "stable",
            "summary": "The ConfigMap to select from."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25467
          },
          "name": "configMapRef",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ConfigMapEnvSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EnvFromSource#prefix"
            },
            "remarks": "Must be a C_IDENTIFIER.",
            "stability": "stable",
            "summary": "An optional identifier to prepend to each key in the ConfigMap."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25474
          },
          "name": "prefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EnvFromSource#secretRef"
            },
            "stability": "stable",
            "summary": "The Secret to select from."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25481
          },
          "name": "secretRef",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.SecretEnvSource"
          }
        }
      ],
      "symbolId": "src/imports/k8s:EnvFromSource"
    },
    "cdk8s-plus-28.k8s.EnvVar": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.EnvVar"
        },
        "stability": "stable",
        "summary": "EnvVar represents an environment variable present in a Container."
      },
      "fqn": "cdk8s-plus-28.k8s.EnvVar",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 25415
      },
      "name": "EnvVar",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EnvVar#name"
            },
            "remarks": "Must be a C_IDENTIFIER.",
            "stability": "stable",
            "summary": "Name of the environment variable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25421
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EnvVar#value"
            },
            "default": ".",
            "remarks": "If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
            "stability": "stable",
            "summary": "Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25429
          },
          "name": "value",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EnvVar#valueFrom"
            },
            "remarks": "Cannot be used if value is not empty.",
            "stability": "stable",
            "summary": "Source for the environment variable's value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25436
          },
          "name": "valueFrom",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.EnvVarSource"
          }
        }
      ],
      "symbolId": "src/imports/k8s:EnvVar"
    },
    "cdk8s-plus-28.k8s.EnvVarSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.EnvVarSource"
        },
        "stability": "stable",
        "summary": "EnvVarSource represents a source for the value of an EnvVar."
      },
      "fqn": "cdk8s-plus-28.k8s.EnvVarSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 28526
      },
      "name": "EnvVarSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EnvVarSource#configMapKeyRef"
            },
            "stability": "stable",
            "summary": "Selects a key of a ConfigMap."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28532
          },
          "name": "configMapKeyRef",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ConfigMapKeySelector"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EnvVarSource#fieldRef"
            },
            "stability": "stable",
            "summary": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28539
          },
          "name": "fieldRef",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectFieldSelector"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EnvVarSource#resourceFieldRef"
            },
            "stability": "stable",
            "summary": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28546
          },
          "name": "resourceFieldRef",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ResourceFieldSelector"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EnvVarSource#secretKeyRef"
            },
            "stability": "stable",
            "summary": "Selects a key of a secret in the pod's namespace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28553
          },
          "name": "secretKeyRef",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.SecretKeySelector"
          }
        }
      ],
      "symbolId": "src/imports/k8s:EnvVarSource"
    },
    "cdk8s-plus-28.k8s.EphemeralContainer": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.EphemeralContainer"
        },
        "remarks": "Ephemeral containers have no resource or scheduling guarantees, and they will not be restarted when they exit or when a Pod is removed or restarted. The kubelet may evict a Pod if an ephemeral container causes the Pod to exceed its resource allocation.\n\nTo add an ephemeral container, use the ephemeralcontainers subresource of an existing Pod. Ephemeral containers may not be removed or restarted.",
        "stability": "stable",
        "summary": "An EphemeralContainer is a temporary container that you may add to an existing Pod for user-initiated activities such as debugging."
      },
      "fqn": "cdk8s-plus-28.k8s.EphemeralContainer",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 22082
      },
      "name": "EphemeralContainer",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EphemeralContainer#name"
            },
            "remarks": "This name must be unique among all containers, init containers and ephemeral containers.",
            "stability": "stable",
            "summary": "Name of the ephemeral container specified as a DNS_LABEL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22145
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EphemeralContainer#args"
            },
            "remarks": "The image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
            "stability": "stable",
            "summary": "Arguments to the entrypoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22088
          },
          "name": "args",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EphemeralContainer#command"
            },
            "remarks": "Not executed within a shell. The image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
            "stability": "stable",
            "summary": "Entrypoint array."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22095
          },
          "name": "command",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EphemeralContainer#env"
            },
            "remarks": "Cannot be updated.",
            "stability": "stable",
            "summary": "List of environment variables to set in the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22102
          },
          "name": "env",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.EnvVar"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EphemeralContainer#envFrom"
            },
            "remarks": "The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.",
            "stability": "stable",
            "summary": "List of sources to populate environment variables in the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22109
          },
          "name": "envFrom",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.EnvFromSource"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EphemeralContainer#image"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/containers/images",
            "stability": "stable",
            "summary": "Container image name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22116
          },
          "name": "image",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EphemeralContainer#imagePullPolicy"
            },
            "default": "Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
            "remarks": "One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
            "stability": "stable",
            "summary": "Image pull policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22124
          },
          "name": "imagePullPolicy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EphemeralContainer#lifecycle"
            },
            "stability": "stable",
            "summary": "Lifecycle is not allowed for ephemeral containers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22131
          },
          "name": "lifecycle",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.Lifecycle"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EphemeralContainer#livenessProbe"
            },
            "stability": "stable",
            "summary": "Probes are not allowed for ephemeral containers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22138
          },
          "name": "livenessProbe",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.Probe"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EphemeralContainer#ports"
            },
            "stability": "stable",
            "summary": "Ports are not allowed for ephemeral containers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22152
          },
          "name": "ports",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.ContainerPort"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EphemeralContainer#readinessProbe"
            },
            "stability": "stable",
            "summary": "Probes are not allowed for ephemeral containers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22159
          },
          "name": "readinessProbe",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.Probe"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EphemeralContainer#resizePolicy"
            },
            "stability": "stable",
            "summary": "Resources resize policy for the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22166
          },
          "name": "resizePolicy",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.ContainerResizePolicy"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EphemeralContainer#resources"
            },
            "remarks": "Ephemeral containers use spare resources already allocated to the pod.",
            "stability": "stable",
            "summary": "Resources are not allowed for ephemeral containers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22173
          },
          "name": "resources",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ResourceRequirements"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EphemeralContainer#restartPolicy"
            },
            "remarks": "This may only be set for init containers. You cannot set this field on ephemeral containers.",
            "stability": "stable",
            "summary": "Restart policy for the container to manage the restart behavior of each container within a pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22180
          },
          "name": "restartPolicy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EphemeralContainer#securityContext"
            },
            "remarks": "If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.",
            "stability": "stable",
            "summary": "Optional: SecurityContext defines the security options the ephemeral container should be run with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22187
          },
          "name": "securityContext",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.SecurityContext"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EphemeralContainer#startupProbe"
            },
            "stability": "stable",
            "summary": "Probes are not allowed for ephemeral containers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22194
          },
          "name": "startupProbe",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.Probe"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EphemeralContainer#stdin"
            },
            "default": "false.",
            "remarks": "If this is not set, reads from stdin in the container will always result in EOF. Default is false.",
            "stability": "stable",
            "summary": "Whether this container should allocate a buffer for stdin in the container runtime."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22202
          },
          "name": "stdin",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EphemeralContainer#stdinOnce"
            },
            "default": "false",
            "remarks": "When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false",
            "stability": "stable",
            "summary": "Whether the container runtime should close the stdin channel after it has been opened by a single attach."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22210
          },
          "name": "stdinOnce",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EphemeralContainer#targetContainerName"
            },
            "remarks": "The ephemeral container will be run in the namespaces (IPC, PID, etc) of this container. If not set then the ephemeral container uses the namespaces configured in the Pod spec.\n\nThe container runtime must implement support for this feature. If the runtime does not support namespace targeting then the result of setting this field is undefined.",
            "stability": "stable",
            "summary": "If set, the name of the container from PodSpec that this ephemeral container targets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22219
          },
          "name": "targetContainerName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EphemeralContainer#terminationMessagePath"
            },
            "default": "dev/termination-log. Cannot be updated.",
            "remarks": "Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.",
            "stability": "stable",
            "summary": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22227
          },
          "name": "terminationMessagePath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EphemeralContainer#terminationMessagePolicy"
            },
            "default": "File. Cannot be updated.",
            "remarks": "File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.",
            "stability": "stable",
            "summary": "Indicate how the termination message should be populated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22235
          },
          "name": "terminationMessagePolicy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EphemeralContainer#tty"
            },
            "default": "false.",
            "remarks": "Default is false.",
            "stability": "stable",
            "summary": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22243
          },
          "name": "tty",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EphemeralContainer#volumeDevices"
            },
            "stability": "stable",
            "summary": "volumeDevices is the list of block devices to be used by the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22250
          },
          "name": "volumeDevices",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.VolumeDevice"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EphemeralContainer#volumeMounts"
            },
            "remarks": "Subpath mounts are not allowed for ephemeral containers. Cannot be updated.",
            "stability": "stable",
            "summary": "Pod volumes to mount into the container's filesystem."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22257
          },
          "name": "volumeMounts",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.VolumeMount"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EphemeralContainer#workingDir"
            },
            "remarks": "If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
            "stability": "stable",
            "summary": "Container's working directory."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22264
          },
          "name": "workingDir",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:EphemeralContainer"
    },
    "cdk8s-plus-28.k8s.EphemeralVolumeSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.EphemeralVolumeSource"
        },
        "stability": "stable",
        "summary": "Represents an ephemeral volume that is handled by a normal storage driver."
      },
      "fqn": "cdk8s-plus-28.k8s.EphemeralVolumeSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 26591
      },
      "name": "EphemeralVolumeSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EphemeralVolumeSource#volumeClaimTemplate"
            },
            "remarks": "The pod in which this EphemeralVolumeSource is embedded will be the owner of the PVC, i.e. the PVC will be deleted together with the pod.  The name of the PVC will be `<pod name>-<volume name>` where `<volume name>` is the name from the `PodSpec.Volumes` array entry. Pod validation will reject the pod if the concatenated name is not valid for a PVC (for example, too long).\n\nAn existing PVC with that name that is not owned by the pod will *not* be used for the pod to avoid using an unrelated volume by mistake. Starting the pod is then blocked until the unrelated PVC is removed. If such a pre-created PVC is meant to be used by the pod, the PVC has to updated with an owner reference to the pod once the pod exists. Normally this should not be necessary, but it may be useful when manually reconstructing a broken cluster.\n\nThis field is read-only and no changes will be made by Kubernetes to the PVC after it has been created.\n\nRequired, must not be nil.",
            "stability": "stable",
            "summary": "Will be used to create a stand-alone PVC to provision the volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26603
          },
          "name": "volumeClaimTemplate",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.PersistentVolumeClaimTemplate"
          }
        }
      ],
      "symbolId": "src/imports/k8s:EphemeralVolumeSource"
    },
    "cdk8s-plus-28.k8s.EventSeries": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.events.v1.EventSeries"
        },
        "stability": "stable",
        "summary": "EventSeries contain information on series of events, i.e. thing that was/is happening continuously for some time. How often to update the EventSeries is up to the event reporters. The default event reporter in \"k8s.io/client-go/tools/events/event_broadcaster.go\" shows how this struct is updated on heartbeats and can guide customized reporter implementations."
      },
      "fqn": "cdk8s-plus-28.k8s.EventSeries",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 15365
      },
      "name": "EventSeries",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.events.v1.EventSeries#count"
            },
            "stability": "stable",
            "summary": "count is the number of occurrences in this series up to the last heartbeat time."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15371
          },
          "name": "count",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.events.v1.EventSeries#lastObservedTime"
            },
            "stability": "stable",
            "summary": "lastObservedTime is the time when last Event from the series was seen before last heartbeat."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15378
          },
          "name": "lastObservedTime",
          "type": {
            "primitive": "date"
          }
        }
      ],
      "symbolId": "src/imports/k8s:EventSeries"
    },
    "cdk8s-plus-28.k8s.EventSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.EventSource"
        },
        "stability": "stable",
        "summary": "EventSource contains information for an event."
      },
      "fqn": "cdk8s-plus-28.k8s.EventSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 15328
      },
      "name": "EventSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EventSource#component"
            },
            "stability": "stable",
            "summary": "Component from which the event is generated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15334
          },
          "name": "component",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EventSource#host"
            },
            "stability": "stable",
            "summary": "Node name on which the event is generated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15341
          },
          "name": "host",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:EventSource"
    },
    "cdk8s-plus-28.k8s.ExecAction": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ExecAction"
        },
        "stability": "stable",
        "summary": "ExecAction describes a \"run in container\" action."
      },
      "fqn": "cdk8s-plus-28.k8s.ExecAction",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 28702
      },
      "name": "ExecAction",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ExecAction#command"
            },
            "remarks": "The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
            "stability": "stable",
            "summary": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28708
          },
          "name": "command",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:ExecAction"
    },
    "cdk8s-plus-28.k8s.ExemptPriorityLevelConfigurationV1Beta2": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.flowcontrol.v1beta2.ExemptPriorityLevelConfiguration"
        },
        "remarks": "In the mandatory exempt configuration object the values in the fields here can be modified by authorized users, unlike the rest of the `spec`.",
        "stability": "stable",
        "summary": "ExemptPriorityLevelConfiguration describes the configurable aspects of the handling of exempt requests."
      },
      "fqn": "cdk8s-plus-28.k8s.ExemptPriorityLevelConfigurationV1Beta2",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 23326
      },
      "name": "ExemptPriorityLevelConfigurationV1Beta2",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta2.ExemptPriorityLevelConfiguration#lendablePercent"
            },
            "remarks": "This value of this field must be between 0 and 100, inclusive, and it defaults to 0. The number of seats that other levels can borrow from this level, known as this level's LendableConcurrencyLimit (LendableCL), is defined as follows.\n\nLendableCL(i) = round( NominalCL(i) * lendablePercent(i)/100.0 )",
            "stability": "stable",
            "summary": "`lendablePercent` prescribes the fraction of the level's NominalCL that can be borrowed by other priority levels."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23334
          },
          "name": "lendablePercent",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta2.ExemptPriorityLevelConfiguration#nominalConcurrencyShares"
            },
            "remarks": "This is the number of execution seats nominally reserved for this priority level. This DOES NOT limit the dispatching from this priority level but affects the other priority levels through the borrowing mechanism. The server's concurrency limit (ServerCL) is divided among all the priority levels in proportion to their NCS values:\n\nNominalCL(i)  = ceil( ServerCL * NCS(i) / sum_ncs ) sum_ncs = sum[priority level k] NCS(k)\n\nBigger numbers mean a larger nominal concurrency limit, at the expense of every other priority level. This field has a default value of zero.",
            "stability": "stable",
            "summary": "`nominalConcurrencyShares` (NCS) contributes to the computation of the NominalConcurrencyLimit (NominalCL) of this level."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23345
          },
          "name": "nominalConcurrencyShares",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ExemptPriorityLevelConfigurationV1Beta2"
    },
    "cdk8s-plus-28.k8s.ExemptPriorityLevelConfigurationV1Beta3": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.flowcontrol.v1beta3.ExemptPriorityLevelConfiguration"
        },
        "remarks": "In the mandatory exempt configuration object the values in the fields here can be modified by authorized users, unlike the rest of the `spec`.",
        "stability": "stable",
        "summary": "ExemptPriorityLevelConfiguration describes the configurable aspects of the handling of exempt requests."
      },
      "fqn": "cdk8s-plus-28.k8s.ExemptPriorityLevelConfigurationV1Beta3",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 23537
      },
      "name": "ExemptPriorityLevelConfigurationV1Beta3",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta3.ExemptPriorityLevelConfiguration#lendablePercent"
            },
            "remarks": "This value of this field must be between 0 and 100, inclusive, and it defaults to 0. The number of seats that other levels can borrow from this level, known as this level's LendableConcurrencyLimit (LendableCL), is defined as follows.\n\nLendableCL(i) = round( NominalCL(i) * lendablePercent(i)/100.0 )",
            "stability": "stable",
            "summary": "`lendablePercent` prescribes the fraction of the level's NominalCL that can be borrowed by other priority levels."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23545
          },
          "name": "lendablePercent",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta3.ExemptPriorityLevelConfiguration#nominalConcurrencyShares"
            },
            "remarks": "This is the number of execution seats nominally reserved for this priority level. This DOES NOT limit the dispatching from this priority level but affects the other priority levels through the borrowing mechanism. The server's concurrency limit (ServerCL) is divided among all the priority levels in proportion to their NCS values:\n\nNominalCL(i)  = ceil( ServerCL * NCS(i) / sum_ncs ) sum_ncs = sum[priority level k] NCS(k)\n\nBigger numbers mean a larger nominal concurrency limit, at the expense of every other priority level. This field has a default value of zero.",
            "stability": "stable",
            "summary": "`nominalConcurrencyShares` (NCS) contributes to the computation of the NominalConcurrencyLimit (NominalCL) of this level."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23556
          },
          "name": "nominalConcurrencyShares",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ExemptPriorityLevelConfigurationV1Beta3"
    },
    "cdk8s-plus-28.k8s.ExternalDocumentation": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ExternalDocumentation"
        },
        "stability": "stable",
        "summary": "ExternalDocumentation allows referencing an external resource for extended documentation."
      },
      "fqn": "cdk8s-plus-28.k8s.ExternalDocumentation",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 30263
      },
      "name": "ExternalDocumentation",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ExternalDocumentation#description"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 30267
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ExternalDocumentation#url"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 30272
          },
          "name": "url",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ExternalDocumentation"
    },
    "cdk8s-plus-28.k8s.ExternalMetricSourceV2": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.autoscaling.v2.ExternalMetricSource"
        },
        "stability": "stable",
        "summary": "ExternalMetricSource indicates how to scale on a metric not associated with any Kubernetes object (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster)."
      },
      "fqn": "cdk8s-plus-28.k8s.ExternalMetricSourceV2",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 24964
      },
      "name": "ExternalMetricSourceV2",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v2.ExternalMetricSource#metric"
            },
            "stability": "stable",
            "summary": "metric identifies the target metric by name and selector."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24970
          },
          "name": "metric",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.MetricIdentifierV2"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v2.ExternalMetricSource#target"
            },
            "stability": "stable",
            "summary": "target specifies the target value for the given metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24977
          },
          "name": "target",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.MetricTargetV2"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ExternalMetricSourceV2"
    },
    "cdk8s-plus-28.k8s.FcVolumeSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.FCVolumeSource"
        },
        "remarks": "Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling.",
        "stability": "stable",
        "summary": "Represents a Fibre Channel volume."
      },
      "fqn": "cdk8s-plus-28.k8s.FcVolumeSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 20634
      },
      "name": "FcVolumeSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.FCVolumeSource#fsType"
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
            "stability": "stable",
            "summary": "fsType is the filesystem type to mount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20640
          },
          "name": "fsType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.FCVolumeSource#lun"
            },
            "stability": "stable",
            "summary": "lun is Optional: FC target lun number."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20647
          },
          "name": "lun",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.FCVolumeSource#readOnly"
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "stability": "stable",
            "summary": "readOnly is Optional: Defaults to false (read/write)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20655
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.FCVolumeSource#targetWWNs"
            },
            "stability": "stable",
            "summary": "targetWWNs is Optional: FC target worldwide names (WWNs)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20662
          },
          "name": "targetWwNs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.FCVolumeSource#wwids"
            },
            "stability": "stable",
            "summary": "wwids Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20669
          },
          "name": "wwids",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:FcVolumeSource"
    },
    "cdk8s-plus-28.k8s.FlexPersistentVolumeSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.FlexPersistentVolumeSource"
        },
        "stability": "stable",
        "summary": "FlexPersistentVolumeSource represents a generic persistent volume resource that is provisioned/attached using an exec based plugin."
      },
      "fqn": "cdk8s-plus-28.k8s.FlexPersistentVolumeSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 20696
      },
      "name": "FlexPersistentVolumeSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.FlexPersistentVolumeSource#driver"
            },
            "stability": "stable",
            "summary": "driver is the name of the driver to use for this volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20702
          },
          "name": "driver",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.FlexPersistentVolumeSource#fsType"
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script.",
            "stability": "stable",
            "summary": "fsType is the Filesystem type to mount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20709
          },
          "name": "fsType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.FlexPersistentVolumeSource#options"
            },
            "stability": "stable",
            "summary": "options is Optional: this field holds extra command options if any."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20716
          },
          "name": "options",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.FlexPersistentVolumeSource#readOnly"
            },
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "stability": "stable",
            "summary": "readOnly is Optional: defaults to false (read/write)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20723
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.FlexPersistentVolumeSource#secretRef"
            },
            "remarks": "This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.",
            "stability": "stable",
            "summary": "secretRef is Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20730
          },
          "name": "secretRef",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.SecretReference"
          }
        }
      ],
      "symbolId": "src/imports/k8s:FlexPersistentVolumeSource"
    },
    "cdk8s-plus-28.k8s.FlexVolumeSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.FlexVolumeSource"
        },
        "stability": "stable",
        "summary": "FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin."
      },
      "fqn": "cdk8s-plus-28.k8s.FlexVolumeSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 26626
      },
      "name": "FlexVolumeSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.FlexVolumeSource#driver"
            },
            "stability": "stable",
            "summary": "driver is the name of the driver to use for this volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26632
          },
          "name": "driver",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.FlexVolumeSource#fsType"
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script.",
            "stability": "stable",
            "summary": "fsType is the filesystem type to mount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26639
          },
          "name": "fsType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.FlexVolumeSource#options"
            },
            "stability": "stable",
            "summary": "options is Optional: this field holds extra command options if any."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26646
          },
          "name": "options",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.FlexVolumeSource#readOnly"
            },
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "stability": "stable",
            "summary": "readOnly is Optional: defaults to false (read/write)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26653
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.FlexVolumeSource#secretRef"
            },
            "remarks": "This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.",
            "stability": "stable",
            "summary": "secretRef is Optional: secretRef is reference to the secret object containing sensitive information to pass to the plugin scripts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26660
          },
          "name": "secretRef",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.LocalObjectReference"
          }
        }
      ],
      "symbolId": "src/imports/k8s:FlexVolumeSource"
    },
    "cdk8s-plus-28.k8s.FlockerVolumeSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.FlockerVolumeSource"
        },
        "remarks": "One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling.",
        "stability": "stable",
        "summary": "Represents a Flocker volume mounted by the Flocker agent."
      },
      "fqn": "cdk8s-plus-28.k8s.FlockerVolumeSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 20757
      },
      "name": "FlockerVolumeSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.FlockerVolumeSource#datasetName"
            },
            "stability": "stable",
            "summary": "datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20763
          },
          "name": "datasetName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.FlockerVolumeSource#datasetUUID"
            },
            "remarks": "This is unique identifier of a Flocker dataset",
            "stability": "stable",
            "summary": "datasetUUID is the UUID of the dataset."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20770
          },
          "name": "datasetUuid",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:FlockerVolumeSource"
    },
    "cdk8s-plus-28.k8s.FlowDistinguisherMethodV1Beta2": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.flowcontrol.v1beta2.FlowDistinguisherMethod"
        },
        "stability": "stable",
        "summary": "FlowDistinguisherMethod specifies the method of a flow distinguisher."
      },
      "fqn": "cdk8s-plus-28.k8s.FlowDistinguisherMethodV1Beta2",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 23223
      },
      "name": "FlowDistinguisherMethodV1Beta2",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta2.FlowDistinguisherMethod#type"
            },
            "remarks": "Required.",
            "stability": "stable",
            "summary": "`type` is the type of flow distinguisher method The supported types are \"ByUser\" and \"ByNamespace\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23229
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:FlowDistinguisherMethodV1Beta2"
    },
    "cdk8s-plus-28.k8s.FlowDistinguisherMethodV1Beta3": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.flowcontrol.v1beta3.FlowDistinguisherMethod"
        },
        "stability": "stable",
        "summary": "FlowDistinguisherMethod specifies the method of a flow distinguisher."
      },
      "fqn": "cdk8s-plus-28.k8s.FlowDistinguisherMethodV1Beta3",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 23434
      },
      "name": "FlowDistinguisherMethodV1Beta3",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta3.FlowDistinguisherMethod#type"
            },
            "remarks": "Required.",
            "stability": "stable",
            "summary": "`type` is the type of flow distinguisher method The supported types are \"ByUser\" and \"ByNamespace\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23440
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:FlowDistinguisherMethodV1Beta3"
    },
    "cdk8s-plus-28.k8s.FlowSchemaSpecV1Beta2": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.flowcontrol.v1beta2.FlowSchemaSpec"
        },
        "stability": "stable",
        "summary": "FlowSchemaSpec describes how the FlowSchema's specification looks like."
      },
      "fqn": "cdk8s-plus-28.k8s.FlowSchemaSpecV1Beta2",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 16741
      },
      "name": "FlowSchemaSpecV1Beta2",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta2.FlowSchemaSpec#priorityLevelConfiguration"
            },
            "remarks": "If the reference cannot be resolved, the FlowSchema will be ignored and marked as invalid in its status. Required.",
            "stability": "stable",
            "summary": "`priorityLevelConfiguration` should reference a PriorityLevelConfiguration in the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16761
          },
          "name": "priorityLevelConfiguration",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.PriorityLevelConfigurationReferenceV1Beta2"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta2.FlowSchemaSpec#distinguisherMethod"
            },
            "remarks": "`nil` specifies that the distinguisher is disabled and thus will always be the empty string.",
            "stability": "stable",
            "summary": "`distinguisherMethod` defines how to compute the flow distinguisher for requests that match this schema."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16747
          },
          "name": "distinguisherMethod",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.FlowDistinguisherMethodV1Beta2"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta2.FlowSchemaSpec#matchingPrecedence"
            },
            "remarks": "The chosen FlowSchema is among those with the numerically lowest (which we take to be logically highest) MatchingPrecedence.  Each MatchingPrecedence value must be ranged in [1,10000]. Note that if the precedence is not specified, it will be set to 1000 as default.",
            "stability": "stable",
            "summary": "`matchingPrecedence` is used to choose among the FlowSchemas that match a given request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16754
          },
          "name": "matchingPrecedence",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta2.FlowSchemaSpec#rules"
            },
            "remarks": "This FlowSchema matches a request if and only if at least one member of rules matches the request. if it is an empty slice, there will be no requests matching the FlowSchema.",
            "stability": "stable",
            "summary": "`rules` describes which requests will match this flow schema."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16768
          },
          "name": "rules",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.PolicyRulesWithSubjectsV1Beta2"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:FlowSchemaSpecV1Beta2"
    },
    "cdk8s-plus-28.k8s.FlowSchemaSpecV1Beta3": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.flowcontrol.v1beta3.FlowSchemaSpec"
        },
        "stability": "stable",
        "summary": "FlowSchemaSpec describes how the FlowSchema's specification looks like."
      },
      "fqn": "cdk8s-plus-28.k8s.FlowSchemaSpecV1Beta3",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 16839
      },
      "name": "FlowSchemaSpecV1Beta3",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta3.FlowSchemaSpec#priorityLevelConfiguration"
            },
            "remarks": "If the reference cannot be resolved, the FlowSchema will be ignored and marked as invalid in its status. Required.",
            "stability": "stable",
            "summary": "`priorityLevelConfiguration` should reference a PriorityLevelConfiguration in the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16859
          },
          "name": "priorityLevelConfiguration",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.PriorityLevelConfigurationReferenceV1Beta3"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta3.FlowSchemaSpec#distinguisherMethod"
            },
            "remarks": "`nil` specifies that the distinguisher is disabled and thus will always be the empty string.",
            "stability": "stable",
            "summary": "`distinguisherMethod` defines how to compute the flow distinguisher for requests that match this schema."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16845
          },
          "name": "distinguisherMethod",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.FlowDistinguisherMethodV1Beta3"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta3.FlowSchemaSpec#matchingPrecedence"
            },
            "remarks": "The chosen FlowSchema is among those with the numerically lowest (which we take to be logically highest) MatchingPrecedence.  Each MatchingPrecedence value must be ranged in [1,10000]. Note that if the precedence is not specified, it will be set to 1000 as default.",
            "stability": "stable",
            "summary": "`matchingPrecedence` is used to choose among the FlowSchemas that match a given request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16852
          },
          "name": "matchingPrecedence",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta3.FlowSchemaSpec#rules"
            },
            "remarks": "This FlowSchema matches a request if and only if at least one member of rules matches the request. if it is an empty slice, there will be no requests matching the FlowSchema.",
            "stability": "stable",
            "summary": "`rules` describes which requests will match this flow schema."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16866
          },
          "name": "rules",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.PolicyRulesWithSubjectsV1Beta3"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:FlowSchemaSpecV1Beta3"
    },
    "cdk8s-plus-28.k8s.ForZone": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.discovery.v1.ForZone"
        },
        "stability": "stable",
        "summary": "ForZone provides information about which zones should consume this endpoint."
      },
      "fqn": "cdk8s-plus-28.k8s.ForZone",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 27350
      },
      "name": "ForZone",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.discovery.v1.ForZone#name"
            },
            "stability": "stable",
            "summary": "name represents the name of the zone."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27356
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ForZone"
    },
    "cdk8s-plus-28.k8s.GcePersistentDiskVolumeSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.GCEPersistentDiskVolumeSource"
        },
        "remarks": "A GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.",
        "stability": "stable",
        "summary": "Represents a Persistent Disk resource in Google Compute Engine."
      },
      "fqn": "cdk8s-plus-28.k8s.GcePersistentDiskVolumeSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 20796
      },
      "name": "GcePersistentDiskVolumeSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.GCEPersistentDiskVolumeSource#pdName"
            },
            "remarks": "Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
            "stability": "stable",
            "summary": "pdName is unique name of the PD resource in GCE."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20816
          },
          "name": "pdName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.GCEPersistentDiskVolumeSource#fsType"
            },
            "remarks": "Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
            "stability": "stable",
            "summary": "fsType is filesystem type of the volume that you want to mount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20802
          },
          "name": "fsType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.GCEPersistentDiskVolumeSource#partition"
            },
            "remarks": "If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
            "stability": "stable",
            "summary": "partition is the partition in the volume that you want to mount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20809
          },
          "name": "partition",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.GCEPersistentDiskVolumeSource#readOnly"
            },
            "default": "false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
            "remarks": "Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
            "stability": "stable",
            "summary": "readOnly here will force the ReadOnly setting in VolumeMounts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20824
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/imports/k8s:GcePersistentDiskVolumeSource"
    },
    "cdk8s-plus-28.k8s.GitRepoVolumeSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.GitRepoVolumeSource"
        },
        "remarks": "Git repo volumes do not support ownership management. Git repo volumes support SELinux relabeling.\n\nDEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.",
        "stability": "stable",
        "summary": "Represents a volume that is populated with the contents of a git repository."
      },
      "fqn": "cdk8s-plus-28.k8s.GitRepoVolumeSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 26689
      },
      "name": "GitRepoVolumeSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.GitRepoVolumeSource#repository"
            },
            "stability": "stable",
            "summary": "repository is the URL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26702
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.GitRepoVolumeSource#directory"
            },
            "remarks": "Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.",
            "stability": "stable",
            "summary": "directory is the target directory name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26695
          },
          "name": "directory",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.GitRepoVolumeSource#revision"
            },
            "stability": "stable",
            "summary": "revision is the commit hash for the specified revision."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26709
          },
          "name": "revision",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:GitRepoVolumeSource"
    },
    "cdk8s-plus-28.k8s.GlusterfsPersistentVolumeSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.GlusterfsPersistentVolumeSource"
        },
        "remarks": "Glusterfs volumes do not support ownership management or SELinux relabeling.",
        "stability": "stable",
        "summary": "Represents a Glusterfs mount that lasts the lifetime of a pod."
      },
      "fqn": "cdk8s-plus-28.k8s.GlusterfsPersistentVolumeSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 20850
      },
      "name": "GlusterfsPersistentVolumeSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.GlusterfsPersistentVolumeSource#endpoints"
            },
            "remarks": "More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
            "stability": "stable",
            "summary": "endpoints is the endpoint name that details Glusterfs topology."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20856
          },
          "name": "endpoints",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.GlusterfsPersistentVolumeSource#path"
            },
            "remarks": "More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
            "stability": "stable",
            "summary": "path is the Glusterfs volume path."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20870
          },
          "name": "path",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.GlusterfsPersistentVolumeSource#endpointsNamespace"
            },
            "remarks": "If this field is empty, the EndpointNamespace defaults to the same namespace as the bound PVC. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
            "stability": "stable",
            "summary": "endpointsNamespace is the namespace that contains Glusterfs endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20863
          },
          "name": "endpointsNamespace",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.GlusterfsPersistentVolumeSource#readOnly"
            },
            "default": "false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
            "remarks": "Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
            "stability": "stable",
            "summary": "readOnly here will force the Glusterfs volume to be mounted with read-only permissions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20878
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/imports/k8s:GlusterfsPersistentVolumeSource"
    },
    "cdk8s-plus-28.k8s.GlusterfsVolumeSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.GlusterfsVolumeSource"
        },
        "remarks": "Glusterfs volumes do not support ownership management or SELinux relabeling.",
        "stability": "stable",
        "summary": "Represents a Glusterfs mount that lasts the lifetime of a pod."
      },
      "fqn": "cdk8s-plus-28.k8s.GlusterfsVolumeSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 26734
      },
      "name": "GlusterfsVolumeSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.GlusterfsVolumeSource#endpoints"
            },
            "remarks": "More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
            "stability": "stable",
            "summary": "endpoints is the endpoint name that details Glusterfs topology."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26740
          },
          "name": "endpoints",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.GlusterfsVolumeSource#path"
            },
            "remarks": "More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
            "stability": "stable",
            "summary": "path is the Glusterfs volume path."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26747
          },
          "name": "path",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.GlusterfsVolumeSource#readOnly"
            },
            "default": "false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
            "remarks": "Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
            "stability": "stable",
            "summary": "readOnly here will force the Glusterfs volume to be mounted with read-only permissions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26755
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/imports/k8s:GlusterfsVolumeSource"
    },
    "cdk8s-plus-28.k8s.GroupSubjectV1Beta2": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.flowcontrol.v1beta2.GroupSubject"
        },
        "stability": "stable",
        "summary": "GroupSubject holds detailed information for group-kind subject."
      },
      "fqn": "cdk8s-plus-28.k8s.GroupSubjectV1Beta2",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 29092
      },
      "name": "GroupSubjectV1Beta2",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta2.GroupSubject#name"
            },
            "remarks": "See https://github.com/kubernetes/apiserver/blob/master/pkg/authentication/user/user.go for some well-known group names. Required.",
            "stability": "stable",
            "summary": "name is the user group that matches, or \"*\" to match all user groups."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29098
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:GroupSubjectV1Beta2"
    },
    "cdk8s-plus-28.k8s.GroupSubjectV1Beta3": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.flowcontrol.v1beta3.GroupSubject"
        },
        "stability": "stable",
        "summary": "GroupSubject holds detailed information for group-kind subject."
      },
      "fqn": "cdk8s-plus-28.k8s.GroupSubjectV1Beta3",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 29232
      },
      "name": "GroupSubjectV1Beta3",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta3.GroupSubject#name"
            },
            "remarks": "See https://github.com/kubernetes/apiserver/blob/master/pkg/authentication/user/user.go for some well-known group names. Required.",
            "stability": "stable",
            "summary": "name is the user group that matches, or \"*\" to match all user groups."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29238
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:GroupSubjectV1Beta3"
    },
    "cdk8s-plus-28.k8s.GrpcAction": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.GRPCAction"
        },
        "stability": "stable"
      },
      "fqn": "cdk8s-plus-28.k8s.GrpcAction",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 28729
      },
      "name": "GrpcAction",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.GRPCAction#port"
            },
            "remarks": "Number must be in the range 1 to 65535.",
            "stability": "stable",
            "summary": "Port number of the gRPC service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28735
          },
          "name": "port",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.GRPCAction#service"
            },
            "remarks": "If this is not specified, the default behavior is defined by gRPC.",
            "stability": "stable",
            "summary": "Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28744
          },
          "name": "service",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:GrpcAction"
    },
    "cdk8s-plus-28.k8s.HorizontalPodAutoscalerBehaviorV2": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerBehavior"
        },
        "stability": "stable",
        "summary": "HorizontalPodAutoscalerBehavior configures the scaling behavior of the target in both Up and Down directions (scaleUp and scaleDown fields respectively)."
      },
      "fqn": "cdk8s-plus-28.k8s.HorizontalPodAutoscalerBehaviorV2",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 19806
      },
      "name": "HorizontalPodAutoscalerBehaviorV2",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerBehavior#scaleDown"
            },
            "remarks": "If not set, the default value is to allow to scale down to minReplicas pods, with a 300 second stabilization window (i.e., the highest recommendation for the last 300sec is used).",
            "stability": "stable",
            "summary": "scaleDown is scaling policy for scaling Down."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19812
          },
          "name": "scaleDown",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.HpaScalingRulesV2"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerBehavior#scaleUp"
            },
            "remarks": "If not set, the default value is the higher of:\n* increase no more than 4 pods per 60 seconds\n* double the number of pods per 60 seconds\nNo stabilization is used.",
            "stability": "stable",
            "summary": "scaleUp is scaling policy for scaling Up."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19822
          },
          "name": "scaleUp",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.HpaScalingRulesV2"
          }
        }
      ],
      "symbolId": "src/imports/k8s:HorizontalPodAutoscalerBehaviorV2"
    },
    "cdk8s-plus-28.k8s.HorizontalPodAutoscalerSpec": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerSpec"
        },
        "stability": "stable",
        "summary": "specification of a horizontal pod autoscaler."
      },
      "fqn": "cdk8s-plus-28.k8s.HorizontalPodAutoscalerSpec",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 14523
      },
      "name": "HorizontalPodAutoscalerSpec",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerSpec#maxReplicas"
            },
            "remarks": "cannot be smaller than MinReplicas.",
            "stability": "stable",
            "summary": "maxReplicas is the upper limit for the number of pods that can be set by the autoscaler;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14529
          },
          "name": "maxReplicas",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerSpec#scaleTargetRef"
            },
            "remarks": "horizontal pod autoscaler will learn the current resource consumption and will set the desired number of pods by using its Scale subresource.",
            "stability": "stable",
            "summary": "reference to scaled resource;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14543
          },
          "name": "scaleTargetRef",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.CrossVersionObjectReference"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerSpec#minReplicas"
            },
            "remarks": "It defaults to 1 pod.  minReplicas is allowed to be 0 if the alpha feature gate HPAScaleToZero is enabled and at least one Object or External metric is configured.  Scaling is active as long as at least one metric value is available.",
            "stability": "stable",
            "summary": "minReplicas is the lower limit for the number of replicas to which the autoscaler can scale down."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14536
          },
          "name": "minReplicas",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerSpec#targetCPUUtilizationPercentage"
            },
            "remarks": "if not specified the default autoscaling policy will be used.",
            "stability": "stable",
            "summary": "targetCPUUtilizationPercentage is the target average CPU utilization (represented as a percentage of requested CPU) over all the pods;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14550
          },
          "name": "targetCpuUtilizationPercentage",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/imports/k8s:HorizontalPodAutoscalerSpec"
    },
    "cdk8s-plus-28.k8s.HorizontalPodAutoscalerSpecV2": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerSpec"
        },
        "stability": "stable",
        "summary": "HorizontalPodAutoscalerSpec describes the desired functionality of the HorizontalPodAutoscaler."
      },
      "fqn": "cdk8s-plus-28.k8s.HorizontalPodAutoscalerSpecV2",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 14605
      },
      "name": "HorizontalPodAutoscalerSpecV2",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerSpec#maxReplicas"
            },
            "remarks": "It cannot be less that minReplicas.",
            "stability": "stable",
            "summary": "maxReplicas is the upper limit for the number of replicas to which the autoscaler can scale up."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14618
          },
          "name": "maxReplicas",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerSpec#scaleTargetRef"
            },
            "stability": "stable",
            "summary": "scaleTargetRef points to the target resource to scale, and is used to the pods for which metrics should be collected, as well as to actually change the replica count."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14639
          },
          "name": "scaleTargetRef",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.CrossVersionObjectReferenceV2"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerSpec#behavior"
            },
            "remarks": "If not set, the default HPAScalingRules for scale up and scale down are used.",
            "stability": "stable",
            "summary": "behavior configures the scaling behavior of the target in both Up and Down directions (scaleUp and scaleDown fields respectively)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14611
          },
          "name": "behavior",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.HorizontalPodAutoscalerBehaviorV2"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerSpec#metrics"
            },
            "remarks": "The desired replica count is calculated multiplying the ratio between the target value and the current value by the current number of pods.  Ergo, metrics used must decrease as the pod count is increased, and vice-versa.  See the individual metric source types for more information about how each type of metric must respond. If not set, the default metric will be set to 80% average CPU utilization.",
            "stability": "stable",
            "summary": "metrics contains the specifications for which to use to calculate the desired replica count (the maximum replica count across all metrics will be used)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14625
          },
          "name": "metrics",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.MetricSpecV2"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerSpec#minReplicas"
            },
            "remarks": "It defaults to 1 pod.  minReplicas is allowed to be 0 if the alpha feature gate HPAScaleToZero is enabled and at least one Object or External metric is configured.  Scaling is active as long as at least one metric value is available.",
            "stability": "stable",
            "summary": "minReplicas is the lower limit for the number of replicas to which the autoscaler can scale down."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14632
          },
          "name": "minReplicas",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/imports/k8s:HorizontalPodAutoscalerSpecV2"
    },
    "cdk8s-plus-28.k8s.HostAlias": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.HostAlias"
        },
        "stability": "stable",
        "summary": "HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's hosts file."
      },
      "fqn": "cdk8s-plus-28.k8s.HostAlias",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 22311
      },
      "name": "HostAlias",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.HostAlias#hostnames"
            },
            "stability": "stable",
            "summary": "Hostnames for the above IP address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22317
          },
          "name": "hostnames",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.HostAlias#ip"
            },
            "stability": "stable",
            "summary": "IP address of the host file entry."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22324
          },
          "name": "ip",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:HostAlias"
    },
    "cdk8s-plus-28.k8s.HostPathVolumeSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.HostPathVolumeSource"
        },
        "remarks": "Host path volumes do not support ownership management or SELinux relabeling.",
        "stability": "stable",
        "summary": "Represents a host path mapped into a pod."
      },
      "fqn": "cdk8s-plus-28.k8s.HostPathVolumeSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 20904
      },
      "name": "HostPathVolumeSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.HostPathVolumeSource#path"
            },
            "remarks": "If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
            "stability": "stable",
            "summary": "path of the directory on the host."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20910
          },
          "name": "path",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.HostPathVolumeSource#type"
            },
            "default": "More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
            "stability": "stable",
            "summary": "type for HostPath Volume Defaults to \"\" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20918
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:HostPathVolumeSource"
    },
    "cdk8s-plus-28.k8s.HpaScalingPolicyV2": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.autoscaling.v2.HPAScalingPolicy"
        },
        "stability": "stable",
        "summary": "HPAScalingPolicy is a single policy which must hold true for a specified past interval."
      },
      "fqn": "cdk8s-plus-28.k8s.HpaScalingPolicyV2",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 28173
      },
      "name": "HpaScalingPolicyV2",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v2.HPAScalingPolicy#periodSeconds"
            },
            "remarks": "PeriodSeconds must be greater than zero and less than or equal to 1800 (30 min).",
            "stability": "stable",
            "summary": "periodSeconds specifies the window of time for which the policy should hold true."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28179
          },
          "name": "periodSeconds",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v2.HPAScalingPolicy#type"
            },
            "stability": "stable",
            "summary": "type is used to specify the scaling policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28186
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v2.HPAScalingPolicy#value"
            },
            "remarks": "It must be greater than zero",
            "stability": "stable",
            "summary": "value contains the amount of change which is permitted by the policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28193
          },
          "name": "value",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/imports/k8s:HpaScalingPolicyV2"
    },
    "cdk8s-plus-28.k8s.HpaScalingRulesV2": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.autoscaling.v2.HPAScalingRules"
        },
        "remarks": "These Rules are applied after calculating DesiredReplicas from metrics for the HPA. They can limit the scaling velocity by specifying scaling policies. They can prevent flapping by specifying the stabilization window, so that the number of replicas is not set instantly, instead, the safest value from the stabilization window is chosen.",
        "stability": "stable",
        "summary": "HPAScalingRules configures the scaling behavior for one direction."
      },
      "fqn": "cdk8s-plus-28.k8s.HpaScalingRulesV2",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 24874
      },
      "name": "HpaScalingRulesV2",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v2.HPAScalingRules#policies"
            },
            "remarks": "At least one policy must be specified, otherwise the HPAScalingRules will be discarded as invalid",
            "stability": "stable",
            "summary": "policies is a list of potential scaling polices which can be used during scaling."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24880
          },
          "name": "policies",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.HpaScalingPolicyV2"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v2.HPAScalingRules#selectPolicy"
            },
            "remarks": "If not set, the default value Max is used.",
            "stability": "stable",
            "summary": "selectPolicy is used to specify which policy should be used."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24887
          },
          "name": "selectPolicy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v2.HPAScalingRules#stabilizationWindowSeconds"
            },
            "remarks": "StabilizationWindowSeconds must be greater than or equal to zero and less than or equal to 3600 (one hour). If not set, use the default values: - For scale up: 0 (i.e. no stabilization is done). - For scale down: 300 (i.e. the stabilization window is 300 seconds long).",
            "stability": "stable",
            "summary": "stabilizationWindowSeconds is the number of seconds for which past recommendations should be considered while scaling up or scaling down."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24894
          },
          "name": "stabilizationWindowSeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/imports/k8s:HpaScalingRulesV2"
    },
    "cdk8s-plus-28.k8s.HttpGetAction": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.HTTPGetAction"
        },
        "stability": "stable",
        "summary": "HTTPGetAction describes an action based on HTTP Get requests."
      },
      "fqn": "cdk8s-plus-28.k8s.HttpGetAction",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 28768
      },
      "name": "HttpGetAction",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.HTTPGetAction#port"
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "stability": "stable",
            "summary": "Name or number of the port to access on the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28795
          },
          "name": "port",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.IntOrString"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.HTTPGetAction#host"
            },
            "remarks": "You probably want to set \"Host\" in httpHeaders instead.",
            "stability": "stable",
            "summary": "Host name to connect to, defaults to the pod IP."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28774
          },
          "name": "host",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.HTTPGetAction#httpHeaders"
            },
            "remarks": "HTTP allows repeated headers.",
            "stability": "stable",
            "summary": "Custom headers to set in the request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28781
          },
          "name": "httpHeaders",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.HttpHeader"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.HTTPGetAction#path"
            },
            "stability": "stable",
            "summary": "Path to access on the HTTP server."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28788
          },
          "name": "path",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.HTTPGetAction#scheme"
            },
            "default": "HTTP.",
            "remarks": "Defaults to HTTP.",
            "stability": "stable",
            "summary": "Scheme to use for connecting to the host."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28803
          },
          "name": "scheme",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:HttpGetAction"
    },
    "cdk8s-plus-28.k8s.HttpHeader": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.HTTPHeader"
        },
        "stability": "stable",
        "summary": "HTTPHeader describes a custom header to be used in HTTP probes."
      },
      "fqn": "cdk8s-plus-28.k8s.HttpHeader",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 30057
      },
      "name": "HttpHeader",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.HTTPHeader#name"
            },
            "remarks": "This will be canonicalized upon output, so case-variant names will be understood as the same header.",
            "stability": "stable",
            "summary": "The header field name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 30063
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.HTTPHeader#value"
            },
            "stability": "stable",
            "summary": "The header field value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 30070
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:HttpHeader"
    },
    "cdk8s-plus-28.k8s.HttpIngressPath": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.networking.v1.HTTPIngressPath"
        },
        "remarks": "Incoming urls matching the path are forwarded to the backend.",
        "stability": "stable",
        "summary": "HTTPIngressPath associates a path with a backend."
      },
      "fqn": "cdk8s-plus-28.k8s.HttpIngressPath",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 29409
      },
      "name": "HttpIngressPath",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.HTTPIngressPath#backend"
            },
            "stability": "stable",
            "summary": "backend defines the referenced service endpoint to which the traffic will be forwarded to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29415
          },
          "name": "backend",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.IngressBackend"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.HTTPIngressPath#pathType"
            },
            "remarks": "PathType can be one of the following values: * Exact: Matches the URL path exactly. * Prefix: Matches based on a URL path prefix split by '/'. Matching is\ndone on a path element by element basis. A path element refers is the\nlist of labels in the path split by the '/' separator. A request is a\nmatch for path p if every p is an element-wise prefix of p of the\nrequest path. Note that if the last element of the path is a substring\nof the last element in request path, it is not a match (e.g. /foo/bar\nmatches /foo/bar/baz, but does not match /foo/barbaz).\n* ImplementationSpecific: Interpretation of the Path matching is up to\nthe IngressClass. Implementations can treat this as a separate PathType\nor treat it identically to Prefix or Exact path types.\nImplementations are required to support all path types.",
            "stability": "stable",
            "summary": "pathType determines the interpretation of the path matching."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29439
          },
          "name": "pathType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.HTTPIngressPath#path"
            },
            "remarks": "Currently it can contain characters disallowed from the conventional \"path\" part of a URL as defined by RFC 3986. Paths must begin with a '/' and must be present when using PathType with value \"Exact\" or \"Prefix\".",
            "stability": "stable",
            "summary": "path is matched against the path of an incoming request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29422
          },
          "name": "path",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:HttpIngressPath"
    },
    "cdk8s-plus-28.k8s.HttpIngressRuleValue": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.networking.v1.HTTPIngressRuleValue"
        },
        "remarks": "In the example: http://<host>/<path>?<searchpart> -> backend where where parts of the url correspond to RFC 3986, this resource will be used to match against everything after the last '/' and before the first '?' or '#'.",
        "stability": "stable",
        "summary": "HTTPIngressRuleValue is a list of http selectors pointing to backends."
      },
      "fqn": "cdk8s-plus-28.k8s.HttpIngressRuleValue",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 27804
      },
      "name": "HttpIngressRuleValue",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.HTTPIngressRuleValue#paths"
            },
            "stability": "stable",
            "summary": "paths is a collection of paths that map requests to backends."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27810
          },
          "name": "paths",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.HttpIngressPath"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:HttpIngressRuleValue"
    },
    "cdk8s-plus-28.k8s.IngressBackend": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.networking.v1.IngressBackend"
        },
        "stability": "stable",
        "summary": "IngressBackend describes all endpoints for a given service and port."
      },
      "fqn": "cdk8s-plus-28.k8s.IngressBackend",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 23645
      },
      "name": "IngressBackend",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.IngressBackend#resource"
            },
            "remarks": "If resource is specified, a service.Name and service.Port must not be specified. This is a mutually exclusive setting with \"Service\".",
            "stability": "stable",
            "summary": "resource is an ObjectRef to another Kubernetes resource in the namespace of the Ingress object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23651
          },
          "name": "resource",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.TypedLocalObjectReference"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.IngressBackend#service"
            },
            "remarks": "This is a mutually exclusive setting with \"Resource\".",
            "stability": "stable",
            "summary": "service references a service as a backend."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23658
          },
          "name": "service",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.IngressServiceBackend"
          }
        }
      ],
      "symbolId": "src/imports/k8s:IngressBackend"
    },
    "cdk8s-plus-28.k8s.IngressClassParametersReference": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.networking.v1.IngressClassParametersReference"
        },
        "remarks": "This can be used to specify a cluster or namespace-scoped resource.",
        "stability": "stable",
        "summary": "IngressClassParametersReference identifies an API object."
      },
      "fqn": "cdk8s-plus-28.k8s.IngressClassParametersReference",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 23762
      },
      "name": "IngressClassParametersReference",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.IngressClassParametersReference#kind"
            },
            "stability": "stable",
            "summary": "kind is the type of resource being referenced."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23775
          },
          "name": "kind",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.IngressClassParametersReference#name"
            },
            "stability": "stable",
            "summary": "name is the name of resource being referenced."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23782
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.IngressClassParametersReference#apiGroup"
            },
            "remarks": "If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.",
            "stability": "stable",
            "summary": "apiGroup is the group for the resource being referenced."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23768
          },
          "name": "apiGroup",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.IngressClassParametersReference#namespace"
            },
            "remarks": "This field is required when scope is set to \"Namespace\" and must be unset when scope is set to \"Cluster\".",
            "stability": "stable",
            "summary": "namespace is the namespace of the resource being referenced."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23789
          },
          "name": "namespace",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.IngressClassParametersReference#scope"
            },
            "remarks": "This may be set to \"Cluster\" (default) or \"Namespace\".",
            "stability": "stable",
            "summary": "scope represents if this refers to a cluster or namespace scoped resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23796
          },
          "name": "scope",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:IngressClassParametersReference"
    },
    "cdk8s-plus-28.k8s.IngressClassSpec": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.networking.v1.IngressClassSpec"
        },
        "stability": "stable",
        "summary": "IngressClassSpec provides information about the class of an Ingress."
      },
      "fqn": "cdk8s-plus-28.k8s.IngressClassSpec",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 16990
      },
      "name": "IngressClassSpec",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.IngressClassSpec#controller"
            },
            "remarks": "This allows for different \"flavors\" that are controlled by the same controller. For example, you may have different parameters for the same implementing controller. This should be specified as a domain-prefixed path no more than 250 characters in length, e.g. \"acme.io/ingress-controller\". This field is immutable.",
            "stability": "stable",
            "summary": "controller refers to the name of the controller that should handle this class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16996
          },
          "name": "controller",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.IngressClassSpec#parameters"
            },
            "remarks": "This is optional if the controller does not require extra parameters.",
            "stability": "stable",
            "summary": "parameters is a link to a custom resource containing additional configuration for the controller."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17003
          },
          "name": "parameters",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.IngressClassParametersReference"
          }
        }
      ],
      "symbolId": "src/imports/k8s:IngressClassSpec"
    },
    "cdk8s-plus-28.k8s.IngressRule": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.networking.v1.IngressRule"
        },
        "remarks": "Incoming requests are first evaluated for a host match, then routed to the backend associated with the matching IngressRuleValue.",
        "stability": "stable",
        "summary": "IngressRule represents the rules mapping the paths under a specified host to the related backend services."
      },
      "fqn": "cdk8s-plus-28.k8s.IngressRule",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 23682
      },
      "name": "IngressRule",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.IngressRule#host"
            },
            "remarks": "Note the following deviations from the \"host\" part of the URI as defined in RFC 3986: 1. IPs are not allowed. Currently an IngressRuleValue can only apply to\nthe IP in the Spec of the parent Ingress.\n2. The `:` delimiter is not respected because ports are not allowed.\nCurrently the port of an Ingress is implicitly :80 for http and\n:443 for https.\nBoth these may change in the future. Incoming requests are matched against the host before the IngressRuleValue. If the host is unspecified, the Ingress routes all traffic based on the specified IngressRuleValue.\n\nhost can be \"precise\" which is a domain name without the terminating dot of a network host (e.g. \"foo.bar.com\") or \"wildcard\", which is a domain name prefixed with a single wildcard label (e.g. \"*.foo.com\"). The wildcard character '*' must appear by itself as the first DNS label and matches only a single label. You cannot have a wildcard label by itself (e.g. Host == \"*\"). Requests will be matched against the Host field in the following way: 1. If host is precise, the request matches this rule if the http host header is equal to Host. 2. If host is a wildcard, then the request matches this rule if the http host header is to equal to the suffix (removing the first label) of the wildcard rule.",
            "stability": "stable",
            "summary": "host is the fully qualified domain name of a network host, as defined by RFC 3986."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23695
          },
          "name": "host",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.IngressRule#http"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23700
          },
          "name": "http",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.HttpIngressRuleValue"
          }
        }
      ],
      "symbolId": "src/imports/k8s:IngressRule"
    },
    "cdk8s-plus-28.k8s.IngressServiceBackend": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.networking.v1.IngressServiceBackend"
        },
        "stability": "stable",
        "summary": "IngressServiceBackend references a Kubernetes Service as a Backend."
      },
      "fqn": "cdk8s-plus-28.k8s.IngressServiceBackend",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 27767
      },
      "name": "IngressServiceBackend",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.IngressServiceBackend#name"
            },
            "remarks": "The service must exist in the same namespace as the Ingress object.",
            "stability": "stable",
            "summary": "name is the referenced service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27773
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.IngressServiceBackend#port"
            },
            "remarks": "A port name or port number is required for a IngressServiceBackend.",
            "stability": "stable",
            "summary": "port of the referenced service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27780
          },
          "name": "port",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ServiceBackendPort"
          }
        }
      ],
      "symbolId": "src/imports/k8s:IngressServiceBackend"
    },
    "cdk8s-plus-28.k8s.IngressSpec": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.networking.v1.IngressSpec"
        },
        "stability": "stable",
        "summary": "IngressSpec describes the Ingress the user wishes to exist."
      },
      "fqn": "cdk8s-plus-28.k8s.IngressSpec",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 16937
      },
      "name": "IngressSpec",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.IngressSpec#defaultBackend"
            },
            "remarks": "If Rules are not specified, DefaultBackend must be specified. If DefaultBackend is not set, the handling of requests that do not match any of the rules will be up to the Ingress controller.",
            "stability": "stable",
            "summary": "defaultBackend is the backend that should handle requests that don't match any rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16943
          },
          "name": "defaultBackend",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.IngressBackend"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.IngressSpec#ingressClassName"
            },
            "remarks": "Ingress controller implementations use this field to know whether they should be serving this Ingress resource, by a transitive connection (controller -> IngressClass -> Ingress resource). Although the `kubernetes.io/ingress.class` annotation (simple constant name) was never formally defined, it was widely supported by Ingress controllers to create a direct binding between Ingress controller and Ingress resources. Newly created Ingress resources should prefer using the field. However, even though the annotation is officially deprecated, for backwards compatibility reasons, ingress controllers should still honor that annotation if present.",
            "stability": "stable",
            "summary": "ingressClassName is the name of an IngressClass cluster resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16950
          },
          "name": "ingressClassName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.IngressSpec#rules"
            },
            "remarks": "If unspecified, or no rule matches, all traffic is sent to the default backend.",
            "stability": "stable",
            "summary": "rules is a list of host rules used to configure the Ingress."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16957
          },
          "name": "rules",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.IngressRule"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.IngressSpec#tls"
            },
            "remarks": "Currently the Ingress only supports a single TLS port, 443. If multiple members of this list specify different hosts, they will be multiplexed on the same port according to the hostname specified through the SNI TLS extension, if the ingress controller fulfilling the ingress supports SNI.",
            "stability": "stable",
            "summary": "tls represents the TLS configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16964
          },
          "name": "tls",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.IngressTls"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:IngressSpec"
    },
    "cdk8s-plus-28.k8s.IngressTls": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.networking.v1.IngressTLS"
        },
        "stability": "stable",
        "summary": "IngressTLS describes the transport layer security associated with an ingress."
      },
      "fqn": "cdk8s-plus-28.k8s.IngressTls",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 23724
      },
      "name": "IngressTls",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.IngressTLS#hosts"
            },
            "default": "the wildcard host setting for the loadbalancer controller fulfilling this Ingress, if left unspecified.",
            "remarks": "The values in this list must match the name/s used in the tlsSecret. Defaults to the wildcard host setting for the loadbalancer controller fulfilling this Ingress, if left unspecified.",
            "stability": "stable",
            "summary": "hosts is a list of hosts included in the TLS certificate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23731
          },
          "name": "hosts",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.IngressTLS#secretName"
            },
            "remarks": "Field is left optional to allow TLS routing based on SNI hostname alone. If the SNI host in a listener conflicts with the \"Host\" header field used by an IngressRule, the SNI host is used for termination and value of the \"Host\" header is used for routing.",
            "stability": "stable",
            "summary": "secretName is the name of the secret used to terminate TLS traffic on port 443."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23738
          },
          "name": "secretName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:IngressTls"
    },
    "cdk8s-plus-28.k8s.IntOrString": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "custom": {
          "schema": "io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        },
        "stability": "stable"
      },
      "fqn": "cdk8s-plus-28.k8s.IntOrString",
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 24003
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24007
          },
          "name": "fromNumber",
          "parameters": [
            {
              "name": "value",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.k8s.IntOrString"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24004
          },
          "name": "fromString",
          "parameters": [
            {
              "name": "value",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.k8s.IntOrString"
            }
          },
          "static": true
        }
      ],
      "name": "IntOrString",
      "namespace": "k8s",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24010
          },
          "name": "value",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "primitive": "number"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:IntOrString"
    },
    "cdk8s-plus-28.k8s.IoK8SApimachineryPkgApisMetaV1DeleteOptionsKind": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "custom": {
          "schema": "IoK8SApimachineryPkgApisMetaV1DeleteOptionsKind"
        },
        "remarks": "Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
        "stability": "stable",
        "summary": "Kind is a string value representing the REST resource this object represents."
      },
      "fqn": "cdk8s-plus-28.k8s.IoK8SApimachineryPkgApisMetaV1DeleteOptionsKind",
      "kind": "enum",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 23958
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "DeleteOptions."
          },
          "name": "DELETE_OPTIONS"
        }
      ],
      "name": "IoK8SApimachineryPkgApisMetaV1DeleteOptionsKind",
      "namespace": "k8s",
      "symbolId": "src/imports/k8s:IoK8SApimachineryPkgApisMetaV1DeleteOptionsKind"
    },
    "cdk8s-plus-28.k8s.IpAddressSpecV1Alpha1": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.networking.v1alpha1.IPAddressSpec"
        },
        "stability": "stable",
        "summary": "IPAddressSpec describe the attributes in an IP Address."
      },
      "fqn": "cdk8s-plus-28.k8s.IpAddressSpecV1Alpha1",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 17133
      },
      "name": "IpAddressSpecV1Alpha1",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1alpha1.IPAddressSpec#parentRef"
            },
            "remarks": "An IPAddress must reference a parent object.",
            "stability": "stable",
            "summary": "ParentRef references the resource that an IPAddress is attached to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17139
          },
          "name": "parentRef",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ParentReferenceV1Alpha1"
          }
        }
      ],
      "symbolId": "src/imports/k8s:IpAddressSpecV1Alpha1"
    },
    "cdk8s-plus-28.k8s.IpBlock": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.networking.v1.IPBlock"
        },
        "remarks": "\"192.168.1.0/24\",\"2001:db8::/64\") that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The except entry describes CIDRs that should not be included within this rule.",
        "stability": "stable",
        "summary": "IPBlock describes a particular CIDR (Ex."
      },
      "fqn": "cdk8s-plus-28.k8s.IpBlock",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 29464
      },
      "name": "IpBlock",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.IPBlock#cidr"
            },
            "stability": "stable",
            "summary": "cidr is a string representing the IPBlock Valid examples are \"192.168.1.0/24\" or \"2001:db8::/64\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29470
          },
          "name": "cidr",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.IPBlock#except"
            },
            "stability": "stable",
            "summary": "except is a slice of CIDRs that should not be included within an IPBlock Valid examples are \"192.168.1.0/24\" or \"2001:db8::/64\" Except values will be rejected if they are outside the cidr range."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29477
          },
          "name": "except",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:IpBlock"
    },
    "cdk8s-plus-28.k8s.IscsiPersistentVolumeSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ISCSIPersistentVolumeSource"
        },
        "remarks": "ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.",
        "stability": "stable",
        "summary": "ISCSIPersistentVolumeSource represents an ISCSI disk."
      },
      "fqn": "cdk8s-plus-28.k8s.IscsiPersistentVolumeSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 20942
      },
      "name": "IscsiPersistentVolumeSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ISCSIPersistentVolumeSource#iqn"
            },
            "stability": "stable",
            "summary": "iqn is Target iSCSI Qualified Name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20976
          },
          "name": "iqn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ISCSIPersistentVolumeSource#lun"
            },
            "stability": "stable",
            "summary": "lun is iSCSI Target Lun number."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20991
          },
          "name": "lun",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ISCSIPersistentVolumeSource#targetPortal"
            },
            "remarks": "The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
            "stability": "stable",
            "summary": "targetPortal is iSCSI Target Portal."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21020
          },
          "name": "targetPortal",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ISCSIPersistentVolumeSource#chapAuthDiscovery"
            },
            "stability": "stable",
            "summary": "chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20948
          },
          "name": "chapAuthDiscovery",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ISCSIPersistentVolumeSource#chapAuthSession"
            },
            "stability": "stable",
            "summary": "chapAuthSession defines whether support iSCSI Session CHAP authentication."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20955
          },
          "name": "chapAuthSession",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ISCSIPersistentVolumeSource#fsType"
            },
            "remarks": "Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi",
            "stability": "stable",
            "summary": "fsType is the filesystem type of the volume that you want to mount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20962
          },
          "name": "fsType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ISCSIPersistentVolumeSource#initiatorName"
            },
            "remarks": "If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.",
            "stability": "stable",
            "summary": "initiatorName is the custom iSCSI Initiator Name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20969
          },
          "name": "initiatorName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ISCSIPersistentVolumeSource#iscsiInterface"
            },
            "default": "default' (tcp).",
            "remarks": "Defaults to 'default' (tcp).",
            "stability": "stable",
            "summary": "iscsiInterface is the interface Name that uses an iSCSI transport."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20984
          },
          "name": "iscsiInterface",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ISCSIPersistentVolumeSource#portals"
            },
            "remarks": "The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
            "stability": "stable",
            "summary": "portals is the iSCSI Target Portal List."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20998
          },
          "name": "portals",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ISCSIPersistentVolumeSource#readOnly"
            },
            "default": "false.",
            "remarks": "Defaults to false.",
            "stability": "stable",
            "summary": "readOnly here will force the ReadOnly setting in VolumeMounts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21006
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ISCSIPersistentVolumeSource#secretRef"
            },
            "stability": "stable",
            "summary": "secretRef is the CHAP Secret for iSCSI target and initiator authentication."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21013
          },
          "name": "secretRef",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.SecretReference"
          }
        }
      ],
      "symbolId": "src/imports/k8s:IscsiPersistentVolumeSource"
    },
    "cdk8s-plus-28.k8s.IscsiVolumeSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ISCSIVolumeSource"
        },
        "remarks": "ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.",
        "stability": "stable",
        "summary": "Represents an ISCSI disk."
      },
      "fqn": "cdk8s-plus-28.k8s.IscsiVolumeSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 26780
      },
      "name": "IscsiVolumeSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ISCSIVolumeSource#iqn"
            },
            "stability": "stable",
            "summary": "iqn is the target iSCSI Qualified Name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26814
          },
          "name": "iqn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ISCSIVolumeSource#lun"
            },
            "stability": "stable",
            "summary": "lun represents iSCSI Target Lun number."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26829
          },
          "name": "lun",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ISCSIVolumeSource#targetPortal"
            },
            "remarks": "The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
            "stability": "stable",
            "summary": "targetPortal is iSCSI Target Portal."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26858
          },
          "name": "targetPortal",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ISCSIVolumeSource#chapAuthDiscovery"
            },
            "stability": "stable",
            "summary": "chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26786
          },
          "name": "chapAuthDiscovery",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ISCSIVolumeSource#chapAuthSession"
            },
            "stability": "stable",
            "summary": "chapAuthSession defines whether support iSCSI Session CHAP authentication."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26793
          },
          "name": "chapAuthSession",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ISCSIVolumeSource#fsType"
            },
            "remarks": "Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi",
            "stability": "stable",
            "summary": "fsType is the filesystem type of the volume that you want to mount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26800
          },
          "name": "fsType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ISCSIVolumeSource#initiatorName"
            },
            "remarks": "If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.",
            "stability": "stable",
            "summary": "initiatorName is the custom iSCSI Initiator Name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26807
          },
          "name": "initiatorName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ISCSIVolumeSource#iscsiInterface"
            },
            "default": "default' (tcp).",
            "remarks": "Defaults to 'default' (tcp).",
            "stability": "stable",
            "summary": "iscsiInterface is the interface Name that uses an iSCSI transport."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26822
          },
          "name": "iscsiInterface",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ISCSIVolumeSource#portals"
            },
            "remarks": "The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
            "stability": "stable",
            "summary": "portals is the iSCSI Target Portal List."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26836
          },
          "name": "portals",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ISCSIVolumeSource#readOnly"
            },
            "default": "false.",
            "remarks": "Defaults to false.",
            "stability": "stable",
            "summary": "readOnly here will force the ReadOnly setting in VolumeMounts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26844
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ISCSIVolumeSource#secretRef"
            },
            "stability": "stable",
            "summary": "secretRef is the CHAP Secret for iSCSI target and initiator authentication."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26851
          },
          "name": "secretRef",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.LocalObjectReference"
          }
        }
      ],
      "symbolId": "src/imports/k8s:IscsiVolumeSource"
    },
    "cdk8s-plus-28.k8s.JobSpec": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.batch.v1.JobSpec"
        },
        "stability": "stable",
        "summary": "JobSpec describes how the job execution will look like."
      },
      "fqn": "cdk8s-plus-28.k8s.JobSpec",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 14756
      },
      "name": "JobSpec",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.batch.v1.JobSpec#template"
            },
            "remarks": "The only allowed template.spec.restartPolicy values are \"Never\" or \"OnFailure\". More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/",
            "stability": "stable",
            "summary": "Describes the pod that will be created when executing a job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14861
          },
          "name": "template",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.PodTemplateSpec"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.batch.v1.JobSpec#activeDeadlineSeconds"
            },
            "remarks": "value must be positive integer. If a Job is suspended (at creation or through an update), this timer will effectively be stopped and reset when the Job is resumed again.",
            "stability": "stable",
            "summary": "Specifies the duration in seconds relative to the startTime that the job may be continuously active before the system tries to terminate it;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14762
          },
          "name": "activeDeadlineSeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.batch.v1.JobSpec#backoffLimit"
            },
            "default": "6",
            "remarks": "Defaults to 6",
            "stability": "stable",
            "summary": "Specifies the number of retries before marking this job failed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14770
          },
          "name": "backoffLimit",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.batch.v1.JobSpec#backoffLimitPerIndex"
            },
            "remarks": "When enabled the number of failures per index is kept in the pod's batch.kubernetes.io/job-index-failure-count annotation. It can only be set when Job's completionMode=Indexed, and the Pod's restart policy is Never. The field is immutable. This field is alpha-level. It can be used when the `JobBackoffLimitPerIndex` feature gate is enabled (disabled by default).",
            "stability": "stable",
            "summary": "Specifies the limit for the number of retries within an index before marking this index as failed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14777
          },
          "name": "backoffLimitPerIndex",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.batch.v1.JobSpec#completionMode"
            },
            "remarks": "`NonIndexed` means that the Job is considered complete when there have been .spec.completions successfully completed Pods. Each Pod completion is homologous to each other.\n\n`Indexed` means that the Pods of a Job get an associated completion index from 0 to (.spec.completions - 1), available in the annotation batch.kubernetes.io/job-completion-index. The Job is considered complete when there is one successfully completed Pod for each index. When value is `Indexed`, .spec.completions must be specified and `.spec.parallelism` must be less than or equal to 10^5. In addition, The Pod name takes the form `$(job-name)-$(index)-$(random-string)`, the Pod hostname takes the form `$(job-name)-$(index)`.\n\nMore completion modes can be added in the future. If the Job controller observes a mode that it doesn't recognize, which is possible during upgrades due to version skew, the controller skips updates for the Job.",
            "stability": "stable",
            "summary": "completionMode specifies how Pod completions are tracked. It can be `NonIndexed` (default) or `Indexed`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14790
          },
          "name": "completionMode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.batch.v1.JobSpec#completions"
            },
            "remarks": "Setting to null means that the success of any pod signals the success of all pods, and allows parallelism to have any positive value.  Setting to 1 means that parallelism is limited to 1 and the success of that pod signals the success of the job. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/",
            "stability": "stable",
            "summary": "Specifies the desired number of successfully finished pods the job should be run with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14797
          },
          "name": "completions",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.batch.v1.JobSpec#manualSelector"
            },
            "remarks": "Leave `manualSelector` unset unless you are certain what you are doing. When false or unset, the system pick labels unique to this job and appends those labels to the pod template.  When true, the user is responsible for picking unique labels and specifying the selector.  Failure to pick a unique label may cause this and other jobs to not function correctly.  However, You may see `manualSelector=true` in jobs that were created with the old `extensions/v1beta1` API. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/#specifying-your-own-pod-selector",
            "stability": "stable",
            "summary": "manualSelector controls generation of pod labels and pod selectors."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14804
          },
          "name": "manualSelector",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.batch.v1.JobSpec#maxFailedIndexes"
            },
            "remarks": "Once the number of failed indexes exceeds this number the entire Job is marked as Failed and its execution is terminated. When left as null the job continues execution of all of its indexes and is marked with the `Complete` Job condition. It can only be specified when backoffLimitPerIndex is set. It can be null or up to completions. It is required and must be less than or equal to 10^4 when is completions greater than 10^5. This field is alpha-level. It can be used when the `JobBackoffLimitPerIndex` feature gate is enabled (disabled by default).",
            "stability": "stable",
            "summary": "Specifies the maximal number of failed indexes before marking the Job as failed, when backoffLimitPerIndex is set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14811
          },
          "name": "maxFailedIndexes",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.batch.v1.JobSpec#parallelism"
            },
            "remarks": "The actual number of pods running in steady state will be less than this number when ((.spec.completions - .status.successful) < .spec.parallelism), i.e. when the work left to do is less than max parallelism. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/",
            "stability": "stable",
            "summary": "Specifies the maximum desired number of pods the job should run at any given time."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14818
          },
          "name": "parallelism",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.batch.v1.JobSpec#podFailurePolicy"
            },
            "remarks": "In particular, it allows to specify the set of actions and conditions which need to be satisfied to take the associated action. If empty, the default behaviour applies - the counter of failed pods, represented by the jobs's .status.failed field, is incremented and it is checked against the backoffLimit. This field cannot be used in combination with restartPolicy=OnFailure.\n\nThis field is beta-level. It can be used when the `JobPodFailurePolicy` feature gate is enabled (enabled by default).",
            "stability": "stable",
            "summary": "Specifies the policy of handling failed pods."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14827
          },
          "name": "podFailurePolicy",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.PodFailurePolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.batch.v1.JobSpec#podReplacementPolicy"
            },
            "remarks": "Possible values are: - TerminatingOrFailed means that we recreate pods\nwhen they are terminating (has a metadata.deletionTimestamp) or failed.\n- Failed means to wait until a previously created Pod is fully terminated (has phase\nFailed or Succeeded) before creating a replacement Pod.\n\nWhen using podFailurePolicy, Failed is the the only allowed value. TerminatingOrFailed and Failed are allowed values when podFailurePolicy is not in use. This is an alpha field. Enable JobPodReplacementPolicy to be able to use this field.",
            "stability": "stable",
            "summary": "podReplacementPolicy specifies when to create replacement Pods."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14839
          },
          "name": "podReplacementPolicy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.batch.v1.JobSpec#selector"
            },
            "remarks": "Normally, the system sets this field for you. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors",
            "stability": "stable",
            "summary": "A label query over pods that should match the pod count."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14846
          },
          "name": "selector",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.LabelSelector"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.batch.v1.JobSpec#suspend"
            },
            "default": "false.",
            "remarks": "If a Job is created with suspend set to true, no Pods are created by the Job controller. If a Job is suspended after creation (i.e. the flag goes from false to true), the Job controller will delete all active Pods associated with this Job. Users must design their workload to gracefully handle this. Suspending a Job will reset the StartTime field of the Job, effectively resetting the ActiveDeadlineSeconds timer too. Defaults to false.",
            "stability": "stable",
            "summary": "suspend specifies whether the Job controller should create Pods or not."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14854
          },
          "name": "suspend",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.batch.v1.JobSpec#ttlSecondsAfterFinished"
            },
            "remarks": "If this field is set, ttlSecondsAfterFinished after the Job finishes, it is eligible to be automatically deleted. When the Job is being deleted, its lifecycle guarantees (e.g. finalizers) will be honored. If this field is unset, the Job won't be automatically deleted. If this field is set to zero, the Job becomes eligible to be deleted immediately after it finishes.",
            "stability": "stable",
            "summary": "ttlSecondsAfterFinished limits the lifetime of a Job that has finished execution (either Complete or Failed)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14868
          },
          "name": "ttlSecondsAfterFinished",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/imports/k8s:JobSpec"
    },
    "cdk8s-plus-28.k8s.JobTemplateSpec": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.batch.v1.JobTemplateSpec"
        },
        "stability": "stable",
        "summary": "JobTemplateSpec describes the data a Job should have when created from a template."
      },
      "fqn": "cdk8s-plus-28.k8s.JobTemplateSpec",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 19960
      },
      "name": "JobTemplateSpec",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.batch.v1.JobTemplateSpec#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard object's metadata of the jobs created from this template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19966
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.batch.v1.JobTemplateSpec#spec"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
            "stability": "stable",
            "summary": "Specification of the desired behavior of the job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19973
          },
          "name": "spec",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.JobSpec"
          }
        }
      ],
      "symbolId": "src/imports/k8s:JobTemplateSpec"
    },
    "cdk8s-plus-28.k8s.JsonSchemaProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps"
        },
        "stability": "stable",
        "summary": "JSONSchemaProps is a JSON-Schema following Specification Draft 4 (http://json-schema.org/)."
      },
      "fqn": "cdk8s-plus-28.k8s.JsonSchemaProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 29501
      },
      "name": "JsonSchemaProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps#additionalItems"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29515
          },
          "name": "additionalItems",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps#additionalProperties"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29520
          },
          "name": "additionalProperties",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps#allOf"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29525
          },
          "name": "allOf",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.JsonSchemaProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps#anyOf"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29530
          },
          "name": "anyOf",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.JsonSchemaProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps#default"
            },
            "remarks": "Defaulting is a beta feature under the CustomResourceDefaulting feature gate. Defaulting requires spec.preserveUnknownFields to be false.",
            "stability": "stable",
            "summary": "default is a default value for undefined object fields."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29537
          },
          "name": "default",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps#definitions"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29542
          },
          "name": "definitions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.JsonSchemaProps"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps#dependencies"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29547
          },
          "name": "dependencies",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps#description"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29552
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps#enum"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29557
          },
          "name": "enum",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps#example"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29562
          },
          "name": "example",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps#exclusiveMaximum"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29567
          },
          "name": "exclusiveMaximum",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps#exclusiveMinimum"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29572
          },
          "name": "exclusiveMinimum",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps#externalDocs"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29577
          },
          "name": "externalDocs",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ExternalDocumentation"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps#format"
            },
            "remarks": "- bsonobjectid: a bson object ID, i.e. a 24 characters hex string - uri: an URI as parsed by Golang net/url.ParseRequestURI - email: an email address as parsed by Golang net/mail.ParseAddress - hostname: a valid representation for an Internet host name, as defined by RFC 1034, section 3.1 [RFC1034]. - ipv4: an IPv4 IP as parsed by Golang net.ParseIP - ipv6: an IPv6 IP as parsed by Golang net.ParseIP - cidr: a CIDR as parsed by Golang net.ParseCIDR - mac: a MAC address as parsed by Golang net.ParseMAC - uuid: an UUID that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid3: an UUID3 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?3[0-9a-f]{3}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid4: an UUID4 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?4[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - uuid5: an UUID5 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?5[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - isbn: an ISBN10 or ISBN13 number string like \"0321751043\" or \"978-0321751041\" - isbn10: an ISBN10 number string like \"0321751043\" - isbn13: an ISBN13 number string like \"978-0321751041\" - creditcard: a credit card number defined by the regex ^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$ with any non digit characters mixed in - ssn: a U.S. social security number following the regex ^\\d{3}[- ]?\\d{2}[- ]?\\d{4}$ - hexcolor: an hexadecimal color code like \"#FFFFFF: following the regex ^#?([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$ - rgbcolor: an RGB color code like rgb like \"rgb(255,255,2559\" - byte: base64 encoded binary data - password: any kind of string - date: a date string like \"2006-01-02\" as defined by full-date in RFC3339 - duration: a duration string like \"22 ns\" as parsed by Golang time.ParseDuration or compatible with Scala duration format - datetime: a date time string like \"2014-12-15T19:30:20.000Z\" as defined by date-time in RFC3339.",
            "stability": "stable",
            "summary": "format is an OpenAPI v3 format string. Unknown formats are ignored. The following formats are validated:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29586
          },
          "name": "format",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps#id"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29591
          },
          "name": "id",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps#items"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29596
          },
          "name": "items",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps#maximum"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29616
          },
          "name": "maximum",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps#maxItems"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29601
          },
          "name": "maxItems",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps#maxLength"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29606
          },
          "name": "maxLength",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps#maxProperties"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29611
          },
          "name": "maxProperties",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps#minimum"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29636
          },
          "name": "minimum",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps#minItems"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29621
          },
          "name": "minItems",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps#minLength"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29626
          },
          "name": "minLength",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps#minProperties"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29631
          },
          "name": "minProperties",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps#multipleOf"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29641
          },
          "name": "multipleOf",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps#not"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29646
          },
          "name": "not",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.JsonSchemaProps"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps#nullable"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29651
          },
          "name": "nullable",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps#oneOf"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29656
          },
          "name": "oneOf",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.JsonSchemaProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps#pattern"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29661
          },
          "name": "pattern",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps#patternProperties"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29666
          },
          "name": "patternProperties",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.JsonSchemaProps"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps#properties"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29671
          },
          "name": "properties",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.JsonSchemaProps"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps#$ref"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29505
          },
          "name": "ref",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps#required"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29676
          },
          "name": "required",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps#$schema"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29510
          },
          "name": "schema",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps#title"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29681
          },
          "name": "title",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps#type"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29686
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps#uniqueItems"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29691
          },
          "name": "uniqueItems",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps#x-kubernetes-embedded-resource"
            },
            "stability": "stable",
            "summary": "x-kubernetes-embedded-resource defines that the value is an embedded Kubernetes runtime.Object, with TypeMeta and ObjectMeta. The type must be object. It is allowed to further restrict the embedded object. kind, apiVersion and metadata are validated automatically. x-kubernetes-preserve-unknown-fields is allowed to be true, but does not have to be if the object is fully specified (up to kind, apiVersion, metadata)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29698
          },
          "name": "xKubernetesEmbeddedResource",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps#x-kubernetes-int-or-string"
            },
            "remarks": "If this is true, an empty type is allowed and type as child of anyOf is permitted if following one of the following patterns:\n\n1) anyOf:\n- type: integer\n- type: string\n2) allOf:\n- anyOf:\n- type: integer\n- type: string\n- ... zero or more",
            "stability": "stable",
            "summary": "x-kubernetes-int-or-string specifies that this value is either an integer or a string."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29714
          },
          "name": "xKubernetesIntOrString",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps#x-kubernetes-list-map-keys"
            },
            "remarks": "This tag MUST only be used on lists that have the \"x-kubernetes-list-type\" extension set to \"map\". Also, the values specified for this attribute must be a scalar typed field of the child structure (no nesting is supported).\n\nThe properties specified must either be required or have a default value, to ensure those properties are present for all list items.",
            "stability": "stable",
            "summary": "x-kubernetes-list-map-keys annotates an array with the x-kubernetes-list-type `map` by specifying the keys used as the index of the map."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29725
          },
          "name": "xKubernetesListMapKeys",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps#x-kubernetes-list-type"
            },
            "default": "atomic for arrays.",
            "remarks": "This extension must only be used on lists and may have 3 possible values:\n\n1) `atomic`: the list is treated as a single entity, like a scalar.\nAtomic lists will be entirely replaced when updated. This extension\nmay be used on any type of list (struct, scalar, ...).\n2) `set`:\nSets are lists that must not have multiple items with the same value. Each\nvalue must be a scalar, an object with x-kubernetes-map-type `atomic` or an\narray with x-kubernetes-list-type `atomic`.\n3) `map`:\nThese lists are like maps in that their elements have a non-index key\nused to identify them. Order is preserved upon merge. The map tag\nmust only be used on a list with elements of type object.\nDefaults to atomic for arrays.",
            "stability": "stable",
            "summary": "x-kubernetes-list-type annotates an array to further describe its topology."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29746
          },
          "name": "xKubernetesListType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps#x-kubernetes-map-type"
            },
            "remarks": "This extension must only be used when type is object and may have 2 possible values:\n\n1) `granular`:\nThese maps are actual maps (key-value pairs) and each fields are independent\nfrom each other (they can each be manipulated by separate actors). This is\nthe default behaviour for all maps.\n2) `atomic`: the list is treated as a single entity, like a scalar.\nAtomic maps will be entirely replaced when updated.",
            "stability": "stable",
            "summary": "x-kubernetes-map-type annotates an object to further describe its topology."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29760
          },
          "name": "xKubernetesMapType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps#x-kubernetes-preserve-unknown-fields"
            },
            "remarks": "This affects fields recursively, but switches back to normal pruning behaviour if nested properties or additionalProperties are specified in the schema. This can either be true or undefined. False is forbidden.",
            "stability": "stable",
            "summary": "x-kubernetes-preserve-unknown-fields stops the API server decoding step from pruning fields which are not specified in the validation schema."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29767
          },
          "name": "xKubernetesPreserveUnknownFields",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps#x-kubernetes-validations"
            },
            "remarks": "This field is an alpha-level. Using this field requires the feature gate `CustomResourceValidationExpressions` to be enabled.",
            "stability": "stable",
            "summary": "x-kubernetes-validations describes a list of validation rules written in the CEL expression language."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29774
          },
          "name": "xKubernetesValidations",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.ValidationRule"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:JsonSchemaProps"
    },
    "cdk8s-plus-28.k8s.KeyToPath": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.KeyToPath"
        },
        "stability": "stable",
        "summary": "Maps a string key to a path within a volume."
      },
      "fqn": "cdk8s-plus-28.k8s.KeyToPath",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 28904
      },
      "name": "KeyToPath",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.KeyToPath#key"
            },
            "stability": "stable",
            "summary": "key is the key to project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28910
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.KeyToPath#path"
            },
            "remarks": "May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
            "stability": "stable",
            "summary": "path is the relative path of the file to map the key to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28924
          },
          "name": "path",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.KeyToPath#mode"
            },
            "remarks": "Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "stability": "stable",
            "summary": "mode is Optional: mode bits used to set permissions on this file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28917
          },
          "name": "mode",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KeyToPath"
    },
    "cdk8s-plus-28.k8s.KubeApiService": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIService"
        },
        "remarks": "Name must be \"version.group\".",
        "stability": "stable",
        "summary": "APIService represents a server for a particular GroupVersion."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeApiService",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIService\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 7489
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeApiServiceProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 7460
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIService\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7476
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeApiServiceProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7499
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeApiService",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIService\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7464
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeApiService"
    },
    "cdk8s-plus-28.k8s.KubeApiServiceList": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceList"
        },
        "stability": "stable",
        "summary": "APIServiceList is a list of APIService objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeApiServiceList",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 7543
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeApiServiceListProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 7514
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7530
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeApiServiceListProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7553
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeApiServiceList",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7518
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeApiServiceList"
    },
    "cdk8s-plus-28.k8s.KubeApiServiceListProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceList"
        },
        "stability": "stable",
        "summary": "APIServiceList is a list of APIService objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeApiServiceListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 13075
      },
      "name": "KubeApiServiceListProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceList#items"
            },
            "stability": "stable",
            "summary": "Items is the list of APIService."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13088
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeApiServiceProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceList#metadata"
            },
            "stability": "stable",
            "summary": "Standard list metadata More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13081
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeApiServiceListProps"
    },
    "cdk8s-plus-28.k8s.KubeApiServiceProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIService"
        },
        "remarks": "Name must be \"version.group\".",
        "stability": "stable",
        "summary": "APIService represents a server for a particular GroupVersion."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeApiServiceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 13038
      },
      "name": "KubeApiServiceProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIService#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13044
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIService#spec"
            },
            "stability": "stable",
            "summary": "Spec contains information for locating and communicating with a server."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13051
          },
          "name": "spec",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ApiServiceSpec"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeApiServiceProps"
    },
    "cdk8s-plus-28.k8s.KubeBinding": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.Binding"
        },
        "remarks": "for example, a pod is bound to a node by a scheduler. Deprecated in 1.7, please use the bindings subresource of pods instead.",
        "stability": "stable",
        "summary": "Binding ties one object to another;"
      },
      "fqn": "cdk8s-plus-28.k8s.KubeBinding",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.core.v1.Binding\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 2653
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeBindingProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 2624
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.core.v1.Binding\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2640
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeBindingProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2663
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeBinding",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.core.v1.Binding\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2628
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeBinding"
    },
    "cdk8s-plus-28.k8s.KubeBindingProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.Binding"
        },
        "remarks": "for example, a pod is bound to a node by a scheduler. Deprecated in 1.7, please use the bindings subresource of pods instead.",
        "stability": "stable",
        "summary": "Binding ties one object to another;"
      },
      "fqn": "cdk8s-plus-28.k8s.KubeBindingProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 9346
      },
      "name": "KubeBindingProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Binding#target"
            },
            "stability": "stable",
            "summary": "The target object that you want to bind to the standard object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9359
          },
          "name": "target",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectReference"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Binding#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9352
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeBindingProps"
    },
    "cdk8s-plus-28.k8s.KubeCertificateSigningRequest": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.certificates.v1.CertificateSigningRequest"
        },
        "remarks": "Kubelets use this API to obtain:\n1. client certificates to authenticate to kube-apiserver (with the \"kubernetes.io/kube-apiserver-client-kubelet\" signerName).\n2. serving certificates for TLS endpoints kube-apiserver can connect to securely (with the \"kubernetes.io/kubelet-serving\" signerName).\n\nThis API can be used to request client certificates to authenticate to kube-apiserver (with the \"kubernetes.io/kube-apiserver-client\" signerName), or to obtain certificates from custom non-Kubernetes signers.",
        "stability": "stable",
        "summary": "CertificateSigningRequest objects provide a mechanism to obtain x509 certificates by submitting a certificate signing request, and having it asynchronously approved and issued."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeCertificateSigningRequest",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.certificates.v1.CertificateSigningRequest\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 2325
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeCertificateSigningRequestProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 2296
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.certificates.v1.CertificateSigningRequest\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2312
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeCertificateSigningRequestProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2335
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeCertificateSigningRequest",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.certificates.v1.CertificateSigningRequest\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2300
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeCertificateSigningRequest"
    },
    "cdk8s-plus-28.k8s.KubeCertificateSigningRequestList": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.certificates.v1.CertificateSigningRequestList"
        },
        "stability": "stable",
        "summary": "CertificateSigningRequestList is a collection of CertificateSigningRequest objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeCertificateSigningRequestList",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.certificates.v1.CertificateSigningRequestList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 2379
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeCertificateSigningRequestListProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 2350
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.certificates.v1.CertificateSigningRequestList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2366
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeCertificateSigningRequestListProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2389
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeCertificateSigningRequestList",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.certificates.v1.CertificateSigningRequestList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2354
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeCertificateSigningRequestList"
    },
    "cdk8s-plus-28.k8s.KubeCertificateSigningRequestListProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.certificates.v1.CertificateSigningRequestList"
        },
        "stability": "stable",
        "summary": "CertificateSigningRequestList is a collection of CertificateSigningRequest objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeCertificateSigningRequestListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 9159
      },
      "name": "KubeCertificateSigningRequestListProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.certificates.v1.CertificateSigningRequestList#items"
            },
            "stability": "stable",
            "summary": "items is a collection of CertificateSigningRequest objects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9170
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeCertificateSigningRequestProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.certificates.v1.CertificateSigningRequestList#metadata"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9163
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeCertificateSigningRequestListProps"
    },
    "cdk8s-plus-28.k8s.KubeCertificateSigningRequestProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.certificates.v1.CertificateSigningRequest"
        },
        "remarks": "Kubelets use this API to obtain:\n1. client certificates to authenticate to kube-apiserver (with the \"kubernetes.io/kube-apiserver-client-kubelet\" signerName).\n2. serving certificates for TLS endpoints kube-apiserver can connect to securely (with the \"kubernetes.io/kubelet-serving\" signerName).\n\nThis API can be used to request client certificates to authenticate to kube-apiserver (with the \"kubernetes.io/kube-apiserver-client\" signerName), or to obtain certificates from custom non-Kubernetes signers.",
        "stability": "stable",
        "summary": "CertificateSigningRequest objects provide a mechanism to obtain x509 certificates by submitting a certificate signing request, and having it asynchronously approved and issued."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeCertificateSigningRequestProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 9124
      },
      "name": "KubeCertificateSigningRequestProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.certificates.v1.CertificateSigningRequest#spec"
            },
            "remarks": "Only the request, signerName, expirationSeconds, and usages fields can be set on creation. Other fields are derived by Kubernetes and cannot be modified by users.",
            "stability": "stable",
            "summary": "spec contains the certificate request, and is immutable after creation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9135
          },
          "name": "spec",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.CertificateSigningRequestSpec"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.certificates.v1.CertificateSigningRequest#metadata"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9128
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeCertificateSigningRequestProps"
    },
    "cdk8s-plus-28.k8s.KubeClusterCidrListV1Alpha1": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.networking.v1alpha1.ClusterCIDRList"
        },
        "stability": "stable",
        "summary": "ClusterCIDRList contains a list of ClusterCIDR."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeClusterCidrListV1Alpha1",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.networking.v1alpha1.ClusterCIDRList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 5365
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeClusterCidrListV1Alpha1Props"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 5336
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.networking.v1alpha1.ClusterCIDRList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5352
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeClusterCidrListV1Alpha1Props"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5375
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeClusterCidrListV1Alpha1",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.networking.v1alpha1.ClusterCIDRList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5340
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeClusterCidrListV1Alpha1"
    },
    "cdk8s-plus-28.k8s.KubeClusterCidrListV1Alpha1Props": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.networking.v1alpha1.ClusterCIDRList"
        },
        "stability": "stable",
        "summary": "ClusterCIDRList contains a list of ClusterCIDR."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeClusterCidrListV1Alpha1Props",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 11384
      },
      "name": "KubeClusterCidrListV1Alpha1Props",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1alpha1.ClusterCIDRList#items"
            },
            "stability": "stable",
            "summary": "items is the list of ClusterCIDRs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11397
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeClusterCidrv1Alpha1Props"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1alpha1.ClusterCIDRList#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11390
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeClusterCidrListV1Alpha1Props"
    },
    "cdk8s-plus-28.k8s.KubeClusterCidrv1Alpha1": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.networking.v1alpha1.ClusterCIDR"
        },
        "remarks": "A cluster may have any number of ClusterCIDR resources, all of which will be considered when allocating a CIDR for a Node.  A ClusterCIDR is eligible to be used for a given Node when the node selector matches the node in question and has free CIDRs to allocate.  In case of multiple matching ClusterCIDR resources, the allocator will attempt to break ties using internal heuristics, but any ClusterCIDR whose node selector matches the Node may be used.",
        "stability": "stable",
        "summary": "ClusterCIDR represents a single configuration for per-Node Pod CIDR allocations when the MultiCIDRRangeAllocator is enabled (see the config for kube-controller-manager)."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeClusterCidrv1Alpha1",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.networking.v1alpha1.ClusterCIDR\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 5311
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeClusterCidrv1Alpha1Props"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 5282
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.networking.v1alpha1.ClusterCIDR\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5298
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeClusterCidrv1Alpha1Props"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5321
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeClusterCidrv1Alpha1",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.networking.v1alpha1.ClusterCIDR\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5286
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeClusterCidrv1Alpha1"
    },
    "cdk8s-plus-28.k8s.KubeClusterCidrv1Alpha1Props": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.networking.v1alpha1.ClusterCIDR"
        },
        "remarks": "A cluster may have any number of ClusterCIDR resources, all of which will be considered when allocating a CIDR for a Node.  A ClusterCIDR is eligible to be used for a given Node when the node selector matches the node in question and has free CIDRs to allocate.  In case of multiple matching ClusterCIDR resources, the allocator will attempt to break ties using internal heuristics, but any ClusterCIDR whose node selector matches the Node may be used.",
        "stability": "stable",
        "summary": "ClusterCIDR represents a single configuration for per-Node Pod CIDR allocations when the MultiCIDRRangeAllocator is enabled (see the config for kube-controller-manager)."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeClusterCidrv1Alpha1Props",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 11347
      },
      "name": "KubeClusterCidrv1Alpha1Props",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1alpha1.ClusterCIDR#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11353
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1alpha1.ClusterCIDR#spec"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
            "stability": "stable",
            "summary": "spec is the desired state of the ClusterCIDR."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11360
          },
          "name": "spec",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ClusterCidrSpecV1Alpha1"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeClusterCidrv1Alpha1Props"
    },
    "cdk8s-plus-28.k8s.KubeClusterRole": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.rbac.v1.ClusterRole"
        },
        "stability": "stable",
        "summary": "ClusterRole is a cluster level, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding or ClusterRoleBinding."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeClusterRole",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.rbac.v1.ClusterRole\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 5797
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeClusterRoleProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 5768
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.rbac.v1.ClusterRole\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5784
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeClusterRoleProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5807
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeClusterRole",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.rbac.v1.ClusterRole\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5772
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeClusterRole"
    },
    "cdk8s-plus-28.k8s.KubeClusterRoleBinding": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.rbac.v1.ClusterRoleBinding"
        },
        "remarks": "It can reference a ClusterRole in the global namespace, and adds who information via Subject.",
        "stability": "stable",
        "summary": "ClusterRoleBinding references a ClusterRole, but not contain it."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeClusterRoleBinding",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.rbac.v1.ClusterRoleBinding\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 5851
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeClusterRoleBindingProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 5822
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.rbac.v1.ClusterRoleBinding\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5838
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeClusterRoleBindingProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5861
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeClusterRoleBinding",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.rbac.v1.ClusterRoleBinding\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5826
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeClusterRoleBinding"
    },
    "cdk8s-plus-28.k8s.KubeClusterRoleBindingList": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.rbac.v1.ClusterRoleBindingList"
        },
        "stability": "stable",
        "summary": "ClusterRoleBindingList is a collection of ClusterRoleBindings."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeClusterRoleBindingList",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.rbac.v1.ClusterRoleBindingList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 5905
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeClusterRoleBindingListProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 5876
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.rbac.v1.ClusterRoleBindingList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5892
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeClusterRoleBindingListProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5915
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeClusterRoleBindingList",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.rbac.v1.ClusterRoleBindingList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5880
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeClusterRoleBindingList"
    },
    "cdk8s-plus-28.k8s.KubeClusterRoleBindingListProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.rbac.v1.ClusterRoleBindingList"
        },
        "stability": "stable",
        "summary": "ClusterRoleBindingList is a collection of ClusterRoleBindings."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeClusterRoleBindingListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 11787
      },
      "name": "KubeClusterRoleBindingListProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.rbac.v1.ClusterRoleBindingList#items"
            },
            "stability": "stable",
            "summary": "Items is a list of ClusterRoleBindings."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11800
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeClusterRoleBindingProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.rbac.v1.ClusterRoleBindingList#metadata"
            },
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11793
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeClusterRoleBindingListProps"
    },
    "cdk8s-plus-28.k8s.KubeClusterRoleBindingProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.rbac.v1.ClusterRoleBinding"
        },
        "remarks": "It can reference a ClusterRole in the global namespace, and adds who information via Subject.",
        "stability": "stable",
        "summary": "ClusterRoleBinding references a ClusterRole, but not contain it."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeClusterRoleBindingProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 11742
      },
      "name": "KubeClusterRoleBindingProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.rbac.v1.ClusterRoleBinding#roleRef"
            },
            "remarks": "If the RoleRef cannot be resolved, the Authorizer must return an error. This field is immutable.",
            "stability": "stable",
            "summary": "RoleRef can only reference a ClusterRole in the global namespace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11755
          },
          "name": "roleRef",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.RoleRef"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.rbac.v1.ClusterRoleBinding#metadata"
            },
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11748
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.rbac.v1.ClusterRoleBinding#subjects"
            },
            "stability": "stable",
            "summary": "Subjects holds references to the objects the role applies to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11762
          },
          "name": "subjects",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.Subject"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeClusterRoleBindingProps"
    },
    "cdk8s-plus-28.k8s.KubeClusterRoleList": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.rbac.v1.ClusterRoleList"
        },
        "stability": "stable",
        "summary": "ClusterRoleList is a collection of ClusterRoles."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeClusterRoleList",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.rbac.v1.ClusterRoleList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 5959
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeClusterRoleListProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 5930
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.rbac.v1.ClusterRoleList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5946
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeClusterRoleListProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5969
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeClusterRoleList",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.rbac.v1.ClusterRoleList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5934
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeClusterRoleList"
    },
    "cdk8s-plus-28.k8s.KubeClusterRoleListProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.rbac.v1.ClusterRoleList"
        },
        "stability": "stable",
        "summary": "ClusterRoleList is a collection of ClusterRoles."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeClusterRoleListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 11824
      },
      "name": "KubeClusterRoleListProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.rbac.v1.ClusterRoleList#items"
            },
            "stability": "stable",
            "summary": "Items is a list of ClusterRoles."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11837
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeClusterRoleProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.rbac.v1.ClusterRoleList#metadata"
            },
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11830
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeClusterRoleListProps"
    },
    "cdk8s-plus-28.k8s.KubeClusterRoleProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.rbac.v1.ClusterRole"
        },
        "stability": "stable",
        "summary": "ClusterRole is a cluster level, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding or ClusterRoleBinding."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeClusterRoleProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 11697
      },
      "name": "KubeClusterRoleProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.rbac.v1.ClusterRole#aggregationRule"
            },
            "remarks": "If AggregationRule is set, then the Rules are controller managed and direct changes to Rules will be stomped by the controller.",
            "stability": "stable",
            "summary": "AggregationRule is an optional field that describes how to build the Rules for this ClusterRole."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11710
          },
          "name": "aggregationRule",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.AggregationRule"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.rbac.v1.ClusterRole#metadata"
            },
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11703
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.rbac.v1.ClusterRole#rules"
            },
            "stability": "stable",
            "summary": "Rules holds all the PolicyRules for this ClusterRole."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11717
          },
          "name": "rules",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.PolicyRule"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeClusterRoleProps"
    },
    "cdk8s-plus-28.k8s.KubeClusterTrustBundleListV1Alpha1": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.certificates.v1alpha1.ClusterTrustBundleList"
        },
        "stability": "stable",
        "summary": "ClusterTrustBundleList is a collection of ClusterTrustBundle objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeClusterTrustBundleListV1Alpha1",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.certificates.v1alpha1.ClusterTrustBundleList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 2491
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeClusterTrustBundleListV1Alpha1Props"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 2462
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.certificates.v1alpha1.ClusterTrustBundleList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2478
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeClusterTrustBundleListV1Alpha1Props"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2501
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeClusterTrustBundleListV1Alpha1",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.certificates.v1alpha1.ClusterTrustBundleList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2466
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeClusterTrustBundleListV1Alpha1"
    },
    "cdk8s-plus-28.k8s.KubeClusterTrustBundleListV1Alpha1Props": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.certificates.v1alpha1.ClusterTrustBundleList"
        },
        "stability": "stable",
        "summary": "ClusterTrustBundleList is a collection of ClusterTrustBundle objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeClusterTrustBundleListV1Alpha1Props",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 9235
      },
      "name": "KubeClusterTrustBundleListV1Alpha1Props",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.certificates.v1alpha1.ClusterTrustBundleList#items"
            },
            "stability": "stable",
            "summary": "items is a collection of ClusterTrustBundle objects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9248
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeClusterTrustBundleV1Alpha1Props"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.certificates.v1alpha1.ClusterTrustBundleList#metadata"
            },
            "stability": "stable",
            "summary": "metadata contains the list metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9241
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeClusterTrustBundleListV1Alpha1Props"
    },
    "cdk8s-plus-28.k8s.KubeClusterTrustBundleV1Alpha1": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.certificates.v1alpha1.ClusterTrustBundle"
        },
        "remarks": "ClusterTrustBundle objects are considered to be readable by any authenticated user in the cluster, because they can be mounted by pods using the `clusterTrustBundle` projection.  All service accounts have read access to ClusterTrustBundles by default.  Users who only have namespace-level access to a cluster can read ClusterTrustBundles by impersonating a serviceaccount that they have access to.\n\nIt can be optionally associated with a particular assigner, in which case it contains one valid set of trust anchors for that signer. Signers may have multiple associated ClusterTrustBundles; each is an independent set of trust anchors for that signer. Admission control is used to enforce that only users with permissions on the signer can create or modify the corresponding bundle.",
        "stability": "stable",
        "summary": "ClusterTrustBundle is a cluster-scoped container for X.509 trust anchors (root certificates)."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeClusterTrustBundleV1Alpha1",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.certificates.v1alpha1.ClusterTrustBundle\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 2437
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeClusterTrustBundleV1Alpha1Props"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 2408
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.certificates.v1alpha1.ClusterTrustBundle\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2424
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeClusterTrustBundleV1Alpha1Props"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2447
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeClusterTrustBundleV1Alpha1",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.certificates.v1alpha1.ClusterTrustBundle\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2412
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeClusterTrustBundleV1Alpha1"
    },
    "cdk8s-plus-28.k8s.KubeClusterTrustBundleV1Alpha1Props": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.certificates.v1alpha1.ClusterTrustBundle"
        },
        "remarks": "ClusterTrustBundle objects are considered to be readable by any authenticated user in the cluster, because they can be mounted by pods using the `clusterTrustBundle` projection.  All service accounts have read access to ClusterTrustBundles by default.  Users who only have namespace-level access to a cluster can read ClusterTrustBundles by impersonating a serviceaccount that they have access to.\n\nIt can be optionally associated with a particular assigner, in which case it contains one valid set of trust anchors for that signer. Signers may have multiple associated ClusterTrustBundles; each is an independent set of trust anchors for that signer. Admission control is used to enforce that only users with permissions on the signer can create or modify the corresponding bundle.",
        "stability": "stable",
        "summary": "ClusterTrustBundle is a cluster-scoped container for X.509 trust anchors (root certificates)."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeClusterTrustBundleV1Alpha1Props",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 9198
      },
      "name": "KubeClusterTrustBundleV1Alpha1Props",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.certificates.v1alpha1.ClusterTrustBundle#spec"
            },
            "stability": "stable",
            "summary": "spec contains the signer (if any) and trust anchors."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9211
          },
          "name": "spec",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ClusterTrustBundleSpecV1Alpha1"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.certificates.v1alpha1.ClusterTrustBundle#metadata"
            },
            "stability": "stable",
            "summary": "metadata contains the object metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9204
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeClusterTrustBundleV1Alpha1Props"
    },
    "cdk8s-plus-28.k8s.KubeComponentStatus": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ComponentStatus"
        },
        "remarks": "Deprecated: This API is deprecated in v1.19+",
        "stability": "stable",
        "summary": "ComponentStatus (and ComponentStatusList) holds the cluster validation info."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeComponentStatus",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.core.v1.ComponentStatus\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 2707
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeComponentStatusProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 2678
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.core.v1.ComponentStatus\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2694
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeComponentStatusProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2717
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeComponentStatus",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.core.v1.ComponentStatus\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2682
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeComponentStatus"
    },
    "cdk8s-plus-28.k8s.KubeComponentStatusList": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ComponentStatusList"
        },
        "remarks": "Deprecated: This API is deprecated in v1.19+",
        "stability": "stable",
        "summary": "Status of all the conditions for the component as a list of ComponentStatus objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeComponentStatusList",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.core.v1.ComponentStatusList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 2761
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeComponentStatusListProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 2732
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.core.v1.ComponentStatusList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2748
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeComponentStatusListProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2771
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeComponentStatusList",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.core.v1.ComponentStatusList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2736
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeComponentStatusList"
    },
    "cdk8s-plus-28.k8s.KubeComponentStatusListProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ComponentStatusList"
        },
        "remarks": "Deprecated: This API is deprecated in v1.19+",
        "stability": "stable",
        "summary": "Status of all the conditions for the component as a list of ComponentStatus objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeComponentStatusListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 9420
      },
      "name": "KubeComponentStatusListProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ComponentStatusList#items"
            },
            "stability": "stable",
            "summary": "List of ComponentStatus objects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9433
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeComponentStatusProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ComponentStatusList#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "stability": "stable",
            "summary": "Standard list metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9426
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeComponentStatusListProps"
    },
    "cdk8s-plus-28.k8s.KubeComponentStatusProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ComponentStatus"
        },
        "remarks": "Deprecated: This API is deprecated in v1.19+",
        "stability": "stable",
        "summary": "ComponentStatus (and ComponentStatusList) holds the cluster validation info."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeComponentStatusProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 9383
      },
      "name": "KubeComponentStatusProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ComponentStatus#conditions"
            },
            "stability": "stable",
            "summary": "List of component conditions observed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9396
          },
          "name": "conditions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.ComponentCondition"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ComponentStatus#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9389
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeComponentStatusProps"
    },
    "cdk8s-plus-28.k8s.KubeConfigMap": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ConfigMap"
        },
        "stability": "stable",
        "summary": "ConfigMap holds configuration data for pods to consume."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeConfigMap",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.core.v1.ConfigMap\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 2815
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeConfigMapProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 2786
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.core.v1.ConfigMap\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2802
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeConfigMapProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2825
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeConfigMap",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.core.v1.ConfigMap\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2790
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeConfigMap"
    },
    "cdk8s-plus-28.k8s.KubeConfigMapList": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ConfigMapList"
        },
        "stability": "stable",
        "summary": "ConfigMapList is a resource containing a list of ConfigMap objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeConfigMapList",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.core.v1.ConfigMapList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 2869
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeConfigMapListProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 2840
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.core.v1.ConfigMapList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2856
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeConfigMapListProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2879
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeConfigMapList",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.core.v1.ConfigMapList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2844
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeConfigMapList"
    },
    "cdk8s-plus-28.k8s.KubeConfigMapListProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ConfigMapList"
        },
        "stability": "stable",
        "summary": "ConfigMapList is a resource containing a list of ConfigMap objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeConfigMapListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 9510
      },
      "name": "KubeConfigMapListProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ConfigMapList#items"
            },
            "stability": "stable",
            "summary": "Items is the list of ConfigMaps."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9523
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeConfigMapProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ConfigMapList#metadata"
            },
            "stability": "stable",
            "summary": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9516
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeConfigMapListProps"
    },
    "cdk8s-plus-28.k8s.KubeConfigMapProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ConfigMap"
        },
        "stability": "stable",
        "summary": "ConfigMap holds configuration data for pods to consume."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeConfigMapProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 9457
      },
      "name": "KubeConfigMapProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ConfigMap#binaryData"
            },
            "remarks": "Each key must consist of alphanumeric characters, '-', '_' or '.'. BinaryData can contain byte sequences that are not in the UTF-8 range. The keys stored in BinaryData must not overlap with the ones in the Data field, this is enforced during validation process. Using this field will require 1.10+ apiserver and kubelet.",
            "stability": "stable",
            "summary": "BinaryData contains the binary data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9470
          },
          "name": "binaryData",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ConfigMap#data"
            },
            "remarks": "Each key must consist of alphanumeric characters, '-', '_' or '.'. Values with non-UTF-8 byte sequences must use the BinaryData field. The keys stored in Data must not overlap with the keys in the BinaryData field, this is enforced during validation process.",
            "stability": "stable",
            "summary": "Data contains the configuration data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9477
          },
          "name": "data",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ConfigMap#immutable"
            },
            "remarks": "If not set to true, the field can be modified at any time. Defaulted to nil.",
            "stability": "stable",
            "summary": "Immutable, if set to true, ensures that data stored in the ConfigMap cannot be updated (only object metadata can be modified)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9484
          },
          "name": "immutable",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ConfigMap#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9463
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeConfigMapProps"
    },
    "cdk8s-plus-28.k8s.KubeControllerRevision": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.apps.v1.ControllerRevision"
        },
        "remarks": "Clients are responsible for serializing and deserializing the objects that contain their internal state. Once a ControllerRevision has been successfully created, it can not be updated. The API Server will fail validation of all requests that attempt to mutate the Data field. ControllerRevisions may, however, be deleted. Note that, due to its use by both the DaemonSet and StatefulSet controllers for update and rollback, this object is beta. However, it may be subject to name and representation changes in future releases, and clients should not depend on its stability. It is primarily for internal use by controllers.",
        "stability": "stable",
        "summary": "ControllerRevision implements an immutable snapshot of state data."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeControllerRevision",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.apps.v1.ControllerRevision\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 803
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeControllerRevisionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 774
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.apps.v1.ControllerRevision\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 790
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeControllerRevisionProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 813
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeControllerRevision",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.apps.v1.ControllerRevision\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 778
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeControllerRevision"
    },
    "cdk8s-plus-28.k8s.KubeControllerRevisionList": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.apps.v1.ControllerRevisionList"
        },
        "stability": "stable",
        "summary": "ControllerRevisionList is a resource containing a list of ControllerRevision objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeControllerRevisionList",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.apps.v1.ControllerRevisionList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 857
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeControllerRevisionListProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 828
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.apps.v1.ControllerRevisionList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 844
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeControllerRevisionListProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 867
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeControllerRevisionList",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.apps.v1.ControllerRevisionList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 832
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeControllerRevisionList"
    },
    "cdk8s-plus-28.k8s.KubeControllerRevisionListProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.apps.v1.ControllerRevisionList"
        },
        "stability": "stable",
        "summary": "ControllerRevisionList is a resource containing a list of ControllerRevision objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeControllerRevisionListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 8139
      },
      "name": "KubeControllerRevisionListProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.ControllerRevisionList#items"
            },
            "stability": "stable",
            "summary": "Items is the list of ControllerRevisions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8152
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeControllerRevisionProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.ControllerRevisionList#metadata"
            },
            "stability": "stable",
            "summary": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8145
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeControllerRevisionListProps"
    },
    "cdk8s-plus-28.k8s.KubeControllerRevisionProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.apps.v1.ControllerRevision"
        },
        "remarks": "Clients are responsible for serializing and deserializing the objects that contain their internal state. Once a ControllerRevision has been successfully created, it can not be updated. The API Server will fail validation of all requests that attempt to mutate the Data field. ControllerRevisions may, however, be deleted. Note that, due to its use by both the DaemonSet and StatefulSet controllers for update and rollback, this object is beta. However, it may be subject to name and representation changes in future releases, and clients should not depend on its stability. It is primarily for internal use by controllers.",
        "stability": "stable",
        "summary": "ControllerRevision implements an immutable snapshot of state data."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeControllerRevisionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 8094
      },
      "name": "KubeControllerRevisionProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.ControllerRevision#revision"
            },
            "stability": "stable",
            "summary": "Revision indicates the revision of the state represented by Data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8114
          },
          "name": "revision",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.ControllerRevision#data"
            },
            "stability": "stable",
            "summary": "Data is the serialized representation of the state."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8107
          },
          "name": "data",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.ControllerRevision#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8100
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeControllerRevisionProps"
    },
    "cdk8s-plus-28.k8s.KubeCronJob": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.batch.v1.CronJob"
        },
        "stability": "stable",
        "summary": "CronJob represents the configuration of a single cron job."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeCronJob",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.batch.v1.CronJob\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 2103
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeCronJobProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 2074
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.batch.v1.CronJob\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2090
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeCronJobProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2113
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeCronJob",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.batch.v1.CronJob\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2078
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeCronJob"
    },
    "cdk8s-plus-28.k8s.KubeCronJobList": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.batch.v1.CronJobList"
        },
        "stability": "stable",
        "summary": "CronJobList is a collection of cron jobs."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeCronJobList",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.batch.v1.CronJobList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 2157
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeCronJobListProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 2128
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.batch.v1.CronJobList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2144
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeCronJobListProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2167
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeCronJobList",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.batch.v1.CronJobList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2132
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeCronJobList"
    },
    "cdk8s-plus-28.k8s.KubeCronJobListProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.batch.v1.CronJobList"
        },
        "stability": "stable",
        "summary": "CronJobList is a collection of cron jobs."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeCronJobListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 9007
      },
      "name": "KubeCronJobListProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.batch.v1.CronJobList#items"
            },
            "stability": "stable",
            "summary": "items is the list of CronJobs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9020
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeCronJobProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.batch.v1.CronJobList#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard list metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9013
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeCronJobListProps"
    },
    "cdk8s-plus-28.k8s.KubeCronJobProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.batch.v1.CronJob"
        },
        "stability": "stable",
        "summary": "CronJob represents the configuration of a single cron job."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeCronJobProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 8970
      },
      "name": "KubeCronJobProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.batch.v1.CronJob#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8976
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.batch.v1.CronJob#spec"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
            "stability": "stable",
            "summary": "Specification of the desired behavior of a cron job, including the schedule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8983
          },
          "name": "spec",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.CronJobSpec"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeCronJobProps"
    },
    "cdk8s-plus-28.k8s.KubeCsiDriver": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.storage.v1.CSIDriver"
        },
        "remarks": "Kubernetes attach detach controller uses this object to determine whether attach is required. Kubelet uses this object to determine whether pod information needs to be passed on mount. CSIDriver objects are non-namespaced.",
        "stability": "stable",
        "summary": "CSIDriver captures information about a Container Storage Interface (CSI) volume driver deployed on the cluster."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeCsiDriver",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.storage.v1.CSIDriver\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 6775
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeCsiDriverProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 6746
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.storage.v1.CSIDriver\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6762
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeCsiDriverProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6785
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeCsiDriver",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.storage.v1.CSIDriver\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6750
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeCsiDriver"
    },
    "cdk8s-plus-28.k8s.KubeCsiDriverList": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.storage.v1.CSIDriverList"
        },
        "stability": "stable",
        "summary": "CSIDriverList is a collection of CSIDriver objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeCsiDriverList",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.storage.v1.CSIDriverList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 6829
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeCsiDriverListProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 6800
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.storage.v1.CSIDriverList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6816
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeCsiDriverListProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6839
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeCsiDriverList",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.storage.v1.CSIDriverList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6804
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeCsiDriverList"
    },
    "cdk8s-plus-28.k8s.KubeCsiDriverListProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.storage.v1.CSIDriverList"
        },
        "stability": "stable",
        "summary": "CSIDriverList is a collection of CSIDriver objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeCsiDriverListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 12477
      },
      "name": "KubeCsiDriverListProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.CSIDriverList#items"
            },
            "stability": "stable",
            "summary": "items is the list of CSIDriver."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12490
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeCsiDriverProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.CSIDriverList#metadata"
            },
            "stability": "stable",
            "summary": "Standard list metadata More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12483
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeCsiDriverListProps"
    },
    "cdk8s-plus-28.k8s.KubeCsiDriverProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.storage.v1.CSIDriver"
        },
        "remarks": "Kubernetes attach detach controller uses this object to determine whether attach is required. Kubelet uses this object to determine whether pod information needs to be passed on mount. CSIDriver objects are non-namespaced.",
        "stability": "stable",
        "summary": "CSIDriver captures information about a Container Storage Interface (CSI) volume driver deployed on the cluster."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeCsiDriverProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 12440
      },
      "name": "KubeCsiDriverProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.CSIDriver#spec"
            },
            "stability": "stable",
            "summary": "spec represents the specification of the CSI Driver."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12453
          },
          "name": "spec",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.CsiDriverSpec"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.CSIDriver#metadata"
            },
            "remarks": "metadata.Name indicates the name of the CSI driver that this object refers to; it MUST be the same name returned by the CSI GetPluginName() call for that driver. The driver name must be 63 characters or less, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), dots (.), and alphanumerics between. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard object metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12446
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeCsiDriverProps"
    },
    "cdk8s-plus-28.k8s.KubeCsiNode": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.storage.v1.CSINode"
        },
        "remarks": "CSI drivers do not need to create the CSINode object directly. As long as they use the node-driver-registrar sidecar container, the kubelet will automatically populate the CSINode object for the CSI driver as part of kubelet plugin registration. CSINode has the same name as a node. If the object is missing, it means either there are no CSI Drivers available on the node, or the Kubelet version is low enough that it doesn't create this object. CSINode has an OwnerReference that points to the corresponding node object.",
        "stability": "stable",
        "summary": "CSINode holds information about all CSI drivers installed on a node."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeCsiNode",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.storage.v1.CSINode\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 6883
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeCsiNodeProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 6854
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.storage.v1.CSINode\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6870
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeCsiNodeProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6893
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeCsiNode",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.storage.v1.CSINode\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6858
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeCsiNode"
    },
    "cdk8s-plus-28.k8s.KubeCsiNodeList": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.storage.v1.CSINodeList"
        },
        "stability": "stable",
        "summary": "CSINodeList is a collection of CSINode objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeCsiNodeList",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.storage.v1.CSINodeList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 6937
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeCsiNodeListProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 6908
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.storage.v1.CSINodeList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6924
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeCsiNodeListProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6947
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeCsiNodeList",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.storage.v1.CSINodeList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6912
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeCsiNodeList"
    },
    "cdk8s-plus-28.k8s.KubeCsiNodeListProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.storage.v1.CSINodeList"
        },
        "stability": "stable",
        "summary": "CSINodeList is a collection of CSINode objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeCsiNodeListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 12551
      },
      "name": "KubeCsiNodeListProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.CSINodeList#items"
            },
            "stability": "stable",
            "summary": "items is the list of CSINode."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12564
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeCsiNodeProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.CSINodeList#metadata"
            },
            "stability": "stable",
            "summary": "Standard list metadata More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12557
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeCsiNodeListProps"
    },
    "cdk8s-plus-28.k8s.KubeCsiNodeProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.storage.v1.CSINode"
        },
        "remarks": "CSI drivers do not need to create the CSINode object directly. As long as they use the node-driver-registrar sidecar container, the kubelet will automatically populate the CSINode object for the CSI driver as part of kubelet plugin registration. CSINode has the same name as a node. If the object is missing, it means either there are no CSI Drivers available on the node, or the Kubelet version is low enough that it doesn't create this object. CSINode has an OwnerReference that points to the corresponding node object.",
        "stability": "stable",
        "summary": "CSINode holds information about all CSI drivers installed on a node."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeCsiNodeProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 12514
      },
      "name": "KubeCsiNodeProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.CSINode#spec"
            },
            "stability": "stable",
            "summary": "spec is the specification of CSINode."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12527
          },
          "name": "spec",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.CsiNodeSpec"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.CSINode#metadata"
            },
            "remarks": "metadata.name must be the Kubernetes node name.",
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12520
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeCsiNodeProps"
    },
    "cdk8s-plus-28.k8s.KubeCsiStorageCapacity": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.storage.v1.CSIStorageCapacity"
        },
        "remarks": "For a given StorageClass, this describes the available capacity in a particular topology segment.  This can be used when considering where to instantiate new PersistentVolumes.\n\nFor example this can express things like: - StorageClass \"standard\" has \"1234 GiB\" available in \"topology.kubernetes.io/zone=us-east1\" - StorageClass \"localssd\" has \"10 GiB\" available in \"kubernetes.io/hostname=knode-abc123\"\n\nThe following three cases all imply that no capacity is available for a certain combination: - no object exists with suitable topology and storage class name - such an object exists, but the capacity is unset - such an object exists, but the capacity is zero\n\nThe producer of these objects can decide which approach is more suitable.\n\nThey are consumed by the kube-scheduler when a CSI driver opts into capacity-aware scheduling with CSIDriverSpec.StorageCapacity. The scheduler compares the MaximumVolumeSize against the requested size of pending volumes to filter out unsuitable nodes. If MaximumVolumeSize is unset, it falls back to a comparison against the less precise Capacity. If that is also unset, the scheduler assumes that capacity is insufficient and tries some other node.",
        "stability": "stable",
        "summary": "CSIStorageCapacity stores the result of one CSI GetCapacity call."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeCsiStorageCapacity",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.storage.v1.CSIStorageCapacity\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 6999
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeCsiStorageCapacityProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 6970
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.storage.v1.CSIStorageCapacity\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6986
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeCsiStorageCapacityProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7009
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeCsiStorageCapacity",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.storage.v1.CSIStorageCapacity\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6974
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeCsiStorageCapacity"
    },
    "cdk8s-plus-28.k8s.KubeCsiStorageCapacityList": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.storage.v1.CSIStorageCapacityList"
        },
        "stability": "stable",
        "summary": "CSIStorageCapacityList is a collection of CSIStorageCapacity objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeCsiStorageCapacityList",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.storage.v1.CSIStorageCapacityList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 7053
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeCsiStorageCapacityListProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 7024
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.storage.v1.CSIStorageCapacityList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7040
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeCsiStorageCapacityListProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7063
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeCsiStorageCapacityList",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.storage.v1.CSIStorageCapacityList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7028
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeCsiStorageCapacityList"
    },
    "cdk8s-plus-28.k8s.KubeCsiStorageCapacityListProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.storage.v1.CSIStorageCapacityList"
        },
        "stability": "stable",
        "summary": "CSIStorageCapacityList is a collection of CSIStorageCapacity objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeCsiStorageCapacityListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 12665
      },
      "name": "KubeCsiStorageCapacityListProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.CSIStorageCapacityList#items"
            },
            "stability": "stable",
            "summary": "items is the list of CSIStorageCapacity objects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12678
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeCsiStorageCapacityProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.CSIStorageCapacityList#metadata"
            },
            "stability": "stable",
            "summary": "Standard list metadata More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12671
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeCsiStorageCapacityListProps"
    },
    "cdk8s-plus-28.k8s.KubeCsiStorageCapacityProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.storage.v1.CSIStorageCapacity"
        },
        "remarks": "For a given StorageClass, this describes the available capacity in a particular topology segment.  This can be used when considering where to instantiate new PersistentVolumes.\n\nFor example this can express things like: - StorageClass \"standard\" has \"1234 GiB\" available in \"topology.kubernetes.io/zone=us-east1\" - StorageClass \"localssd\" has \"10 GiB\" available in \"kubernetes.io/hostname=knode-abc123\"\n\nThe following three cases all imply that no capacity is available for a certain combination: - no object exists with suitable topology and storage class name - such an object exists, but the capacity is unset - such an object exists, but the capacity is zero\n\nThe producer of these objects can decide which approach is more suitable.\n\nThey are consumed by the kube-scheduler when a CSI driver opts into capacity-aware scheduling with CSIDriverSpec.StorageCapacity. The scheduler compares the MaximumVolumeSize against the requested size of pending volumes to filter out unsuitable nodes. If MaximumVolumeSize is unset, it falls back to a comparison against the less precise Capacity. If that is also unset, the scheduler assumes that capacity is insufficient and tries some other node.",
        "stability": "stable",
        "summary": "CSIStorageCapacity stores the result of one CSI GetCapacity call."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeCsiStorageCapacityProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 12596
      },
      "name": "KubeCsiStorageCapacityProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.CSIStorageCapacity#storageClassName"
            },
            "remarks": "It must meet the same requirements as the name of a StorageClass object (non-empty, DNS subdomain). If that object no longer exists, the CSIStorageCapacity object is obsolete and should be removed by its creator. This field is immutable.",
            "stability": "stable",
            "summary": "storageClassName represents the name of the StorageClass that the reported capacity applies to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12638
          },
          "name": "storageClassName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.CSIStorageCapacity#capacity"
            },
            "remarks": "The semantic is currently (CSI spec 1.2) defined as: The available capacity, in bytes, of the storage that can be used to provision volumes. If not set, that information is currently unavailable.",
            "stability": "stable",
            "summary": "capacity is the value reported by the CSI driver in its GetCapacityResponse for a GetCapacityRequest with topology and parameters that match the previous fields."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12615
          },
          "name": "capacity",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.Quantity"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.CSIStorageCapacity#maximumVolumeSize"
            },
            "remarks": "This is defined since CSI spec 1.4.0 as the largest size that may be used in a CreateVolumeRequest.capacity_range.required_bytes field to create a volume with the same parameters as those in GetCapacityRequest. The corresponding value in the Kubernetes API is ResourceRequirements.Requests in a volume claim.",
            "stability": "stable",
            "summary": "maximumVolumeSize is the value reported by the CSI driver in its GetCapacityResponse for a GetCapacityRequest with topology and parameters that match the previous fields."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12624
          },
          "name": "maximumVolumeSize",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.Quantity"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.CSIStorageCapacity#metadata"
            },
            "remarks": "The name has no particular meaning. It must be a DNS subdomain (dots allowed, 253 characters). To ensure that there are no conflicts with other CSI drivers on the cluster, the recommendation is to use csisc-<uuid>, a generated name, or a reverse-domain name which ends with the unique CSI driver name.\n\nObjects are namespaced.\n\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12606
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.CSIStorageCapacity#nodeTopology"
            },
            "remarks": "If not set, the storage is not accessible from any node in the cluster. If empty, the storage is accessible from all nodes. This field is immutable.",
            "stability": "stable",
            "summary": "nodeTopology defines which nodes have access to the storage for which capacity was reported."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12631
          },
          "name": "nodeTopology",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.LabelSelector"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeCsiStorageCapacityProps"
    },
    "cdk8s-plus-28.k8s.KubeCustomResourceDefinition": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinition"
        },
        "remarks": "Its name MUST be in the format <.spec.name>.<.spec.group>.",
        "stability": "stable",
        "summary": "CustomResourceDefinition represents a resource that should be exposed on the API server."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeCustomResourceDefinition",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinition\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 7327
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeCustomResourceDefinitionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 7298
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinition\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7314
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeCustomResourceDefinitionProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7337
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeCustomResourceDefinition",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinition\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7302
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeCustomResourceDefinition"
    },
    "cdk8s-plus-28.k8s.KubeCustomResourceDefinitionList": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionList"
        },
        "stability": "stable",
        "summary": "CustomResourceDefinitionList is a list of CustomResourceDefinition objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeCustomResourceDefinitionList",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 7381
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeCustomResourceDefinitionListProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 7352
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7368
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeCustomResourceDefinitionListProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7391
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeCustomResourceDefinitionList",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7356
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeCustomResourceDefinitionList"
    },
    "cdk8s-plus-28.k8s.KubeCustomResourceDefinitionListProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionList"
        },
        "stability": "stable",
        "summary": "CustomResourceDefinitionList is a list of CustomResourceDefinition objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeCustomResourceDefinitionListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 12940
      },
      "name": "KubeCustomResourceDefinitionListProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionList#items"
            },
            "stability": "stable",
            "summary": "items list individual CustomResourceDefinition objects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12953
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeCustomResourceDefinitionProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionList#metadata"
            },
            "stability": "stable",
            "summary": "Standard object's metadata More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12946
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeCustomResourceDefinitionListProps"
    },
    "cdk8s-plus-28.k8s.KubeCustomResourceDefinitionProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinition"
        },
        "remarks": "Its name MUST be in the format <.spec.name>.<.spec.group>.",
        "stability": "stable",
        "summary": "CustomResourceDefinition represents a resource that should be exposed on the API server."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeCustomResourceDefinitionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 12903
      },
      "name": "KubeCustomResourceDefinitionProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinition#spec"
            },
            "stability": "stable",
            "summary": "spec describes how the user wants the resources to appear."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12916
          },
          "name": "spec",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.CustomResourceDefinitionSpec"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinition#metadata"
            },
            "stability": "stable",
            "summary": "Standard object's metadata More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12909
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeCustomResourceDefinitionProps"
    },
    "cdk8s-plus-28.k8s.KubeDaemonSet": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.apps.v1.DaemonSet"
        },
        "stability": "stable",
        "summary": "DaemonSet represents the configuration of a daemon set."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeDaemonSet",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.apps.v1.DaemonSet\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 911
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeDaemonSetProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 882
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.apps.v1.DaemonSet\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 898
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeDaemonSetProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 921
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeDaemonSet",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.apps.v1.DaemonSet\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 886
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeDaemonSet"
    },
    "cdk8s-plus-28.k8s.KubeDaemonSetList": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.apps.v1.DaemonSetList"
        },
        "stability": "stable",
        "summary": "DaemonSetList is a collection of daemon sets."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeDaemonSetList",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.apps.v1.DaemonSetList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 965
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeDaemonSetListProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 936
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.apps.v1.DaemonSetList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 952
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeDaemonSetListProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 975
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeDaemonSetList",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.apps.v1.DaemonSetList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 940
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeDaemonSetList"
    },
    "cdk8s-plus-28.k8s.KubeDaemonSetListProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.apps.v1.DaemonSetList"
        },
        "stability": "stable",
        "summary": "DaemonSetList is a collection of daemon sets."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeDaemonSetListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 8213
      },
      "name": "KubeDaemonSetListProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.DaemonSetList#items"
            },
            "stability": "stable",
            "summary": "A list of daemon sets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8226
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeDaemonSetProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.DaemonSetList#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard list metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8219
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeDaemonSetListProps"
    },
    "cdk8s-plus-28.k8s.KubeDaemonSetProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.apps.v1.DaemonSet"
        },
        "stability": "stable",
        "summary": "DaemonSet represents the configuration of a daemon set."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeDaemonSetProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 8176
      },
      "name": "KubeDaemonSetProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.DaemonSet#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8182
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.DaemonSet#spec"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
            "stability": "stable",
            "summary": "The desired behavior of this daemon set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8189
          },
          "name": "spec",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.DaemonSetSpec"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeDaemonSetProps"
    },
    "cdk8s-plus-28.k8s.KubeDeployment": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.apps.v1.Deployment"
        },
        "stability": "stable",
        "summary": "Deployment enables declarative updates for Pods and ReplicaSets."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeDeployment",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.apps.v1.Deployment\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 1019
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeDeploymentProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 990
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.apps.v1.Deployment\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1006
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeDeploymentProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1029
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeDeployment",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.apps.v1.Deployment\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 994
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeDeployment"
    },
    "cdk8s-plus-28.k8s.KubeDeploymentList": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.apps.v1.DeploymentList"
        },
        "stability": "stable",
        "summary": "DeploymentList is a list of Deployments."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeDeploymentList",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.apps.v1.DeploymentList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 1073
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeDeploymentListProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 1044
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.apps.v1.DeploymentList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1060
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeDeploymentListProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1083
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeDeploymentList",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.apps.v1.DeploymentList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1048
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeDeploymentList"
    },
    "cdk8s-plus-28.k8s.KubeDeploymentListProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.apps.v1.DeploymentList"
        },
        "stability": "stable",
        "summary": "DeploymentList is a list of Deployments."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeDeploymentListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 8287
      },
      "name": "KubeDeploymentListProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.DeploymentList#items"
            },
            "stability": "stable",
            "summary": "Items is the list of Deployments."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8300
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeDeploymentProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.DeploymentList#metadata"
            },
            "stability": "stable",
            "summary": "Standard list metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8293
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeDeploymentListProps"
    },
    "cdk8s-plus-28.k8s.KubeDeploymentProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.apps.v1.Deployment"
        },
        "stability": "stable",
        "summary": "Deployment enables declarative updates for Pods and ReplicaSets."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeDeploymentProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 8250
      },
      "name": "KubeDeploymentProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.Deployment#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8256
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.Deployment#spec"
            },
            "stability": "stable",
            "summary": "Specification of the desired behavior of the Deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8263
          },
          "name": "spec",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.DeploymentSpec"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeDeploymentProps"
    },
    "cdk8s-plus-28.k8s.KubeEndpointSlice": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.discovery.v1.EndpointSlice"
        },
        "remarks": "For a given service there may be multiple EndpointSlice objects, selected by labels, which must be joined to produce the full set of endpoints.",
        "stability": "stable",
        "summary": "EndpointSlice represents a subset of the endpoints that implement a service."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeEndpointSlice",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.discovery.v1.EndpointSlice\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 4447
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeEndpointSliceProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 4418
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.discovery.v1.EndpointSlice\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4434
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeEndpointSliceProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4457
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeEndpointSlice",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.discovery.v1.EndpointSlice\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4422
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeEndpointSlice"
    },
    "cdk8s-plus-28.k8s.KubeEndpointSliceList": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.discovery.v1.EndpointSliceList"
        },
        "stability": "stable",
        "summary": "EndpointSliceList represents a list of endpoint slices."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeEndpointSliceList",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.discovery.v1.EndpointSliceList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 4501
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeEndpointSliceListProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 4472
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.discovery.v1.EndpointSliceList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4488
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeEndpointSliceListProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4511
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeEndpointSliceList",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.discovery.v1.EndpointSliceList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4476
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeEndpointSliceList"
    },
    "cdk8s-plus-28.k8s.KubeEndpointSliceListProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.discovery.v1.EndpointSliceList"
        },
        "stability": "stable",
        "summary": "EndpointSliceList represents a list of endpoint slices."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeEndpointSliceListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 10792
      },
      "name": "KubeEndpointSliceListProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.discovery.v1.EndpointSliceList#items"
            },
            "stability": "stable",
            "summary": "items is the list of endpoint slices."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10805
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeEndpointSliceProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.discovery.v1.EndpointSliceList#metadata"
            },
            "stability": "stable",
            "summary": "Standard list metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10798
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeEndpointSliceListProps"
    },
    "cdk8s-plus-28.k8s.KubeEndpointSliceProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.discovery.v1.EndpointSlice"
        },
        "remarks": "For a given service there may be multiple EndpointSlice objects, selected by labels, which must be joined to produce the full set of endpoints.",
        "stability": "stable",
        "summary": "EndpointSlice represents a subset of the endpoints that implement a service."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeEndpointSliceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 10739
      },
      "name": "KubeEndpointSliceProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.discovery.v1.EndpointSlice#addressType"
            },
            "remarks": "All addresses in this slice must be the same type. This field is immutable after creation. The following address types are currently supported: * IPv4: Represents an IPv4 Address. * IPv6: Represents an IPv6 Address. * FQDN: Represents a Fully Qualified Domain Name.",
            "stability": "stable",
            "summary": "addressType specifies the type of address carried by this EndpointSlice."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10752
          },
          "name": "addressType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.discovery.v1.EndpointSlice#endpoints"
            },
            "remarks": "Each slice may include a maximum of 1000 endpoints.",
            "stability": "stable",
            "summary": "endpoints is a list of unique endpoints in this slice."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10759
          },
          "name": "endpoints",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.Endpoint"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.discovery.v1.EndpointSlice#metadata"
            },
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10745
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.discovery.v1.EndpointSlice#ports"
            },
            "remarks": "Each port must have a unique name. When ports is empty, it indicates that there are no defined ports. When a port is defined with a nil port value, it indicates \"all ports\". Each slice may include a maximum of 100 ports.",
            "stability": "stable",
            "summary": "ports specifies the list of network ports exposed by each endpoint in this slice."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10766
          },
          "name": "ports",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.EndpointPort"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeEndpointSliceProps"
    },
    "cdk8s-plus-28.k8s.KubeEndpoints": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.Endpoints"
        },
        "remarks": "Name: \"mysvc\",\nSubsets: [\n  {\n    Addresses: [{\"ip\": \"10.10.1.1\"}, {\"ip\": \"10.10.2.2\"}],\n    Ports: [{\"name\": \"a\", \"port\": 8675}, {\"name\": \"b\", \"port\": 309}]\n  },\n  {\n    Addresses: [{\"ip\": \"10.10.3.3\"}],\n    Ports: [{\"name\": \"a\", \"port\": 93}, {\"name\": \"b\", \"port\": 76}]\n  },\n]",
        "stability": "stable",
        "summary": "Endpoints is a collection of endpoints that implement the actual service. Example:."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeEndpoints",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.core.v1.Endpoints\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 2935
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeEndpointsProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 2906
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.core.v1.Endpoints\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2922
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeEndpointsProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2945
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeEndpoints",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.core.v1.Endpoints\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2910
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeEndpoints"
    },
    "cdk8s-plus-28.k8s.KubeEndpointsList": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.EndpointsList"
        },
        "stability": "stable",
        "summary": "EndpointsList is a list of endpoints."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeEndpointsList",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.core.v1.EndpointsList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 2989
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeEndpointsListProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 2960
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.core.v1.EndpointsList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2976
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeEndpointsListProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2999
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeEndpointsList",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.core.v1.EndpointsList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2964
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeEndpointsList"
    },
    "cdk8s-plus-28.k8s.KubeEndpointsListProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.EndpointsList"
        },
        "stability": "stable",
        "summary": "EndpointsList is a list of endpoints."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeEndpointsListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 9596
      },
      "name": "KubeEndpointsListProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EndpointsList#items"
            },
            "stability": "stable",
            "summary": "List of endpoints."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9609
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeEndpointsProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.EndpointsList#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "stability": "stable",
            "summary": "Standard list metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9602
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeEndpointsListProps"
    },
    "cdk8s-plus-28.k8s.KubeEndpointsProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.Endpoints"
        },
        "remarks": "Name: \"mysvc\",\nSubsets: [\n{\nAddresses: [{\"ip\": \"10.10.1.1\"}, {\"ip\": \"10.10.2.2\"}],\nPorts: [{\"name\": \"a\", \"port\": 8675}, {\"name\": \"b\", \"port\": 309}]\n},\n{\nAddresses: [{\"ip\": \"10.10.3.3\"}],\nPorts: [{\"name\": \"a\", \"port\": 93}, {\"name\": \"b\", \"port\": 76}]\n},\n]",
        "stability": "stable",
        "summary": "Endpoints is a collection of endpoints that implement the actual service. Example:."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeEndpointsProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 9559
      },
      "name": "KubeEndpointsProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Endpoints#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9565
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Endpoints#subsets"
            },
            "remarks": "Addresses are placed into subsets according to the IPs they share. A single address with multiple ports, some of which are ready and some of which are not (because they come from different containers) will result in the address being displayed in different subsets for the different ports. No address will appear in both Addresses and NotReadyAddresses in the same subset. Sets of addresses and ports that comprise a service.",
            "stability": "stable",
            "summary": "The set of all endpoints is the union of all subsets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9572
          },
          "name": "subsets",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.EndpointSubset"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeEndpointsProps"
    },
    "cdk8s-plus-28.k8s.KubeEvent": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.events.v1.Event"
        },
        "remarks": "It generally denotes some state change in the system. Events have a limited retention time and triggers and messages may evolve with time.  Event consumers should not rely on the timing of an event with a given Reason reflecting a consistent underlying trigger, or the continued existence of events with that Reason.  Events should be treated as informative, best-effort, supplemental data.",
        "stability": "stable",
        "summary": "Event is a report of an event somewhere in the cluster."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeEvent",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.events.v1.Event\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 3043
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeEventProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 3014
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.events.v1.Event\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3030
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeEventProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3053
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeEvent",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.events.v1.Event\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3018
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeEvent"
    },
    "cdk8s-plus-28.k8s.KubeEventList": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.events.v1.EventList"
        },
        "stability": "stable",
        "summary": "EventList is a list of Event objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeEventList",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.events.v1.EventList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 3097
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeEventListProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 3068
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.events.v1.EventList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3084
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeEventListProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3107
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeEventList",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.events.v1.EventList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3072
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeEventList"
    },
    "cdk8s-plus-28.k8s.KubeEventListProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.events.v1.EventList"
        },
        "stability": "stable",
        "summary": "EventList is a list of Event objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeEventListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 9774
      },
      "name": "KubeEventListProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.events.v1.EventList#items"
            },
            "stability": "stable",
            "summary": "items is a list of schema objects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9787
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeEventProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.events.v1.EventList#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard list metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9780
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeEventListProps"
    },
    "cdk8s-plus-28.k8s.KubeEventProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.events.v1.Event"
        },
        "remarks": "It generally denotes some state change in the system. Events have a limited retention time and triggers and messages may evolve with time.  Event consumers should not rely on the timing of an event with a given Reason reflecting a consistent underlying trigger, or the continued existence of events with that Reason.  Events should be treated as informative, best-effort, supplemental data.",
        "stability": "stable",
        "summary": "Event is a report of an event somewhere in the cluster."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeEventProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 9633
      },
      "name": "KubeEventProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.events.v1.Event#eventTime"
            },
            "remarks": "It is required.",
            "stability": "stable",
            "summary": "eventTime is the time when this Event was first observed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9681
          },
          "name": "eventTime",
          "type": {
            "primitive": "date"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.events.v1.Event#action"
            },
            "remarks": "It is machine-readable. This field cannot be empty for new Events and it can have at most 128 characters.",
            "stability": "stable",
            "summary": "action is what action was taken/failed regarding to the regarding object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9646
          },
          "name": "action",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.events.v1.Event#deprecatedCount"
            },
            "stability": "stable",
            "summary": "deprecatedCount is the deprecated field assuring backward compatibility with core.v1 Event type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9653
          },
          "name": "deprecatedCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.events.v1.Event#deprecatedFirstTimestamp"
            },
            "stability": "stable",
            "summary": "deprecatedFirstTimestamp is the deprecated field assuring backward compatibility with core.v1 Event type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9660
          },
          "name": "deprecatedFirstTimestamp",
          "optional": true,
          "type": {
            "primitive": "date"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.events.v1.Event#deprecatedLastTimestamp"
            },
            "stability": "stable",
            "summary": "deprecatedLastTimestamp is the deprecated field assuring backward compatibility with core.v1 Event type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9667
          },
          "name": "deprecatedLastTimestamp",
          "optional": true,
          "type": {
            "primitive": "date"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.events.v1.Event#deprecatedSource"
            },
            "stability": "stable",
            "summary": "deprecatedSource is the deprecated field assuring backward compatibility with core.v1 Event type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9674
          },
          "name": "deprecatedSource",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.EventSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.events.v1.Event#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9639
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.events.v1.Event#note"
            },
            "remarks": "Maximal length of the note is 1kB, but libraries should be prepared to handle values up to 64kB.",
            "stability": "stable",
            "summary": "note is a human-readable description of the status of this operation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9688
          },
          "name": "note",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.events.v1.Event#reason"
            },
            "remarks": "It is human-readable. This field cannot be empty for new Events and it can have at most 128 characters.",
            "stability": "stable",
            "summary": "reason is why the action was taken."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9695
          },
          "name": "reason",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.events.v1.Event#regarding"
            },
            "remarks": "In most cases it's an Object reporting controller implements, e.g. ReplicaSetController implements ReplicaSets and this event is emitted because it acts on some changes in a ReplicaSet object.",
            "stability": "stable",
            "summary": "regarding contains the object this Event is about."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9702
          },
          "name": "regarding",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectReference"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.events.v1.Event#related"
            },
            "remarks": "E.g. when regarding object triggers a creation or deletion of related object.",
            "stability": "stable",
            "summary": "related is the optional secondary object for more complex actions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9709
          },
          "name": "related",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectReference"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.events.v1.Event#reportingController"
            },
            "stability": "stable",
            "summary": "reportingController is the name of the controller that emitted this Event, e.g. `kubernetes.io/kubelet`. This field cannot be empty for new Events."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9716
          },
          "name": "reportingController",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.events.v1.Event#reportingInstance"
            },
            "stability": "stable",
            "summary": "reportingInstance is the ID of the controller instance, e.g. `kubelet-xyzf`. This field cannot be empty for new Events and it can have at most 128 characters."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9723
          },
          "name": "reportingInstance",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.events.v1.Event#series"
            },
            "stability": "stable",
            "summary": "series is data about the Event series this event represents or nil if it's a singleton Event."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9730
          },
          "name": "series",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.EventSeries"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.events.v1.Event#type"
            },
            "remarks": "It is machine-readable. This field cannot be empty for new Events.",
            "stability": "stable",
            "summary": "type is the type of this event (Normal, Warning), new types could be added in the future."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9737
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeEventProps"
    },
    "cdk8s-plus-28.k8s.KubeEviction": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.policy.v1.Eviction"
        },
        "remarks": "This is a subresource of Pod.  A request to cause such an eviction is created by POSTing to .../pods/<pod name>/evictions.",
        "stability": "stable",
        "summary": "Eviction evicts a pod from its node subject to certain policies and safety constraints."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeEviction",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.policy.v1.Eviction\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 5635
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeEvictionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 5606
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.policy.v1.Eviction\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5622
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeEvictionProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5645
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeEviction",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.policy.v1.Eviction\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5610
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeEviction"
    },
    "cdk8s-plus-28.k8s.KubeEvictionProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.policy.v1.Eviction"
        },
        "remarks": "This is a subresource of Pod.  A request to cause such an eviction is created by POSTing to .../pods/<pod name>/evictions.",
        "stability": "stable",
        "summary": "Eviction evicts a pod from its node subject to certain policies and safety constraints."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeEvictionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 11586
      },
      "name": "KubeEvictionProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.policy.v1.Eviction#deleteOptions"
            },
            "stability": "stable",
            "summary": "DeleteOptions may be provided."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11599
          },
          "name": "deleteOptions",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.DeleteOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.policy.v1.Eviction#metadata"
            },
            "stability": "stable",
            "summary": "ObjectMeta describes the pod that is being evicted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11592
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeEvictionProps"
    },
    "cdk8s-plus-28.k8s.KubeFlowSchemaListV1Beta2": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.flowcontrol.v1beta2.FlowSchemaList"
        },
        "stability": "stable",
        "summary": "FlowSchemaList is a list of FlowSchema objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeFlowSchemaListV1Beta2",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.flowcontrol.v1beta2.FlowSchemaList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 4609
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeFlowSchemaListV1Beta2Props"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 4580
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.flowcontrol.v1beta2.FlowSchemaList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4596
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeFlowSchemaListV1Beta2Props"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4619
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeFlowSchemaListV1Beta2",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.flowcontrol.v1beta2.FlowSchemaList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4584
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeFlowSchemaListV1Beta2"
    },
    "cdk8s-plus-28.k8s.KubeFlowSchemaListV1Beta2Props": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.flowcontrol.v1beta2.FlowSchemaList"
        },
        "stability": "stable",
        "summary": "FlowSchemaList is a list of FlowSchema objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeFlowSchemaListV1Beta2Props",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 10866
      },
      "name": "KubeFlowSchemaListV1Beta2Props",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta2.FlowSchemaList#items"
            },
            "stability": "stable",
            "summary": "`items` is a list of FlowSchemas."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10879
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeFlowSchemaV1Beta2Props"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta2.FlowSchemaList#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "`metadata` is the standard list metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10872
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeFlowSchemaListV1Beta2Props"
    },
    "cdk8s-plus-28.k8s.KubeFlowSchemaListV1Beta3": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.flowcontrol.v1beta3.FlowSchemaList"
        },
        "stability": "stable",
        "summary": "FlowSchemaList is a list of FlowSchema objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeFlowSchemaListV1Beta3",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.flowcontrol.v1beta3.FlowSchemaList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 4825
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeFlowSchemaListV1Beta3Props"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 4796
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.flowcontrol.v1beta3.FlowSchemaList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4812
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeFlowSchemaListV1Beta3Props"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4835
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeFlowSchemaListV1Beta3",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.flowcontrol.v1beta3.FlowSchemaList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4800
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeFlowSchemaListV1Beta3"
    },
    "cdk8s-plus-28.k8s.KubeFlowSchemaListV1Beta3Props": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.flowcontrol.v1beta3.FlowSchemaList"
        },
        "stability": "stable",
        "summary": "FlowSchemaList is a list of FlowSchema objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeFlowSchemaListV1Beta3Props",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 11014
      },
      "name": "KubeFlowSchemaListV1Beta3Props",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta3.FlowSchemaList#items"
            },
            "stability": "stable",
            "summary": "`items` is a list of FlowSchemas."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11027
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeFlowSchemaV1Beta3Props"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta3.FlowSchemaList#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "`metadata` is the standard list metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11020
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeFlowSchemaListV1Beta3Props"
    },
    "cdk8s-plus-28.k8s.KubeFlowSchemaV1Beta2": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.flowcontrol.v1beta2.FlowSchema"
        },
        "remarks": "Note that a flow is made up of a set of inbound API requests with similar attributes and is identified by a pair of strings: the name of the FlowSchema and a \"flow distinguisher\".",
        "stability": "stable",
        "summary": "FlowSchema defines the schema of a group of flows."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeFlowSchemaV1Beta2",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.flowcontrol.v1beta2.FlowSchema\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 4555
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeFlowSchemaV1Beta2Props"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 4526
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.flowcontrol.v1beta2.FlowSchema\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4542
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeFlowSchemaV1Beta2Props"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4565
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeFlowSchemaV1Beta2",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.flowcontrol.v1beta2.FlowSchema\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4530
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeFlowSchemaV1Beta2"
    },
    "cdk8s-plus-28.k8s.KubeFlowSchemaV1Beta2Props": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.flowcontrol.v1beta2.FlowSchema"
        },
        "remarks": "Note that a flow is made up of a set of inbound API requests with similar attributes and is identified by a pair of strings: the name of the FlowSchema and a \"flow distinguisher\".",
        "stability": "stable",
        "summary": "FlowSchema defines the schema of a group of flows."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeFlowSchemaV1Beta2Props",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 10829
      },
      "name": "KubeFlowSchemaV1Beta2Props",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta2.FlowSchema#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "`metadata` is the standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10835
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta2.FlowSchema#spec"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
            "stability": "stable",
            "summary": "`spec` is the specification of the desired behavior of a FlowSchema."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10842
          },
          "name": "spec",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.FlowSchemaSpecV1Beta2"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeFlowSchemaV1Beta2Props"
    },
    "cdk8s-plus-28.k8s.KubeFlowSchemaV1Beta3": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.flowcontrol.v1beta3.FlowSchema"
        },
        "remarks": "Note that a flow is made up of a set of inbound API requests with similar attributes and is identified by a pair of strings: the name of the FlowSchema and a \"flow distinguisher\".",
        "stability": "stable",
        "summary": "FlowSchema defines the schema of a group of flows."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeFlowSchemaV1Beta3",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.flowcontrol.v1beta3.FlowSchema\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 4771
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeFlowSchemaV1Beta3Props"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 4742
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.flowcontrol.v1beta3.FlowSchema\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4758
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeFlowSchemaV1Beta3Props"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4781
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeFlowSchemaV1Beta3",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.flowcontrol.v1beta3.FlowSchema\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4746
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeFlowSchemaV1Beta3"
    },
    "cdk8s-plus-28.k8s.KubeFlowSchemaV1Beta3Props": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.flowcontrol.v1beta3.FlowSchema"
        },
        "remarks": "Note that a flow is made up of a set of inbound API requests with similar attributes and is identified by a pair of strings: the name of the FlowSchema and a \"flow distinguisher\".",
        "stability": "stable",
        "summary": "FlowSchema defines the schema of a group of flows."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeFlowSchemaV1Beta3Props",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 10977
      },
      "name": "KubeFlowSchemaV1Beta3Props",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta3.FlowSchema#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "`metadata` is the standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10983
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta3.FlowSchema#spec"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
            "stability": "stable",
            "summary": "`spec` is the specification of the desired behavior of a FlowSchema."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10990
          },
          "name": "spec",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.FlowSchemaSpecV1Beta3"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeFlowSchemaV1Beta3Props"
    },
    "cdk8s-plus-28.k8s.KubeHorizontalPodAutoscaler": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.autoscaling.v1.HorizontalPodAutoscaler"
        },
        "stability": "stable",
        "summary": "configuration of a horizontal pod autoscaler."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeHorizontalPodAutoscaler",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.autoscaling.v1.HorizontalPodAutoscaler\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 1833
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeHorizontalPodAutoscalerProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 1804
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.autoscaling.v1.HorizontalPodAutoscaler\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1820
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeHorizontalPodAutoscalerProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1843
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeHorizontalPodAutoscaler",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.autoscaling.v1.HorizontalPodAutoscaler\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1808
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeHorizontalPodAutoscaler"
    },
    "cdk8s-plus-28.k8s.KubeHorizontalPodAutoscalerList": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerList"
        },
        "stability": "stable",
        "summary": "list of horizontal pod autoscaler objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeHorizontalPodAutoscalerList",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 1887
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeHorizontalPodAutoscalerListProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 1858
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1874
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeHorizontalPodAutoscalerListProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1897
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeHorizontalPodAutoscalerList",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1862
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeHorizontalPodAutoscalerList"
    },
    "cdk8s-plus-28.k8s.KubeHorizontalPodAutoscalerListProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerList"
        },
        "stability": "stable",
        "summary": "list of horizontal pod autoscaler objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeHorizontalPodAutoscalerListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 8822
      },
      "name": "KubeHorizontalPodAutoscalerListProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerList#items"
            },
            "stability": "stable",
            "summary": "items is the list of horizontal pod autoscaler objects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8835
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeHorizontalPodAutoscalerProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerList#metadata"
            },
            "stability": "stable",
            "summary": "Standard list metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8828
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeHorizontalPodAutoscalerListProps"
    },
    "cdk8s-plus-28.k8s.KubeHorizontalPodAutoscalerListV2": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerList"
        },
        "stability": "stable",
        "summary": "HorizontalPodAutoscalerList is a list of horizontal pod autoscaler objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeHorizontalPodAutoscalerListV2",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 2049
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeHorizontalPodAutoscalerListV2Props"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 2020
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2036
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeHorizontalPodAutoscalerListV2Props"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2059
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeHorizontalPodAutoscalerListV2",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2024
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeHorizontalPodAutoscalerListV2"
    },
    "cdk8s-plus-28.k8s.KubeHorizontalPodAutoscalerListV2Props": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerList"
        },
        "stability": "stable",
        "summary": "HorizontalPodAutoscalerList is a list of horizontal pod autoscaler objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeHorizontalPodAutoscalerListV2Props",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 8933
      },
      "name": "KubeHorizontalPodAutoscalerListV2Props",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerList#items"
            },
            "stability": "stable",
            "summary": "items is the list of horizontal pod autoscaler objects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8946
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeHorizontalPodAutoscalerV2Props"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerList#metadata"
            },
            "stability": "stable",
            "summary": "metadata is the standard list metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8939
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeHorizontalPodAutoscalerListV2Props"
    },
    "cdk8s-plus-28.k8s.KubeHorizontalPodAutoscalerProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.autoscaling.v1.HorizontalPodAutoscaler"
        },
        "stability": "stable",
        "summary": "configuration of a horizontal pod autoscaler."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeHorizontalPodAutoscalerProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 8785
      },
      "name": "KubeHorizontalPodAutoscalerProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v1.HorizontalPodAutoscaler#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard object metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8791
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v1.HorizontalPodAutoscaler#spec"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status.",
            "stability": "stable",
            "summary": "spec defines the behaviour of autoscaler."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8798
          },
          "name": "spec",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.HorizontalPodAutoscalerSpec"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeHorizontalPodAutoscalerProps"
    },
    "cdk8s-plus-28.k8s.KubeHorizontalPodAutoscalerV2": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.autoscaling.v2.HorizontalPodAutoscaler"
        },
        "stability": "stable",
        "summary": "HorizontalPodAutoscaler is the configuration for a horizontal pod autoscaler, which automatically manages the replica count of any resource implementing the scale subresource based on the metrics specified."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeHorizontalPodAutoscalerV2",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.autoscaling.v2.HorizontalPodAutoscaler\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 1995
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeHorizontalPodAutoscalerV2Props"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 1966
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.autoscaling.v2.HorizontalPodAutoscaler\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1982
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeHorizontalPodAutoscalerV2Props"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2005
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeHorizontalPodAutoscalerV2",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.autoscaling.v2.HorizontalPodAutoscaler\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1970
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeHorizontalPodAutoscalerV2"
    },
    "cdk8s-plus-28.k8s.KubeHorizontalPodAutoscalerV2Props": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.autoscaling.v2.HorizontalPodAutoscaler"
        },
        "stability": "stable",
        "summary": "HorizontalPodAutoscaler is the configuration for a horizontal pod autoscaler, which automatically manages the replica count of any resource implementing the scale subresource based on the metrics specified."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeHorizontalPodAutoscalerV2Props",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 8896
      },
      "name": "KubeHorizontalPodAutoscalerV2Props",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v2.HorizontalPodAutoscaler#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "metadata is the standard object metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8902
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v2.HorizontalPodAutoscaler#spec"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status.",
            "stability": "stable",
            "summary": "spec is the specification for the behaviour of the autoscaler."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8909
          },
          "name": "spec",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.HorizontalPodAutoscalerSpecV2"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeHorizontalPodAutoscalerV2Props"
    },
    "cdk8s-plus-28.k8s.KubeIngress": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.networking.v1.Ingress"
        },
        "remarks": "An Ingress can be configured to give services externally-reachable urls, load balance traffic, terminate SSL, offer name based virtual hosting etc.",
        "stability": "stable",
        "summary": "Ingress is a collection of rules that allow inbound connections to reach the endpoints defined by a backend."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeIngress",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.networking.v1.Ingress\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 4987
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeIngressProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 4958
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.networking.v1.Ingress\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4974
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeIngressProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4997
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeIngress",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.networking.v1.Ingress\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4962
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeIngress"
    },
    "cdk8s-plus-28.k8s.KubeIngressClass": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.networking.v1.IngressClass"
        },
        "remarks": "The `ingressclass.kubernetes.io/is-default-class` annotation can be used to indicate that an IngressClass should be considered default. When a single IngressClass resource has this annotation set to true, new Ingress resources without a class specified will be assigned this default class.",
        "stability": "stable",
        "summary": "IngressClass represents the class of the Ingress, referenced by the Ingress Spec."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeIngressClass",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.networking.v1.IngressClass\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 5041
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeIngressClassProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 5012
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.networking.v1.IngressClass\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5028
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeIngressClassProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5051
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeIngressClass",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.networking.v1.IngressClass\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5016
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeIngressClass"
    },
    "cdk8s-plus-28.k8s.KubeIngressClassList": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.networking.v1.IngressClassList"
        },
        "stability": "stable",
        "summary": "IngressClassList is a collection of IngressClasses."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeIngressClassList",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.networking.v1.IngressClassList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 5095
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeIngressClassListProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 5066
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.networking.v1.IngressClassList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5082
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeIngressClassListProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5105
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeIngressClassList",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.networking.v1.IngressClassList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5070
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeIngressClassList"
    },
    "cdk8s-plus-28.k8s.KubeIngressClassListProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.networking.v1.IngressClassList"
        },
        "stability": "stable",
        "summary": "IngressClassList is a collection of IngressClasses."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeIngressClassListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 11199
      },
      "name": "KubeIngressClassListProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.IngressClassList#items"
            },
            "stability": "stable",
            "summary": "items is the list of IngressClasses."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11212
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeIngressClassProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.IngressClassList#metadata"
            },
            "stability": "stable",
            "summary": "Standard list metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11205
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeIngressClassListProps"
    },
    "cdk8s-plus-28.k8s.KubeIngressClassProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.networking.v1.IngressClass"
        },
        "remarks": "The `ingressclass.kubernetes.io/is-default-class` annotation can be used to indicate that an IngressClass should be considered default. When a single IngressClass resource has this annotation set to true, new Ingress resources without a class specified will be assigned this default class.",
        "stability": "stable",
        "summary": "IngressClass represents the class of the Ingress, referenced by the Ingress Spec."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeIngressClassProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 11162
      },
      "name": "KubeIngressClassProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.IngressClass#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11168
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.IngressClass#spec"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
            "stability": "stable",
            "summary": "spec is the desired state of the IngressClass."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11175
          },
          "name": "spec",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.IngressClassSpec"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeIngressClassProps"
    },
    "cdk8s-plus-28.k8s.KubeIngressList": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.networking.v1.IngressList"
        },
        "stability": "stable",
        "summary": "IngressList is a collection of Ingress."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeIngressList",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.networking.v1.IngressList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 5149
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeIngressListProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 5120
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.networking.v1.IngressList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5136
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeIngressListProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5159
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeIngressList",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.networking.v1.IngressList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5124
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeIngressList"
    },
    "cdk8s-plus-28.k8s.KubeIngressListProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.networking.v1.IngressList"
        },
        "stability": "stable",
        "summary": "IngressList is a collection of Ingress."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeIngressListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 11236
      },
      "name": "KubeIngressListProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.IngressList#items"
            },
            "stability": "stable",
            "summary": "items is the list of Ingress."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11249
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeIngressProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.IngressList#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11242
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeIngressListProps"
    },
    "cdk8s-plus-28.k8s.KubeIngressProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.networking.v1.Ingress"
        },
        "remarks": "An Ingress can be configured to give services externally-reachable urls, load balance traffic, terminate SSL, offer name based virtual hosting etc.",
        "stability": "stable",
        "summary": "Ingress is a collection of rules that allow inbound connections to reach the endpoints defined by a backend."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeIngressProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 11125
      },
      "name": "KubeIngressProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.Ingress#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11131
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.Ingress#spec"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
            "stability": "stable",
            "summary": "spec is the desired state of the Ingress."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11138
          },
          "name": "spec",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.IngressSpec"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeIngressProps"
    },
    "cdk8s-plus-28.k8s.KubeIpAddressListV1Alpha1": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.networking.v1alpha1.IPAddressList"
        },
        "stability": "stable",
        "summary": "IPAddressList contains a list of IPAddress."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeIpAddressListV1Alpha1",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.networking.v1alpha1.IPAddressList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 5473
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeIpAddressListV1Alpha1Props"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 5444
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.networking.v1alpha1.IPAddressList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5460
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeIpAddressListV1Alpha1Props"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5483
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeIpAddressListV1Alpha1",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.networking.v1alpha1.IPAddressList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5448
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeIpAddressListV1Alpha1"
    },
    "cdk8s-plus-28.k8s.KubeIpAddressListV1Alpha1Props": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.networking.v1alpha1.IPAddressList"
        },
        "stability": "stable",
        "summary": "IPAddressList contains a list of IPAddress."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeIpAddressListV1Alpha1Props",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 11458
      },
      "name": "KubeIpAddressListV1Alpha1Props",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1alpha1.IPAddressList#items"
            },
            "stability": "stable",
            "summary": "items is the list of IPAddresses."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11471
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeIpAddressV1Alpha1Props"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1alpha1.IPAddressList#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11464
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeIpAddressListV1Alpha1Props"
    },
    "cdk8s-plus-28.k8s.KubeIpAddressV1Alpha1": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.networking.v1alpha1.IPAddress"
        },
        "remarks": "The object is designed to be used by APIs that operate on IP addresses. The object is used by the Service core API for allocation of IP addresses. An IP address can be represented in different formats, to guarantee the uniqueness of the IP, the name of the object is the IP address in canonical format, four decimal digits separated by dots suppressing leading zeros for IPv4 and the representation defined by RFC 5952 for IPv6. Valid: 192.168.1.5 or 2001:db8::1 or 2001:db8:aaaa:bbbb:cccc:dddd:eeee:1 Invalid: 10.01.2.3 or 2001:db8:0:0:0::1",
        "stability": "stable",
        "summary": "IPAddress represents a single IP of a single IP Family."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeIpAddressV1Alpha1",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.networking.v1alpha1.IPAddress\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 5419
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeIpAddressV1Alpha1Props"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 5390
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.networking.v1alpha1.IPAddress\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5406
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeIpAddressV1Alpha1Props"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5429
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeIpAddressV1Alpha1",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.networking.v1alpha1.IPAddress\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5394
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeIpAddressV1Alpha1"
    },
    "cdk8s-plus-28.k8s.KubeIpAddressV1Alpha1Props": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.networking.v1alpha1.IPAddress"
        },
        "remarks": "The object is designed to be used by APIs that operate on IP addresses. The object is used by the Service core API for allocation of IP addresses. An IP address can be represented in different formats, to guarantee the uniqueness of the IP, the name of the object is the IP address in canonical format, four decimal digits separated by dots suppressing leading zeros for IPv4 and the representation defined by RFC 5952 for IPv6. Valid: 192.168.1.5 or 2001:db8::1 or 2001:db8:aaaa:bbbb:cccc:dddd:eeee:1 Invalid: 10.01.2.3 or 2001:db8:0:0:0::1",
        "stability": "stable",
        "summary": "IPAddress represents a single IP of a single IP Family."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeIpAddressV1Alpha1Props",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 11421
      },
      "name": "KubeIpAddressV1Alpha1Props",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1alpha1.IPAddress#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11427
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1alpha1.IPAddress#spec"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
            "stability": "stable",
            "summary": "spec is the desired state of the IPAddress."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11434
          },
          "name": "spec",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.IpAddressSpecV1Alpha1"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeIpAddressV1Alpha1Props"
    },
    "cdk8s-plus-28.k8s.KubeJob": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.batch.v1.Job"
        },
        "stability": "stable",
        "summary": "Job represents the configuration of a single job."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeJob",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.batch.v1.Job\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 2211
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeJobProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 2182
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.batch.v1.Job\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2198
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeJobProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2221
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeJob",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.batch.v1.Job\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2186
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeJob"
    },
    "cdk8s-plus-28.k8s.KubeJobList": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.batch.v1.JobList"
        },
        "stability": "stable",
        "summary": "JobList is a collection of jobs."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeJobList",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.batch.v1.JobList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 2265
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeJobListProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 2236
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.batch.v1.JobList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2252
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeJobListProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2275
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeJobList",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.batch.v1.JobList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2240
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeJobList"
    },
    "cdk8s-plus-28.k8s.KubeJobListProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.batch.v1.JobList"
        },
        "stability": "stable",
        "summary": "JobList is a collection of jobs."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeJobListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 9081
      },
      "name": "KubeJobListProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.batch.v1.JobList#items"
            },
            "stability": "stable",
            "summary": "items is the list of Jobs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9094
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeJobProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.batch.v1.JobList#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard list metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9087
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeJobListProps"
    },
    "cdk8s-plus-28.k8s.KubeJobProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.batch.v1.Job"
        },
        "stability": "stable",
        "summary": "Job represents the configuration of a single job."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeJobProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 9044
      },
      "name": "KubeJobProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.batch.v1.Job#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9050
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.batch.v1.Job#spec"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
            "stability": "stable",
            "summary": "Specification of the desired behavior of a job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9057
          },
          "name": "spec",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.JobSpec"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeJobProps"
    },
    "cdk8s-plus-28.k8s.KubeLease": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.coordination.v1.Lease"
        },
        "stability": "stable",
        "summary": "Lease defines a lease concept."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeLease",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.coordination.v1.Lease\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 2545
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeLeaseProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 2516
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.coordination.v1.Lease\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2532
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeLeaseProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2555
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeLease",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.coordination.v1.Lease\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2520
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeLease"
    },
    "cdk8s-plus-28.k8s.KubeLeaseList": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.coordination.v1.LeaseList"
        },
        "stability": "stable",
        "summary": "LeaseList is a list of Lease objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeLeaseList",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.coordination.v1.LeaseList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 2599
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeLeaseListProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 2570
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.coordination.v1.LeaseList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2586
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeLeaseListProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2609
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeLeaseList",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.coordination.v1.LeaseList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 2574
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeLeaseList"
    },
    "cdk8s-plus-28.k8s.KubeLeaseListProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.coordination.v1.LeaseList"
        },
        "stability": "stable",
        "summary": "LeaseList is a list of Lease objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeLeaseListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 9309
      },
      "name": "KubeLeaseListProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.coordination.v1.LeaseList#items"
            },
            "stability": "stable",
            "summary": "items is a list of schema objects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9322
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeLeaseProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.coordination.v1.LeaseList#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard list metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9315
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeLeaseListProps"
    },
    "cdk8s-plus-28.k8s.KubeLeaseProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.coordination.v1.Lease"
        },
        "stability": "stable",
        "summary": "Lease defines a lease concept."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeLeaseProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 9272
      },
      "name": "KubeLeaseProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.coordination.v1.Lease#metadata"
            },
            "stability": "stable",
            "summary": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9278
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.coordination.v1.Lease#spec"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
            "stability": "stable",
            "summary": "spec contains the specification of the Lease."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9285
          },
          "name": "spec",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.LeaseSpec"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeLeaseProps"
    },
    "cdk8s-plus-28.k8s.KubeLimitRange": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.LimitRange"
        },
        "stability": "stable",
        "summary": "LimitRange sets resource usage limits for each kind of resource in a Namespace."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeLimitRange",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.core.v1.LimitRange\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 3151
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeLimitRangeProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 3122
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.core.v1.LimitRange\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3138
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeLimitRangeProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3161
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeLimitRange",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.core.v1.LimitRange\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3126
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeLimitRange"
    },
    "cdk8s-plus-28.k8s.KubeLimitRangeList": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.LimitRangeList"
        },
        "stability": "stable",
        "summary": "LimitRangeList is a list of LimitRange items."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeLimitRangeList",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.core.v1.LimitRangeList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 3205
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeLimitRangeListProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 3176
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.core.v1.LimitRangeList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3192
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeLimitRangeListProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3215
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeLimitRangeList",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.core.v1.LimitRangeList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3180
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeLimitRangeList"
    },
    "cdk8s-plus-28.k8s.KubeLimitRangeListProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.LimitRangeList"
        },
        "stability": "stable",
        "summary": "LimitRangeList is a list of LimitRange items."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeLimitRangeListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 9848
      },
      "name": "KubeLimitRangeListProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.LimitRangeList#items"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
            "stability": "stable",
            "summary": "Items is a list of LimitRange objects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9861
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeLimitRangeProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.LimitRangeList#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "stability": "stable",
            "summary": "Standard list metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9854
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeLimitRangeListProps"
    },
    "cdk8s-plus-28.k8s.KubeLimitRangeProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.LimitRange"
        },
        "stability": "stable",
        "summary": "LimitRange sets resource usage limits for each kind of resource in a Namespace."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeLimitRangeProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 9811
      },
      "name": "KubeLimitRangeProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.LimitRange#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9817
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.LimitRange#spec"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
            "stability": "stable",
            "summary": "Spec defines the limits enforced."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9824
          },
          "name": "spec",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.LimitRangeSpec"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeLimitRangeProps"
    },
    "cdk8s-plus-28.k8s.KubeLocalSubjectAccessReview": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.authorization.v1.LocalSubjectAccessReview"
        },
        "remarks": "Having a namespace scoped resource makes it much easier to grant namespace scoped policy that includes permissions checking.",
        "stability": "stable",
        "summary": "LocalSubjectAccessReview checks whether or not a user or group can perform an action in a given namespace."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeLocalSubjectAccessReview",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.authorization.v1.LocalSubjectAccessReview\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 1617
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeLocalSubjectAccessReviewProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 1588
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.authorization.v1.LocalSubjectAccessReview\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1604
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeLocalSubjectAccessReviewProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1627
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeLocalSubjectAccessReview",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.authorization.v1.LocalSubjectAccessReview\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1592
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeLocalSubjectAccessReview"
    },
    "cdk8s-plus-28.k8s.KubeLocalSubjectAccessReviewProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.authorization.v1.LocalSubjectAccessReview"
        },
        "remarks": "Having a namespace scoped resource makes it much easier to grant namespace scoped policy that includes permissions checking.",
        "stability": "stable",
        "summary": "LocalSubjectAccessReview checks whether or not a user or group can perform an action in a given namespace."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeLocalSubjectAccessReviewProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 8637
      },
      "name": "KubeLocalSubjectAccessReviewProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.authorization.v1.LocalSubjectAccessReview#spec"
            },
            "remarks": "spec.namespace must be equal to the namespace you made the request against.  If empty, it is defaulted.",
            "stability": "stable",
            "summary": "Spec holds information about the request being evaluated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8650
          },
          "name": "spec",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.SubjectAccessReviewSpec"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.authorization.v1.LocalSubjectAccessReview#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard list metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8643
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeLocalSubjectAccessReviewProps"
    },
    "cdk8s-plus-28.k8s.KubeMutatingWebhookConfiguration": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1.MutatingWebhookConfiguration"
        },
        "stability": "stable",
        "summary": "MutatingWebhookConfiguration describes the configuration of and admission webhook that accept or reject and may change the object."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeMutatingWebhookConfiguration",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.admissionregistration.v1.MutatingWebhookConfiguration\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 39
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeMutatingWebhookConfigurationProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 10
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.admissionregistration.v1.MutatingWebhookConfiguration\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeMutatingWebhookConfigurationProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 49
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeMutatingWebhookConfiguration",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.admissionregistration.v1.MutatingWebhookConfiguration\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeMutatingWebhookConfiguration"
    },
    "cdk8s-plus-28.k8s.KubeMutatingWebhookConfigurationList": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1.MutatingWebhookConfigurationList"
        },
        "stability": "stable",
        "summary": "MutatingWebhookConfigurationList is a list of MutatingWebhookConfiguration."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeMutatingWebhookConfigurationList",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.admissionregistration.v1.MutatingWebhookConfigurationList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 93
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeMutatingWebhookConfigurationListProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 64
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.admissionregistration.v1.MutatingWebhookConfigurationList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 80
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeMutatingWebhookConfigurationListProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 103
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeMutatingWebhookConfigurationList",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.admissionregistration.v1.MutatingWebhookConfigurationList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 68
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeMutatingWebhookConfigurationList"
    },
    "cdk8s-plus-28.k8s.KubeMutatingWebhookConfigurationListProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1.MutatingWebhookConfigurationList"
        },
        "stability": "stable",
        "summary": "MutatingWebhookConfigurationList is a list of MutatingWebhookConfiguration."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeMutatingWebhookConfigurationListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 7605
      },
      "name": "KubeMutatingWebhookConfigurationListProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1.MutatingWebhookConfigurationList#items"
            },
            "stability": "stable",
            "summary": "List of MutatingWebhookConfiguration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7618
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeMutatingWebhookConfigurationProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1.MutatingWebhookConfigurationList#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "stability": "stable",
            "summary": "Standard list metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7611
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeMutatingWebhookConfigurationListProps"
    },
    "cdk8s-plus-28.k8s.KubeMutatingWebhookConfigurationProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1.MutatingWebhookConfiguration"
        },
        "stability": "stable",
        "summary": "MutatingWebhookConfiguration describes the configuration of and admission webhook that accept or reject and may change the object."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeMutatingWebhookConfigurationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 7568
      },
      "name": "KubeMutatingWebhookConfigurationProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1.MutatingWebhookConfiguration#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata.",
            "stability": "stable",
            "summary": "Standard object metadata;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7574
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1.MutatingWebhookConfiguration#webhooks"
            },
            "stability": "stable",
            "summary": "Webhooks is a list of webhooks and the affected resources and operations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7581
          },
          "name": "webhooks",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.MutatingWebhook"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeMutatingWebhookConfigurationProps"
    },
    "cdk8s-plus-28.k8s.KubeNamespace": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.Namespace"
        },
        "remarks": "Use of multiple namespaces is optional.",
        "stability": "stable",
        "summary": "Namespace provides a scope for Names."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeNamespace",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.core.v1.Namespace\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 3259
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeNamespaceProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 3230
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.core.v1.Namespace\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3246
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeNamespaceProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3269
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeNamespace",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.core.v1.Namespace\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3234
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeNamespace"
    },
    "cdk8s-plus-28.k8s.KubeNamespaceList": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.NamespaceList"
        },
        "stability": "stable",
        "summary": "NamespaceList is a list of Namespaces."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeNamespaceList",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.core.v1.NamespaceList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 3313
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeNamespaceListProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 3284
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.core.v1.NamespaceList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3300
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeNamespaceListProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3323
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeNamespaceList",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.core.v1.NamespaceList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3288
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeNamespaceList"
    },
    "cdk8s-plus-28.k8s.KubeNamespaceListProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.NamespaceList"
        },
        "stability": "stable",
        "summary": "NamespaceList is a list of Namespaces."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeNamespaceListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 9922
      },
      "name": "KubeNamespaceListProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.NamespaceList#items"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
            "stability": "stable",
            "summary": "Items is the list of Namespace objects in the list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9935
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeNamespaceProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.NamespaceList#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "stability": "stable",
            "summary": "Standard list metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9928
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeNamespaceListProps"
    },
    "cdk8s-plus-28.k8s.KubeNamespaceProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.Namespace"
        },
        "remarks": "Use of multiple namespaces is optional.",
        "stability": "stable",
        "summary": "Namespace provides a scope for Names."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeNamespaceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 9885
      },
      "name": "KubeNamespaceProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Namespace#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9891
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Namespace#spec"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
            "stability": "stable",
            "summary": "Spec defines the behavior of the Namespace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9898
          },
          "name": "spec",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.NamespaceSpec"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeNamespaceProps"
    },
    "cdk8s-plus-28.k8s.KubeNetworkPolicy": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.networking.v1.NetworkPolicy"
        },
        "stability": "stable",
        "summary": "NetworkPolicy describes what network traffic is allowed for a set of Pods."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeNetworkPolicy",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.networking.v1.NetworkPolicy\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 5203
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeNetworkPolicyProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 5174
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.networking.v1.NetworkPolicy\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5190
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeNetworkPolicyProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5213
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeNetworkPolicy",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.networking.v1.NetworkPolicy\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5178
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeNetworkPolicy"
    },
    "cdk8s-plus-28.k8s.KubeNetworkPolicyList": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.networking.v1.NetworkPolicyList"
        },
        "stability": "stable",
        "summary": "NetworkPolicyList is a list of NetworkPolicy objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeNetworkPolicyList",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.networking.v1.NetworkPolicyList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 5257
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeNetworkPolicyListProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 5228
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.networking.v1.NetworkPolicyList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5244
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeNetworkPolicyListProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5267
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeNetworkPolicyList",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.networking.v1.NetworkPolicyList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5232
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeNetworkPolicyList"
    },
    "cdk8s-plus-28.k8s.KubeNetworkPolicyListProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.networking.v1.NetworkPolicyList"
        },
        "stability": "stable",
        "summary": "NetworkPolicyList is a list of NetworkPolicy objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeNetworkPolicyListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 11310
      },
      "name": "KubeNetworkPolicyListProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.NetworkPolicyList#items"
            },
            "stability": "stable",
            "summary": "items is a list of schema objects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11323
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeNetworkPolicyProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.NetworkPolicyList#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard list metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11316
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeNetworkPolicyListProps"
    },
    "cdk8s-plus-28.k8s.KubeNetworkPolicyProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.networking.v1.NetworkPolicy"
        },
        "stability": "stable",
        "summary": "NetworkPolicy describes what network traffic is allowed for a set of Pods."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeNetworkPolicyProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 11273
      },
      "name": "KubeNetworkPolicyProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.NetworkPolicy#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11279
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.NetworkPolicy#spec"
            },
            "stability": "stable",
            "summary": "spec represents the specification of the desired behavior for this NetworkPolicy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11286
          },
          "name": "spec",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.NetworkPolicySpec"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeNetworkPolicyProps"
    },
    "cdk8s-plus-28.k8s.KubeNode": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.Node"
        },
        "remarks": "Each node will have a unique identifier in the cache (i.e. in etcd).",
        "stability": "stable",
        "summary": "Node is a worker node in Kubernetes."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeNode",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.core.v1.Node\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 3367
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeNodeProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 3338
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.core.v1.Node\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3354
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeNodeProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3377
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeNode",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.core.v1.Node\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3342
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeNode"
    },
    "cdk8s-plus-28.k8s.KubeNodeList": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.NodeList"
        },
        "stability": "stable",
        "summary": "NodeList is the whole list of all Nodes which have been registered with master."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeNodeList",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.core.v1.NodeList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 3421
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeNodeListProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 3392
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.core.v1.NodeList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3408
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeNodeListProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3431
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeNodeList",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.core.v1.NodeList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3396
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeNodeList"
    },
    "cdk8s-plus-28.k8s.KubeNodeListProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.NodeList"
        },
        "stability": "stable",
        "summary": "NodeList is the whole list of all Nodes which have been registered with master."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeNodeListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 9996
      },
      "name": "KubeNodeListProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.NodeList#items"
            },
            "stability": "stable",
            "summary": "List of nodes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10009
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeNodeProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.NodeList#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "stability": "stable",
            "summary": "Standard list metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10002
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeNodeListProps"
    },
    "cdk8s-plus-28.k8s.KubeNodeProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.Node"
        },
        "remarks": "Each node will have a unique identifier in the cache (i.e. in etcd).",
        "stability": "stable",
        "summary": "Node is a worker node in Kubernetes."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeNodeProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 9959
      },
      "name": "KubeNodeProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Node#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9965
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Node#spec"
            },
            "remarks": "https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
            "stability": "stable",
            "summary": "Spec defines the behavior of a node."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 9972
          },
          "name": "spec",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.NodeSpec"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeNodeProps"
    },
    "cdk8s-plus-28.k8s.KubePersistentVolume": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.PersistentVolume"
        },
        "remarks": "It is analogous to a node. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes",
        "stability": "stable",
        "summary": "PersistentVolume (PV) is a storage resource provisioned by an administrator."
      },
      "fqn": "cdk8s-plus-28.k8s.KubePersistentVolume",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.core.v1.PersistentVolume\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 3475
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubePersistentVolumeProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 3446
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.core.v1.PersistentVolume\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3462
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubePersistentVolumeProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3485
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubePersistentVolume",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.core.v1.PersistentVolume\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3450
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubePersistentVolume"
    },
    "cdk8s-plus-28.k8s.KubePersistentVolumeClaim": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.PersistentVolumeClaim"
        },
        "stability": "stable",
        "summary": "PersistentVolumeClaim is a user's request for and claim to a persistent volume."
      },
      "fqn": "cdk8s-plus-28.k8s.KubePersistentVolumeClaim",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.core.v1.PersistentVolumeClaim\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 3529
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubePersistentVolumeClaimProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 3500
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.core.v1.PersistentVolumeClaim\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3516
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubePersistentVolumeClaimProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3539
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubePersistentVolumeClaim",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.core.v1.PersistentVolumeClaim\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3504
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubePersistentVolumeClaim"
    },
    "cdk8s-plus-28.k8s.KubePersistentVolumeClaimList": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.PersistentVolumeClaimList"
        },
        "stability": "stable",
        "summary": "PersistentVolumeClaimList is a list of PersistentVolumeClaim items."
      },
      "fqn": "cdk8s-plus-28.k8s.KubePersistentVolumeClaimList",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.core.v1.PersistentVolumeClaimList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 3583
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubePersistentVolumeClaimListProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 3554
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.core.v1.PersistentVolumeClaimList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3570
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubePersistentVolumeClaimListProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3593
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubePersistentVolumeClaimList",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.core.v1.PersistentVolumeClaimList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3558
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubePersistentVolumeClaimList"
    },
    "cdk8s-plus-28.k8s.KubePersistentVolumeClaimListProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.PersistentVolumeClaimList"
        },
        "stability": "stable",
        "summary": "PersistentVolumeClaimList is a list of PersistentVolumeClaim items."
      },
      "fqn": "cdk8s-plus-28.k8s.KubePersistentVolumeClaimListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 10107
      },
      "name": "KubePersistentVolumeClaimListProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeClaimList#items"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
            "stability": "stable",
            "summary": "items is a list of persistent volume claims."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10120
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubePersistentVolumeClaimProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeClaimList#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "stability": "stable",
            "summary": "Standard list metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10113
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubePersistentVolumeClaimListProps"
    },
    "cdk8s-plus-28.k8s.KubePersistentVolumeClaimProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.PersistentVolumeClaim"
        },
        "stability": "stable",
        "summary": "PersistentVolumeClaim is a user's request for and claim to a persistent volume."
      },
      "fqn": "cdk8s-plus-28.k8s.KubePersistentVolumeClaimProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 10070
      },
      "name": "KubePersistentVolumeClaimProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeClaim#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10076
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeClaim#spec"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
            "stability": "stable",
            "summary": "spec defines the desired characteristics of a volume requested by a pod author."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10083
          },
          "name": "spec",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.PersistentVolumeClaimSpec"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubePersistentVolumeClaimProps"
    },
    "cdk8s-plus-28.k8s.KubePersistentVolumeList": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.PersistentVolumeList"
        },
        "stability": "stable",
        "summary": "PersistentVolumeList is a list of PersistentVolume items."
      },
      "fqn": "cdk8s-plus-28.k8s.KubePersistentVolumeList",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.core.v1.PersistentVolumeList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 3637
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubePersistentVolumeListProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 3608
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.core.v1.PersistentVolumeList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3624
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubePersistentVolumeListProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3647
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubePersistentVolumeList",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.core.v1.PersistentVolumeList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3612
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubePersistentVolumeList"
    },
    "cdk8s-plus-28.k8s.KubePersistentVolumeListProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.PersistentVolumeList"
        },
        "stability": "stable",
        "summary": "PersistentVolumeList is a list of PersistentVolume items."
      },
      "fqn": "cdk8s-plus-28.k8s.KubePersistentVolumeListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 10144
      },
      "name": "KubePersistentVolumeListProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeList#items"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes",
            "stability": "stable",
            "summary": "items is a list of persistent volumes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10157
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubePersistentVolumeProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeList#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "stability": "stable",
            "summary": "Standard list metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10150
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubePersistentVolumeListProps"
    },
    "cdk8s-plus-28.k8s.KubePersistentVolumeProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.PersistentVolume"
        },
        "remarks": "It is analogous to a node. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes",
        "stability": "stable",
        "summary": "PersistentVolume (PV) is a storage resource provisioned by an administrator."
      },
      "fqn": "cdk8s-plus-28.k8s.KubePersistentVolumeProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 10033
      },
      "name": "KubePersistentVolumeProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolume#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10039
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolume#spec"
            },
            "remarks": "Provisioned by an administrator. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistent-volumes",
            "stability": "stable",
            "summary": "spec defines a specification of a persistent volume owned by the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10046
          },
          "name": "spec",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.PersistentVolumeSpec"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubePersistentVolumeProps"
    },
    "cdk8s-plus-28.k8s.KubePod": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.Pod"
        },
        "remarks": "This resource is created by clients and scheduled onto hosts.",
        "stability": "stable",
        "summary": "Pod is a collection of containers that can run on a host."
      },
      "fqn": "cdk8s-plus-28.k8s.KubePod",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.core.v1.Pod\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 3691
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubePodProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 3662
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.core.v1.Pod\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3678
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubePodProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3701
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubePod",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.core.v1.Pod\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3666
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubePod"
    },
    "cdk8s-plus-28.k8s.KubePodDisruptionBudget": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.policy.v1.PodDisruptionBudget"
        },
        "stability": "stable",
        "summary": "PodDisruptionBudget is an object to define the max disruption that can be caused to a collection of pods."
      },
      "fqn": "cdk8s-plus-28.k8s.KubePodDisruptionBudget",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.policy.v1.PodDisruptionBudget\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 5689
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubePodDisruptionBudgetProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 5660
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.policy.v1.PodDisruptionBudget\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5676
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubePodDisruptionBudgetProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5699
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubePodDisruptionBudget",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.policy.v1.PodDisruptionBudget\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5664
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubePodDisruptionBudget"
    },
    "cdk8s-plus-28.k8s.KubePodDisruptionBudgetList": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.policy.v1.PodDisruptionBudgetList"
        },
        "stability": "stable",
        "summary": "PodDisruptionBudgetList is a collection of PodDisruptionBudgets."
      },
      "fqn": "cdk8s-plus-28.k8s.KubePodDisruptionBudgetList",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.policy.v1.PodDisruptionBudgetList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 5743
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubePodDisruptionBudgetListProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 5714
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.policy.v1.PodDisruptionBudgetList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5730
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubePodDisruptionBudgetListProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5753
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubePodDisruptionBudgetList",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.policy.v1.PodDisruptionBudgetList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5718
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubePodDisruptionBudgetList"
    },
    "cdk8s-plus-28.k8s.KubePodDisruptionBudgetListProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.policy.v1.PodDisruptionBudgetList"
        },
        "stability": "stable",
        "summary": "PodDisruptionBudgetList is a collection of PodDisruptionBudgets."
      },
      "fqn": "cdk8s-plus-28.k8s.KubePodDisruptionBudgetListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 11660
      },
      "name": "KubePodDisruptionBudgetListProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.policy.v1.PodDisruptionBudgetList#items"
            },
            "stability": "stable",
            "summary": "Items is a list of PodDisruptionBudgets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11673
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubePodDisruptionBudgetProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.policy.v1.PodDisruptionBudgetList#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11666
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubePodDisruptionBudgetListProps"
    },
    "cdk8s-plus-28.k8s.KubePodDisruptionBudgetProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.policy.v1.PodDisruptionBudget"
        },
        "stability": "stable",
        "summary": "PodDisruptionBudget is an object to define the max disruption that can be caused to a collection of pods."
      },
      "fqn": "cdk8s-plus-28.k8s.KubePodDisruptionBudgetProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 11623
      },
      "name": "KubePodDisruptionBudgetProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.policy.v1.PodDisruptionBudget#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11629
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.policy.v1.PodDisruptionBudget#spec"
            },
            "stability": "stable",
            "summary": "Specification of the desired behavior of the PodDisruptionBudget."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11636
          },
          "name": "spec",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.PodDisruptionBudgetSpec"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubePodDisruptionBudgetProps"
    },
    "cdk8s-plus-28.k8s.KubePodList": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.PodList"
        },
        "stability": "stable",
        "summary": "PodList is a list of Pods."
      },
      "fqn": "cdk8s-plus-28.k8s.KubePodList",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.core.v1.PodList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 3745
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubePodListProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 3716
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.core.v1.PodList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3732
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubePodListProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3755
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubePodList",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.core.v1.PodList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3720
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubePodList"
    },
    "cdk8s-plus-28.k8s.KubePodListProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.PodList"
        },
        "stability": "stable",
        "summary": "PodList is a list of Pods."
      },
      "fqn": "cdk8s-plus-28.k8s.KubePodListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 10218
      },
      "name": "KubePodListProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodList#items"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md",
            "stability": "stable",
            "summary": "List of pods."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10231
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubePodProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodList#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "stability": "stable",
            "summary": "Standard list metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10224
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubePodListProps"
    },
    "cdk8s-plus-28.k8s.KubePodProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.Pod"
        },
        "remarks": "This resource is created by clients and scheduled onto hosts.",
        "stability": "stable",
        "summary": "Pod is a collection of containers that can run on a host."
      },
      "fqn": "cdk8s-plus-28.k8s.KubePodProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 10181
      },
      "name": "KubePodProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Pod#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10187
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Pod#spec"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
            "stability": "stable",
            "summary": "Specification of the desired behavior of the pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10194
          },
          "name": "spec",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.PodSpec"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubePodProps"
    },
    "cdk8s-plus-28.k8s.KubePodSchedulingContextListV1Alpha2": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.resource.v1alpha2.PodSchedulingContextList"
        },
        "stability": "stable",
        "summary": "PodSchedulingContextList is a collection of Pod scheduling objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubePodSchedulingContextListV1Alpha2",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.resource.v1alpha2.PodSchedulingContextList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 6285
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubePodSchedulingContextListV1Alpha2Props"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 6256
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.resource.v1alpha2.PodSchedulingContextList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6272
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubePodSchedulingContextListV1Alpha2Props"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6295
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubePodSchedulingContextListV1Alpha2",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.resource.v1alpha2.PodSchedulingContextList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6260
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubePodSchedulingContextListV1Alpha2"
    },
    "cdk8s-plus-28.k8s.KubePodSchedulingContextListV1Alpha2Props": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.resource.v1alpha2.PodSchedulingContextList"
        },
        "stability": "stable",
        "summary": "PodSchedulingContextList is a collection of Pod scheduling objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubePodSchedulingContextListV1Alpha2Props",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 12056
      },
      "name": "KubePodSchedulingContextListV1Alpha2Props",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.resource.v1alpha2.PodSchedulingContextList#items"
            },
            "stability": "stable",
            "summary": "Items is the list of PodSchedulingContext objects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12069
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubePodSchedulingContextV1Alpha2Props"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.resource.v1alpha2.PodSchedulingContextList#metadata"
            },
            "stability": "stable",
            "summary": "Standard list metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12062
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubePodSchedulingContextListV1Alpha2Props"
    },
    "cdk8s-plus-28.k8s.KubePodSchedulingContextV1Alpha2": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.resource.v1alpha2.PodSchedulingContext"
        },
        "remarks": "This is an alpha type and requires enabling the DynamicResourceAllocation feature gate.",
        "stability": "stable",
        "summary": "PodSchedulingContext objects hold information that is needed to schedule a Pod with ResourceClaims that use \"WaitForFirstConsumer\" allocation mode."
      },
      "fqn": "cdk8s-plus-28.k8s.KubePodSchedulingContextV1Alpha2",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.resource.v1alpha2.PodSchedulingContext\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 6231
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubePodSchedulingContextV1Alpha2Props"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 6202
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.resource.v1alpha2.PodSchedulingContext\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6218
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubePodSchedulingContextV1Alpha2Props"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6241
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubePodSchedulingContextV1Alpha2",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.resource.v1alpha2.PodSchedulingContext\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6206
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubePodSchedulingContextV1Alpha2"
    },
    "cdk8s-plus-28.k8s.KubePodSchedulingContextV1Alpha2Props": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.resource.v1alpha2.PodSchedulingContext"
        },
        "remarks": "This is an alpha type and requires enabling the DynamicResourceAllocation feature gate.",
        "stability": "stable",
        "summary": "PodSchedulingContext objects hold information that is needed to schedule a Pod with ResourceClaims that use \"WaitForFirstConsumer\" allocation mode."
      },
      "fqn": "cdk8s-plus-28.k8s.KubePodSchedulingContextV1Alpha2Props",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 12019
      },
      "name": "KubePodSchedulingContextV1Alpha2Props",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.resource.v1alpha2.PodSchedulingContext#spec"
            },
            "stability": "stable",
            "summary": "Spec describes where resources for the Pod are needed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12032
          },
          "name": "spec",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.PodSchedulingContextSpecV1Alpha2"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.resource.v1alpha2.PodSchedulingContext#metadata"
            },
            "stability": "stable",
            "summary": "Standard object metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12025
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubePodSchedulingContextV1Alpha2Props"
    },
    "cdk8s-plus-28.k8s.KubePodTemplate": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.PodTemplate"
        },
        "stability": "stable",
        "summary": "PodTemplate describes a template for creating copies of a predefined pod."
      },
      "fqn": "cdk8s-plus-28.k8s.KubePodTemplate",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.core.v1.PodTemplate\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 3799
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubePodTemplateProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 3770
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.core.v1.PodTemplate\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3786
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubePodTemplateProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3809
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubePodTemplate",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.core.v1.PodTemplate\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3774
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubePodTemplate"
    },
    "cdk8s-plus-28.k8s.KubePodTemplateList": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.PodTemplateList"
        },
        "stability": "stable",
        "summary": "PodTemplateList is a list of PodTemplates."
      },
      "fqn": "cdk8s-plus-28.k8s.KubePodTemplateList",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.core.v1.PodTemplateList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 3853
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubePodTemplateListProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 3824
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.core.v1.PodTemplateList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3840
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubePodTemplateListProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3863
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubePodTemplateList",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.core.v1.PodTemplateList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3828
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubePodTemplateList"
    },
    "cdk8s-plus-28.k8s.KubePodTemplateListProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.PodTemplateList"
        },
        "stability": "stable",
        "summary": "PodTemplateList is a list of PodTemplates."
      },
      "fqn": "cdk8s-plus-28.k8s.KubePodTemplateListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 10292
      },
      "name": "KubePodTemplateListProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodTemplateList#items"
            },
            "stability": "stable",
            "summary": "List of pod templates."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10305
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubePodTemplateProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodTemplateList#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "stability": "stable",
            "summary": "Standard list metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10298
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubePodTemplateListProps"
    },
    "cdk8s-plus-28.k8s.KubePodTemplateProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.PodTemplate"
        },
        "stability": "stable",
        "summary": "PodTemplate describes a template for creating copies of a predefined pod."
      },
      "fqn": "cdk8s-plus-28.k8s.KubePodTemplateProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 10255
      },
      "name": "KubePodTemplateProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodTemplate#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10261
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodTemplate#template"
            },
            "remarks": "https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
            "stability": "stable",
            "summary": "Template defines the pods that will be created from this pod template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10268
          },
          "name": "template",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.PodTemplateSpec"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubePodTemplateProps"
    },
    "cdk8s-plus-28.k8s.KubePriorityClass": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.scheduling.v1.PriorityClass"
        },
        "remarks": "The value can be any valid integer.",
        "stability": "stable",
        "summary": "PriorityClass defines mapping from a priority class name to the priority integer value."
      },
      "fqn": "cdk8s-plus-28.k8s.KubePriorityClass",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.scheduling.v1.PriorityClass\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 6667
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubePriorityClassProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 6638
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.scheduling.v1.PriorityClass\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6654
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubePriorityClassProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6677
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubePriorityClass",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.scheduling.v1.PriorityClass\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6642
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubePriorityClass"
    },
    "cdk8s-plus-28.k8s.KubePriorityClassList": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.scheduling.v1.PriorityClassList"
        },
        "stability": "stable",
        "summary": "PriorityClassList is a collection of priority classes."
      },
      "fqn": "cdk8s-plus-28.k8s.KubePriorityClassList",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.scheduling.v1.PriorityClassList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 6721
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubePriorityClassListProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 6692
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.scheduling.v1.PriorityClassList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6708
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubePriorityClassListProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6731
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubePriorityClassList",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.scheduling.v1.PriorityClassList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6696
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubePriorityClassList"
    },
    "cdk8s-plus-28.k8s.KubePriorityClassListProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.scheduling.v1.PriorityClassList"
        },
        "stability": "stable",
        "summary": "PriorityClassList is a collection of priority classes."
      },
      "fqn": "cdk8s-plus-28.k8s.KubePriorityClassListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 12403
      },
      "name": "KubePriorityClassListProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.scheduling.v1.PriorityClassList#items"
            },
            "stability": "stable",
            "summary": "items is the list of PriorityClasses."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12416
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubePriorityClassProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.scheduling.v1.PriorityClassList#metadata"
            },
            "stability": "stable",
            "summary": "Standard list metadata More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12409
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubePriorityClassListProps"
    },
    "cdk8s-plus-28.k8s.KubePriorityClassProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.scheduling.v1.PriorityClass"
        },
        "remarks": "The value can be any valid integer.",
        "stability": "stable",
        "summary": "PriorityClass defines mapping from a priority class name to the priority integer value."
      },
      "fqn": "cdk8s-plus-28.k8s.KubePriorityClassProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 12341
      },
      "name": "KubePriorityClassProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.scheduling.v1.PriorityClass#value"
            },
            "remarks": "This is the actual priority that pods receive when they have the name of this class in their pod spec.",
            "stability": "stable",
            "summary": "value represents the integer value of this priority class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12376
          },
          "name": "value",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.scheduling.v1.PriorityClass#description"
            },
            "stability": "stable",
            "summary": "description is an arbitrary string that usually provides guidelines on when this priority class should be used."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12354
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.scheduling.v1.PriorityClass#globalDefault"
            },
            "remarks": "Only one PriorityClass can be marked as `globalDefault`. However, if more than one PriorityClasses exists with their `globalDefault` field set to true, the smallest value of such global default PriorityClasses will be used as the default priority.",
            "stability": "stable",
            "summary": "globalDefault specifies whether this PriorityClass should be considered as the default priority for pods that do not have any priority class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12361
          },
          "name": "globalDefault",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.scheduling.v1.PriorityClass#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12347
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.scheduling.v1.PriorityClass#preemptionPolicy"
            },
            "default": "PreemptLowerPriority if unset.",
            "remarks": "One of Never, PreemptLowerPriority. Defaults to PreemptLowerPriority if unset.",
            "stability": "stable",
            "summary": "preemptionPolicy is the Policy for preempting pods with lower priority."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12369
          },
          "name": "preemptionPolicy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubePriorityClassProps"
    },
    "cdk8s-plus-28.k8s.KubePriorityLevelConfigurationListV1Beta2": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.flowcontrol.v1beta2.PriorityLevelConfigurationList"
        },
        "stability": "stable",
        "summary": "PriorityLevelConfigurationList is a list of PriorityLevelConfiguration objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubePriorityLevelConfigurationListV1Beta2",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.flowcontrol.v1beta2.PriorityLevelConfigurationList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 4717
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubePriorityLevelConfigurationListV1Beta2Props"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 4688
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.flowcontrol.v1beta2.PriorityLevelConfigurationList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4704
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubePriorityLevelConfigurationListV1Beta2Props"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4727
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubePriorityLevelConfigurationListV1Beta2",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.flowcontrol.v1beta2.PriorityLevelConfigurationList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4692
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubePriorityLevelConfigurationListV1Beta2"
    },
    "cdk8s-plus-28.k8s.KubePriorityLevelConfigurationListV1Beta2Props": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.flowcontrol.v1beta2.PriorityLevelConfigurationList"
        },
        "stability": "stable",
        "summary": "PriorityLevelConfigurationList is a list of PriorityLevelConfiguration objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubePriorityLevelConfigurationListV1Beta2Props",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 10940
      },
      "name": "KubePriorityLevelConfigurationListV1Beta2Props",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta2.PriorityLevelConfigurationList#items"
            },
            "stability": "stable",
            "summary": "`items` is a list of request-priorities."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10953
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubePriorityLevelConfigurationV1Beta2Props"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta2.PriorityLevelConfigurationList#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "`metadata` is the standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10946
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubePriorityLevelConfigurationListV1Beta2Props"
    },
    "cdk8s-plus-28.k8s.KubePriorityLevelConfigurationListV1Beta3": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationList"
        },
        "stability": "stable",
        "summary": "PriorityLevelConfigurationList is a list of PriorityLevelConfiguration objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubePriorityLevelConfigurationListV1Beta3",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 4933
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubePriorityLevelConfigurationListV1Beta3Props"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 4904
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4920
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubePriorityLevelConfigurationListV1Beta3Props"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4943
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubePriorityLevelConfigurationListV1Beta3",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4908
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubePriorityLevelConfigurationListV1Beta3"
    },
    "cdk8s-plus-28.k8s.KubePriorityLevelConfigurationListV1Beta3Props": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationList"
        },
        "stability": "stable",
        "summary": "PriorityLevelConfigurationList is a list of PriorityLevelConfiguration objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubePriorityLevelConfigurationListV1Beta3Props",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 11088
      },
      "name": "KubePriorityLevelConfigurationListV1Beta3Props",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationList#items"
            },
            "stability": "stable",
            "summary": "`items` is a list of request-priorities."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11101
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubePriorityLevelConfigurationV1Beta3Props"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationList#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "`metadata` is the standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11094
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubePriorityLevelConfigurationListV1Beta3Props"
    },
    "cdk8s-plus-28.k8s.KubePriorityLevelConfigurationV1Beta2": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.flowcontrol.v1beta2.PriorityLevelConfiguration"
        },
        "stability": "stable",
        "summary": "PriorityLevelConfiguration represents the configuration of a priority level."
      },
      "fqn": "cdk8s-plus-28.k8s.KubePriorityLevelConfigurationV1Beta2",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.flowcontrol.v1beta2.PriorityLevelConfiguration\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 4663
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubePriorityLevelConfigurationV1Beta2Props"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 4634
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.flowcontrol.v1beta2.PriorityLevelConfiguration\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4650
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubePriorityLevelConfigurationV1Beta2Props"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4673
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubePriorityLevelConfigurationV1Beta2",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.flowcontrol.v1beta2.PriorityLevelConfiguration\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4638
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubePriorityLevelConfigurationV1Beta2"
    },
    "cdk8s-plus-28.k8s.KubePriorityLevelConfigurationV1Beta2Props": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.flowcontrol.v1beta2.PriorityLevelConfiguration"
        },
        "stability": "stable",
        "summary": "PriorityLevelConfiguration represents the configuration of a priority level."
      },
      "fqn": "cdk8s-plus-28.k8s.KubePriorityLevelConfigurationV1Beta2Props",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 10903
      },
      "name": "KubePriorityLevelConfigurationV1Beta2Props",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta2.PriorityLevelConfiguration#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "`metadata` is the standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10909
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta2.PriorityLevelConfiguration#spec"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
            "stability": "stable",
            "summary": "`spec` is the specification of the desired behavior of a \"request-priority\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10916
          },
          "name": "spec",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.PriorityLevelConfigurationSpecV1Beta2"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubePriorityLevelConfigurationV1Beta2Props"
    },
    "cdk8s-plus-28.k8s.KubePriorityLevelConfigurationV1Beta3": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfiguration"
        },
        "stability": "stable",
        "summary": "PriorityLevelConfiguration represents the configuration of a priority level."
      },
      "fqn": "cdk8s-plus-28.k8s.KubePriorityLevelConfigurationV1Beta3",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfiguration\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 4879
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubePriorityLevelConfigurationV1Beta3Props"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 4850
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfiguration\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4866
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubePriorityLevelConfigurationV1Beta3Props"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4889
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubePriorityLevelConfigurationV1Beta3",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfiguration\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4854
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubePriorityLevelConfigurationV1Beta3"
    },
    "cdk8s-plus-28.k8s.KubePriorityLevelConfigurationV1Beta3Props": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfiguration"
        },
        "stability": "stable",
        "summary": "PriorityLevelConfiguration represents the configuration of a priority level."
      },
      "fqn": "cdk8s-plus-28.k8s.KubePriorityLevelConfigurationV1Beta3Props",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 11051
      },
      "name": "KubePriorityLevelConfigurationV1Beta3Props",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfiguration#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "`metadata` is the standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11057
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfiguration#spec"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
            "stability": "stable",
            "summary": "`spec` is the specification of the desired behavior of a \"request-priority\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11064
          },
          "name": "spec",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.PriorityLevelConfigurationSpecV1Beta3"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubePriorityLevelConfigurationV1Beta3Props"
    },
    "cdk8s-plus-28.k8s.KubeReplicaSet": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.apps.v1.ReplicaSet"
        },
        "stability": "stable",
        "summary": "ReplicaSet ensures that a specified number of pod replicas are running at any given time."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeReplicaSet",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.apps.v1.ReplicaSet\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 1127
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeReplicaSetProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 1098
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.apps.v1.ReplicaSet\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1114
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeReplicaSetProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1137
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeReplicaSet",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.apps.v1.ReplicaSet\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1102
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeReplicaSet"
    },
    "cdk8s-plus-28.k8s.KubeReplicaSetList": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.apps.v1.ReplicaSetList"
        },
        "stability": "stable",
        "summary": "ReplicaSetList is a collection of ReplicaSets."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeReplicaSetList",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.apps.v1.ReplicaSetList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 1181
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeReplicaSetListProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 1152
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.apps.v1.ReplicaSetList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1168
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeReplicaSetListProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1191
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeReplicaSetList",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.apps.v1.ReplicaSetList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1156
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeReplicaSetList"
    },
    "cdk8s-plus-28.k8s.KubeReplicaSetListProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.apps.v1.ReplicaSetList"
        },
        "stability": "stable",
        "summary": "ReplicaSetList is a collection of ReplicaSets."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeReplicaSetListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 8361
      },
      "name": "KubeReplicaSetListProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.ReplicaSetList#items"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller",
            "stability": "stable",
            "summary": "List of ReplicaSets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8374
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeReplicaSetProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.ReplicaSetList#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "stability": "stable",
            "summary": "Standard list metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8367
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeReplicaSetListProps"
    },
    "cdk8s-plus-28.k8s.KubeReplicaSetProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.apps.v1.ReplicaSet"
        },
        "stability": "stable",
        "summary": "ReplicaSet ensures that a specified number of pod replicas are running at any given time."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeReplicaSetProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 8324
      },
      "name": "KubeReplicaSetProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.ReplicaSet#metadata"
            },
            "remarks": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "If the Labels of a ReplicaSet are empty, they are defaulted to be the same as the Pod(s) that the ReplicaSet manages."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8330
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.ReplicaSet#spec"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
            "stability": "stable",
            "summary": "Spec defines the specification of the desired behavior of the ReplicaSet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8337
          },
          "name": "spec",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ReplicaSetSpec"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeReplicaSetProps"
    },
    "cdk8s-plus-28.k8s.KubeReplicationController": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ReplicationController"
        },
        "stability": "stable",
        "summary": "ReplicationController represents the configuration of a replication controller."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeReplicationController",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.core.v1.ReplicationController\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 3907
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeReplicationControllerProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 3878
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.core.v1.ReplicationController\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3894
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeReplicationControllerProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3917
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeReplicationController",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.core.v1.ReplicationController\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3882
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeReplicationController"
    },
    "cdk8s-plus-28.k8s.KubeReplicationControllerList": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ReplicationControllerList"
        },
        "stability": "stable",
        "summary": "ReplicationControllerList is a collection of replication controllers."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeReplicationControllerList",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.core.v1.ReplicationControllerList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 3961
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeReplicationControllerListProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 3932
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.core.v1.ReplicationControllerList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3948
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeReplicationControllerListProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3971
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeReplicationControllerList",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.core.v1.ReplicationControllerList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3936
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeReplicationControllerList"
    },
    "cdk8s-plus-28.k8s.KubeReplicationControllerListProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ReplicationControllerList"
        },
        "stability": "stable",
        "summary": "ReplicationControllerList is a collection of replication controllers."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeReplicationControllerListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 10366
      },
      "name": "KubeReplicationControllerListProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ReplicationControllerList#items"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller",
            "stability": "stable",
            "summary": "List of replication controllers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10379
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeReplicationControllerProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ReplicationControllerList#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "stability": "stable",
            "summary": "Standard list metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10372
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeReplicationControllerListProps"
    },
    "cdk8s-plus-28.k8s.KubeReplicationControllerProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ReplicationController"
        },
        "stability": "stable",
        "summary": "ReplicationController represents the configuration of a replication controller."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeReplicationControllerProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 10329
      },
      "name": "KubeReplicationControllerProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ReplicationController#metadata"
            },
            "remarks": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "If the Labels of a ReplicationController are empty, they are defaulted to be the same as the Pod(s) that the replication controller manages."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10335
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ReplicationController#spec"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
            "stability": "stable",
            "summary": "Spec defines the specification of the desired behavior of the replication controller."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10342
          },
          "name": "spec",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ReplicationControllerSpec"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeReplicationControllerProps"
    },
    "cdk8s-plus-28.k8s.KubeResourceClaimListV1Alpha2": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.resource.v1alpha2.ResourceClaimList"
        },
        "stability": "stable",
        "summary": "ResourceClaimList is a collection of claims."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeResourceClaimListV1Alpha2",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.resource.v1alpha2.ResourceClaimList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 6395
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeResourceClaimListV1Alpha2Props"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 6366
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.resource.v1alpha2.ResourceClaimList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6382
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeResourceClaimListV1Alpha2Props"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6405
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeResourceClaimListV1Alpha2",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.resource.v1alpha2.ResourceClaimList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6370
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeResourceClaimListV1Alpha2"
    },
    "cdk8s-plus-28.k8s.KubeResourceClaimListV1Alpha2Props": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.resource.v1alpha2.ResourceClaimList"
        },
        "stability": "stable",
        "summary": "ResourceClaimList is a collection of claims."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeResourceClaimListV1Alpha2Props",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 12132
      },
      "name": "KubeResourceClaimListV1Alpha2Props",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.resource.v1alpha2.ResourceClaimList#items"
            },
            "stability": "stable",
            "summary": "Items is the list of resource claims."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12145
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeResourceClaimV1Alpha2Props"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.resource.v1alpha2.ResourceClaimList#metadata"
            },
            "stability": "stable",
            "summary": "Standard list metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12138
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeResourceClaimListV1Alpha2Props"
    },
    "cdk8s-plus-28.k8s.KubeResourceClaimTemplateListV1Alpha2": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.resource.v1alpha2.ResourceClaimTemplateList"
        },
        "stability": "stable",
        "summary": "ResourceClaimTemplateList is a collection of claim templates."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeResourceClaimTemplateListV1Alpha2",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.resource.v1alpha2.ResourceClaimTemplateList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 6503
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeResourceClaimTemplateListV1Alpha2Props"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 6474
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.resource.v1alpha2.ResourceClaimTemplateList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6490
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeResourceClaimTemplateListV1Alpha2Props"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6513
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeResourceClaimTemplateListV1Alpha2",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.resource.v1alpha2.ResourceClaimTemplateList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6478
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeResourceClaimTemplateListV1Alpha2"
    },
    "cdk8s-plus-28.k8s.KubeResourceClaimTemplateListV1Alpha2Props": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.resource.v1alpha2.ResourceClaimTemplateList"
        },
        "stability": "stable",
        "summary": "ResourceClaimTemplateList is a collection of claim templates."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeResourceClaimTemplateListV1Alpha2Props",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 12208
      },
      "name": "KubeResourceClaimTemplateListV1Alpha2Props",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.resource.v1alpha2.ResourceClaimTemplateList#items"
            },
            "stability": "stable",
            "summary": "Items is the list of resource claim templates."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12221
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeResourceClaimTemplateV1Alpha2Props"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.resource.v1alpha2.ResourceClaimTemplateList#metadata"
            },
            "stability": "stable",
            "summary": "Standard list metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12214
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeResourceClaimTemplateListV1Alpha2Props"
    },
    "cdk8s-plus-28.k8s.KubeResourceClaimTemplateV1Alpha2": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.resource.v1alpha2.ResourceClaimTemplate"
        },
        "stability": "stable",
        "summary": "ResourceClaimTemplate is used to produce ResourceClaim objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeResourceClaimTemplateV1Alpha2",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.resource.v1alpha2.ResourceClaimTemplate\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 6449
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeResourceClaimTemplateV1Alpha2Props"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 6420
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.resource.v1alpha2.ResourceClaimTemplate\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6436
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeResourceClaimTemplateV1Alpha2Props"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6459
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeResourceClaimTemplateV1Alpha2",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.resource.v1alpha2.ResourceClaimTemplate\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6424
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeResourceClaimTemplateV1Alpha2"
    },
    "cdk8s-plus-28.k8s.KubeResourceClaimTemplateV1Alpha2Props": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.resource.v1alpha2.ResourceClaimTemplate"
        },
        "stability": "stable",
        "summary": "ResourceClaimTemplate is used to produce ResourceClaim objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeResourceClaimTemplateV1Alpha2Props",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 12169
      },
      "name": "KubeResourceClaimTemplateV1Alpha2Props",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.resource.v1alpha2.ResourceClaimTemplate#spec"
            },
            "remarks": "This field is immutable. A ResourceClaim will get created by the control plane for a Pod when needed and then not get updated anymore.",
            "stability": "stable",
            "summary": "Describes the ResourceClaim that is to be generated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12184
          },
          "name": "spec",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ResourceClaimTemplateSpecV1Alpha2"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.resource.v1alpha2.ResourceClaimTemplate#metadata"
            },
            "stability": "stable",
            "summary": "Standard object metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12175
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeResourceClaimTemplateV1Alpha2Props"
    },
    "cdk8s-plus-28.k8s.KubeResourceClaimV1Alpha2": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.resource.v1alpha2.ResourceClaim"
        },
        "remarks": "Its status tracks whether the resource has been allocated and what the resulting attributes are.\n\nThis is an alpha type and requires enabling the DynamicResourceAllocation feature gate.",
        "stability": "stable",
        "summary": "ResourceClaim describes which resources are needed by a resource consumer."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeResourceClaimV1Alpha2",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.resource.v1alpha2.ResourceClaim\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 6341
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeResourceClaimV1Alpha2Props"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 6312
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.resource.v1alpha2.ResourceClaim\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6328
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeResourceClaimV1Alpha2Props"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6351
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeResourceClaimV1Alpha2",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.resource.v1alpha2.ResourceClaim\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6316
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeResourceClaimV1Alpha2"
    },
    "cdk8s-plus-28.k8s.KubeResourceClaimV1Alpha2Props": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.resource.v1alpha2.ResourceClaim"
        },
        "remarks": "Its status tracks whether the resource has been allocated and what the resulting attributes are.\n\nThis is an alpha type and requires enabling the DynamicResourceAllocation feature gate.",
        "stability": "stable",
        "summary": "ResourceClaim describes which resources are needed by a resource consumer."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeResourceClaimV1Alpha2Props",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 12095
      },
      "name": "KubeResourceClaimV1Alpha2Props",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.resource.v1alpha2.ResourceClaim#spec"
            },
            "remarks": "It can only be set once when creating the ResourceClaim.",
            "stability": "stable",
            "summary": "Spec describes the desired attributes of a resource that then needs to be allocated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12108
          },
          "name": "spec",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ResourceClaimSpecV1Alpha2"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.resource.v1alpha2.ResourceClaim#metadata"
            },
            "stability": "stable",
            "summary": "Standard object metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12101
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeResourceClaimV1Alpha2Props"
    },
    "cdk8s-plus-28.k8s.KubeResourceClassListV1Alpha2": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.resource.v1alpha2.ResourceClassList"
        },
        "stability": "stable",
        "summary": "ResourceClassList is a collection of classes."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeResourceClassListV1Alpha2",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.resource.v1alpha2.ResourceClassList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 6613
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeResourceClassListV1Alpha2Props"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 6584
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.resource.v1alpha2.ResourceClassList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6600
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeResourceClassListV1Alpha2Props"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6623
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeResourceClassListV1Alpha2",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.resource.v1alpha2.ResourceClassList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6588
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeResourceClassListV1Alpha2"
    },
    "cdk8s-plus-28.k8s.KubeResourceClassListV1Alpha2Props": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.resource.v1alpha2.ResourceClassList"
        },
        "stability": "stable",
        "summary": "ResourceClassList is a collection of classes."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeResourceClassListV1Alpha2Props",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 12304
      },
      "name": "KubeResourceClassListV1Alpha2Props",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.resource.v1alpha2.ResourceClassList#items"
            },
            "stability": "stable",
            "summary": "Items is the list of resource classes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12317
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeResourceClassV1Alpha2Props"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.resource.v1alpha2.ResourceClassList#metadata"
            },
            "stability": "stable",
            "summary": "Standard list metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12310
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeResourceClassListV1Alpha2Props"
    },
    "cdk8s-plus-28.k8s.KubeResourceClassV1Alpha2": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.resource.v1alpha2.ResourceClass"
        },
        "remarks": "This is an alpha type and requires enabling the DynamicResourceAllocation feature gate.",
        "stability": "stable",
        "summary": "ResourceClass is used by administrators to influence how resources are allocated."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeResourceClassV1Alpha2",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.resource.v1alpha2.ResourceClass\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 6559
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeResourceClassV1Alpha2Props"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 6530
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.resource.v1alpha2.ResourceClass\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6546
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeResourceClassV1Alpha2Props"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6569
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeResourceClassV1Alpha2",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.resource.v1alpha2.ResourceClass\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6534
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeResourceClassV1Alpha2"
    },
    "cdk8s-plus-28.k8s.KubeResourceClassV1Alpha2Props": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.resource.v1alpha2.ResourceClass"
        },
        "remarks": "This is an alpha type and requires enabling the DynamicResourceAllocation feature gate.",
        "stability": "stable",
        "summary": "ResourceClass is used by administrators to influence how resources are allocated."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeResourceClassV1Alpha2Props",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 12247
      },
      "name": "KubeResourceClassV1Alpha2Props",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.resource.v1alpha2.ResourceClass#driverName"
            },
            "remarks": "Resource drivers have a unique name in forward domain order (acme.example.com).",
            "stability": "stable",
            "summary": "DriverName defines the name of the dynamic resource driver that is used for allocation of a ResourceClaim that uses this class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12262
          },
          "name": "driverName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.resource.v1alpha2.ResourceClass#metadata"
            },
            "stability": "stable",
            "summary": "Standard object metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12253
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.resource.v1alpha2.ResourceClass#parametersRef"
            },
            "remarks": "A dynamic resource driver can distinguish between parameters stored here and and those stored in ResourceClaimSpec.",
            "stability": "stable",
            "summary": "ParametersRef references an arbitrary separate object that may hold parameters that will be used by the driver when allocating a resource that uses this class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12269
          },
          "name": "parametersRef",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ResourceClassParametersReferenceV1Alpha2"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.resource.v1alpha2.ResourceClass#suitableNodes"
            },
            "remarks": "Setting this field is optional. If null, all nodes are candidates.",
            "stability": "stable",
            "summary": "Only nodes matching the selector will be considered by the scheduler when trying to find a Node that fits a Pod when that Pod uses a ResourceClaim that has not been allocated yet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12278
          },
          "name": "suitableNodes",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.NodeSelector"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeResourceClassV1Alpha2Props"
    },
    "cdk8s-plus-28.k8s.KubeResourceQuota": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ResourceQuota"
        },
        "stability": "stable",
        "summary": "ResourceQuota sets aggregate quota restrictions enforced per namespace."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeResourceQuota",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.core.v1.ResourceQuota\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 4015
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeResourceQuotaProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 3986
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.core.v1.ResourceQuota\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4002
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeResourceQuotaProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4025
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeResourceQuota",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.core.v1.ResourceQuota\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 3990
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeResourceQuota"
    },
    "cdk8s-plus-28.k8s.KubeResourceQuotaList": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ResourceQuotaList"
        },
        "stability": "stable",
        "summary": "ResourceQuotaList is a list of ResourceQuota items."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeResourceQuotaList",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.core.v1.ResourceQuotaList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 4069
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeResourceQuotaListProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 4040
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.core.v1.ResourceQuotaList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4056
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeResourceQuotaListProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4079
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeResourceQuotaList",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.core.v1.ResourceQuotaList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4044
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeResourceQuotaList"
    },
    "cdk8s-plus-28.k8s.KubeResourceQuotaListProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ResourceQuotaList"
        },
        "stability": "stable",
        "summary": "ResourceQuotaList is a list of ResourceQuota items."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeResourceQuotaListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 10440
      },
      "name": "KubeResourceQuotaListProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ResourceQuotaList#items"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/",
            "stability": "stable",
            "summary": "Items is a list of ResourceQuota objects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10453
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeResourceQuotaProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ResourceQuotaList#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "stability": "stable",
            "summary": "Standard list metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10446
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeResourceQuotaListProps"
    },
    "cdk8s-plus-28.k8s.KubeResourceQuotaProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ResourceQuota"
        },
        "stability": "stable",
        "summary": "ResourceQuota sets aggregate quota restrictions enforced per namespace."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeResourceQuotaProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 10403
      },
      "name": "KubeResourceQuotaProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ResourceQuota#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10409
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ResourceQuota#spec"
            },
            "remarks": "https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
            "stability": "stable",
            "summary": "Spec defines the desired quota."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10416
          },
          "name": "spec",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ResourceQuotaSpec"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeResourceQuotaProps"
    },
    "cdk8s-plus-28.k8s.KubeRole": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.rbac.v1.Role"
        },
        "stability": "stable",
        "summary": "Role is a namespaced, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeRole",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.rbac.v1.Role\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 6013
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeRoleProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 5984
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.rbac.v1.Role\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6000
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeRoleProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6023
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeRole",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.rbac.v1.Role\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5988
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeRole"
    },
    "cdk8s-plus-28.k8s.KubeRoleBinding": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.rbac.v1.RoleBinding"
        },
        "remarks": "It can reference a Role in the same namespace or a ClusterRole in the global namespace. It adds who information via Subjects and namespace information by which namespace it exists in.  RoleBindings in a given namespace only have effect in that namespace.",
        "stability": "stable",
        "summary": "RoleBinding references a role, but does not contain it."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeRoleBinding",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.rbac.v1.RoleBinding\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 6067
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeRoleBindingProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 6038
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.rbac.v1.RoleBinding\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6054
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeRoleBindingProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6077
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeRoleBinding",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.rbac.v1.RoleBinding\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6042
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeRoleBinding"
    },
    "cdk8s-plus-28.k8s.KubeRoleBindingList": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.rbac.v1.RoleBindingList"
        },
        "stability": "stable",
        "summary": "RoleBindingList is a collection of RoleBindings."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeRoleBindingList",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.rbac.v1.RoleBindingList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 6121
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeRoleBindingListProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 6092
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.rbac.v1.RoleBindingList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6108
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeRoleBindingListProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6131
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeRoleBindingList",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.rbac.v1.RoleBindingList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6096
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeRoleBindingList"
    },
    "cdk8s-plus-28.k8s.KubeRoleBindingListProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.rbac.v1.RoleBindingList"
        },
        "stability": "stable",
        "summary": "RoleBindingList is a collection of RoleBindings."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeRoleBindingListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 11943
      },
      "name": "KubeRoleBindingListProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.rbac.v1.RoleBindingList#items"
            },
            "stability": "stable",
            "summary": "Items is a list of RoleBindings."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11956
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeRoleBindingProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.rbac.v1.RoleBindingList#metadata"
            },
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11949
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeRoleBindingListProps"
    },
    "cdk8s-plus-28.k8s.KubeRoleBindingProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.rbac.v1.RoleBinding"
        },
        "remarks": "It can reference a Role in the same namespace or a ClusterRole in the global namespace. It adds who information via Subjects and namespace information by which namespace it exists in.  RoleBindings in a given namespace only have effect in that namespace.",
        "stability": "stable",
        "summary": "RoleBinding references a role, but does not contain it."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeRoleBindingProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 11898
      },
      "name": "KubeRoleBindingProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.rbac.v1.RoleBinding#roleRef"
            },
            "remarks": "If the RoleRef cannot be resolved, the Authorizer must return an error. This field is immutable.",
            "stability": "stable",
            "summary": "RoleRef can reference a Role in the current namespace or a ClusterRole in the global namespace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11911
          },
          "name": "roleRef",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.RoleRef"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.rbac.v1.RoleBinding#metadata"
            },
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11904
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.rbac.v1.RoleBinding#subjects"
            },
            "stability": "stable",
            "summary": "Subjects holds references to the objects the role applies to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11918
          },
          "name": "subjects",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.Subject"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeRoleBindingProps"
    },
    "cdk8s-plus-28.k8s.KubeRoleList": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.rbac.v1.RoleList"
        },
        "stability": "stable",
        "summary": "RoleList is a collection of Roles."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeRoleList",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.rbac.v1.RoleList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 6175
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeRoleListProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 6146
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.rbac.v1.RoleList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6162
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeRoleListProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6185
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeRoleList",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.rbac.v1.RoleList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 6150
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeRoleList"
    },
    "cdk8s-plus-28.k8s.KubeRoleListProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.rbac.v1.RoleList"
        },
        "stability": "stable",
        "summary": "RoleList is a collection of Roles."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeRoleListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 11980
      },
      "name": "KubeRoleListProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.rbac.v1.RoleList#items"
            },
            "stability": "stable",
            "summary": "Items is a list of Roles."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11993
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeRoleProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.rbac.v1.RoleList#metadata"
            },
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11986
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeRoleListProps"
    },
    "cdk8s-plus-28.k8s.KubeRoleProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.rbac.v1.Role"
        },
        "stability": "stable",
        "summary": "Role is a namespaced, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeRoleProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 11861
      },
      "name": "KubeRoleProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.rbac.v1.Role#metadata"
            },
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11867
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.rbac.v1.Role#rules"
            },
            "stability": "stable",
            "summary": "Rules holds all the PolicyRules for this Role."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11874
          },
          "name": "rules",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.PolicyRule"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeRoleProps"
    },
    "cdk8s-plus-28.k8s.KubeRuntimeClass": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.node.v1.RuntimeClass"
        },
        "remarks": "The RuntimeClass is used to determine which container runtime is used to run all containers in a pod. RuntimeClasses are manually defined by a user or cluster provisioner, and referenced in the PodSpec. The Kubelet is responsible for resolving the RuntimeClassName reference before running the pod.  For more details, see https://kubernetes.io/docs/concepts/containers/runtime-class/",
        "stability": "stable",
        "summary": "RuntimeClass defines a class of container runtime supported in the cluster."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeRuntimeClass",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.node.v1.RuntimeClass\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 5527
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeRuntimeClassProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 5498
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.node.v1.RuntimeClass\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5514
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeRuntimeClassProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5537
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeRuntimeClass",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.node.v1.RuntimeClass\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5502
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeRuntimeClass"
    },
    "cdk8s-plus-28.k8s.KubeRuntimeClassList": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.node.v1.RuntimeClassList"
        },
        "stability": "stable",
        "summary": "RuntimeClassList is a list of RuntimeClass objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeRuntimeClassList",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.node.v1.RuntimeClassList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 5581
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeRuntimeClassListProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 5552
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.node.v1.RuntimeClassList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5568
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeRuntimeClassListProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5591
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeRuntimeClassList",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.node.v1.RuntimeClassList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 5556
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeRuntimeClassList"
    },
    "cdk8s-plus-28.k8s.KubeRuntimeClassListProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.node.v1.RuntimeClassList"
        },
        "stability": "stable",
        "summary": "RuntimeClassList is a list of RuntimeClass objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeRuntimeClassListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 11549
      },
      "name": "KubeRuntimeClassListProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.node.v1.RuntimeClassList#items"
            },
            "stability": "stable",
            "summary": "items is a list of schema objects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11562
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeRuntimeClassProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.node.v1.RuntimeClassList#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard list metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11555
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeRuntimeClassListProps"
    },
    "cdk8s-plus-28.k8s.KubeRuntimeClassProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.node.v1.RuntimeClass"
        },
        "remarks": "The RuntimeClass is used to determine which container runtime is used to run all containers in a pod. RuntimeClasses are manually defined by a user or cluster provisioner, and referenced in the PodSpec. The Kubelet is responsible for resolving the RuntimeClassName reference before running the pod.  For more details, see https://kubernetes.io/docs/concepts/containers/runtime-class/",
        "stability": "stable",
        "summary": "RuntimeClass defines a class of container runtime supported in the cluster."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeRuntimeClassProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 11495
      },
      "name": "KubeRuntimeClassProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.node.v1.RuntimeClass#handler"
            },
            "remarks": "The possible values are specific to the node & CRI configuration.  It is assumed that all handlers are available on every node, and handlers of the same name are equivalent on every node. For example, a handler called \"runc\" might specify that the runc OCI runtime (using native Linux containers) will be used to run the containers in a pod. The Handler must be lowercase, conform to the DNS Label (RFC 1123) requirements, and is immutable.",
            "stability": "stable",
            "summary": "handler specifies the underlying runtime and configuration that the CRI implementation will use to handle pods of this class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11508
          },
          "name": "handler",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.node.v1.RuntimeClass#metadata"
            },
            "stability": "stable",
            "summary": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11501
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.node.v1.RuntimeClass#overhead"
            },
            "remarks": "For more details, see\nhttps://kubernetes.io/docs/concepts/scheduling-eviction/pod-overhead/",
            "stability": "stable",
            "summary": "overhead represents the resource overhead associated with running a pod for a given RuntimeClass."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11516
          },
          "name": "overhead",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.Overhead"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.node.v1.RuntimeClass#scheduling"
            },
            "remarks": "If scheduling is nil, this RuntimeClass is assumed to be supported by all nodes.",
            "stability": "stable",
            "summary": "scheduling holds the scheduling constraints to ensure that pods running with this RuntimeClass are scheduled to nodes that support it."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 11523
          },
          "name": "scheduling",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.Scheduling"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeRuntimeClassProps"
    },
    "cdk8s-plus-28.k8s.KubeScale": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.autoscaling.v1.Scale"
        },
        "stability": "stable",
        "summary": "Scale represents a scaling request for a resource."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeScale",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.autoscaling.v1.Scale\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 1941
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeScaleProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 1912
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.autoscaling.v1.Scale\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1928
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeScaleProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1951
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeScale",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.autoscaling.v1.Scale\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1916
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeScale"
    },
    "cdk8s-plus-28.k8s.KubeScaleProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.autoscaling.v1.Scale"
        },
        "stability": "stable",
        "summary": "Scale represents a scaling request for a resource."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeScaleProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 8859
      },
      "name": "KubeScaleProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v1.Scale#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata.",
            "stability": "stable",
            "summary": "Standard object metadata;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8865
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v1.Scale#spec"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status.",
            "stability": "stable",
            "summary": "spec defines the behavior of the scale."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8872
          },
          "name": "spec",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ScaleSpec"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeScaleProps"
    },
    "cdk8s-plus-28.k8s.KubeSecret": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.Secret"
        },
        "remarks": "The total bytes of the values in the Data field must be less than MaxSecretSize bytes.",
        "stability": "stable",
        "summary": "Secret holds secret data of a certain type."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeSecret",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.core.v1.Secret\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 4123
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeSecretProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 4094
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.core.v1.Secret\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4110
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeSecretProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4133
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeSecret",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.core.v1.Secret\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4098
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeSecret"
    },
    "cdk8s-plus-28.k8s.KubeSecretList": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.SecretList"
        },
        "stability": "stable",
        "summary": "SecretList is a list of Secret."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeSecretList",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.core.v1.SecretList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 4177
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeSecretListProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 4148
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.core.v1.SecretList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4164
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeSecretListProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4187
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeSecretList",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.core.v1.SecretList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4152
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeSecretList"
    },
    "cdk8s-plus-28.k8s.KubeSecretListProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.SecretList"
        },
        "stability": "stable",
        "summary": "SecretList is a list of Secret."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeSecretListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 10538
      },
      "name": "KubeSecretListProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.SecretList#items"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/configuration/secret",
            "stability": "stable",
            "summary": "Items is a list of secret objects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10551
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeSecretProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.SecretList#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "stability": "stable",
            "summary": "Standard list metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10544
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeSecretListProps"
    },
    "cdk8s-plus-28.k8s.KubeSecretProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.Secret"
        },
        "remarks": "The total bytes of the values in the Data field must be less than MaxSecretSize bytes.",
        "stability": "stable",
        "summary": "Secret holds secret data of a certain type."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeSecretProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 10477
      },
      "name": "KubeSecretProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Secret#data"
            },
            "remarks": "Each key must consist of alphanumeric characters, '-', '_' or '.'. The serialized form of the secret data is a base64 encoded string, representing the arbitrary (possibly non-string) data value here. Described in https://tools.ietf.org/html/rfc4648#section-4",
            "stability": "stable",
            "summary": "Data contains the secret data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10490
          },
          "name": "data",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Secret#immutable"
            },
            "remarks": "If not set to true, the field can be modified at any time. Defaulted to nil.",
            "stability": "stable",
            "summary": "Immutable, if set to true, ensures that data stored in the Secret cannot be updated (only object metadata can be modified)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10497
          },
          "name": "immutable",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Secret#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10483
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Secret#stringData"
            },
            "remarks": "It is provided as a write-only input field for convenience. All keys and values are merged into the data field on write, overwriting any existing values. The stringData field is never output when reading from the API.",
            "stability": "stable",
            "summary": "stringData allows specifying non-binary secret data in string form."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10504
          },
          "name": "stringData",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Secret#type"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/configuration/secret/#secret-types",
            "stability": "stable",
            "summary": "Used to facilitate programmatic handling of secret data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10511
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeSecretProps"
    },
    "cdk8s-plus-28.k8s.KubeSelfSubjectAccessReview": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.authorization.v1.SelfSubjectAccessReview"
        },
        "remarks": "Not filling in a spec.namespace means \"in all namespaces\".  Self is a special case, because users should always be able to check whether they can perform an action",
        "stability": "stable",
        "summary": "SelfSubjectAccessReview checks whether or the current user can perform an action."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeSelfSubjectAccessReview",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.authorization.v1.SelfSubjectAccessReview\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 1671
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeSelfSubjectAccessReviewProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 1642
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.authorization.v1.SelfSubjectAccessReview\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1658
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeSelfSubjectAccessReviewProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1681
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeSelfSubjectAccessReview",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.authorization.v1.SelfSubjectAccessReview\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1646
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeSelfSubjectAccessReview"
    },
    "cdk8s-plus-28.k8s.KubeSelfSubjectAccessReviewProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.authorization.v1.SelfSubjectAccessReview"
        },
        "remarks": "Not filling in a spec.namespace means \"in all namespaces\".  Self is a special case, because users should always be able to check whether they can perform an action",
        "stability": "stable",
        "summary": "SelfSubjectAccessReview checks whether or the current user can perform an action."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeSelfSubjectAccessReviewProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 8674
      },
      "name": "KubeSelfSubjectAccessReviewProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.authorization.v1.SelfSubjectAccessReview#spec"
            },
            "remarks": "user and groups must be empty",
            "stability": "stable",
            "summary": "Spec holds information about the request being evaluated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8687
          },
          "name": "spec",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.SelfSubjectAccessReviewSpec"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.authorization.v1.SelfSubjectAccessReview#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard list metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8680
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeSelfSubjectAccessReviewProps"
    },
    "cdk8s-plus-28.k8s.KubeSelfSubjectReview": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.authentication.v1.SelfSubjectReview"
        },
        "remarks": "When using impersonation, users will receive the user info of the user being impersonated.  If impersonation or request header authentication is used, any extra keys will have their case ignored and returned as lowercase.",
        "stability": "stable",
        "summary": "SelfSubjectReview contains the user information that the kube-apiserver has about the user making this request."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeSelfSubjectReview",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.authentication.v1.SelfSubjectReview\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 1347
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeSelfSubjectReviewProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 1318
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.authentication.v1.SelfSubjectReview\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1334
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeSelfSubjectReviewProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1357
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeSelfSubjectReview",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.authentication.v1.SelfSubjectReview\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1322
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeSelfSubjectReview"
    },
    "cdk8s-plus-28.k8s.KubeSelfSubjectReviewProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.authentication.v1.SelfSubjectReview"
        },
        "remarks": "When using impersonation, users will receive the user info of the user being impersonated.  If impersonation or request header authentication is used, any extra keys will have their case ignored and returned as lowercase.",
        "stability": "stable",
        "summary": "SelfSubjectReview contains the user information that the kube-apiserver has about the user making this request."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeSelfSubjectReviewProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 8476
      },
      "name": "KubeSelfSubjectReviewProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.authentication.v1.SelfSubjectReview#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8482
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeSelfSubjectReviewProps"
    },
    "cdk8s-plus-28.k8s.KubeSelfSubjectReviewV1Alpha1": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.authentication.v1alpha1.SelfSubjectReview"
        },
        "remarks": "When using impersonation, users will receive the user info of the user being impersonated.  If impersonation or request header authentication is used, any extra keys will have their case ignored and returned as lowercase.",
        "stability": "stable",
        "summary": "SelfSubjectReview contains the user information that the kube-apiserver has about the user making this request."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeSelfSubjectReviewV1Alpha1",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.authentication.v1alpha1.SelfSubjectReview\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 1509
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeSelfSubjectReviewV1Alpha1Props"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 1480
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.authentication.v1alpha1.SelfSubjectReview\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1496
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeSelfSubjectReviewV1Alpha1Props"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1519
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeSelfSubjectReviewV1Alpha1",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.authentication.v1alpha1.SelfSubjectReview\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1484
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeSelfSubjectReviewV1Alpha1"
    },
    "cdk8s-plus-28.k8s.KubeSelfSubjectReviewV1Alpha1Props": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.authentication.v1alpha1.SelfSubjectReview"
        },
        "remarks": "When using impersonation, users will receive the user info of the user being impersonated.  If impersonation or request header authentication is used, any extra keys will have their case ignored and returned as lowercase.",
        "stability": "stable",
        "summary": "SelfSubjectReview contains the user information that the kube-apiserver has about the user making this request."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeSelfSubjectReviewV1Alpha1Props",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 8579
      },
      "name": "KubeSelfSubjectReviewV1Alpha1Props",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.authentication.v1alpha1.SelfSubjectReview#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8585
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeSelfSubjectReviewV1Alpha1Props"
    },
    "cdk8s-plus-28.k8s.KubeSelfSubjectReviewV1Beta1": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.authentication.v1beta1.SelfSubjectReview"
        },
        "remarks": "When using impersonation, users will receive the user info of the user being impersonated.  If impersonation or request header authentication is used, any extra keys will have their case ignored and returned as lowercase.",
        "stability": "stable",
        "summary": "SelfSubjectReview contains the user information that the kube-apiserver has about the user making this request."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeSelfSubjectReviewV1Beta1",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.authentication.v1beta1.SelfSubjectReview\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 1563
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeSelfSubjectReviewV1Beta1Props"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 1534
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.authentication.v1beta1.SelfSubjectReview\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1550
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeSelfSubjectReviewV1Beta1Props"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1573
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeSelfSubjectReviewV1Beta1",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.authentication.v1beta1.SelfSubjectReview\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1538
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeSelfSubjectReviewV1Beta1"
    },
    "cdk8s-plus-28.k8s.KubeSelfSubjectReviewV1Beta1Props": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.authentication.v1beta1.SelfSubjectReview"
        },
        "remarks": "When using impersonation, users will receive the user info of the user being impersonated.  If impersonation or request header authentication is used, any extra keys will have their case ignored and returned as lowercase.",
        "stability": "stable",
        "summary": "SelfSubjectReview contains the user information that the kube-apiserver has about the user making this request."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeSelfSubjectReviewV1Beta1Props",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 8608
      },
      "name": "KubeSelfSubjectReviewV1Beta1Props",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.authentication.v1beta1.SelfSubjectReview#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8614
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeSelfSubjectReviewV1Beta1Props"
    },
    "cdk8s-plus-28.k8s.KubeSelfSubjectRulesReview": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.authorization.v1.SelfSubjectRulesReview"
        },
        "remarks": "The returned list of actions may be incomplete depending on the server's authorization mode, and any errors experienced during the evaluation. SelfSubjectRulesReview should be used by UIs to show/hide actions, or to quickly let an end user reason about their permissions. It should NOT Be used by external systems to drive authorization decisions as this raises confused deputy, cache lifetime/revocation, and correctness concerns. SubjectAccessReview, and LocalAccessReview are the correct way to defer authorization decisions to the API server.",
        "stability": "stable",
        "summary": "SelfSubjectRulesReview enumerates the set of actions the current user can perform within a namespace."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeSelfSubjectRulesReview",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.authorization.v1.SelfSubjectRulesReview\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 1725
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeSelfSubjectRulesReviewProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 1696
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.authorization.v1.SelfSubjectRulesReview\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1712
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeSelfSubjectRulesReviewProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1735
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeSelfSubjectRulesReview",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.authorization.v1.SelfSubjectRulesReview\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1700
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeSelfSubjectRulesReview"
    },
    "cdk8s-plus-28.k8s.KubeSelfSubjectRulesReviewProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.authorization.v1.SelfSubjectRulesReview"
        },
        "remarks": "The returned list of actions may be incomplete depending on the server's authorization mode, and any errors experienced during the evaluation. SelfSubjectRulesReview should be used by UIs to show/hide actions, or to quickly let an end user reason about their permissions. It should NOT Be used by external systems to drive authorization decisions as this raises confused deputy, cache lifetime/revocation, and correctness concerns. SubjectAccessReview, and LocalAccessReview are the correct way to defer authorization decisions to the API server.",
        "stability": "stable",
        "summary": "SelfSubjectRulesReview enumerates the set of actions the current user can perform within a namespace."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeSelfSubjectRulesReviewProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 8711
      },
      "name": "KubeSelfSubjectRulesReviewProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.authorization.v1.SelfSubjectRulesReview#spec"
            },
            "stability": "stable",
            "summary": "Spec holds information about the request being evaluated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8724
          },
          "name": "spec",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.SelfSubjectRulesReviewSpec"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.authorization.v1.SelfSubjectRulesReview#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard list metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8717
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeSelfSubjectRulesReviewProps"
    },
    "cdk8s-plus-28.k8s.KubeService": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.Service"
        },
        "stability": "stable",
        "summary": "Service is a named abstraction of software service (for example, mysql) consisting of local port (for example 3306) that the proxy listens on, and the selector that determines which pods will answer requests sent through the proxy."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeService",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.core.v1.Service\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 4231
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeServiceProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 4202
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.core.v1.Service\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4218
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeServiceProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4241
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeService",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.core.v1.Service\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4206
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeService"
    },
    "cdk8s-plus-28.k8s.KubeServiceAccount": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ServiceAccount"
        },
        "stability": "stable",
        "summary": "ServiceAccount binds together: * a name, understood by users, and perhaps by peripheral systems, for an identity * a principal that can be authenticated and authorized * a set of secrets."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeServiceAccount",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.core.v1.ServiceAccount\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 4285
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeServiceAccountProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 4256
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.core.v1.ServiceAccount\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4272
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeServiceAccountProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4295
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeServiceAccount",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.core.v1.ServiceAccount\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4260
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeServiceAccount"
    },
    "cdk8s-plus-28.k8s.KubeServiceAccountList": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ServiceAccountList"
        },
        "stability": "stable",
        "summary": "ServiceAccountList is a list of ServiceAccount objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeServiceAccountList",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.core.v1.ServiceAccountList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 4339
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeServiceAccountListProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 4310
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.core.v1.ServiceAccountList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4326
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeServiceAccountListProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4349
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeServiceAccountList",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.core.v1.ServiceAccountList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4314
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeServiceAccountList"
    },
    "cdk8s-plus-28.k8s.KubeServiceAccountListProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ServiceAccountList"
        },
        "stability": "stable",
        "summary": "ServiceAccountList is a list of ServiceAccount objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeServiceAccountListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 10665
      },
      "name": "KubeServiceAccountListProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ServiceAccountList#items"
            },
            "remarks": "More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
            "stability": "stable",
            "summary": "List of ServiceAccounts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10678
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeServiceAccountProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ServiceAccountList#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "stability": "stable",
            "summary": "Standard list metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10671
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeServiceAccountListProps"
    },
    "cdk8s-plus-28.k8s.KubeServiceAccountProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ServiceAccount"
        },
        "stability": "stable",
        "summary": "ServiceAccount binds together: * a name, understood by users, and perhaps by peripheral systems, for an identity * a principal that can be authenticated and authorized * a set of secrets."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeServiceAccountProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 10612
      },
      "name": "KubeServiceAccountProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ServiceAccount#automountServiceAccountToken"
            },
            "remarks": "Can be overridden at the pod level.",
            "stability": "stable",
            "summary": "AutomountServiceAccountToken indicates whether pods running as this service account should have an API token automatically mounted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10625
          },
          "name": "automountServiceAccountToken",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ServiceAccount#imagePullSecrets"
            },
            "remarks": "ImagePullSecrets are distinct from Secrets because Secrets can be mounted in the pod, but ImagePullSecrets are only accessed by the kubelet. More info: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod",
            "stability": "stable",
            "summary": "ImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any images in pods that reference this ServiceAccount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10632
          },
          "name": "imagePullSecrets",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.LocalObjectReference"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ServiceAccount#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10618
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ServiceAccount#secrets"
            },
            "remarks": "Pods are only limited to this list if this service account has a \"kubernetes.io/enforce-mountable-secrets\" annotation set to \"true\". This field should not be used to find auto-generated service account token secrets for use outside of pods. Instead, tokens can be requested directly using the TokenRequest API, or service account token secrets can be manually created. More info: https://kubernetes.io/docs/concepts/configuration/secret",
            "stability": "stable",
            "summary": "Secrets is a list of the secrets in the same namespace that pods running using this ServiceAccount are allowed to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10639
          },
          "name": "secrets",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.ObjectReference"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeServiceAccountProps"
    },
    "cdk8s-plus-28.k8s.KubeServiceList": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ServiceList"
        },
        "stability": "stable",
        "summary": "ServiceList holds a list of services."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeServiceList",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.core.v1.ServiceList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 4393
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeServiceListProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 4364
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.core.v1.ServiceList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4380
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeServiceListProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4403
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeServiceList",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.core.v1.ServiceList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 4368
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeServiceList"
    },
    "cdk8s-plus-28.k8s.KubeServiceListProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ServiceList"
        },
        "stability": "stable",
        "summary": "ServiceList holds a list of services."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeServiceListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 10702
      },
      "name": "KubeServiceListProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ServiceList#items"
            },
            "stability": "stable",
            "summary": "List of services."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10715
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeServiceProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ServiceList#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "stability": "stable",
            "summary": "Standard list metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10708
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeServiceListProps"
    },
    "cdk8s-plus-28.k8s.KubeServiceProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.Service"
        },
        "stability": "stable",
        "summary": "Service is a named abstraction of software service (for example, mysql) consisting of local port (for example 3306) that the proxy listens on, and the selector that determines which pods will answer requests sent through the proxy."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeServiceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 10575
      },
      "name": "KubeServiceProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Service#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10581
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Service#spec"
            },
            "remarks": "https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
            "stability": "stable",
            "summary": "Spec defines the behavior of a service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 10588
          },
          "name": "spec",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ServiceSpec"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeServiceProps"
    },
    "cdk8s-plus-28.k8s.KubeStatefulSet": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.apps.v1.StatefulSet"
        },
        "remarks": "Identities are defined as:\n- Network: A single stable DNS and hostname.\n- Storage: As many VolumeClaims as requested.\n\nThe StatefulSet guarantees that a given network identity will always map to the same storage identity.",
        "stability": "stable",
        "summary": "StatefulSet represents a set of pods with consistent identities."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeStatefulSet",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.apps.v1.StatefulSet\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 1239
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeStatefulSetProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 1210
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.apps.v1.StatefulSet\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1226
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeStatefulSetProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1249
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeStatefulSet",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.apps.v1.StatefulSet\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1214
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeStatefulSet"
    },
    "cdk8s-plus-28.k8s.KubeStatefulSetList": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.apps.v1.StatefulSetList"
        },
        "stability": "stable",
        "summary": "StatefulSetList is a collection of StatefulSets."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeStatefulSetList",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.apps.v1.StatefulSetList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 1293
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeStatefulSetListProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 1264
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.apps.v1.StatefulSetList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1280
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeStatefulSetListProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1303
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeStatefulSetList",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.apps.v1.StatefulSetList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1268
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeStatefulSetList"
    },
    "cdk8s-plus-28.k8s.KubeStatefulSetListProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.apps.v1.StatefulSetList"
        },
        "stability": "stable",
        "summary": "StatefulSetList is a collection of StatefulSets."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeStatefulSetListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 8439
      },
      "name": "KubeStatefulSetListProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.StatefulSetList#items"
            },
            "stability": "stable",
            "summary": "Items is the list of stateful sets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8452
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeStatefulSetProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.StatefulSetList#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard list's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8445
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeStatefulSetListProps"
    },
    "cdk8s-plus-28.k8s.KubeStatefulSetProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.apps.v1.StatefulSet"
        },
        "remarks": "Identities are defined as:\n- Network: A single stable DNS and hostname.\n- Storage: As many VolumeClaims as requested.\n\nThe StatefulSet guarantees that a given network identity will always map to the same storage identity.",
        "stability": "stable",
        "summary": "StatefulSet represents a set of pods with consistent identities."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeStatefulSetProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 8402
      },
      "name": "KubeStatefulSetProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.StatefulSet#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8408
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.StatefulSet#spec"
            },
            "stability": "stable",
            "summary": "Spec defines the desired identities of pods in this set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8415
          },
          "name": "spec",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.StatefulSetSpec"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeStatefulSetProps"
    },
    "cdk8s-plus-28.k8s.KubeStatus": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.Status"
        },
        "stability": "stable",
        "summary": "Status is a return value for calls that don't return other objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeStatus",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.apimachinery.pkg.apis.meta.v1.Status\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 7435
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeStatusProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 7406
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.apimachinery.pkg.apis.meta.v1.Status\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7422
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeStatusProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7445
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeStatus",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.apimachinery.pkg.apis.meta.v1.Status\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7410
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeStatus"
    },
    "cdk8s-plus-28.k8s.KubeStatusProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.Status"
        },
        "stability": "stable",
        "summary": "Status is a return value for calls that don't return other objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeStatusProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 12977
      },
      "name": "KubeStatusProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.Status#code"
            },
            "stability": "stable",
            "summary": "Suggested HTTP return code for this status, 0 if not set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12990
          },
          "name": "code",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.Status#details"
            },
            "remarks": "Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type.",
            "stability": "stable",
            "summary": "Extended data associated with the reason."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12997
          },
          "name": "details",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.StatusDetails"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.Status#message"
            },
            "stability": "stable",
            "summary": "A human-readable description of the status of this operation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13004
          },
          "name": "message",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.Status#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "stability": "stable",
            "summary": "Standard list metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12983
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.Status#reason"
            },
            "remarks": "If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.",
            "stability": "stable",
            "summary": "A machine-readable description of why this operation is in the \"Failure\" status."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13011
          },
          "name": "reason",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeStatusProps"
    },
    "cdk8s-plus-28.k8s.KubeStorageClass": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.storage.v1.StorageClass"
        },
        "remarks": "StorageClasses are non-namespaced; the name of the storage class according to etcd is in ObjectMeta.Name.",
        "stability": "stable",
        "summary": "StorageClass describes the parameters for a class of storage for which PersistentVolumes can be dynamically provisioned."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeStorageClass",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.storage.v1.StorageClass\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 7109
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeStorageClassProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 7080
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.storage.v1.StorageClass\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7096
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeStorageClassProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7119
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeStorageClass",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.storage.v1.StorageClass\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7084
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeStorageClass"
    },
    "cdk8s-plus-28.k8s.KubeStorageClassList": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.storage.v1.StorageClassList"
        },
        "stability": "stable",
        "summary": "StorageClassList is a collection of storage classes."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeStorageClassList",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.storage.v1.StorageClassList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 7163
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeStorageClassListProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 7134
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.storage.v1.StorageClassList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7150
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeStorageClassListProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7173
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeStorageClassList",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.storage.v1.StorageClassList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7138
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeStorageClassList"
    },
    "cdk8s-plus-28.k8s.KubeStorageClassListProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.storage.v1.StorageClassList"
        },
        "stability": "stable",
        "summary": "StorageClassList is a collection of storage classes."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeStorageClassListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 12790
      },
      "name": "KubeStorageClassListProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.StorageClassList#items"
            },
            "stability": "stable",
            "summary": "items is the list of StorageClasses."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12803
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeStorageClassProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.StorageClassList#metadata"
            },
            "stability": "stable",
            "summary": "Standard list metadata More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12796
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeStorageClassListProps"
    },
    "cdk8s-plus-28.k8s.KubeStorageClassProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.storage.v1.StorageClass"
        },
        "remarks": "StorageClasses are non-namespaced; the name of the storage class according to etcd is in ObjectMeta.Name.",
        "stability": "stable",
        "summary": "StorageClass describes the parameters for a class of storage for which PersistentVolumes can be dynamically provisioned."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeStorageClassProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 12704
      },
      "name": "KubeStorageClassProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.StorageClass#provisioner"
            },
            "stability": "stable",
            "summary": "provisioner indicates the type of the provisioner."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12745
          },
          "name": "provisioner",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.StorageClass#allowedTopologies"
            },
            "remarks": "Each volume plugin defines its own supported topology specifications. An empty TopologySelectorTerm list means there is no topology restriction. This field is only honored by servers that enable the VolumeScheduling feature.",
            "stability": "stable",
            "summary": "allowedTopologies restrict the node topologies where volumes can be dynamically provisioned."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12724
          },
          "name": "allowedTopologies",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.TopologySelectorTerm"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.StorageClass#allowVolumeExpansion"
            },
            "stability": "stable",
            "summary": "allowVolumeExpansion shows whether the storage class allow volume expand."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12717
          },
          "name": "allowVolumeExpansion",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.StorageClass#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12710
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.StorageClass#mountOptions"
            },
            "remarks": "e.g. [\"ro\", \"soft\"]. Not validated - mount of the PVs will simply fail if one is invalid.",
            "stability": "stable",
            "summary": "mountOptions controls the mountOptions for dynamically provisioned PersistentVolumes of this storage class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12731
          },
          "name": "mountOptions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.StorageClass#parameters"
            },
            "stability": "stable",
            "summary": "parameters holds the parameters for the provisioner that should create volumes of this storage class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12738
          },
          "name": "parameters",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.StorageClass#reclaimPolicy"
            },
            "default": "Delete.",
            "remarks": "Defaults to Delete.",
            "stability": "stable",
            "summary": "reclaimPolicy controls the reclaimPolicy for dynamically provisioned PersistentVolumes of this storage class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12753
          },
          "name": "reclaimPolicy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.StorageClass#volumeBindingMode"
            },
            "remarks": "When unset, VolumeBindingImmediate is used. This field is only honored by servers that enable the VolumeScheduling feature.",
            "stability": "stable",
            "summary": "volumeBindingMode indicates how PersistentVolumeClaims should be provisioned and bound."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12760
          },
          "name": "volumeBindingMode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeStorageClassProps"
    },
    "cdk8s-plus-28.k8s.KubeStorageVersionListV1Alpha1": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.apiserverinternal.v1alpha1.StorageVersionList"
        },
        "stability": "stable",
        "summary": "A list of StorageVersions."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeStorageVersionListV1Alpha1",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.apiserverinternal.v1alpha1.StorageVersionList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 749
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeStorageVersionListV1Alpha1Props"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 720
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.apiserverinternal.v1alpha1.StorageVersionList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 736
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeStorageVersionListV1Alpha1Props"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 759
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeStorageVersionListV1Alpha1",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.apiserverinternal.v1alpha1.StorageVersionList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 724
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeStorageVersionListV1Alpha1"
    },
    "cdk8s-plus-28.k8s.KubeStorageVersionListV1Alpha1Props": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.apiserverinternal.v1alpha1.StorageVersionList"
        },
        "stability": "stable",
        "summary": "A list of StorageVersions."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeStorageVersionListV1Alpha1Props",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 8057
      },
      "name": "KubeStorageVersionListV1Alpha1Props",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apiserverinternal.v1alpha1.StorageVersionList#items"
            },
            "stability": "stable",
            "summary": "Items holds a list of StorageVersion."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8070
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeStorageVersionV1Alpha1Props"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apiserverinternal.v1alpha1.StorageVersionList#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard list metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8063
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeStorageVersionListV1Alpha1Props"
    },
    "cdk8s-plus-28.k8s.KubeStorageVersionV1Alpha1": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.apiserverinternal.v1alpha1.StorageVersion"
        },
        "stability": "stable",
        "summary": "Storage version of a specific resource."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeStorageVersionV1Alpha1",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.apiserverinternal.v1alpha1.StorageVersion\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 695
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeStorageVersionV1Alpha1Props"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 666
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.apiserverinternal.v1alpha1.StorageVersion\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 682
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeStorageVersionV1Alpha1Props"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 705
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeStorageVersionV1Alpha1",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.apiserverinternal.v1alpha1.StorageVersion\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 670
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeStorageVersionV1Alpha1"
    },
    "cdk8s-plus-28.k8s.KubeStorageVersionV1Alpha1Props": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.apiserverinternal.v1alpha1.StorageVersion"
        },
        "stability": "stable",
        "summary": "Storage version of a specific resource."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeStorageVersionV1Alpha1Props",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 8020
      },
      "name": "KubeStorageVersionV1Alpha1Props",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apiserverinternal.v1alpha1.StorageVersion#spec"
            },
            "remarks": "It is here to comply with Kubernetes API style.",
            "stability": "stable",
            "summary": "Spec is an empty spec."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8033
          },
          "name": "spec",
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apiserverinternal.v1alpha1.StorageVersion#metadata"
            },
            "stability": "stable",
            "summary": "The name is <group>.<resource>."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8026
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeStorageVersionV1Alpha1Props"
    },
    "cdk8s-plus-28.k8s.KubeSubjectAccessReview": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.authorization.v1.SubjectAccessReview"
        },
        "stability": "stable",
        "summary": "SubjectAccessReview checks whether or not a user or group can perform an action."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeSubjectAccessReview",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.authorization.v1.SubjectAccessReview\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 1779
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeSubjectAccessReviewProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 1750
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.authorization.v1.SubjectAccessReview\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1766
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeSubjectAccessReviewProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1789
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeSubjectAccessReview",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.authorization.v1.SubjectAccessReview\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1754
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeSubjectAccessReview"
    },
    "cdk8s-plus-28.k8s.KubeSubjectAccessReviewProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.authorization.v1.SubjectAccessReview"
        },
        "stability": "stable",
        "summary": "SubjectAccessReview checks whether or not a user or group can perform an action."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeSubjectAccessReviewProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 8748
      },
      "name": "KubeSubjectAccessReviewProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.authorization.v1.SubjectAccessReview#spec"
            },
            "stability": "stable",
            "summary": "Spec holds information about the request being evaluated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8761
          },
          "name": "spec",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.SubjectAccessReviewSpec"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.authorization.v1.SubjectAccessReview#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard list metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8754
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeSubjectAccessReviewProps"
    },
    "cdk8s-plus-28.k8s.KubeTokenRequest": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.authentication.v1.TokenRequest"
        },
        "stability": "stable",
        "summary": "TokenRequest requests a token for a given service account."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeTokenRequest",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.authentication.v1.TokenRequest\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 1401
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeTokenRequestProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 1372
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.authentication.v1.TokenRequest\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1388
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeTokenRequestProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1411
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeTokenRequest",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.authentication.v1.TokenRequest\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1376
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeTokenRequest"
    },
    "cdk8s-plus-28.k8s.KubeTokenRequestProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.authentication.v1.TokenRequest"
        },
        "stability": "stable",
        "summary": "TokenRequest requests a token for a given service account."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeTokenRequestProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 8505
      },
      "name": "KubeTokenRequestProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.authentication.v1.TokenRequest#spec"
            },
            "stability": "stable",
            "summary": "Spec holds information about the request being evaluated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8518
          },
          "name": "spec",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.TokenRequestSpec"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.authentication.v1.TokenRequest#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8511
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeTokenRequestProps"
    },
    "cdk8s-plus-28.k8s.KubeTokenReview": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.authentication.v1.TokenReview"
        },
        "remarks": "Note: TokenReview requests may be cached by the webhook token authenticator plugin in the kube-apiserver.",
        "stability": "stable",
        "summary": "TokenReview attempts to authenticate a token to a known user."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeTokenReview",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.authentication.v1.TokenReview\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 1455
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeTokenReviewProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 1426
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.authentication.v1.TokenReview\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1442
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeTokenReviewProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1465
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeTokenReview",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.authentication.v1.TokenReview\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 1430
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeTokenReview"
    },
    "cdk8s-plus-28.k8s.KubeTokenReviewProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.authentication.v1.TokenReview"
        },
        "remarks": "Note: TokenReview requests may be cached by the webhook token authenticator plugin in the kube-apiserver.",
        "stability": "stable",
        "summary": "TokenReview attempts to authenticate a token to a known user."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeTokenReviewProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 8542
      },
      "name": "KubeTokenReviewProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.authentication.v1.TokenReview#spec"
            },
            "stability": "stable",
            "summary": "Spec holds information about the request being evaluated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8555
          },
          "name": "spec",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.TokenReviewSpec"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.authentication.v1.TokenReview#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 8548
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeTokenReviewProps"
    },
    "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyBindingListV1Alpha1": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyBindingList"
        },
        "stability": "stable",
        "summary": "ValidatingAdmissionPolicyBindingList is a list of ValidatingAdmissionPolicyBinding."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyBindingListV1Alpha1",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyBindingList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 367
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyBindingListV1Alpha1Props"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 338
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyBindingList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 354
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyBindingListV1Alpha1Props"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 377
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeValidatingAdmissionPolicyBindingListV1Alpha1",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyBindingList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 342
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeValidatingAdmissionPolicyBindingListV1Alpha1"
    },
    "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyBindingListV1Alpha1Props": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyBindingList"
        },
        "stability": "stable",
        "summary": "ValidatingAdmissionPolicyBindingList is a list of ValidatingAdmissionPolicyBinding."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyBindingListV1Alpha1Props",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 7794
      },
      "name": "KubeValidatingAdmissionPolicyBindingListV1Alpha1Props",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyBindingList#items"
            },
            "stability": "stable",
            "summary": "List of PolicyBinding."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7807
          },
          "name": "items",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyBindingV1Alpha1Props"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyBindingList#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "stability": "stable",
            "summary": "Standard list metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7800
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeValidatingAdmissionPolicyBindingListV1Alpha1Props"
    },
    "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyBindingListV1Beta1": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyBindingList"
        },
        "stability": "stable",
        "summary": "ValidatingAdmissionPolicyBindingList is a list of ValidatingAdmissionPolicyBinding."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyBindingListV1Beta1",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyBindingList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 587
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyBindingListV1Beta1Props"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 558
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyBindingList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 574
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyBindingListV1Beta1Props"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 597
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeValidatingAdmissionPolicyBindingListV1Beta1",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyBindingList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 562
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeValidatingAdmissionPolicyBindingListV1Beta1"
    },
    "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyBindingListV1Beta1Props": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyBindingList"
        },
        "stability": "stable",
        "summary": "ValidatingAdmissionPolicyBindingList is a list of ValidatingAdmissionPolicyBinding."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyBindingListV1Beta1Props",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 7946
      },
      "name": "KubeValidatingAdmissionPolicyBindingListV1Beta1Props",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyBindingList#items"
            },
            "stability": "stable",
            "summary": "List of PolicyBinding."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7959
          },
          "name": "items",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyBindingV1Beta1Props"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyBindingList#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "stability": "stable",
            "summary": "Standard list metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7952
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeValidatingAdmissionPolicyBindingListV1Beta1Props"
    },
    "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyBindingV1Alpha1": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyBinding"
        },
        "remarks": "ValidatingAdmissionPolicyBinding and parameter CRDs together define how cluster administrators configure policies for clusters.\n\nFor a given admission request, each binding will cause its policy to be evaluated N times, where N is 1 for policies/bindings that don't use params, otherwise N is the number of parameters selected by the binding.\n\nThe CEL expressions of a policy must have a computed CEL cost below the maximum CEL budget. Each evaluation of the policy is given an independent CEL cost budget. Adding/removing policies, bindings, or params can not affect whether a given (policy, binding, param) combination is within its own CEL budget.",
        "stability": "stable",
        "summary": "ValidatingAdmissionPolicyBinding binds the ValidatingAdmissionPolicy with paramerized resources."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyBindingV1Alpha1",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyBinding\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 313
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyBindingV1Alpha1Props"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 284
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyBinding\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 300
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyBindingV1Alpha1Props"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 323
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeValidatingAdmissionPolicyBindingV1Alpha1",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyBinding\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 288
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeValidatingAdmissionPolicyBindingV1Alpha1"
    },
    "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyBindingV1Alpha1Props": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyBinding"
        },
        "remarks": "ValidatingAdmissionPolicyBinding and parameter CRDs together define how cluster administrators configure policies for clusters.\n\nFor a given admission request, each binding will cause its policy to be evaluated N times, where N is 1 for policies/bindings that don't use params, otherwise N is the number of parameters selected by the binding.\n\nThe CEL expressions of a policy must have a computed CEL cost below the maximum CEL budget. Each evaluation of the policy is given an independent CEL cost budget. Adding/removing policies, bindings, or params can not affect whether a given (policy, binding, param) combination is within its own CEL budget.",
        "stability": "stable",
        "summary": "ValidatingAdmissionPolicyBinding binds the ValidatingAdmissionPolicy with paramerized resources."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyBindingV1Alpha1Props",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 7757
      },
      "name": "KubeValidatingAdmissionPolicyBindingV1Alpha1Props",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyBinding#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata.",
            "stability": "stable",
            "summary": "Standard object metadata;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7763
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyBinding#spec"
            },
            "stability": "stable",
            "summary": "Specification of the desired behavior of the ValidatingAdmissionPolicyBinding."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7770
          },
          "name": "spec",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ValidatingAdmissionPolicyBindingSpecV1Alpha1"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeValidatingAdmissionPolicyBindingV1Alpha1Props"
    },
    "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyBindingV1Beta1": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyBinding"
        },
        "remarks": "ValidatingAdmissionPolicyBinding and parameter CRDs together define how cluster administrators configure policies for clusters.\n\nFor a given admission request, each binding will cause its policy to be evaluated N times, where N is 1 for policies/bindings that don't use params, otherwise N is the number of parameters selected by the binding.\n\nThe CEL expressions of a policy must have a computed CEL cost below the maximum CEL budget. Each evaluation of the policy is given an independent CEL cost budget. Adding/removing policies, bindings, or params can not affect whether a given (policy, binding, param) combination is within its own CEL budget.",
        "stability": "stable",
        "summary": "ValidatingAdmissionPolicyBinding binds the ValidatingAdmissionPolicy with paramerized resources."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyBindingV1Beta1",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyBinding\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 533
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyBindingV1Beta1Props"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 504
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyBinding\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 520
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyBindingV1Beta1Props"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 543
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeValidatingAdmissionPolicyBindingV1Beta1",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyBinding\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 508
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeValidatingAdmissionPolicyBindingV1Beta1"
    },
    "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyBindingV1Beta1Props": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyBinding"
        },
        "remarks": "ValidatingAdmissionPolicyBinding and parameter CRDs together define how cluster administrators configure policies for clusters.\n\nFor a given admission request, each binding will cause its policy to be evaluated N times, where N is 1 for policies/bindings that don't use params, otherwise N is the number of parameters selected by the binding.\n\nThe CEL expressions of a policy must have a computed CEL cost below the maximum CEL budget. Each evaluation of the policy is given an independent CEL cost budget. Adding/removing policies, bindings, or params can not affect whether a given (policy, binding, param) combination is within its own CEL budget.",
        "stability": "stable",
        "summary": "ValidatingAdmissionPolicyBinding binds the ValidatingAdmissionPolicy with paramerized resources."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyBindingV1Beta1Props",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 7909
      },
      "name": "KubeValidatingAdmissionPolicyBindingV1Beta1Props",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyBinding#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata.",
            "stability": "stable",
            "summary": "Standard object metadata;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7915
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyBinding#spec"
            },
            "stability": "stable",
            "summary": "Specification of the desired behavior of the ValidatingAdmissionPolicyBinding."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7922
          },
          "name": "spec",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ValidatingAdmissionPolicyBindingSpecV1Beta1"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeValidatingAdmissionPolicyBindingV1Beta1Props"
    },
    "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyListV1Alpha1": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyList"
        },
        "stability": "stable",
        "summary": "ValidatingAdmissionPolicyList is a list of ValidatingAdmissionPolicy."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyListV1Alpha1",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 421
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyListV1Alpha1Props"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 392
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 408
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyListV1Alpha1Props"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 431
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeValidatingAdmissionPolicyListV1Alpha1",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 396
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeValidatingAdmissionPolicyListV1Alpha1"
    },
    "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyListV1Alpha1Props": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyList"
        },
        "stability": "stable",
        "summary": "ValidatingAdmissionPolicyList is a list of ValidatingAdmissionPolicy."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyListV1Alpha1Props",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 7831
      },
      "name": "KubeValidatingAdmissionPolicyListV1Alpha1Props",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyList#items"
            },
            "stability": "stable",
            "summary": "List of ValidatingAdmissionPolicy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7844
          },
          "name": "items",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyV1Alpha1Props"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyList#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "stability": "stable",
            "summary": "Standard list metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7837
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeValidatingAdmissionPolicyListV1Alpha1Props"
    },
    "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyListV1Beta1": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyList"
        },
        "stability": "stable",
        "summary": "ValidatingAdmissionPolicyList is a list of ValidatingAdmissionPolicy."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyListV1Beta1",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 641
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyListV1Beta1Props"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 612
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 628
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyListV1Beta1Props"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 651
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeValidatingAdmissionPolicyListV1Beta1",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 616
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeValidatingAdmissionPolicyListV1Beta1"
    },
    "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyListV1Beta1Props": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyList"
        },
        "stability": "stable",
        "summary": "ValidatingAdmissionPolicyList is a list of ValidatingAdmissionPolicy."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyListV1Beta1Props",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 7983
      },
      "name": "KubeValidatingAdmissionPolicyListV1Beta1Props",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyList#items"
            },
            "stability": "stable",
            "summary": "List of ValidatingAdmissionPolicy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7996
          },
          "name": "items",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyV1Beta1Props"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyList#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "stability": "stable",
            "summary": "Standard list metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7989
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeValidatingAdmissionPolicyListV1Beta1Props"
    },
    "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyV1Alpha1": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicy"
        },
        "stability": "stable",
        "summary": "ValidatingAdmissionPolicy describes the definition of an admission validation policy that accepts or rejects an object without changing it."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyV1Alpha1",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicy\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 255
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyV1Alpha1Props"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 226
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicy\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 242
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyV1Alpha1Props"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 265
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeValidatingAdmissionPolicyV1Alpha1",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicy\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 230
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeValidatingAdmissionPolicyV1Alpha1"
    },
    "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyV1Alpha1Props": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicy"
        },
        "stability": "stable",
        "summary": "ValidatingAdmissionPolicy describes the definition of an admission validation policy that accepts or rejects an object without changing it."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyV1Alpha1Props",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 7716
      },
      "name": "KubeValidatingAdmissionPolicyV1Alpha1Props",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicy#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata.",
            "stability": "stable",
            "summary": "Standard object metadata;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7722
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicy#spec"
            },
            "stability": "stable",
            "summary": "Specification of the desired behavior of the ValidatingAdmissionPolicy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7729
          },
          "name": "spec",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ValidatingAdmissionPolicySpecV1Alpha1"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeValidatingAdmissionPolicyV1Alpha1Props"
    },
    "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyV1Beta1": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicy"
        },
        "stability": "stable",
        "summary": "ValidatingAdmissionPolicy describes the definition of an admission validation policy that accepts or rejects an object without changing it."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyV1Beta1",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicy\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 475
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyV1Beta1Props"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 446
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicy\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 462
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyV1Beta1Props"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 485
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeValidatingAdmissionPolicyV1Beta1",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicy\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 450
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeValidatingAdmissionPolicyV1Beta1"
    },
    "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyV1Beta1Props": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicy"
        },
        "stability": "stable",
        "summary": "ValidatingAdmissionPolicy describes the definition of an admission validation policy that accepts or rejects an object without changing it."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeValidatingAdmissionPolicyV1Beta1Props",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 7868
      },
      "name": "KubeValidatingAdmissionPolicyV1Beta1Props",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicy#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata.",
            "stability": "stable",
            "summary": "Standard object metadata;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7874
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicy#spec"
            },
            "stability": "stable",
            "summary": "Specification of the desired behavior of the ValidatingAdmissionPolicy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7881
          },
          "name": "spec",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ValidatingAdmissionPolicySpecV1Beta1"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeValidatingAdmissionPolicyV1Beta1Props"
    },
    "cdk8s-plus-28.k8s.KubeValidatingWebhookConfiguration": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1.ValidatingWebhookConfiguration"
        },
        "stability": "stable",
        "summary": "ValidatingWebhookConfiguration describes the configuration of and admission webhook that accept or reject and object without changing it."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeValidatingWebhookConfiguration",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.admissionregistration.v1.ValidatingWebhookConfiguration\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 147
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeValidatingWebhookConfigurationProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 118
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.admissionregistration.v1.ValidatingWebhookConfiguration\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 134
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeValidatingWebhookConfigurationProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 157
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeValidatingWebhookConfiguration",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.admissionregistration.v1.ValidatingWebhookConfiguration\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 122
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeValidatingWebhookConfiguration"
    },
    "cdk8s-plus-28.k8s.KubeValidatingWebhookConfigurationList": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1.ValidatingWebhookConfigurationList"
        },
        "stability": "stable",
        "summary": "ValidatingWebhookConfigurationList is a list of ValidatingWebhookConfiguration."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeValidatingWebhookConfigurationList",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.admissionregistration.v1.ValidatingWebhookConfigurationList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 201
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeValidatingWebhookConfigurationListProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 172
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.admissionregistration.v1.ValidatingWebhookConfigurationList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 188
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeValidatingWebhookConfigurationListProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 211
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeValidatingWebhookConfigurationList",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.admissionregistration.v1.ValidatingWebhookConfigurationList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 176
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeValidatingWebhookConfigurationList"
    },
    "cdk8s-plus-28.k8s.KubeValidatingWebhookConfigurationListProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1.ValidatingWebhookConfigurationList"
        },
        "stability": "stable",
        "summary": "ValidatingWebhookConfigurationList is a list of ValidatingWebhookConfiguration."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeValidatingWebhookConfigurationListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 7679
      },
      "name": "KubeValidatingWebhookConfigurationListProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1.ValidatingWebhookConfigurationList#items"
            },
            "stability": "stable",
            "summary": "List of ValidatingWebhookConfiguration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7692
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeValidatingWebhookConfigurationProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1.ValidatingWebhookConfigurationList#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "stability": "stable",
            "summary": "Standard list metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7685
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeValidatingWebhookConfigurationListProps"
    },
    "cdk8s-plus-28.k8s.KubeValidatingWebhookConfigurationProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1.ValidatingWebhookConfiguration"
        },
        "stability": "stable",
        "summary": "ValidatingWebhookConfiguration describes the configuration of and admission webhook that accept or reject and object without changing it."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeValidatingWebhookConfigurationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 7642
      },
      "name": "KubeValidatingWebhookConfigurationProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1.ValidatingWebhookConfiguration#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata.",
            "stability": "stable",
            "summary": "Standard object metadata;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7648
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1.ValidatingWebhookConfiguration#webhooks"
            },
            "stability": "stable",
            "summary": "Webhooks is a list of webhooks and the affected resources and operations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7655
          },
          "name": "webhooks",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.ValidatingWebhook"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeValidatingWebhookConfigurationProps"
    },
    "cdk8s-plus-28.k8s.KubeVolumeAttachment": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.storage.v1.VolumeAttachment"
        },
        "remarks": "VolumeAttachment objects are non-namespaced.",
        "stability": "stable",
        "summary": "VolumeAttachment captures the intent to attach or detach the specified volume to/from the specified node."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeVolumeAttachment",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.storage.v1.VolumeAttachment\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 7219
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeVolumeAttachmentProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 7190
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.storage.v1.VolumeAttachment\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7206
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeVolumeAttachmentProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7229
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeVolumeAttachment",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.storage.v1.VolumeAttachment\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7194
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeVolumeAttachment"
    },
    "cdk8s-plus-28.k8s.KubeVolumeAttachmentList": {
      "assembly": "cdk8s-plus-28",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "io.k8s.api.storage.v1.VolumeAttachmentList"
        },
        "stability": "stable",
        "summary": "VolumeAttachmentList is a collection of VolumeAttachment objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeVolumeAttachmentList",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"io.k8s.api.storage.v1.VolumeAttachmentList\" API object."
        },
        "locationInModule": {
          "filename": "src/imports/k8s.ts",
          "line": 7273
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "type": {
              "fqn": "cdk8s-plus-28.k8s.KubeVolumeAttachmentListProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 7244
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"io.k8s.api.storage.v1.VolumeAttachmentList\"."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7260
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "type": {
                "fqn": "cdk8s-plus-28.k8s.KubeVolumeAttachmentListProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7283
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "KubeVolumeAttachmentList",
      "namespace": "k8s",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"io.k8s.api.storage.v1.VolumeAttachmentList\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 7248
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeVolumeAttachmentList"
    },
    "cdk8s-plus-28.k8s.KubeVolumeAttachmentListProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.storage.v1.VolumeAttachmentList"
        },
        "stability": "stable",
        "summary": "VolumeAttachmentList is a collection of VolumeAttachment objects."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeVolumeAttachmentListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 12866
      },
      "name": "KubeVolumeAttachmentListProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.VolumeAttachmentList#items"
            },
            "stability": "stable",
            "summary": "items is the list of VolumeAttachments."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12879
          },
          "name": "items",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubeVolumeAttachmentProps"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.VolumeAttachmentList#metadata"
            },
            "stability": "stable",
            "summary": "Standard list metadata More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12872
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ListMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeVolumeAttachmentListProps"
    },
    "cdk8s-plus-28.k8s.KubeVolumeAttachmentProps": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.storage.v1.VolumeAttachment"
        },
        "remarks": "VolumeAttachment objects are non-namespaced.",
        "stability": "stable",
        "summary": "VolumeAttachment captures the intent to attach or detach the specified volume to/from the specified node."
      },
      "fqn": "cdk8s-plus-28.k8s.KubeVolumeAttachmentProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 12829
      },
      "name": "KubeVolumeAttachmentProps",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.VolumeAttachment#spec"
            },
            "remarks": "Populated by the Kubernetes system.",
            "stability": "stable",
            "summary": "spec represents specification of the desired attach/detach volume behavior."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12842
          },
          "name": "spec",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.VolumeAttachmentSpec"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.VolumeAttachment#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard object metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 12835
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:KubeVolumeAttachmentProps"
    },
    "cdk8s-plus-28.k8s.LabelSelector": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "remarks": "The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
        "stability": "stable",
        "summary": "A label selector is a label query over a set of resources."
      },
      "fqn": "cdk8s-plus-28.k8s.LabelSelector",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 17937
      },
      "name": "LabelSelector",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector#matchExpressions"
            },
            "remarks": "The requirements are ANDed.",
            "stability": "stable",
            "summary": "matchExpressions is a list of label selector requirements."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17943
          },
          "name": "matchExpressions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.LabelSelectorRequirement"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector#matchLabels"
            },
            "remarks": "A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
            "stability": "stable",
            "summary": "matchLabels is a map of {key,value} pairs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17950
          },
          "name": "matchLabels",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:LabelSelector"
    },
    "cdk8s-plus-28.k8s.LabelSelectorRequirement": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement"
        },
        "stability": "stable",
        "summary": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values."
      },
      "fqn": "cdk8s-plus-28.k8s.LabelSelectorRequirement",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 24191
      },
      "name": "LabelSelectorRequirement",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement#key"
            },
            "stability": "stable",
            "summary": "key is the label key that the selector applies to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24197
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement#operator"
            },
            "remarks": "Valid operators are In, NotIn, Exists and DoesNotExist.",
            "stability": "stable",
            "summary": "operator represents a key's relationship to a set of values."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24204
          },
          "name": "operator",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement#values"
            },
            "remarks": "If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
            "stability": "stable",
            "summary": "values is an array of string values."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24211
          },
          "name": "values",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:LabelSelectorRequirement"
    },
    "cdk8s-plus-28.k8s.LeaseSpec": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.coordination.v1.LeaseSpec"
        },
        "stability": "stable",
        "summary": "LeaseSpec is a specification of a Lease."
      },
      "fqn": "cdk8s-plus-28.k8s.LeaseSpec",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 15082
      },
      "name": "LeaseSpec",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.coordination.v1.LeaseSpec#acquireTime"
            },
            "stability": "stable",
            "summary": "acquireTime is a time when the current lease was acquired."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15088
          },
          "name": "acquireTime",
          "optional": true,
          "type": {
            "primitive": "date"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.coordination.v1.LeaseSpec#holderIdentity"
            },
            "stability": "stable",
            "summary": "holderIdentity contains the identity of the holder of a current lease."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15095
          },
          "name": "holderIdentity",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.coordination.v1.LeaseSpec#leaseDurationSeconds"
            },
            "remarks": "This is measure against time of last observed renewTime.",
            "stability": "stable",
            "summary": "leaseDurationSeconds is a duration that candidates for a lease need to wait to force acquire it."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15102
          },
          "name": "leaseDurationSeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.coordination.v1.LeaseSpec#leaseTransitions"
            },
            "stability": "stable",
            "summary": "leaseTransitions is the number of transitions of a lease between holders."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15109
          },
          "name": "leaseTransitions",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.coordination.v1.LeaseSpec#renewTime"
            },
            "stability": "stable",
            "summary": "renewTime is a time when the current holder of a lease has last updated the lease."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15116
          },
          "name": "renewTime",
          "optional": true,
          "type": {
            "primitive": "date"
          }
        }
      ],
      "symbolId": "src/imports/k8s:LeaseSpec"
    },
    "cdk8s-plus-28.k8s.Lifecycle": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.Lifecycle"
        },
        "remarks": "For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.",
        "stability": "stable",
        "summary": "Lifecycle describes actions that the management system should take in response to container lifecycle events."
      },
      "fqn": "cdk8s-plus-28.k8s.Lifecycle",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 25506
      },
      "name": "Lifecycle",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Lifecycle#postStart"
            },
            "remarks": "If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
            "stability": "stable",
            "summary": "PostStart is called immediately after a container is created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25512
          },
          "name": "postStart",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.LifecycleHandler"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Lifecycle#preStop"
            },
            "remarks": "The handler is not called if the container crashes or exits. The Pod's termination grace period countdown begins before the PreStop hook is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period (unless delayed by finalizers). Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
            "stability": "stable",
            "summary": "PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25519
          },
          "name": "preStop",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.LifecycleHandler"
          }
        }
      ],
      "symbolId": "src/imports/k8s:Lifecycle"
    },
    "cdk8s-plus-28.k8s.LifecycleHandler": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.LifecycleHandler"
        },
        "remarks": "One and only one of the fields, except TCPSocket must be specified.",
        "stability": "stable",
        "summary": "LifecycleHandler defines a specific action that should be taken in a lifecycle hook."
      },
      "fqn": "cdk8s-plus-28.k8s.LifecycleHandler",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 28657
      },
      "name": "LifecycleHandler",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.LifecycleHandler#exec"
            },
            "stability": "stable",
            "summary": "Exec specifies the action to take."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28663
          },
          "name": "exec",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ExecAction"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.LifecycleHandler#httpGet"
            },
            "stability": "stable",
            "summary": "HTTPGet specifies the http request to perform."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28670
          },
          "name": "httpGet",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.HttpGetAction"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.LifecycleHandler#tcpSocket"
            },
            "remarks": "TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility. There are no validation of this field and lifecycle hooks will fail in runtime when tcp handler is specified.",
            "stability": "stable",
            "summary": "Deprecated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28677
          },
          "name": "tcpSocket",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.TcpSocketAction"
          }
        }
      ],
      "symbolId": "src/imports/k8s:LifecycleHandler"
    },
    "cdk8s-plus-28.k8s.LimitRangeItem": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.LimitRangeItem"
        },
        "stability": "stable",
        "summary": "LimitRangeItem defines a min/max usage limit for any resource that matches on kind."
      },
      "fqn": "cdk8s-plus-28.k8s.LimitRangeItem",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 20079
      },
      "name": "LimitRangeItem",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.LimitRangeItem#type"
            },
            "stability": "stable",
            "summary": "Type of resource that this limit applies to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20120
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.LimitRangeItem#default"
            },
            "stability": "stable",
            "summary": "Default resource requirement limit value by resource name if resource limit is omitted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20085
          },
          "name": "default",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.Quantity"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.LimitRangeItem#defaultRequest"
            },
            "stability": "stable",
            "summary": "DefaultRequest is the default resource requirement request value by resource name if resource request is omitted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20092
          },
          "name": "defaultRequest",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.Quantity"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.LimitRangeItem#max"
            },
            "stability": "stable",
            "summary": "Max usage constraints on this kind by resource name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20099
          },
          "name": "max",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.Quantity"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.LimitRangeItem#maxLimitRequestRatio"
            },
            "remarks": "this represents the max burst for the named resource.",
            "stability": "stable",
            "summary": "MaxLimitRequestRatio if specified, the named resource must have a request and limit that are both non-zero where limit divided by request is less than or equal to the enumerated value;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20106
          },
          "name": "maxLimitRequestRatio",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.Quantity"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.LimitRangeItem#min"
            },
            "stability": "stable",
            "summary": "Min usage constraints on this kind by resource name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20113
          },
          "name": "min",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.Quantity"
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:LimitRangeItem"
    },
    "cdk8s-plus-28.k8s.LimitRangeSpec": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.LimitRangeSpec"
        },
        "stability": "stable",
        "summary": "LimitRangeSpec defines a min/max usage limit for resources that match on kind."
      },
      "fqn": "cdk8s-plus-28.k8s.LimitRangeSpec",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 15402
      },
      "name": "LimitRangeSpec",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.LimitRangeSpec#limits"
            },
            "stability": "stable",
            "summary": "Limits is the list of LimitRangeItem objects that are enforced."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15408
          },
          "name": "limits",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.LimitRangeItem"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:LimitRangeSpec"
    },
    "cdk8s-plus-28.k8s.LimitResponseV1Beta2": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.flowcontrol.v1beta2.LimitResponse"
        },
        "stability": "stable",
        "summary": "LimitResponse defines how to handle requests that can not be executed right now."
      },
      "fqn": "cdk8s-plus-28.k8s.LimitResponseV1Beta2",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 27536
      },
      "name": "LimitResponseV1Beta2",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta2.LimitResponse#type"
            },
            "remarks": "\"Queue\" means that requests that can not be executed upon arrival are held in a queue until they can be executed or a queuing limit is reached. \"Reject\" means that requests that can not be executed upon arrival are rejected. Required.",
            "stability": "stable",
            "summary": "`type` is \"Queue\" or \"Reject\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27549
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta2.LimitResponse#queuing"
            },
            "remarks": "This field may be non-empty only if `type` is `\"Queue\"`.",
            "stability": "stable",
            "summary": "`queuing` holds the configuration parameters for queuing."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27542
          },
          "name": "queuing",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.QueuingConfigurationV1Beta2"
          }
        }
      ],
      "symbolId": "src/imports/k8s:LimitResponseV1Beta2"
    },
    "cdk8s-plus-28.k8s.LimitResponseV1Beta3": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.flowcontrol.v1beta3.LimitResponse"
        },
        "stability": "stable",
        "summary": "LimitResponse defines how to handle requests that can not be executed right now."
      },
      "fqn": "cdk8s-plus-28.k8s.LimitResponseV1Beta3",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 27730
      },
      "name": "LimitResponseV1Beta3",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta3.LimitResponse#type"
            },
            "remarks": "\"Queue\" means that requests that can not be executed upon arrival are held in a queue until they can be executed or a queuing limit is reached. \"Reject\" means that requests that can not be executed upon arrival are rejected. Required.",
            "stability": "stable",
            "summary": "`type` is \"Queue\" or \"Reject\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27743
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta3.LimitResponse#queuing"
            },
            "remarks": "This field may be non-empty only if `type` is `\"Queue\"`.",
            "stability": "stable",
            "summary": "`queuing` holds the configuration parameters for queuing."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27736
          },
          "name": "queuing",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.QueuingConfigurationV1Beta3"
          }
        }
      ],
      "symbolId": "src/imports/k8s:LimitResponseV1Beta3"
    },
    "cdk8s-plus-28.k8s.LimitedPriorityLevelConfigurationV1Beta2": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.flowcontrol.v1beta2.LimitedPriorityLevelConfiguration"
        },
        "remarks": "It addresses two issues:\n- How are requests for this priority level limited?\n- What should be done with requests that exceed the limit?",
        "stability": "stable",
        "summary": "LimitedPriorityLevelConfiguration specifies how to handle requests that are subject to limits."
      },
      "fqn": "cdk8s-plus-28.k8s.LimitedPriorityLevelConfigurationV1Beta2",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 23371
      },
      "name": "LimitedPriorityLevelConfigurationV1Beta2",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta2.LimitedPriorityLevelConfiguration#assuredConcurrencyShares"
            },
            "remarks": "ACS must be a positive number. The server's concurrency limit (SCL) is divided among the concurrency-controlled priority levels in proportion to their assured concurrency shares. This produces the assured concurrency value (ACV) --- the number of requests that may be executing at a time --- for each such priority level:\n\nACV(l) = ceil( SCL * ACS(l) / ( sum[priority levels k] ACS(k) ) )\n\nbigger numbers of ACS mean more reserved concurrent requests (at the expense of every other PL). This field has a default value of 30.",
            "stability": "stable",
            "summary": "`assuredConcurrencyShares` (ACS) configures the execution limit, which is a limit on the number of requests of this priority level that may be exeucting at a given time."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23381
          },
          "name": "assuredConcurrencyShares",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta2.LimitedPriorityLevelConfiguration#borrowingLimitPercent"
            },
            "remarks": "The limit is known as this level's BorrowingConcurrencyLimit (BorrowingCL) and is a limit on the total number of seats that this level may borrow at any one time. This field holds the ratio of that limit to the level's nominal concurrency limit. When this field is non-nil, it must hold a non-negative integer and the limit is calculated as follows.\n\nBorrowingCL(i) = round( NominalCL(i) * borrowingLimitPercent(i)/100.0 )\n\nThe value of this field can be more than 100, implying that this priority level can borrow a number of seats that is greater than its own nominal concurrency limit (NominalCL). When this field is left `nil`, the limit is effectively infinite.",
            "stability": "stable",
            "summary": "`borrowingLimitPercent`, if present, configures a limit on how many seats this priority level can borrow from other priority levels."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23392
          },
          "name": "borrowingLimitPercent",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta2.LimitedPriorityLevelConfiguration#lendablePercent"
            },
            "remarks": "The value of this field must be between 0 and 100, inclusive, and it defaults to 0. The number of seats that other levels can borrow from this level, known as this level's LendableConcurrencyLimit (LendableCL), is defined as follows.\n\nLendableCL(i) = round( NominalCL(i) * lendablePercent(i)/100.0 )",
            "stability": "stable",
            "summary": "`lendablePercent` prescribes the fraction of the level's NominalCL that can be borrowed by other priority levels."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23401
          },
          "name": "lendablePercent",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta2.LimitedPriorityLevelConfiguration#limitResponse"
            },
            "stability": "stable",
            "summary": "`limitResponse` indicates what to do with requests that can not be executed right now."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23408
          },
          "name": "limitResponse",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.LimitResponseV1Beta2"
          }
        }
      ],
      "symbolId": "src/imports/k8s:LimitedPriorityLevelConfigurationV1Beta2"
    },
    "cdk8s-plus-28.k8s.LimitedPriorityLevelConfigurationV1Beta3": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.flowcontrol.v1beta3.LimitedPriorityLevelConfiguration"
        },
        "remarks": "It addresses two issues:\n- How are requests for this priority level limited?\n- What should be done with requests that exceed the limit?",
        "stability": "stable",
        "summary": "LimitedPriorityLevelConfiguration specifies how to handle requests that are subject to limits."
      },
      "fqn": "cdk8s-plus-28.k8s.LimitedPriorityLevelConfigurationV1Beta3",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 23582
      },
      "name": "LimitedPriorityLevelConfigurationV1Beta3",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta3.LimitedPriorityLevelConfiguration#borrowingLimitPercent"
            },
            "remarks": "The limit is known as this level's BorrowingConcurrencyLimit (BorrowingCL) and is a limit on the total number of seats that this level may borrow at any one time. This field holds the ratio of that limit to the level's nominal concurrency limit. When this field is non-nil, it must hold a non-negative integer and the limit is calculated as follows.\n\nBorrowingCL(i) = round( NominalCL(i) * borrowingLimitPercent(i)/100.0 )\n\nThe value of this field can be more than 100, implying that this priority level can borrow a number of seats that is greater than its own nominal concurrency limit (NominalCL). When this field is left `nil`, the limit is effectively infinite.",
            "stability": "stable",
            "summary": "`borrowingLimitPercent`, if present, configures a limit on how many seats this priority level can borrow from other priority levels."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23592
          },
          "name": "borrowingLimitPercent",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta3.LimitedPriorityLevelConfiguration#lendablePercent"
            },
            "remarks": "The value of this field must be between 0 and 100, inclusive, and it defaults to 0. The number of seats that other levels can borrow from this level, known as this level's LendableConcurrencyLimit (LendableCL), is defined as follows.\n\nLendableCL(i) = round( NominalCL(i) * lendablePercent(i)/100.0 )",
            "stability": "stable",
            "summary": "`lendablePercent` prescribes the fraction of the level's NominalCL that can be borrowed by other priority levels."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23601
          },
          "name": "lendablePercent",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta3.LimitedPriorityLevelConfiguration#limitResponse"
            },
            "stability": "stable",
            "summary": "`limitResponse` indicates what to do with requests that can not be executed right now."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23608
          },
          "name": "limitResponse",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.LimitResponseV1Beta3"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta3.LimitedPriorityLevelConfiguration#nominalConcurrencyShares"
            },
            "remarks": "This is the number of execution seats available at this priority level. This is used both for requests dispatched from this priority level as well as requests dispatched from other priority levels borrowing seats from this level. The server's concurrency limit (ServerCL) is divided among the Limited priority levels in proportion to their NCS values:\n\nNominalCL(i)  = ceil( ServerCL * NCS(i) / sum_ncs ) sum_ncs = sum[priority level k] NCS(k)\n\nBigger numbers mean a larger nominal concurrency limit, at the expense of every other priority level. This field has a default value of 30.",
            "stability": "stable",
            "summary": "`nominalConcurrencyShares` (NCS) contributes to the computation of the NominalConcurrencyLimit (NominalCL) of this level."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23619
          },
          "name": "nominalConcurrencyShares",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/imports/k8s:LimitedPriorityLevelConfigurationV1Beta3"
    },
    "cdk8s-plus-28.k8s.ListMeta": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        },
        "remarks": "A resource may have only one of {ObjectMeta, ListMeta}.",
        "stability": "stable",
        "summary": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects."
      },
      "fqn": "cdk8s-plus-28.k8s.ListMeta",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 13441
      },
      "name": "ListMeta",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta#continue"
            },
            "remarks": "The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",
            "stability": "stable",
            "summary": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13447
          },
          "name": "continue",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta#remainingItemCount"
            },
            "remarks": "If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.",
            "stability": "stable",
            "summary": "remainingItemCount is the number of subsequent items in the list which are not included in this list response."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13454
          },
          "name": "remainingItemCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta#resourceVersion"
            },
            "remarks": "Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
            "stability": "stable",
            "summary": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13461
          },
          "name": "resourceVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta#selfLink"
            },
            "stability": "stable",
            "summary": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13468
          },
          "name": "selfLink",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ListMeta"
    },
    "cdk8s-plus-28.k8s.LocalObjectReference": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.LocalObjectReference"
        },
        "stability": "stable",
        "summary": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace."
      },
      "fqn": "cdk8s-plus-28.k8s.LocalObjectReference",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 16564
      },
      "name": "LocalObjectReference",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.LocalObjectReference#name"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
            "stability": "stable",
            "summary": "Name of the referent."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16570
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:LocalObjectReference"
    },
    "cdk8s-plus-28.k8s.LocalVolumeSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.LocalVolumeSource"
        },
        "stability": "stable",
        "summary": "Local represents directly-attached storage with node affinity (Beta feature)."
      },
      "fqn": "cdk8s-plus-28.k8s.LocalVolumeSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 21053
      },
      "name": "LocalVolumeSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.LocalVolumeSource#path"
            },
            "remarks": "It can be either a directory or block device (disk, partition, ...).",
            "stability": "stable",
            "summary": "path of the full path to the volume on the node."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21066
          },
          "name": "path",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.LocalVolumeSource#fsType"
            },
            "remarks": "It applies only when the Path is a block device. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default value is to auto-select a filesystem if unspecified.",
            "stability": "stable",
            "summary": "fsType is the filesystem type to mount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21059
          },
          "name": "fsType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:LocalVolumeSource"
    },
    "cdk8s-plus-28.k8s.ManagedFieldsEntry": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry"
        },
        "stability": "stable",
        "summary": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to."
      },
      "fqn": "cdk8s-plus-28.k8s.ManagedFieldsEntry",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 18263
      },
      "name": "ManagedFieldsEntry",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry#apiVersion"
            },
            "remarks": "The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
            "stability": "stable",
            "summary": "APIVersion defines the version of this resource that this field set applies to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18269
          },
          "name": "apiVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry#fieldsType"
            },
            "remarks": "There is currently only one possible value: \"FieldsV1\"",
            "stability": "stable",
            "summary": "FieldsType is the discriminator for the different fields format and version."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18276
          },
          "name": "fieldsType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry#fieldsV1"
            },
            "stability": "stable",
            "summary": "FieldsV1 holds the first JSON version format as described in the \"FieldsV1\" type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18283
          },
          "name": "fieldsV1",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry#manager"
            },
            "stability": "stable",
            "summary": "Manager is an identifier of the workflow managing these fields."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18290
          },
          "name": "manager",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry#operation"
            },
            "remarks": "The only valid values for this field are 'Apply' and 'Update'.",
            "stability": "stable",
            "summary": "Operation is the type of operation which lead to this ManagedFieldsEntry being created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18297
          },
          "name": "operation",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry#subresource"
            },
            "remarks": "The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.",
            "stability": "stable",
            "summary": "Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18304
          },
          "name": "subresource",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry#time"
            },
            "remarks": "The timestamp will also be updated if a field is added, the manager changes any of the owned fields value or removes a field. The timestamp does not update when a field is removed from the entry because another manager took it over.",
            "stability": "stable",
            "summary": "Time is the timestamp of when the ManagedFields entry was added."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18311
          },
          "name": "time",
          "optional": true,
          "type": {
            "primitive": "date"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ManagedFieldsEntry"
    },
    "cdk8s-plus-28.k8s.MatchCondition": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1.MatchCondition"
        },
        "stability": "stable",
        "summary": "MatchCondition represents a condition which must by fulfilled for a request to be sent to a webhook."
      },
      "fqn": "cdk8s-plus-28.k8s.MatchCondition",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 18467
      },
      "name": "MatchCondition",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1.MatchCondition#expression"
            },
            "remarks": "Must evaluate to bool. CEL expressions have access to the contents of the AdmissionRequest and Authorizer, organized into CEL variables:\n\n'object' - The object from the incoming request. The value is null for DELETE requests. 'oldObject' - The existing object. The value is null for CREATE requests. 'request' - Attributes of the admission request(/pkg/apis/admission/types.go#AdmissionRequest). 'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request.\nSee https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz\n'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the\nrequest resource.\nDocumentation on CEL: https://kubernetes.io/docs/reference/using-api/cel/\n\nRequired.",
            "stability": "stable",
            "summary": "Expression represents the expression which will be evaluated by CEL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18481
          },
          "name": "expression",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1.MatchCondition#name"
            },
            "remarks": "A good name should be descriptive of the associated expression. Name must be a qualified name consisting of alphanumeric characters, '-', '_' or '.', and must start and end with an alphanumeric character (e.g. 'MyName',  or 'my.name',  or '123-abc', regex used for validation is '([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]') with an optional DNS subdomain prefix and '/' (e.g. 'example.com/MyName')\n\nRequired.",
            "stability": "stable",
            "summary": "Name is an identifier for this match condition, used for strategic merging of MatchConditions, as well as providing an identifier for logging purposes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18490
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:MatchCondition"
    },
    "cdk8s-plus-28.k8s.MatchConditionV1Alpha1": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1alpha1.MatchCondition"
        },
        "stability": "stable"
      },
      "fqn": "cdk8s-plus-28.k8s.MatchConditionV1Alpha1",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 18627
      },
      "name": "MatchConditionV1Alpha1",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1alpha1.MatchCondition#expression"
            },
            "remarks": "Must evaluate to bool. CEL expressions have access to the contents of the AdmissionRequest and Authorizer, organized into CEL variables:\n\n'object' - The object from the incoming request. The value is null for DELETE requests. 'oldObject' - The existing object. The value is null for CREATE requests. 'request' - Attributes of the admission request(/pkg/apis/admission/types.go#AdmissionRequest). 'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request.\nSee https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz\n'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the\nrequest resource.\nDocumentation on CEL: https://kubernetes.io/docs/reference/using-api/cel/\n\nRequired.",
            "stability": "stable",
            "summary": "Expression represents the expression which will be evaluated by CEL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18641
          },
          "name": "expression",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1alpha1.MatchCondition#name"
            },
            "remarks": "A good name should be descriptive of the associated expression. Name must be a qualified name consisting of alphanumeric characters, '-', '_' or '.', and must start and end with an alphanumeric character (e.g. 'MyName',  or 'my.name',  or '123-abc', regex used for validation is '([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]') with an optional DNS subdomain prefix and '/' (e.g. 'example.com/MyName')\n\nRequired.",
            "stability": "stable",
            "summary": "Name is an identifier for this match condition, used for strategic merging of MatchConditions, as well as providing an identifier for logging purposes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18650
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:MatchConditionV1Alpha1"
    },
    "cdk8s-plus-28.k8s.MatchConditionV1Beta1": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1beta1.MatchCondition"
        },
        "stability": "stable",
        "summary": "MatchCondition represents a condition which must be fulfilled for a request to be sent to a webhook."
      },
      "fqn": "cdk8s-plus-28.k8s.MatchConditionV1Beta1",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 19041
      },
      "name": "MatchConditionV1Beta1",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1beta1.MatchCondition#expression"
            },
            "remarks": "Must evaluate to bool. CEL expressions have access to the contents of the AdmissionRequest and Authorizer, organized into CEL variables:\n\n'object' - The object from the incoming request. The value is null for DELETE requests. 'oldObject' - The existing object. The value is null for CREATE requests. 'request' - Attributes of the admission request(/pkg/apis/admission/types.go#AdmissionRequest). 'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request.\nSee https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz\n'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the\nrequest resource.\nDocumentation on CEL: https://kubernetes.io/docs/reference/using-api/cel/\n\nRequired.",
            "stability": "stable",
            "summary": "Expression represents the expression which will be evaluated by CEL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19055
          },
          "name": "expression",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1beta1.MatchCondition#name"
            },
            "remarks": "A good name should be descriptive of the associated expression. Name must be a qualified name consisting of alphanumeric characters, '-', '_' or '.', and must start and end with an alphanumeric character (e.g. 'MyName',  or 'my.name',  or '123-abc', regex used for validation is '([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]') with an optional DNS subdomain prefix and '/' (e.g. 'example.com/MyName')\n\nRequired.",
            "stability": "stable",
            "summary": "Name is an identifier for this match condition, used for strategic merging of MatchConditions, as well as providing an identifier for logging purposes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19064
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:MatchConditionV1Beta1"
    },
    "cdk8s-plus-28.k8s.MatchResourcesV1Alpha1": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1alpha1.MatchResources"
        },
        "remarks": "The exclude rules take precedence over include rules (if a resource matches both, it is excluded)",
        "stability": "stable",
        "summary": "MatchResources decides whether to run the admission control policy on an object based on whether it meets the match criteria."
      },
      "fqn": "cdk8s-plus-28.k8s.MatchResourcesV1Alpha1",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 18674
      },
      "name": "MatchResourcesV1Alpha1",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1alpha1.MatchResources#excludeResourceRules"
            },
            "remarks": "The exclude rules take precedence over include rules (if a resource matches both, it is excluded)",
            "stability": "stable",
            "summary": "ExcludeResourceRules describes what operations on what resources/subresources the ValidatingAdmissionPolicy should not care about."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18680
          },
          "name": "excludeResourceRules",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.NamedRuleWithOperationsV1Alpha1"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1alpha1.MatchResources#matchPolicy"
            },
            "default": "Equivalent\"",
            "remarks": "- Exact: match a request only if it exactly matches a specified rule. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, but \"rules\" only included `apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"]`, a request to apps/v1beta1 or extensions/v1beta1 would not be sent to the ValidatingAdmissionPolicy.\n\n- Equivalent: match a request if modifies a resource listed in rules, even via another API group or version. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, and \"rules\" only included `apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"]`, a request to apps/v1beta1 or extensions/v1beta1 would be converted to apps/v1 and sent to the ValidatingAdmissionPolicy.\n\nDefaults to \"Equivalent\"",
            "stability": "stable",
            "summary": "matchPolicy defines how the \"MatchResources\" list is used to match incoming requests. Allowed values are \"Exact\" or \"Equivalent\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18694
          },
          "name": "matchPolicy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1alpha1.MatchResources#namespaceSelector"
            },
            "default": "the empty LabelSelector, which matches everything.",
            "remarks": "If the object itself is a namespace, the matching is performed on object.metadata.labels. If the object is another cluster scoped resource, it never skips the policy.\n\nFor example, to run the webhook on any objects whose namespace is not associated with \"runlevel\" of \"0\" or \"1\";  you will set the selector as follows: \"namespaceSelector\": {\n\"matchExpressions\": [\n{\n\"key\": \"runlevel\",\n\"operator\": \"NotIn\",\n\"values\": [\n\"0\",\n\"1\"\n]\n}\n]\n}\n\nIf instead you want to only run the policy on any objects whose namespace is associated with the \"environment\" of \"prod\" or \"staging\"; you will set the selector as follows: \"namespaceSelector\": {\n\"matchExpressions\": [\n{\n\"key\": \"environment\",\n\"operator\": \"In\",\n\"values\": [\n\"prod\",\n\"staging\"\n]\n}\n]\n}\n\nSee https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/ for more examples of label selectors.\n\nDefault to the empty LabelSelector, which matches everything.",
            "stability": "stable",
            "summary": "NamespaceSelector decides whether to run the admission control policy on an object based on whether the namespace for that object matches the selector."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18732
          },
          "name": "namespaceSelector",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.LabelSelector"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1alpha1.MatchResources#objectSelector"
            },
            "default": "the empty LabelSelector, which matches everything.",
            "remarks": "objectSelector is evaluated against both the oldObject and newObject that would be sent to the cel validation, and is considered to match if either object matches the selector. A null object (oldObject in the case of create, or newObject in the case of delete) or an object that cannot have labels (like a DeploymentRollback or a PodProxyOptions object) is not considered to match. Use the object selector only if the webhook is opt-in, because end users may skip the admission webhook by setting the labels. Default to the empty LabelSelector, which matches everything.",
            "stability": "stable",
            "summary": "ObjectSelector decides whether to run the validation based on if the object has matching labels."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18740
          },
          "name": "objectSelector",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.LabelSelector"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1alpha1.MatchResources#resourceRules"
            },
            "remarks": "The policy cares about an operation if it matches _any_ Rule.",
            "stability": "stable",
            "summary": "ResourceRules describes what operations on what resources/subresources the ValidatingAdmissionPolicy matches."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18747
          },
          "name": "resourceRules",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.NamedRuleWithOperationsV1Alpha1"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:MatchResourcesV1Alpha1"
    },
    "cdk8s-plus-28.k8s.MatchResourcesV1Beta1": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1beta1.MatchResources"
        },
        "remarks": "The exclude rules take precedence over include rules (if a resource matches both, it is excluded)",
        "stability": "stable",
        "summary": "MatchResources decides whether to run the admission control policy on an object based on whether it meets the match criteria."
      },
      "fqn": "cdk8s-plus-28.k8s.MatchResourcesV1Beta1",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 19088
      },
      "name": "MatchResourcesV1Beta1",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1beta1.MatchResources#excludeResourceRules"
            },
            "remarks": "The exclude rules take precedence over include rules (if a resource matches both, it is excluded)",
            "stability": "stable",
            "summary": "ExcludeResourceRules describes what operations on what resources/subresources the ValidatingAdmissionPolicy should not care about."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19094
          },
          "name": "excludeResourceRules",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.NamedRuleWithOperationsV1Beta1"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1beta1.MatchResources#matchPolicy"
            },
            "default": "Equivalent\"",
            "remarks": "- Exact: match a request only if it exactly matches a specified rule. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, but \"rules\" only included `apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"]`, a request to apps/v1beta1 or extensions/v1beta1 would not be sent to the ValidatingAdmissionPolicy.\n\n- Equivalent: match a request if modifies a resource listed in rules, even via another API group or version. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, and \"rules\" only included `apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"]`, a request to apps/v1beta1 or extensions/v1beta1 would be converted to apps/v1 and sent to the ValidatingAdmissionPolicy.\n\nDefaults to \"Equivalent\"",
            "stability": "stable",
            "summary": "matchPolicy defines how the \"MatchResources\" list is used to match incoming requests. Allowed values are \"Exact\" or \"Equivalent\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19108
          },
          "name": "matchPolicy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1beta1.MatchResources#namespaceSelector"
            },
            "default": "the empty LabelSelector, which matches everything.",
            "remarks": "If the object itself is a namespace, the matching is performed on object.metadata.labels. If the object is another cluster scoped resource, it never skips the policy.\n\nFor example, to run the webhook on any objects whose namespace is not associated with \"runlevel\" of \"0\" or \"1\";  you will set the selector as follows: \"namespaceSelector\": {\n\"matchExpressions\": [\n{\n\"key\": \"runlevel\",\n\"operator\": \"NotIn\",\n\"values\": [\n\"0\",\n\"1\"\n]\n}\n]\n}\n\nIf instead you want to only run the policy on any objects whose namespace is associated with the \"environment\" of \"prod\" or \"staging\"; you will set the selector as follows: \"namespaceSelector\": {\n\"matchExpressions\": [\n{\n\"key\": \"environment\",\n\"operator\": \"In\",\n\"values\": [\n\"prod\",\n\"staging\"\n]\n}\n]\n}\n\nSee https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/ for more examples of label selectors.\n\nDefault to the empty LabelSelector, which matches everything.",
            "stability": "stable",
            "summary": "NamespaceSelector decides whether to run the admission control policy on an object based on whether the namespace for that object matches the selector."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19146
          },
          "name": "namespaceSelector",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.LabelSelector"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1beta1.MatchResources#objectSelector"
            },
            "default": "the empty LabelSelector, which matches everything.",
            "remarks": "objectSelector is evaluated against both the oldObject and newObject that would be sent to the cel validation, and is considered to match if either object matches the selector. A null object (oldObject in the case of create, or newObject in the case of delete) or an object that cannot have labels (like a DeploymentRollback or a PodProxyOptions object) is not considered to match. Use the object selector only if the webhook is opt-in, because end users may skip the admission webhook by setting the labels. Default to the empty LabelSelector, which matches everything.",
            "stability": "stable",
            "summary": "ObjectSelector decides whether to run the validation based on if the object has matching labels."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19154
          },
          "name": "objectSelector",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.LabelSelector"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1beta1.MatchResources#resourceRules"
            },
            "remarks": "The policy cares about an operation if it matches _any_ Rule.",
            "stability": "stable",
            "summary": "ResourceRules describes what operations on what resources/subresources the ValidatingAdmissionPolicy matches."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19161
          },
          "name": "resourceRules",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.NamedRuleWithOperationsV1Beta1"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:MatchResourcesV1Beta1"
    },
    "cdk8s-plus-28.k8s.MetricIdentifierV2": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.autoscaling.v2.MetricIdentifier"
        },
        "stability": "stable",
        "summary": "MetricIdentifier defines the name and optionally selector for a metric."
      },
      "fqn": "cdk8s-plus-28.k8s.MetricIdentifierV2",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 28271
      },
      "name": "MetricIdentifierV2",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v2.MetricIdentifier#name"
            },
            "stability": "stable",
            "summary": "name is the name of the given metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28277
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v2.MetricIdentifier#selector"
            },
            "remarks": "When unset, just the metricName will be used to gather metrics.",
            "stability": "stable",
            "summary": "selector is the string-encoded form of a standard kubernetes label selector for the given metric When set, it is passed as an additional parameter to the metrics server for more specific metrics scoping."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28284
          },
          "name": "selector",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.LabelSelector"
          }
        }
      ],
      "symbolId": "src/imports/k8s:MetricIdentifierV2"
    },
    "cdk8s-plus-28.k8s.MetricSpecV2": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.autoscaling.v2.MetricSpec"
        },
        "stability": "stable",
        "summary": "MetricSpec specifies how to scale based on a single metric (only `type` and one other matching field should be set at once)."
      },
      "fqn": "cdk8s-plus-28.k8s.MetricSpecV2",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 19846
      },
      "name": "MetricSpecV2",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v2.MetricSpec#type"
            },
            "remarks": "It should be one of \"ContainerResource\", \"External\", \"Object\", \"Pods\" or \"Resource\", each mapping to a matching field in the object. Note: \"ContainerResource\" type is available on when the feature-gate HPAContainerMetrics is enabled",
            "stability": "stable",
            "summary": "type is the type of metric source."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19887
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v2.MetricSpec#containerResource"
            },
            "stability": "stable",
            "summary": "containerResource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes describing a single container in each pod of the current scale target (e.g. CPU or memory). Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the \"pods\" source. This is an alpha feature and can be enabled by the HPAContainerMetrics feature flag."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19852
          },
          "name": "containerResource",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ContainerResourceMetricSourceV2"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v2.MetricSpec#external"
            },
            "remarks": "It allows autoscaling based on information coming from components running outside of cluster (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster).",
            "stability": "stable",
            "summary": "external refers to a global metric that is not associated with any Kubernetes object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19859
          },
          "name": "external",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ExternalMetricSourceV2"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v2.MetricSpec#object"
            },
            "stability": "stable",
            "summary": "object refers to a metric describing a single kubernetes object (for example, hits-per-second on an Ingress object)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19866
          },
          "name": "object",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMetricSourceV2"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v2.MetricSpec#pods"
            },
            "remarks": "The values will be averaged together before being compared to the target value.",
            "stability": "stable",
            "summary": "pods refers to a metric describing each pod in the current scale target (for example, transactions-processed-per-second)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19873
          },
          "name": "pods",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.PodsMetricSourceV2"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v2.MetricSpec#resource"
            },
            "stability": "stable",
            "summary": "resource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes describing each pod in the current scale target (e.g. CPU or memory). Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the \"pods\" source."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19880
          },
          "name": "resource",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ResourceMetricSourceV2"
          }
        }
      ],
      "symbolId": "src/imports/k8s:MetricSpecV2"
    },
    "cdk8s-plus-28.k8s.MetricTargetV2": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.autoscaling.v2.MetricTarget"
        },
        "stability": "stable",
        "summary": "MetricTarget defines the target value, average value, or average utilization of a specific metric."
      },
      "fqn": "cdk8s-plus-28.k8s.MetricTargetV2",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 28218
      },
      "name": "MetricTargetV2",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v2.MetricTarget#type"
            },
            "stability": "stable",
            "summary": "type represents whether the metric type is Utilization, Value, or AverageValue."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28238
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v2.MetricTarget#averageUtilization"
            },
            "remarks": "Currently only valid for Resource metric source type",
            "stability": "stable",
            "summary": "averageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28224
          },
          "name": "averageUtilization",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v2.MetricTarget#averageValue"
            },
            "stability": "stable",
            "summary": "averageValue is the target value of the average of the metric across all relevant pods (as a quantity)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28231
          },
          "name": "averageValue",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.Quantity"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v2.MetricTarget#value"
            },
            "stability": "stable",
            "summary": "value is the target value of the metric (as a quantity)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28245
          },
          "name": "value",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.Quantity"
          }
        }
      ],
      "symbolId": "src/imports/k8s:MetricTargetV2"
    },
    "cdk8s-plus-28.k8s.MutatingWebhook": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1.MutatingWebhook"
        },
        "stability": "stable",
        "summary": "MutatingWebhook describes an admission webhook and the resources and operations it applies to."
      },
      "fqn": "cdk8s-plus-28.k8s.MutatingWebhook",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 13267
      },
      "name": "MutatingWebhook",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1.MutatingWebhook#admissionReviewVersions"
            },
            "remarks": "API server will try to use first version in the list which it supports. If none of the versions specified in this list supported by API server, validation will fail for this object. If a persisted webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail and be subject to the failure policy.",
            "stability": "stable",
            "summary": "AdmissionReviewVersions is an ordered list of preferred `AdmissionReview` versions the Webhook expects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13273
          },
          "name": "admissionReviewVersions",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1.MutatingWebhook#clientConfig"
            },
            "remarks": "Required",
            "stability": "stable",
            "summary": "ClientConfig defines how to communicate with the hook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13280
          },
          "name": "clientConfig",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.WebhookClientConfig"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1.MutatingWebhook#name"
            },
            "remarks": "Name should be fully qualified, e.g., imagepolicy.kubernetes.io, where \"imagepolicy\" is the name of the webhook, and kubernetes.io is the name of the organization. Required.",
            "stability": "stable",
            "summary": "The name of the admission webhook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13325
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1.MutatingWebhook#sideEffects"
            },
            "remarks": "Acceptable values are: None, NoneOnDryRun (webhooks created via v1beta1 may also specify Some or Unknown). Webhooks with side effects MUST implement a reconciliation system, since a request may be rejected by a future step in the admission chain and the side effects therefore need to be undone. Requests with the dryRun attribute will be auto-rejected if they match a webhook with sideEffects == Unknown or Some.",
            "stability": "stable",
            "summary": "SideEffects states whether this webhook has side effects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13399
          },
          "name": "sideEffects",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1.MutatingWebhook#failurePolicy"
            },
            "default": "Fail.",
            "remarks": "Defaults to Fail.",
            "stability": "stable",
            "summary": "FailurePolicy defines how unrecognized errors from the admission endpoint are handled - allowed values are Ignore or Fail."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13288
          },
          "name": "failurePolicy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1.MutatingWebhook#matchConditions"
            },
            "remarks": "Match conditions filter requests that have already been matched by the rules, namespaceSelector, and objectSelector. An empty list of matchConditions matches all requests. There are a maximum of 64 match conditions allowed.\n\nThe exact matching logic is (in order):\n1. If ANY matchCondition evaluates to FALSE, the webhook is skipped.\n2. If ALL matchConditions evaluate to TRUE, the webhook is called.\n3. If any matchCondition evaluates to an error (but none are FALSE):\n- If failurePolicy=Fail, reject the request\n- If failurePolicy=Ignore, the error is ignored and the webhook is skipped\n\nThis is a beta feature and managed by the AdmissionWebhookMatchConditions feature gate.",
            "stability": "stable",
            "summary": "MatchConditions is a list of conditions that must be met for a request to be sent to this webhook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13304
          },
          "name": "matchConditions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.MatchCondition"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1.MutatingWebhook#matchPolicy"
            },
            "default": "Equivalent\"",
            "remarks": "- Exact: match a request only if it exactly matches a specified rule. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, but \"rules\" only included `apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"]`, a request to apps/v1beta1 or extensions/v1beta1 would not be sent to the webhook.\n\n- Equivalent: match a request if modifies a resource listed in rules, even via another API group or version. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, and \"rules\" only included `apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"]`, a request to apps/v1beta1 or extensions/v1beta1 would be converted to apps/v1 and sent to the webhook.\n\nDefaults to \"Equivalent\"",
            "stability": "stable",
            "summary": "matchPolicy defines how the \"rules\" list is used to match incoming requests. Allowed values are \"Exact\" or \"Equivalent\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13318
          },
          "name": "matchPolicy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1.MutatingWebhook#namespaceSelector"
            },
            "default": "the empty LabelSelector, which matches everything.",
            "remarks": "If the object itself is a namespace, the matching is performed on object.metadata.labels. If the object is another cluster scoped resource, it never skips the webhook.\n\nFor example, to run the webhook on any objects whose namespace is not associated with \"runlevel\" of \"0\" or \"1\";  you will set the selector as follows: \"namespaceSelector\": {\n\"matchExpressions\": [\n{\n\"key\": \"runlevel\",\n\"operator\": \"NotIn\",\n\"values\": [\n\"0\",\n\"1\"\n]\n}\n]\n}\n\nIf instead you want to only run the webhook on any objects whose namespace is associated with the \"environment\" of \"prod\" or \"staging\"; you will set the selector as follows: \"namespaceSelector\": {\n\"matchExpressions\": [\n{\n\"key\": \"environment\",\n\"operator\": \"In\",\n\"values\": [\n\"prod\",\n\"staging\"\n]\n}\n]\n}\n\nSee https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/ for more examples of label selectors.\n\nDefault to the empty LabelSelector, which matches everything.",
            "stability": "stable",
            "summary": "NamespaceSelector decides whether to run the webhook on an object based on whether the namespace for that object matches the selector."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13363
          },
          "name": "namespaceSelector",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.LabelSelector"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1.MutatingWebhook#objectSelector"
            },
            "default": "the empty LabelSelector, which matches everything.",
            "remarks": "objectSelector is evaluated against both the oldObject and newObject that would be sent to the webhook, and is considered to match if either object matches the selector. A null object (oldObject in the case of create, or newObject in the case of delete) or an object that cannot have labels (like a DeploymentRollback or a PodProxyOptions object) is not considered to match. Use the object selector only if the webhook is opt-in, because end users may skip the admission webhook by setting the labels. Default to the empty LabelSelector, which matches everything.",
            "stability": "stable",
            "summary": "ObjectSelector decides whether to run the webhook based on if the object has matching labels."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13371
          },
          "name": "objectSelector",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.LabelSelector"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1.MutatingWebhook#reinvocationPolicy"
            },
            "default": "Never\".",
            "remarks": "Allowed values are \"Never\" and \"IfNeeded\".\n\nNever: the webhook will not be called more than once in a single admission evaluation.\n\nIfNeeded: the webhook will be called at least one additional time as part of the admission evaluation if the object being admitted is modified by other admission plugins after the initial webhook call. Webhooks that specify this option *must* be idempotent, able to process objects they previously admitted. Note: * the number of additional invocations is not guaranteed to be exactly one. * if additional invocations result in further modifications to the object, webhooks are not guaranteed to be invoked again. * webhooks that use this option may be reordered to minimize the number of additional invocations. * to validate an object after all mutations are guaranteed complete, use a validating admission webhook instead.\n\nDefaults to \"Never\".",
            "stability": "stable",
            "summary": "reinvocationPolicy indicates whether this webhook should be called multiple times as part of a single admission evaluation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13385
          },
          "name": "reinvocationPolicy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1.MutatingWebhook#rules"
            },
            "remarks": "The webhook cares about an operation if it matches _any_ Rule. However, in order to prevent ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks from putting the cluster in a state which cannot be recovered from without completely disabling the plugin, ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks are never called on admission requests for ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects.",
            "stability": "stable",
            "summary": "Rules describes what operations on what resources/subresources the webhook cares about."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13392
          },
          "name": "rules",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.RuleWithOperations"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1.MutatingWebhook#timeoutSeconds"
            },
            "default": "10 seconds.",
            "remarks": "After the timeout passes, the webhook call will be ignored or the API call will fail based on the failure policy. The timeout value must be between 1 and 30 seconds. Default to 10 seconds.",
            "stability": "stable",
            "summary": "TimeoutSeconds specifies the timeout for this webhook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13407
          },
          "name": "timeoutSeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/imports/k8s:MutatingWebhook"
    },
    "cdk8s-plus-28.k8s.NamedRuleWithOperationsV1Alpha1": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1alpha1.NamedRuleWithOperations"
        },
        "stability": "stable",
        "summary": "NamedRuleWithOperations is a tuple of Operations and Resources with ResourceNames."
      },
      "fqn": "cdk8s-plus-28.k8s.NamedRuleWithOperationsV1Alpha1",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 24608
      },
      "name": "NamedRuleWithOperationsV1Alpha1",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1alpha1.NamedRuleWithOperations#apiGroups"
            },
            "remarks": "'*' is all groups. If '*' is present, the length of the slice must be one. Required.",
            "stability": "stable",
            "summary": "APIGroups is the API groups the resources belong to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24614
          },
          "name": "apiGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1alpha1.NamedRuleWithOperations#apiVersions"
            },
            "remarks": "'*' is all versions. If '*' is present, the length of the slice must be one. Required.",
            "stability": "stable",
            "summary": "APIVersions is the API versions the resources belong to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24621
          },
          "name": "apiVersions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1alpha1.NamedRuleWithOperations#operations"
            },
            "remarks": "If '*' is present, the length of the slice must be one. Required.",
            "stability": "stable",
            "summary": "Operations is the operations the admission hook cares about - CREATE, UPDATE, DELETE, CONNECT or * for all of those operations and any future admission operations that are added."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24628
          },
          "name": "operations",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1alpha1.NamedRuleWithOperations#resourceNames"
            },
            "remarks": "An empty set means that everything is allowed.",
            "stability": "stable",
            "summary": "ResourceNames is an optional white list of names that the rule applies to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24635
          },
          "name": "resourceNames",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1alpha1.NamedRuleWithOperations#resources"
            },
            "remarks": "For example: 'pods' means pods. 'pods/log' means the log subresource of pods. '*' means all resources, but not subresources. 'pods/*' means all subresources of pods. '_/scale' means all scale subresources. '_/*' means all resources and their subresources.\n\nIf wildcard is present, the validation rule will ensure resources do not overlap with each other.\n\nDepending on the enclosing object, subresources might not be allowed. Required.",
            "stability": "stable",
            "summary": "Resources is a list of resources this rule applies to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24648
          },
          "name": "resources",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1alpha1.NamedRuleWithOperations#scope"
            },
            "default": ".",
            "remarks": "Valid values are \"Cluster\", \"Namespaced\", and \"*\" \"Cluster\" means that only cluster-scoped resources will match this rule. Namespace API objects are cluster-scoped. \"Namespaced\" means that only namespaced resources will match this rule. \"*\" means that there are no scope restrictions. Subresources match the scope of their parent resource. Default is \"*\".",
            "stability": "stable",
            "summary": "scope specifies the scope of this rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24656
          },
          "name": "scope",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:NamedRuleWithOperationsV1Alpha1"
    },
    "cdk8s-plus-28.k8s.NamedRuleWithOperationsV1Beta1": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1beta1.NamedRuleWithOperations"
        },
        "stability": "stable",
        "summary": "NamedRuleWithOperations is a tuple of Operations and Resources with ResourceNames."
      },
      "fqn": "cdk8s-plus-28.k8s.NamedRuleWithOperationsV1Beta1",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 24684
      },
      "name": "NamedRuleWithOperationsV1Beta1",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1beta1.NamedRuleWithOperations#apiGroups"
            },
            "remarks": "'*' is all groups. If '*' is present, the length of the slice must be one. Required.",
            "stability": "stable",
            "summary": "APIGroups is the API groups the resources belong to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24690
          },
          "name": "apiGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1beta1.NamedRuleWithOperations#apiVersions"
            },
            "remarks": "'*' is all versions. If '*' is present, the length of the slice must be one. Required.",
            "stability": "stable",
            "summary": "APIVersions is the API versions the resources belong to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24697
          },
          "name": "apiVersions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1beta1.NamedRuleWithOperations#operations"
            },
            "remarks": "If '*' is present, the length of the slice must be one. Required.",
            "stability": "stable",
            "summary": "Operations is the operations the admission hook cares about - CREATE, UPDATE, DELETE, CONNECT or * for all of those operations and any future admission operations that are added."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24704
          },
          "name": "operations",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1beta1.NamedRuleWithOperations#resourceNames"
            },
            "remarks": "An empty set means that everything is allowed.",
            "stability": "stable",
            "summary": "ResourceNames is an optional white list of names that the rule applies to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24711
          },
          "name": "resourceNames",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1beta1.NamedRuleWithOperations#resources"
            },
            "remarks": "For example: 'pods' means pods. 'pods/log' means the log subresource of pods. '*' means all resources, but not subresources. 'pods/*' means all subresources of pods. '_/scale' means all scale subresources. '_/*' means all resources and their subresources.\n\nIf wildcard is present, the validation rule will ensure resources do not overlap with each other.\n\nDepending on the enclosing object, subresources might not be allowed. Required.",
            "stability": "stable",
            "summary": "Resources is a list of resources this rule applies to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24724
          },
          "name": "resources",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1beta1.NamedRuleWithOperations#scope"
            },
            "default": ".",
            "remarks": "Valid values are \"Cluster\", \"Namespaced\", and \"*\" \"Cluster\" means that only cluster-scoped resources will match this rule. Namespace API objects are cluster-scoped. \"Namespaced\" means that only namespaced resources will match this rule. \"*\" means that there are no scope restrictions. Subresources match the scope of their parent resource. Default is \"*\".",
            "stability": "stable",
            "summary": "scope specifies the scope of this rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24732
          },
          "name": "scope",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:NamedRuleWithOperationsV1Beta1"
    },
    "cdk8s-plus-28.k8s.NamespaceSpec": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.NamespaceSpec"
        },
        "stability": "stable",
        "summary": "NamespaceSpec describes the attributes on a Namespace."
      },
      "fqn": "cdk8s-plus-28.k8s.NamespaceSpec",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 15431
      },
      "name": "NamespaceSpec",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.NamespaceSpec#finalizers"
            },
            "remarks": "More info: https://kubernetes.io/docs/tasks/administer-cluster/namespaces/",
            "stability": "stable",
            "summary": "Finalizers is an opaque list of values that must be empty to permanently remove object from storage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15437
          },
          "name": "finalizers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:NamespaceSpec"
    },
    "cdk8s-plus-28.k8s.NetworkPolicyEgressRule": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.networking.v1.NetworkPolicyEgressRule"
        },
        "remarks": "The traffic must match both ports and to. This type is beta-level in 1.8",
        "stability": "stable",
        "summary": "NetworkPolicyEgressRule describes a particular set of traffic that is allowed out of pods matched by a NetworkPolicySpec's podSelector."
      },
      "fqn": "cdk8s-plus-28.k8s.NetworkPolicyEgressRule",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 23823
      },
      "name": "NetworkPolicyEgressRule",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.NetworkPolicyEgressRule#ports"
            },
            "remarks": "Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.",
            "stability": "stable",
            "summary": "ports is a list of destination ports for outgoing traffic."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23829
          },
          "name": "ports",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.NetworkPolicyPort"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.NetworkPolicyEgressRule#to"
            },
            "remarks": "Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all destinations (traffic not restricted by destination). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the to list.",
            "stability": "stable",
            "summary": "to is a list of destinations for outgoing traffic of pods selected for this rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23836
          },
          "name": "to",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.NetworkPolicyPeer"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:NetworkPolicyEgressRule"
    },
    "cdk8s-plus-28.k8s.NetworkPolicyIngressRule": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.networking.v1.NetworkPolicyIngressRule"
        },
        "remarks": "The traffic must match both ports and from.",
        "stability": "stable",
        "summary": "NetworkPolicyIngressRule describes a particular set of traffic that is allowed to the pods matched by a NetworkPolicySpec's podSelector."
      },
      "fqn": "cdk8s-plus-28.k8s.NetworkPolicyIngressRule",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 23860
      },
      "name": "NetworkPolicyIngressRule",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.NetworkPolicyIngressRule#from"
            },
            "remarks": "Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all sources (traffic not restricted by source). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the from list.",
            "stability": "stable",
            "summary": "from is a list of sources which should be able to access the pods selected for this rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23866
          },
          "name": "from",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.NetworkPolicyPeer"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.NetworkPolicyIngressRule#ports"
            },
            "remarks": "Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.",
            "stability": "stable",
            "summary": "ports is a list of ports which should be made accessible on the pods selected for this rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23873
          },
          "name": "ports",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.NetworkPolicyPort"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:NetworkPolicyIngressRule"
    },
    "cdk8s-plus-28.k8s.NetworkPolicyPeer": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.networking.v1.NetworkPolicyPeer"
        },
        "remarks": "Only certain combinations of fields are allowed",
        "stability": "stable",
        "summary": "NetworkPolicyPeer describes a peer to allow traffic to/from."
      },
      "fqn": "cdk8s-plus-28.k8s.NetworkPolicyPeer",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 27878
      },
      "name": "NetworkPolicyPeer",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.NetworkPolicyPeer#ipBlock"
            },
            "remarks": "If this field is set then neither of the other fields can be.",
            "stability": "stable",
            "summary": "ipBlock defines policy on a particular IPBlock."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27884
          },
          "name": "ipBlock",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.IpBlock"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.NetworkPolicyPeer#namespaceSelector"
            },
            "remarks": "This field follows standard label selector semantics; if present but empty, it selects all namespaces.\n\nIf podSelector is also set, then the NetworkPolicyPeer as a whole selects the pods matching podSelector in the namespaces selected by namespaceSelector. Otherwise it selects all pods in the namespaces selected by namespaceSelector.",
            "stability": "stable",
            "summary": "namespaceSelector selects namespaces using cluster-scoped labels."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27893
          },
          "name": "namespaceSelector",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.LabelSelector"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.NetworkPolicyPeer#podSelector"
            },
            "remarks": "This field follows standard label selector semantics; if present but empty, it selects all pods.\n\nIf namespaceSelector is also set, then the NetworkPolicyPeer as a whole selects the pods matching podSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects the pods matching podSelector in the policy's own namespace.",
            "stability": "stable",
            "summary": "podSelector is a label selector which selects pods."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27902
          },
          "name": "podSelector",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.LabelSelector"
          }
        }
      ],
      "symbolId": "src/imports/k8s:NetworkPolicyPeer"
    },
    "cdk8s-plus-28.k8s.NetworkPolicyPort": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.networking.v1.NetworkPolicyPort"
        },
        "stability": "stable",
        "summary": "NetworkPolicyPort describes a port to allow traffic on."
      },
      "fqn": "cdk8s-plus-28.k8s.NetworkPolicyPort",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 27833
      },
      "name": "NetworkPolicyPort",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.NetworkPolicyPort#endPort"
            },
            "remarks": "This field cannot be defined if the port field is not defined or if the port field is defined as a named (string) port. The endPort must be equal or greater than port.",
            "stability": "stable",
            "summary": "endPort indicates that the range of ports from port to endPort if set, inclusive, should be allowed by the policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27839
          },
          "name": "endPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.NetworkPolicyPort#port"
            },
            "remarks": "This can either be a numerical or named port on a pod. If this field is not provided, this matches all port names and numbers. If present, only traffic on the specified protocol AND port will be matched.",
            "stability": "stable",
            "summary": "port represents the port on the given protocol."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27846
          },
          "name": "port",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.IntOrString"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.NetworkPolicyPort#protocol"
            },
            "remarks": "If not specified, this field defaults to TCP.",
            "stability": "stable",
            "summary": "protocol represents the protocol (TCP, UDP, or SCTP) which traffic must match."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27853
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:NetworkPolicyPort"
    },
    "cdk8s-plus-28.k8s.NetworkPolicySpec": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.networking.v1.NetworkPolicySpec"
        },
        "stability": "stable",
        "summary": "NetworkPolicySpec provides the specification of a NetworkPolicy."
      },
      "fqn": "cdk8s-plus-28.k8s.NetworkPolicySpec",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 17027
      },
      "name": "NetworkPolicySpec",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.NetworkPolicySpec#podSelector"
            },
            "remarks": "The array of ingress rules is applied to any pods selected by this field. Multiple network policies can select the same set of pods. In this case, the ingress rules for each are combined additively. This field is NOT optional and follows standard label selector semantics. An empty podSelector matches all pods in this namespace.",
            "stability": "stable",
            "summary": "podSelector selects the pods to which this NetworkPolicy object applies."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17047
          },
          "name": "podSelector",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.LabelSelector"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.NetworkPolicySpec#egress"
            },
            "remarks": "Outgoing traffic is allowed if there are no NetworkPolicies selecting the pod (and cluster policy otherwise allows the traffic), OR if the traffic matches at least one egress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy limits all outgoing traffic (and serves solely to ensure that the pods it selects are isolated by default). This field is beta-level in 1.8",
            "stability": "stable",
            "summary": "egress is a list of egress rules to be applied to the selected pods."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17033
          },
          "name": "egress",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.NetworkPolicyEgressRule"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.NetworkPolicySpec#ingress"
            },
            "remarks": "Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod (and cluster policy otherwise allows the traffic), OR if the traffic source is the pod's local node, OR if the traffic matches at least one ingress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy does not allow any traffic (and serves solely to ensure that the pods it selects are isolated by default)",
            "stability": "stable",
            "summary": "ingress is a list of ingress rules to be applied to the selected pods."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17040
          },
          "name": "ingress",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.NetworkPolicyIngressRule"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.NetworkPolicySpec#policyTypes"
            },
            "remarks": "Valid options are [\"Ingress\"], [\"Egress\"], or [\"Ingress\", \"Egress\"]. If this field is not specified, it will default based on the existence of ingress or egress rules; policies that contain an egress section are assumed to affect egress, and all policies (whether or not they contain an ingress section) are assumed to affect ingress. If you want to write an egress-only policy, you must explicitly specify policyTypes [ \"Egress\" ]. Likewise, if you want to write a policy that specifies that no egress is allowed, you must specify a policyTypes value that include \"Egress\" (since such a policy would not include an egress section and would otherwise default to just [ \"Ingress\" ]). This field is beta-level in 1.8",
            "stability": "stable",
            "summary": "policyTypes is a list of rule types that the NetworkPolicy relates to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17054
          },
          "name": "policyTypes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:NetworkPolicySpec"
    },
    "cdk8s-plus-28.k8s.NfsVolumeSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.NFSVolumeSource"
        },
        "remarks": "NFS volumes do not support ownership management or SELinux relabeling.",
        "stability": "stable",
        "summary": "Represents an NFS mount that lasts the lifetime of a pod."
      },
      "fqn": "cdk8s-plus-28.k8s.NfsVolumeSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 21090
      },
      "name": "NfsVolumeSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.NFSVolumeSource#path"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
            "stability": "stable",
            "summary": "path that is exported by the NFS server."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21096
          },
          "name": "path",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.NFSVolumeSource#server"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
            "stability": "stable",
            "summary": "server is the hostname or IP address of the NFS server."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21111
          },
          "name": "server",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.NFSVolumeSource#readOnly"
            },
            "default": "false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
            "remarks": "Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
            "stability": "stable",
            "summary": "readOnly here will force the NFS export to be mounted with read-only permissions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21104
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/imports/k8s:NfsVolumeSource"
    },
    "cdk8s-plus-28.k8s.NodeAffinity": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.NodeAffinity"
        },
        "stability": "stable",
        "summary": "Node affinity is a group of node affinity scheduling rules."
      },
      "fqn": "cdk8s-plus-28.k8s.NodeAffinity",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 25304
      },
      "name": "NodeAffinity",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.NodeAffinity#preferredDuringSchedulingIgnoredDuringExecution"
            },
            "remarks": "The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.",
            "stability": "stable",
            "summary": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25310
          },
          "name": "preferredDuringSchedulingIgnoredDuringExecution",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.PreferredSchedulingTerm"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.NodeAffinity#requiredDuringSchedulingIgnoredDuringExecution"
            },
            "remarks": "If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.",
            "stability": "stable",
            "summary": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25317
          },
          "name": "requiredDuringSchedulingIgnoredDuringExecution",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.NodeSelector"
          }
        }
      ],
      "symbolId": "src/imports/k8s:NodeAffinity"
    },
    "cdk8s-plus-28.k8s.NodeConfigSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.NodeConfigSource"
        },
        "remarks": "Exactly one subfield (excluding metadata) must be non-nil. This API is deprecated since 1.22",
        "stability": "stable",
        "summary": "NodeConfigSource specifies a source of node configuration."
      },
      "fqn": "cdk8s-plus-28.k8s.NodeConfigSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 20148
      },
      "name": "NodeConfigSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.NodeConfigSource#configMap"
            },
            "stability": "stable",
            "summary": "ConfigMap is a reference to a Node's ConfigMap."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20154
          },
          "name": "configMap",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ConfigMapNodeConfigSource"
          }
        }
      ],
      "symbolId": "src/imports/k8s:NodeConfigSource"
    },
    "cdk8s-plus-28.k8s.NodeSelector": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.NodeSelector"
        },
        "remarks": "that is, it represents the OR of the selectors represented by the node selector terms.",
        "stability": "stable",
        "summary": "A node selector represents the union of the results of one or more label queries over a set of nodes;"
      },
      "fqn": "cdk8s-plus-28.k8s.NodeSelector",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 17734
      },
      "name": "NodeSelector",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.NodeSelector#nodeSelectorTerms"
            },
            "remarks": "A list of node selector terms. The terms are ORed.",
            "stability": "stable",
            "summary": "Required."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17740
          },
          "name": "nodeSelectorTerms",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.NodeSelectorTerm"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:NodeSelector"
    },
    "cdk8s-plus-28.k8s.NodeSelectorRequirement": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.NodeSelectorRequirement"
        },
        "stability": "stable",
        "summary": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values."
      },
      "fqn": "cdk8s-plus-28.k8s.NodeSelectorRequirement",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 27927
      },
      "name": "NodeSelectorRequirement",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.NodeSelectorRequirement#key"
            },
            "stability": "stable",
            "summary": "The label key that the selector applies to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27933
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.NodeSelectorRequirement#operator"
            },
            "remarks": "Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
            "stability": "stable",
            "summary": "Represents a key's relationship to a set of values."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27940
          },
          "name": "operator",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.NodeSelectorRequirement#values"
            },
            "remarks": "If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
            "stability": "stable",
            "summary": "An array of string values."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27947
          },
          "name": "values",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:NodeSelectorRequirement"
    },
    "cdk8s-plus-28.k8s.NodeSelectorTerm": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.NodeSelectorTerm"
        },
        "remarks": "The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
        "stability": "stable",
        "summary": "A null or empty node selector term matches no objects."
      },
      "fqn": "cdk8s-plus-28.k8s.NodeSelectorTerm",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 24064
      },
      "name": "NodeSelectorTerm",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.NodeSelectorTerm#matchExpressions"
            },
            "stability": "stable",
            "summary": "A list of node selector requirements by node's labels."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24070
          },
          "name": "matchExpressions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.NodeSelectorRequirement"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.NodeSelectorTerm#matchFields"
            },
            "stability": "stable",
            "summary": "A list of node selector requirements by node's fields."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24077
          },
          "name": "matchFields",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.NodeSelectorRequirement"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:NodeSelectorTerm"
    },
    "cdk8s-plus-28.k8s.NodeSpec": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.NodeSpec"
        },
        "stability": "stable",
        "summary": "NodeSpec describes the attributes that a node is created with."
      },
      "fqn": "cdk8s-plus-28.k8s.NodeSpec",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 15460
      },
      "name": "NodeSpec",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.NodeSpec#configSource"
            },
            "remarks": "This feature is removed.",
            "stability": "stable",
            "summary": "Deprecated: Previously used to specify the source of the node's configuration for the DynamicKubeletConfig feature."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15466
          },
          "name": "configSource",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.NodeConfigSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.NodeSpec#externalID"
            },
            "remarks": "Not all kubelets will set this field. Remove field after 1.13. see: https://issues.k8s.io/61966",
            "stability": "stable",
            "summary": "Deprecated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15473
          },
          "name": "externalId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.NodeSpec#podCIDR"
            },
            "stability": "stable",
            "summary": "PodCIDR represents the pod IP range assigned to the node."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15480
          },
          "name": "podCidr",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.NodeSpec#podCIDRs"
            },
            "remarks": "If this field is specified, the 0th entry must match the podCIDR field. It may contain at most 1 value for each of IPv4 and IPv6.",
            "stability": "stable",
            "summary": "podCIDRs represents the IP ranges assigned to the node for usage by Pods on that node."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15487
          },
          "name": "podCidRs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.NodeSpec#providerID"
            },
            "stability": "stable",
            "summary": "ID of the node assigned by the cloud provider in the format: <ProviderName>://<ProviderSpecificNodeID>."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15494
          },
          "name": "providerId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.NodeSpec#taints"
            },
            "stability": "stable",
            "summary": "If specified, the node's taints."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15501
          },
          "name": "taints",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.Taint"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.NodeSpec#unschedulable"
            },
            "remarks": "By default, node is schedulable. More info: https://kubernetes.io/docs/concepts/nodes/node/#manual-node-administration",
            "stability": "stable",
            "summary": "Unschedulable controls node schedulability of new pods."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15508
          },
          "name": "unschedulable",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/imports/k8s:NodeSpec"
    },
    "cdk8s-plus-28.k8s.NonResourceAttributes": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.authorization.v1.NonResourceAttributes"
        },
        "stability": "stable",
        "summary": "NonResourceAttributes includes the authorization attributes available for non-resource requests to the Authorizer interface."
      },
      "fqn": "cdk8s-plus-28.k8s.NonResourceAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 19647
      },
      "name": "NonResourceAttributes",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.authorization.v1.NonResourceAttributes#path"
            },
            "stability": "stable",
            "summary": "Path is the URL path of the request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19653
          },
          "name": "path",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.authorization.v1.NonResourceAttributes#verb"
            },
            "stability": "stable",
            "summary": "Verb is the standard HTTP verb."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19660
          },
          "name": "verb",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:NonResourceAttributes"
    },
    "cdk8s-plus-28.k8s.NonResourcePolicyRuleV1Beta2": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.flowcontrol.v1beta2.NonResourcePolicyRule"
        },
        "remarks": "A NonResourcePolicyRule matches a request if and only if both (a) at least one member of verbs matches the request and (b) at least one member of nonResourceURLs matches the request.",
        "stability": "stable",
        "summary": "NonResourcePolicyRule is a predicate that matches non-resource requests according to their verb and the target non-resource URL."
      },
      "fqn": "cdk8s-plus-28.k8s.NonResourcePolicyRuleV1Beta2",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 27379
      },
      "name": "NonResourcePolicyRuleV1Beta2",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta2.NonResourcePolicyRule#nonResourceURLs"
            },
            "remarks": "For example:\n- \"/healthz\" is legal\n- \"/hea*\" is illegal\n- \"/hea\" is legal but matches nothing\n- \"/hea/*\" also matches nothing\n- \"/healthz/*\" matches all per-component health checks.\n\"*\" matches all non-resource urls. if it is present, it must be the only entry. Required.",
            "stability": "stable",
            "summary": "`nonResourceURLs` is a set of url prefixes that a user should have access to and may not be empty."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27391
          },
          "name": "nonResourceUrLs",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta2.NonResourcePolicyRule#verbs"
            },
            "remarks": "\"*\" matches all verbs. If it is present, it must be the only entry. Required.",
            "stability": "stable",
            "summary": "`verbs` is a list of matching verbs and may not be empty."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27398
          },
          "name": "verbs",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:NonResourcePolicyRuleV1Beta2"
    },
    "cdk8s-plus-28.k8s.NonResourcePolicyRuleV1Beta3": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.flowcontrol.v1beta3.NonResourcePolicyRule"
        },
        "remarks": "A NonResourcePolicyRule matches a request if and only if both (a) at least one member of verbs matches the request and (b) at least one member of nonResourceURLs matches the request.",
        "stability": "stable",
        "summary": "NonResourcePolicyRule is a predicate that matches non-resource requests according to their verb and the target non-resource URL."
      },
      "fqn": "cdk8s-plus-28.k8s.NonResourcePolicyRuleV1Beta3",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 27573
      },
      "name": "NonResourcePolicyRuleV1Beta3",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta3.NonResourcePolicyRule#nonResourceURLs"
            },
            "remarks": "For example:\n- \"/healthz\" is legal\n- \"/hea*\" is illegal\n- \"/hea\" is legal but matches nothing\n- \"/hea/*\" also matches nothing\n- \"/healthz/*\" matches all per-component health checks.\n\"*\" matches all non-resource urls. if it is present, it must be the only entry. Required.",
            "stability": "stable",
            "summary": "`nonResourceURLs` is a set of url prefixes that a user should have access to and may not be empty."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27585
          },
          "name": "nonResourceUrLs",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta3.NonResourcePolicyRule#verbs"
            },
            "remarks": "\"*\" matches all verbs. If it is present, it must be the only entry. Required.",
            "stability": "stable",
            "summary": "`verbs` is a list of matching verbs and may not be empty."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27592
          },
          "name": "verbs",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:NonResourcePolicyRuleV1Beta3"
    },
    "cdk8s-plus-28.k8s.ObjectFieldSelector": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ObjectFieldSelector"
        },
        "stability": "stable",
        "summary": "ObjectFieldSelector selects an APIVersioned field of an object."
      },
      "fqn": "cdk8s-plus-28.k8s.ObjectFieldSelector",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 29930
      },
      "name": "ObjectFieldSelector",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ObjectFieldSelector#fieldPath"
            },
            "stability": "stable",
            "summary": "Path of the field to select in the specified API version."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29943
          },
          "name": "fieldPath",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ObjectFieldSelector#apiVersion"
            },
            "stability": "stable",
            "summary": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29936
          },
          "name": "apiVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ObjectFieldSelector"
    },
    "cdk8s-plus-28.k8s.ObjectMeta": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "stability": "stable",
        "summary": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create."
      },
      "fqn": "cdk8s-plus-28.k8s.ObjectMeta",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 13112
      },
      "name": "ObjectMeta",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta#annotations"
            },
            "remarks": "They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations",
            "stability": "stable",
            "summary": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13118
          },
          "name": "annotations",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta#creationTimestamp"
            },
            "remarks": "It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "CreationTimestamp is a timestamp representing the server time when this object was created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13127
          },
          "name": "creationTimestamp",
          "optional": true,
          "type": {
            "primitive": "date"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta#deletionGracePeriodSeconds"
            },
            "remarks": "Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
            "stability": "stable",
            "summary": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13134
          },
          "name": "deletionGracePeriodSeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta#deletionTimestamp"
            },
            "remarks": "This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13143
          },
          "name": "deletionTimestamp",
          "optional": true,
          "type": {
            "primitive": "date"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta#finalizers"
            },
            "remarks": "Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.",
            "stability": "stable",
            "summary": "Must be empty before the object is deleted from the registry."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13150
          },
          "name": "finalizers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta#generateName"
            },
            "remarks": "If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
            "stability": "stable",
            "summary": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13161
          },
          "name": "generateName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta#generation"
            },
            "remarks": "Populated by the system. Read-only.",
            "stability": "stable",
            "summary": "A sequence number representing a specific generation of the desired state."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13168
          },
          "name": "generation",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta#labels"
            },
            "remarks": "May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels",
            "stability": "stable",
            "summary": "Map of string keys and values that can be used to organize and categorize (scope and select) objects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13175
          },
          "name": "labels",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta#managedFields"
            },
            "remarks": "This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
            "stability": "stable",
            "summary": "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13182
          },
          "name": "managedFields",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.ManagedFieldsEntry"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta#name"
            },
            "remarks": "Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
            "stability": "stable",
            "summary": "Name must be unique within a namespace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13189
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta#namespace"
            },
            "remarks": "An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces",
            "stability": "stable",
            "summary": "Namespace defines the space within which each name must be unique."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13198
          },
          "name": "namespace",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta#ownerReferences"
            },
            "remarks": "If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
            "stability": "stable",
            "summary": "List of objects depended by this object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13205
          },
          "name": "ownerReferences",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.OwnerReference"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta#resourceVersion"
            },
            "remarks": "May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
            "stability": "stable",
            "summary": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13214
          },
          "name": "resourceVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta#selfLink"
            },
            "stability": "stable",
            "summary": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13221
          },
          "name": "selfLink",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta#uid"
            },
            "remarks": "It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
            "stability": "stable",
            "summary": "UID is the unique in time and space value for this object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13230
          },
          "name": "uid",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ObjectMeta"
    },
    "cdk8s-plus-28.k8s.ObjectMetricSourceV2": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.autoscaling.v2.ObjectMetricSource"
        },
        "stability": "stable",
        "summary": "ObjectMetricSource indicates how to scale on a metric describing a kubernetes object (for example, hits-per-second on an Ingress object)."
      },
      "fqn": "cdk8s-plus-28.k8s.ObjectMetricSourceV2",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 25001
      },
      "name": "ObjectMetricSourceV2",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v2.ObjectMetricSource#describedObject"
            },
            "stability": "stable",
            "summary": "describedObject specifies the descriptions of a object,such as kind,name apiVersion."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25007
          },
          "name": "describedObject",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.CrossVersionObjectReferenceV2"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v2.ObjectMetricSource#metric"
            },
            "stability": "stable",
            "summary": "metric identifies the target metric by name and selector."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25014
          },
          "name": "metric",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.MetricIdentifierV2"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v2.ObjectMetricSource#target"
            },
            "stability": "stable",
            "summary": "target specifies the target value for the given metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25021
          },
          "name": "target",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.MetricTargetV2"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ObjectMetricSourceV2"
    },
    "cdk8s-plus-28.k8s.ObjectReference": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ObjectReference"
        },
        "stability": "stable",
        "summary": "ObjectReference contains enough information to let you inspect or modify the referred object."
      },
      "fqn": "cdk8s-plus-28.k8s.ObjectReference",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 15143
      },
      "name": "ObjectReference",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ObjectReference#apiVersion"
            },
            "stability": "stable",
            "summary": "API version of the referent."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15149
          },
          "name": "apiVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ObjectReference#fieldPath"
            },
            "stability": "stable",
            "summary": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15156
          },
          "name": "fieldPath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ObjectReference#kind"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "stability": "stable",
            "summary": "Kind of the referent."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15163
          },
          "name": "kind",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ObjectReference#name"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
            "stability": "stable",
            "summary": "Name of the referent."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15170
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ObjectReference#namespace"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
            "stability": "stable",
            "summary": "Namespace of the referent."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15177
          },
          "name": "namespace",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ObjectReference#resourceVersion"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
            "stability": "stable",
            "summary": "Specific resourceVersion to which this reference is made, if any."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15184
          },
          "name": "resourceVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ObjectReference#uid"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
            "stability": "stable",
            "summary": "UID of the referent."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15191
          },
          "name": "uid",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ObjectReference"
    },
    "cdk8s-plus-28.k8s.Overhead": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.node.v1.Overhead"
        },
        "stability": "stable",
        "summary": "Overhead structure represents the resource overhead associated with running a pod."
      },
      "fqn": "cdk8s-plus-28.k8s.Overhead",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 17162
      },
      "name": "Overhead",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.node.v1.Overhead#podFixed"
            },
            "stability": "stable",
            "summary": "podFixed represents the fixed resource overhead associated with running a pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17168
          },
          "name": "podFixed",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.Quantity"
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:Overhead"
    },
    "cdk8s-plus-28.k8s.OwnerReference": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference"
        },
        "remarks": "An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
        "stability": "stable",
        "summary": "OwnerReference contains enough information to let you identify an owning object."
      },
      "fqn": "cdk8s-plus-28.k8s.OwnerReference",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 18340
      },
      "name": "OwnerReference",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference#apiVersion"
            },
            "stability": "stable",
            "summary": "API version of the referent."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18346
          },
          "name": "apiVersion",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference#kind"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "stability": "stable",
            "summary": "Kind of the referent."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18368
          },
          "name": "kind",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference#name"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
            "stability": "stable",
            "summary": "Name of the referent."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18375
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference#uid"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
            "stability": "stable",
            "summary": "UID of the referent."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18382
          },
          "name": "uid",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference#blockOwnerDeletion"
            },
            "default": "false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
            "remarks": "See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
            "stability": "stable",
            "summary": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18354
          },
          "name": "blockOwnerDeletion",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference#controller"
            },
            "stability": "stable",
            "summary": "If true, this reference points to the managing controller."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18361
          },
          "name": "controller",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/imports/k8s:OwnerReference"
    },
    "cdk8s-plus-28.k8s.ParamKindV1Alpha1": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1alpha1.ParamKind"
        },
        "stability": "stable",
        "summary": "ParamKind is a tuple of Group Kind and Version."
      },
      "fqn": "cdk8s-plus-28.k8s.ParamKindV1Alpha1",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 18774
      },
      "name": "ParamKindV1Alpha1",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1alpha1.ParamKind#apiVersion"
            },
            "remarks": "In format of \"group/version\". Required.",
            "stability": "stable",
            "summary": "APIVersion is the API group version the resources belong to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18780
          },
          "name": "apiVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1alpha1.ParamKind#kind"
            },
            "remarks": "Required.",
            "stability": "stable",
            "summary": "Kind is the API kind the resources belong to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18787
          },
          "name": "kind",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ParamKindV1Alpha1"
    },
    "cdk8s-plus-28.k8s.ParamKindV1Beta1": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1beta1.ParamKind"
        },
        "stability": "stable",
        "summary": "ParamKind is a tuple of Group Kind and Version."
      },
      "fqn": "cdk8s-plus-28.k8s.ParamKindV1Beta1",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 19188
      },
      "name": "ParamKindV1Beta1",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1beta1.ParamKind#apiVersion"
            },
            "remarks": "In format of \"group/version\". Required.",
            "stability": "stable",
            "summary": "APIVersion is the API group version the resources belong to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19194
          },
          "name": "apiVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1beta1.ParamKind#kind"
            },
            "remarks": "Required.",
            "stability": "stable",
            "summary": "Kind is the API kind the resources belong to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19201
          },
          "name": "kind",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ParamKindV1Beta1"
    },
    "cdk8s-plus-28.k8s.ParamRefV1Alpha1": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1alpha1.ParamRef"
        },
        "stability": "stable",
        "summary": "ParamRef describes how to locate the params to be used as input to expressions of rules applied by a policy binding."
      },
      "fqn": "cdk8s-plus-28.k8s.ParamRefV1Alpha1",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 18926
      },
      "name": "ParamRefV1Alpha1",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1alpha1.ParamRef#name"
            },
            "remarks": "`name` and `selector` are mutually exclusive properties. If one is set, the other must be unset.",
            "stability": "stable",
            "summary": "`name` is the name of the resource being referenced."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18934
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1alpha1.ParamRef#namespace"
            },
            "remarks": "Allows limiting the search for params to a specific namespace. Applies to both `name` and `selector` fields.\n\nA per-namespace parameter may be used by specifying a namespace-scoped `paramKind` in the policy and leaving this field empty.\n\n- If `paramKind` is cluster-scoped, this field MUST be unset. Setting this field results in a configuration error.\n\n- If `paramKind` is namespace-scoped, the namespace of the object being evaluated for admission will be used when this field is left unset. Take care that if this is left empty the binding must not match any cluster-scoped resources, which will result in an error.",
            "stability": "stable",
            "summary": "namespace is the namespace of the referenced resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18947
          },
          "name": "namespace",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1alpha1.ParamRef#parameterNotFoundAction"
            },
            "default": "Deny`",
            "remarks": "If the value is set to `Allow`, then no matched parameters will be treated as successful validation by the binding. If set to `Deny`, then no matched parameters will be subject to the `failurePolicy` of the policy.\n\nAllowed values are `Allow` or `Deny` Default to `Deny`",
            "stability": "stable",
            "summary": "`parameterNotFoundAction` controls the behavior of the binding when the resource exists, and name or selector is valid, but there are no parameters matched by the binding."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18957
          },
          "name": "parameterNotFoundAction",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1alpha1.ParamRef#selector"
            },
            "remarks": "Supply selector: {} to match all resources of the ParamKind.\n\nIf multiple params are found, they are all evaluated with the policy expressions and the results are ANDed together.\n\nOne of `name` or `selector` must be set, but `name` and `selector` are mutually exclusive properties. If one is set, the other must be unset.",
            "stability": "stable",
            "summary": "selector can be used to match multiple param objects based on their labels."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18968
          },
          "name": "selector",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.LabelSelector"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ParamRefV1Alpha1"
    },
    "cdk8s-plus-28.k8s.ParamRefV1Beta1": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1beta1.ParamRef"
        },
        "stability": "stable",
        "summary": "ParamRef describes how to locate the params to be used as input to expressions of rules applied by a policy binding."
      },
      "fqn": "cdk8s-plus-28.k8s.ParamRefV1Beta1",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 19340
      },
      "name": "ParamRefV1Beta1",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1beta1.ParamRef#name"
            },
            "remarks": "One of `name` or `selector` must be set, but `name` and `selector` are mutually exclusive properties. If one is set, the other must be unset.\n\nA single parameter used for all admission requests can be configured by setting the `name` field, leaving `selector` blank, and setting namespace if `paramKind` is namespace-scoped.",
            "stability": "stable",
            "summary": "name is the name of the resource being referenced."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19350
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1beta1.ParamRef#namespace"
            },
            "remarks": "Allows limiting the search for params to a specific namespace. Applies to both `name` and `selector` fields.\n\nA per-namespace parameter may be used by specifying a namespace-scoped `paramKind` in the policy and leaving this field empty.\n\n- If `paramKind` is cluster-scoped, this field MUST be unset. Setting this field results in a configuration error.\n\n- If `paramKind` is namespace-scoped, the namespace of the object being evaluated for admission will be used when this field is left unset. Take care that if this is left empty the binding must not match any cluster-scoped resources, which will result in an error.",
            "stability": "stable",
            "summary": "namespace is the namespace of the referenced resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19363
          },
          "name": "namespace",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1beta1.ParamRef#parameterNotFoundAction"
            },
            "remarks": "If the value is set to `Allow`, then no matched parameters will be treated as successful validation by the binding. If set to `Deny`, then no matched parameters will be subject to the `failurePolicy` of the policy.\n\nAllowed values are `Allow` or `Deny`\n\nRequired",
            "stability": "stable",
            "summary": "`parameterNotFoundAction` controls the behavior of the binding when the resource exists, and name or selector is valid, but there are no parameters matched by the binding."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19374
          },
          "name": "parameterNotFoundAction",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1beta1.ParamRef#selector"
            },
            "remarks": "Supply selector: {} to match all resources of the ParamKind.\n\nIf multiple params are found, they are all evaluated with the policy expressions and the results are ANDed together.\n\nOne of `name` or `selector` must be set, but `name` and `selector` are mutually exclusive properties. If one is set, the other must be unset.",
            "stability": "stable",
            "summary": "selector can be used to match multiple param objects based on their labels."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19385
          },
          "name": "selector",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.LabelSelector"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ParamRefV1Beta1"
    },
    "cdk8s-plus-28.k8s.ParentReferenceV1Alpha1": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.networking.v1alpha1.ParentReference"
        },
        "stability": "stable",
        "summary": "ParentReference describes a reference to a parent object."
      },
      "fqn": "cdk8s-plus-28.k8s.ParentReferenceV1Alpha1",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 23897
      },
      "name": "ParentReferenceV1Alpha1",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1alpha1.ParentReference#group"
            },
            "stability": "stable",
            "summary": "Group is the group of the object being referenced."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23903
          },
          "name": "group",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1alpha1.ParentReference#name"
            },
            "stability": "stable",
            "summary": "Name is the name of the object being referenced."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23910
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1alpha1.ParentReference#namespace"
            },
            "stability": "stable",
            "summary": "Namespace is the namespace of the object being referenced."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23917
          },
          "name": "namespace",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1alpha1.ParentReference#resource"
            },
            "stability": "stable",
            "summary": "Resource is the resource of the object being referenced."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23924
          },
          "name": "resource",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1alpha1.ParentReference#uid"
            },
            "stability": "stable",
            "summary": "UID is the uid of the object being referenced."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23931
          },
          "name": "uid",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ParentReferenceV1Alpha1"
    },
    "cdk8s-plus-28.k8s.PersistentVolumeClaimSpec": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.PersistentVolumeClaimSpec"
        },
        "stability": "stable",
        "summary": "PersistentVolumeClaimSpec describes the common attributes of storage devices and allows a Source for provider-specific attributes."
      },
      "fqn": "cdk8s-plus-28.k8s.PersistentVolumeClaimSpec",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 15798
      },
      "name": "PersistentVolumeClaimSpec",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeClaimSpec#accessModes"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
            "stability": "stable",
            "summary": "accessModes contains the desired access modes the volume should have."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15804
          },
          "name": "accessModes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeClaimSpec#dataSource"
            },
            "stability": "stable",
            "summary": "dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef, and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified. If the namespace is specified, then dataSourceRef will not be copied to dataSource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15811
          },
          "name": "dataSource",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.TypedLocalObjectReference"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeClaimSpec#dataSourceRef"
            },
            "remarks": "This may be any object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the dataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, when namespace isn't specified in dataSourceRef, both fields (dataSource and dataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. When namespace is specified in dataSourceRef, dataSource isn't set to the same value and must be empty. There are three important differences between dataSource and dataSourceRef: * While dataSource only allows two specific types of objects, dataSourceRef\nallows any non-core object, as well as PersistentVolumeClaim objects.\n* While dataSource ignores disallowed values (dropping them), dataSourceRef\npreserves all values, and generates an error if a disallowed value is\nspecified.\n* While dataSource only allows local objects, dataSourceRef allows objects\nin any namespaces.\n(Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled. (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.",
            "stability": "stable",
            "summary": "dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15825
          },
          "name": "dataSourceRef",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.TypedObjectReference"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeClaimSpec#resources"
            },
            "remarks": "If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
            "stability": "stable",
            "summary": "resources represents the minimum resources the volume should have."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15832
          },
          "name": "resources",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ResourceRequirements"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeClaimSpec#selector"
            },
            "stability": "stable",
            "summary": "selector is a label query over volumes to consider for binding."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15839
          },
          "name": "selector",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.LabelSelector"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeClaimSpec#storageClassName"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1",
            "stability": "stable",
            "summary": "storageClassName is the name of the StorageClass required by the claim."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15846
          },
          "name": "storageClassName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeClaimSpec#volumeMode"
            },
            "remarks": "Value of Filesystem is implied when not included in claim spec.",
            "stability": "stable",
            "summary": "volumeMode defines what type of volume is required by the claim."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15853
          },
          "name": "volumeMode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeClaimSpec#volumeName"
            },
            "stability": "stable",
            "summary": "volumeName is the binding reference to the PersistentVolume backing this claim."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15860
          },
          "name": "volumeName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:PersistentVolumeClaimSpec"
    },
    "cdk8s-plus-28.k8s.PersistentVolumeClaimTemplate": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.PersistentVolumeClaimTemplate"
        },
        "stability": "stable",
        "summary": "PersistentVolumeClaimTemplate is used to produce PersistentVolumeClaim objects as part of an EphemeralVolumeSource."
      },
      "fqn": "cdk8s-plus-28.k8s.PersistentVolumeClaimTemplate",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 29002
      },
      "name": "PersistentVolumeClaimTemplate",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeClaimTemplate#spec"
            },
            "remarks": "The entire content is copied unchanged into the PVC that gets created from this template. The same fields as in a PersistentVolumeClaim are also valid here.",
            "stability": "stable",
            "summary": "The specification for the PersistentVolumeClaim."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29015
          },
          "name": "spec",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.PersistentVolumeClaimSpec"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeClaimTemplate#metadata"
            },
            "remarks": "No other fields are allowed and will be rejected during validation.",
            "stability": "stable",
            "summary": "May contain labels and annotations that will be copied into the PVC when creating it."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29008
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:PersistentVolumeClaimTemplate"
    },
    "cdk8s-plus-28.k8s.PersistentVolumeClaimVolumeSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource"
        },
        "remarks": "This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system).",
        "stability": "stable",
        "summary": "PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace."
      },
      "fqn": "cdk8s-plus-28.k8s.PersistentVolumeClaimVolumeSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 26891
      },
      "name": "PersistentVolumeClaimVolumeSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource#claimName"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
            "stability": "stable",
            "summary": "claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26897
          },
          "name": "claimName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource#readOnly"
            },
            "remarks": "Default false.",
            "stability": "stable",
            "summary": "readOnly Will force the ReadOnly setting in VolumeMounts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26904
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/imports/k8s:PersistentVolumeClaimVolumeSource"
    },
    "cdk8s-plus-28.k8s.PersistentVolumeSpec": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.PersistentVolumeSpec"
        },
        "stability": "stable",
        "summary": "PersistentVolumeSpec is the specification of a persistent volume."
      },
      "fqn": "cdk8s-plus-28.k8s.PersistentVolumeSpec",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 15537
      },
      "name": "PersistentVolumeSpec",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#accessModes"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes",
            "stability": "stable",
            "summary": "accessModes contains all ways the volume can be mounted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15543
          },
          "name": "accessModes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#awsElasticBlockStore"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
            "stability": "stable",
            "summary": "awsElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15550
          },
          "name": "awsElasticBlockStore",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.AwsElasticBlockStoreVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#azureDisk"
            },
            "stability": "stable",
            "summary": "azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15557
          },
          "name": "azureDisk",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.AzureDiskVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#azureFile"
            },
            "stability": "stable",
            "summary": "azureFile represents an Azure File Service mount on the host and bind mount to the pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15564
          },
          "name": "azureFile",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.AzureFilePersistentVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#capacity"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#capacity",
            "stability": "stable",
            "summary": "capacity is the description of the persistent volume's resources and capacity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15571
          },
          "name": "capacity",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.Quantity"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#cephfs"
            },
            "stability": "stable",
            "summary": "cephFS represents a Ceph FS mount on the host that shares a pod's lifetime."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15578
          },
          "name": "cephfs",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.CephFsPersistentVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#cinder"
            },
            "remarks": "More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
            "stability": "stable",
            "summary": "cinder represents a cinder volume attached and mounted on kubelets host machine."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15585
          },
          "name": "cinder",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.CinderPersistentVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#claimRef"
            },
            "remarks": "Expected to be non-nil when bound. claim.VolumeName is the authoritative bind between PV and PVC. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#binding",
            "stability": "stable",
            "summary": "claimRef is part of a bi-directional binding between PersistentVolume and PersistentVolumeClaim."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15592
          },
          "name": "claimRef",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectReference"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#csi"
            },
            "stability": "stable",
            "summary": "csi represents storage that is handled by an external CSI driver (Beta feature)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15599
          },
          "name": "csi",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.CsiPersistentVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#fc"
            },
            "stability": "stable",
            "summary": "fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15606
          },
          "name": "fc",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.FcVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#flexVolume"
            },
            "stability": "stable",
            "summary": "flexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15613
          },
          "name": "flexVolume",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.FlexPersistentVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#flocker"
            },
            "remarks": "This depends on the Flocker control service being running",
            "stability": "stable",
            "summary": "flocker represents a Flocker volume attached to a kubelet's host machine and exposed to the pod for its usage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15620
          },
          "name": "flocker",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.FlockerVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#gcePersistentDisk"
            },
            "remarks": "Provisioned by an admin. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
            "stability": "stable",
            "summary": "gcePersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15627
          },
          "name": "gcePersistentDisk",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.GcePersistentDiskVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#glusterfs"
            },
            "remarks": "Provisioned by an admin. More info: https://examples.k8s.io/volumes/glusterfs/README.md",
            "stability": "stable",
            "summary": "glusterfs represents a Glusterfs volume that is attached to a host and exposed to the pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15634
          },
          "name": "glusterfs",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.GlusterfsPersistentVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#hostPath"
            },
            "remarks": "Provisioned by a developer or tester. This is useful for single-node development and testing only! On-host storage is not supported in any way and WILL NOT WORK in a multi-node cluster. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
            "stability": "stable",
            "summary": "hostPath represents a directory on the host."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15641
          },
          "name": "hostPath",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.HostPathVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#iscsi"
            },
            "remarks": "Provisioned by an admin.",
            "stability": "stable",
            "summary": "iscsi represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15648
          },
          "name": "iscsi",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.IscsiPersistentVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#local"
            },
            "stability": "stable",
            "summary": "local represents directly-attached storage with node affinity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15655
          },
          "name": "local",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.LocalVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#mountOptions"
            },
            "stability": "stable",
            "summary": "mountOptions is the list of mount options, e.g. [\"ro\", \"soft\"]. Not validated - mount will simply fail if one is invalid. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#mount-options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15662
          },
          "name": "mountOptions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#nfs"
            },
            "remarks": "Provisioned by an admin. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
            "stability": "stable",
            "summary": "nfs represents an NFS mount on the host."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15669
          },
          "name": "nfs",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.NfsVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#nodeAffinity"
            },
            "remarks": "This field influences the scheduling of pods that use this volume.",
            "stability": "stable",
            "summary": "nodeAffinity defines constraints that limit what nodes this volume can be accessed from."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15676
          },
          "name": "nodeAffinity",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.VolumeNodeAffinity"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#persistentVolumeReclaimPolicy"
            },
            "remarks": "Valid options are Retain (default for manually created PersistentVolumes), Delete (default for dynamically provisioned PersistentVolumes), and Recycle (deprecated). Recycle must be supported by the volume plugin underlying this PersistentVolume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#reclaiming",
            "stability": "stable",
            "summary": "persistentVolumeReclaimPolicy defines what happens to a persistent volume when released from its claim."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15683
          },
          "name": "persistentVolumeReclaimPolicy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#photonPersistentDisk"
            },
            "stability": "stable",
            "summary": "photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15690
          },
          "name": "photonPersistentDisk",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.PhotonPersistentDiskVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#portworxVolume"
            },
            "stability": "stable",
            "summary": "portworxVolume represents a portworx volume attached and mounted on kubelets host machine."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15697
          },
          "name": "portworxVolume",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.PortworxVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#quobyte"
            },
            "stability": "stable",
            "summary": "quobyte represents a Quobyte mount on the host that shares a pod's lifetime."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15704
          },
          "name": "quobyte",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.QuobyteVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#rbd"
            },
            "remarks": "More info: https://examples.k8s.io/volumes/rbd/README.md",
            "stability": "stable",
            "summary": "rbd represents a Rados Block Device mount on the host that shares a pod's lifetime."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15711
          },
          "name": "rbd",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.RbdPersistentVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#scaleIO"
            },
            "stability": "stable",
            "summary": "scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15718
          },
          "name": "scaleIo",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ScaleIoPersistentVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#storageClassName"
            },
            "remarks": "Empty value means that this volume does not belong to any StorageClass.",
            "stability": "stable",
            "summary": "storageClassName is the name of StorageClass to which this persistent volume belongs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15725
          },
          "name": "storageClassName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#storageos"
            },
            "stability": "stable",
            "summary": "storageOS represents a StorageOS volume that is attached to the kubelet's host machine and mounted into the pod More info: https://examples.k8s.io/volumes/storageos/README.md."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15732
          },
          "name": "storageos",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.StorageOsPersistentVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#volumeMode"
            },
            "remarks": "Value of Filesystem is implied when not included in spec.",
            "stability": "stable",
            "summary": "volumeMode defines if a volume is intended to be used with a formatted filesystem or to remain in raw block state."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15739
          },
          "name": "volumeMode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#vsphereVolume"
            },
            "stability": "stable",
            "summary": "vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15746
          },
          "name": "vsphereVolume",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.VsphereVirtualDiskVolumeSource"
          }
        }
      ],
      "symbolId": "src/imports/k8s:PersistentVolumeSpec"
    },
    "cdk8s-plus-28.k8s.PhotonPersistentDiskVolumeSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource"
        },
        "stability": "stable",
        "summary": "Represents a Photon Controller persistent disk resource."
      },
      "fqn": "cdk8s-plus-28.k8s.PhotonPersistentDiskVolumeSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 21165
      },
      "name": "PhotonPersistentDiskVolumeSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource#pdID"
            },
            "stability": "stable",
            "summary": "pdID is the ID that identifies Photon Controller persistent disk."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21178
          },
          "name": "pdId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource#fsType"
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
            "stability": "stable",
            "summary": "fsType is the filesystem type to mount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21171
          },
          "name": "fsType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:PhotonPersistentDiskVolumeSource"
    },
    "cdk8s-plus-28.k8s.PodAffinity": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.PodAffinity"
        },
        "stability": "stable",
        "summary": "Pod affinity is a group of inter pod affinity scheduling rules."
      },
      "fqn": "cdk8s-plus-28.k8s.PodAffinity",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 25341
      },
      "name": "PodAffinity",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodAffinity#preferredDuringSchedulingIgnoredDuringExecution"
            },
            "remarks": "The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
            "stability": "stable",
            "summary": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25347
          },
          "name": "preferredDuringSchedulingIgnoredDuringExecution",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.WeightedPodAffinityTerm"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodAffinity#requiredDuringSchedulingIgnoredDuringExecution"
            },
            "remarks": "If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
            "stability": "stable",
            "summary": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25354
          },
          "name": "requiredDuringSchedulingIgnoredDuringExecution",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.PodAffinityTerm"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:PodAffinity"
    },
    "cdk8s-plus-28.k8s.PodAffinityTerm": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.PodAffinityTerm"
        },
        "stability": "stable",
        "summary": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running."
      },
      "fqn": "cdk8s-plus-28.k8s.PodAffinityTerm",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 28473
      },
      "name": "PodAffinityTerm",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodAffinityTerm#topologyKey"
            },
            "remarks": "Empty topologyKey is not allowed.",
            "stability": "stable",
            "summary": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28500
          },
          "name": "topologyKey",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodAffinityTerm#labelSelector"
            },
            "stability": "stable",
            "summary": "A label query over a set of resources, in this case pods."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28479
          },
          "name": "labelSelector",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.LabelSelector"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodAffinityTerm#namespaces"
            },
            "remarks": "The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
            "stability": "stable",
            "summary": "namespaces specifies a static list of namespace names that the term applies to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28493
          },
          "name": "namespaces",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodAffinityTerm#namespaceSelector"
            },
            "remarks": "The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \"this pod's namespace\". An empty selector ({}) matches all namespaces.",
            "stability": "stable",
            "summary": "A label query over the set of namespaces that the term applies to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28486
          },
          "name": "namespaceSelector",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.LabelSelector"
          }
        }
      ],
      "symbolId": "src/imports/k8s:PodAffinityTerm"
    },
    "cdk8s-plus-28.k8s.PodAntiAffinity": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.PodAntiAffinity"
        },
        "stability": "stable",
        "summary": "Pod anti affinity is a group of inter pod anti affinity scheduling rules."
      },
      "fqn": "cdk8s-plus-28.k8s.PodAntiAffinity",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 25378
      },
      "name": "PodAntiAffinity",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodAntiAffinity#preferredDuringSchedulingIgnoredDuringExecution"
            },
            "remarks": "The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
            "stability": "stable",
            "summary": "The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25384
          },
          "name": "preferredDuringSchedulingIgnoredDuringExecution",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.WeightedPodAffinityTerm"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodAntiAffinity#requiredDuringSchedulingIgnoredDuringExecution"
            },
            "remarks": "If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
            "stability": "stable",
            "summary": "If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25391
          },
          "name": "requiredDuringSchedulingIgnoredDuringExecution",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.PodAffinityTerm"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:PodAntiAffinity"
    },
    "cdk8s-plus-28.k8s.PodDisruptionBudgetSpec": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.policy.v1.PodDisruptionBudgetSpec"
        },
        "stability": "stable",
        "summary": "PodDisruptionBudgetSpec is a description of a PodDisruptionBudget."
      },
      "fqn": "cdk8s-plus-28.k8s.PodDisruptionBudgetSpec",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 17306
      },
      "name": "PodDisruptionBudgetSpec",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.policy.v1.PodDisruptionBudgetSpec#maxUnavailable"
            },
            "stability": "stable",
            "summary": "An eviction is allowed if at most \"maxUnavailable\" pods selected by \"selector\" are unavailable after the eviction, i.e. even in absence of the evicted pod. For example, one can prevent all voluntary evictions by specifying 0. This is a mutually exclusive setting with \"minAvailable\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17312
          },
          "name": "maxUnavailable",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.IntOrString"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.policy.v1.PodDisruptionBudgetSpec#minAvailable"
            },
            "stability": "stable",
            "summary": "An eviction is allowed if at least \"minAvailable\" pods selected by \"selector\" will still be available after the eviction, i.e. even in the absence of the evicted pod.  So for example you can prevent all voluntary evictions by specifying \"100%\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17319
          },
          "name": "minAvailable",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.IntOrString"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.policy.v1.PodDisruptionBudgetSpec#selector"
            },
            "remarks": "A null selector will match no pods, while an empty ({}) selector will select all pods within the namespace.",
            "stability": "stable",
            "summary": "Label query over pods whose evictions are managed by the disruption budget."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17326
          },
          "name": "selector",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.LabelSelector"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.policy.v1.PodDisruptionBudgetSpec#unhealthyPodEvictionPolicy"
            },
            "remarks": "Current implementation considers healthy pods, as pods that have status.conditions item with type=\"Ready\",status=\"True\".\n\nValid policies are IfHealthyBudget and AlwaysAllow. If no policy is specified, the default behavior will be used, which corresponds to the IfHealthyBudget policy.\n\nIfHealthyBudget policy means that running pods (status.phase=\"Running\"), but not yet healthy can be evicted only if the guarded application is not disrupted (status.currentHealthy is at least equal to status.desiredHealthy). Healthy pods will be subject to the PDB for eviction.\n\nAlwaysAllow policy means that all running pods (status.phase=\"Running\"), but not yet healthy are considered disrupted and can be evicted regardless of whether the criteria in a PDB is met. This means perspective running pods of a disrupted application might not get a chance to become healthy. Healthy pods will be subject to the PDB for eviction.\n\nAdditional policies may be added in the future. Clients making eviction decisions should disallow eviction of unhealthy pods if they encounter an unrecognized policy in this field.\n\nThis field is beta-level. The eviction API uses this field when the feature gate PDBUnhealthyPodEvictionPolicy is enabled (enabled by default).",
            "stability": "stable",
            "summary": "UnhealthyPodEvictionPolicy defines the criteria for when unhealthy pods should be considered for eviction."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17343
          },
          "name": "unhealthyPodEvictionPolicy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:PodDisruptionBudgetSpec"
    },
    "cdk8s-plus-28.k8s.PodDnsConfig": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.PodDNSConfig"
        },
        "stability": "stable",
        "summary": "PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy."
      },
      "fqn": "cdk8s-plus-28.k8s.PodDnsConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 22035
      },
      "name": "PodDnsConfig",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodDNSConfig#nameservers"
            },
            "remarks": "This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.",
            "stability": "stable",
            "summary": "A list of DNS name server IP addresses."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22041
          },
          "name": "nameservers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodDNSConfig#options"
            },
            "remarks": "This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.",
            "stability": "stable",
            "summary": "A list of DNS resolver options."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22048
          },
          "name": "options",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.PodDnsConfigOption"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodDNSConfig#searches"
            },
            "remarks": "This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.",
            "stability": "stable",
            "summary": "A list of DNS search domains for host-name lookup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22055
          },
          "name": "searches",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:PodDnsConfig"
    },
    "cdk8s-plus-28.k8s.PodDnsConfigOption": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.PodDNSConfigOption"
        },
        "stability": "stable",
        "summary": "PodDNSConfigOption defines DNS resolver options of a pod."
      },
      "fqn": "cdk8s-plus-28.k8s.PodDnsConfigOption",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 25969
      },
      "name": "PodDnsConfigOption",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodDNSConfigOption#name"
            },
            "stability": "stable",
            "summary": "Required."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25975
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodDNSConfigOption#value"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25980
          },
          "name": "value",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:PodDnsConfigOption"
    },
    "cdk8s-plus-28.k8s.PodFailurePolicy": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.batch.v1.PodFailurePolicy"
        },
        "stability": "stable",
        "summary": "PodFailurePolicy describes how failed pods influence the backoffLimit."
      },
      "fqn": "cdk8s-plus-28.k8s.PodFailurePolicy",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 19997
      },
      "name": "PodFailurePolicy",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.batch.v1.PodFailurePolicy#rules"
            },
            "remarks": "The rules are evaluated in order. Once a rule matches a Pod failure, the remaining of the rules are ignored. When no rule matches the Pod failure, the default handling applies - the counter of pod failures is incremented and it is checked against the backoffLimit. At most 20 elements are allowed.",
            "stability": "stable",
            "summary": "A list of pod failure policy rules."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20003
          },
          "name": "rules",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.PodFailurePolicyRule"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:PodFailurePolicy"
    },
    "cdk8s-plus-28.k8s.PodFailurePolicyOnExitCodesRequirement": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.batch.v1.PodFailurePolicyOnExitCodesRequirement"
        },
        "remarks": "In particular, it lookups the .state.terminated.exitCode for each app container and init container status, represented by the .status.containerStatuses and .status.initContainerStatuses fields in the Pod status, respectively. Containers completed with success (exit code 0) are excluded from the requirement check.",
        "stability": "stable",
        "summary": "PodFailurePolicyOnExitCodesRequirement describes the requirement for handling a failed pod based on its container exit codes."
      },
      "fqn": "cdk8s-plus-28.k8s.PodFailurePolicyOnExitCodesRequirement",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 28308
      },
      "name": "PodFailurePolicyOnExitCodesRequirement",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.batch.v1.PodFailurePolicyOnExitCodesRequirement#operator"
            },
            "remarks": "Containers completed with success (exit code 0) are excluded from the requirement check. Possible values are:\n\n- In: the requirement is satisfied if at least one container exit code\n(might be multiple if there are multiple containers not restricted\nby the 'containerName' field) is in the set of specified values.\n- NotIn: the requirement is satisfied if at least one container exit code\n(might be multiple if there are multiple containers not restricted\nby the 'containerName' field) is not in the set of specified values.\nAdditional values are considered to be added in the future. Clients should react to an unknown operator by assuming the requirement is not satisfied.",
            "stability": "stable",
            "summary": "Represents the relationship between the container exit code(s) and the specified values."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28329
          },
          "name": "operator",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.batch.v1.PodFailurePolicyOnExitCodesRequirement#values"
            },
            "remarks": "Each returned container exit code (might be multiple in case of multiple containers) is checked against this set of values with respect to the operator. The list of values must be ordered and must not contain duplicates. Value '0' cannot be used for the In operator. At least one element is required. At most 255 elements are allowed.",
            "stability": "stable",
            "summary": "Specifies the set of values."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28336
          },
          "name": "values",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.batch.v1.PodFailurePolicyOnExitCodesRequirement#containerName"
            },
            "remarks": "When null, the rule applies to all containers. When specified, it should match one the container or initContainer names in the pod template.",
            "stability": "stable",
            "summary": "Restricts the check for exit codes to the container with the specified name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28314
          },
          "name": "containerName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:PodFailurePolicyOnExitCodesRequirement"
    },
    "cdk8s-plus-28.k8s.PodFailurePolicyOnPodConditionsPattern": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.batch.v1.PodFailurePolicyOnPodConditionsPattern"
        },
        "stability": "stable",
        "summary": "PodFailurePolicyOnPodConditionsPattern describes a pattern for matching an actual pod condition type."
      },
      "fqn": "cdk8s-plus-28.k8s.PodFailurePolicyOnPodConditionsPattern",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 28361
      },
      "name": "PodFailurePolicyOnPodConditionsPattern",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.batch.v1.PodFailurePolicyOnPodConditionsPattern#status"
            },
            "default": "True.",
            "remarks": "To match a pod condition it is required that the specified status equals the pod condition status. Defaults to True.",
            "stability": "stable",
            "summary": "Specifies the required Pod condition status."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28368
          },
          "name": "status",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.batch.v1.PodFailurePolicyOnPodConditionsPattern#type"
            },
            "remarks": "To match a pod condition it is required that specified type equals the pod condition type.",
            "stability": "stable",
            "summary": "Specifies the required Pod condition type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28375
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:PodFailurePolicyOnPodConditionsPattern"
    },
    "cdk8s-plus-28.k8s.PodFailurePolicyRule": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.batch.v1.PodFailurePolicyRule"
        },
        "remarks": "One of onExitCodes and onPodConditions, but not both, can be used in each rule.",
        "stability": "stable",
        "summary": "PodFailurePolicyRule describes how a pod failure is handled when the requirements are met."
      },
      "fqn": "cdk8s-plus-28.k8s.PodFailurePolicyRule",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 25120
      },
      "name": "PodFailurePolicyRule",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.batch.v1.PodFailurePolicyRule#action"
            },
            "remarks": "- FailJob: indicates that the pod's job is marked as Failed and all\nrunning pods are terminated.\n- FailIndex: indicates that the pod's index is marked as Failed and will\nnot be restarted.\nThis value is alpha-level. It can be used when the\n`JobBackoffLimitPerIndex` feature gate is enabled (disabled by default).\n- Ignore: indicates that the counter towards the .backoffLimit is not\nincremented and a replacement pod is created.\n- Count: indicates that the pod is handled in the default way - the\ncounter towards the .backoffLimit is incremented.\nAdditional values are considered to be added in the future. Clients should react to an unknown action by skipping the rule.",
            "stability": "stable",
            "summary": "Specifies the action taken on a pod failure when the requirements are satisfied. Possible values are:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25138
          },
          "name": "action",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.batch.v1.PodFailurePolicyRule#onPodConditions"
            },
            "remarks": "The requirement is represented as a list of pod condition patterns. The requirement is satisfied if at least one pattern matches an actual pod condition. At most 20 elements are allowed.",
            "stability": "stable",
            "summary": "Represents the requirement on the pod conditions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25152
          },
          "name": "onPodConditions",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.PodFailurePolicyOnPodConditionsPattern"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.batch.v1.PodFailurePolicyRule#onExitCodes"
            },
            "stability": "stable",
            "summary": "Represents the requirement on the container exit codes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25145
          },
          "name": "onExitCodes",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.PodFailurePolicyOnExitCodesRequirement"
          }
        }
      ],
      "symbolId": "src/imports/k8s:PodFailurePolicyRule"
    },
    "cdk8s-plus-28.k8s.PodOs": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.PodOS"
        },
        "stability": "stable",
        "summary": "PodOS defines the OS parameters of a pod."
      },
      "fqn": "cdk8s-plus-28.k8s.PodOs",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 22348
      },
      "name": "PodOs",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodOS#name"
            },
            "remarks": "The currently supported values are linux and windows. Additional value may be defined in future and can be one of: https://github.com/opencontainers/runtime-spec/blob/master/config.md#platform-specific-configuration Clients should expect to handle additional values and treat unrecognized values in this field as os: null",
            "stability": "stable",
            "summary": "Name is the name of the operating system."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22354
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:PodOs"
    },
    "cdk8s-plus-28.k8s.PodReadinessGate": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.PodReadinessGate"
        },
        "stability": "stable",
        "summary": "PodReadinessGate contains the reference to a pod condition."
      },
      "fqn": "cdk8s-plus-28.k8s.PodReadinessGate",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 22377
      },
      "name": "PodReadinessGate",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodReadinessGate#conditionType"
            },
            "stability": "stable",
            "summary": "ConditionType refers to a condition in the pod's condition list with matching type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22383
          },
          "name": "conditionType",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:PodReadinessGate"
    },
    "cdk8s-plus-28.k8s.PodResourceClaim": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.PodResourceClaim"
        },
        "remarks": "It adds a name to it that uniquely identifies the ResourceClaim inside the Pod. Containers that need access to the ResourceClaim reference it with this name.",
        "stability": "stable",
        "summary": "PodResourceClaim references exactly one ResourceClaim through a ClaimSource."
      },
      "fqn": "cdk8s-plus-28.k8s.PodResourceClaim",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 22406
      },
      "name": "PodResourceClaim",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodResourceClaim#name"
            },
            "remarks": "This must be a DNS_LABEL.",
            "stability": "stable",
            "summary": "Name uniquely identifies this resource claim inside the pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22412
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodResourceClaim#source"
            },
            "stability": "stable",
            "summary": "Source describes where to find the ResourceClaim."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22419
          },
          "name": "source",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ClaimSource"
          }
        }
      ],
      "symbolId": "src/imports/k8s:PodResourceClaim"
    },
    "cdk8s-plus-28.k8s.PodSchedulingContextSpecV1Alpha2": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.resource.v1alpha2.PodSchedulingContextSpec"
        },
        "stability": "stable",
        "summary": "PodSchedulingContextSpec describes where resources for the Pod are needed."
      },
      "fqn": "cdk8s-plus-28.k8s.PodSchedulingContextSpecV1Alpha2",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 17558
      },
      "name": "PodSchedulingContextSpecV1Alpha2",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.resource.v1alpha2.PodSchedulingContextSpec#potentialNodes"
            },
            "remarks": "The size of this field is limited to 128. This is large enough for many clusters. Larger clusters may need more attempts to find a node that suits all pending resources. This may get increased in the future, but not reduced.",
            "stability": "stable",
            "summary": "PotentialNodes lists nodes where the Pod might be able to run."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17566
          },
          "name": "potentialNodes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.resource.v1alpha2.PodSchedulingContextSpec#selectedNode"
            },
            "stability": "stable",
            "summary": "SelectedNode is the node for which allocation of ResourceClaims that are referenced by the Pod and that use \"WaitForFirstConsumer\" allocation is to be attempted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17573
          },
          "name": "selectedNode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:PodSchedulingContextSpecV1Alpha2"
    },
    "cdk8s-plus-28.k8s.PodSchedulingGate": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.PodSchedulingGate"
        },
        "stability": "stable",
        "summary": "PodSchedulingGate is associated to a Pod to guard its scheduling."
      },
      "fqn": "cdk8s-plus-28.k8s.PodSchedulingGate",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 22443
      },
      "name": "PodSchedulingGate",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSchedulingGate#name"
            },
            "remarks": "Each scheduling gate must have a unique name field.",
            "stability": "stable",
            "summary": "Name of the scheduling gate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22449
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:PodSchedulingGate"
    },
    "cdk8s-plus-28.k8s.PodSecurityContext": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.PodSecurityContext"
        },
        "remarks": "Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.",
        "stability": "stable",
        "summary": "PodSecurityContext holds pod-level security attributes and common container settings."
      },
      "fqn": "cdk8s-plus-28.k8s.PodSecurityContext",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 22472
      },
      "name": "PodSecurityContext",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSecurityContext#fsGroup"
            },
            "remarks": "Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:\n\n1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----\n\nIf unset, the Kubelet will not modify the ownership and permissions of any volume. Note that this field cannot be set when spec.os.name is windows.",
            "stability": "stable",
            "summary": "A special supplemental group that applies to all containers in a pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22482
          },
          "name": "fsGroup",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSecurityContext#fsGroupChangePolicy"
            },
            "remarks": "This field will only apply to volume types which support fsGroup based ownership(and permissions). It will have no effect on ephemeral volume types such as: secret, configmaps and emptydir. Valid values are \"OnRootMismatch\" and \"Always\". If not specified, \"Always\" is used. Note that this field cannot be set when spec.os.name is windows.",
            "stability": "stable",
            "summary": "fsGroupChangePolicy defines behavior of changing ownership and permission of the volume before being exposed inside Pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22489
          },
          "name": "fsGroupChangePolicy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSecurityContext#runAsGroup"
            },
            "remarks": "Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.",
            "stability": "stable",
            "summary": "The GID to run the entrypoint of the container process."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22496
          },
          "name": "runAsGroup",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSecurityContext#runAsNonRoot"
            },
            "remarks": "If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "stability": "stable",
            "summary": "Indicates that the container must run as a non-root user."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22503
          },
          "name": "runAsNonRoot",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSecurityContext#runAsUser"
            },
            "default": "user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.",
            "remarks": "Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.",
            "stability": "stable",
            "summary": "The UID to run the entrypoint of the container process."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22511
          },
          "name": "runAsUser",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSecurityContext#seccompProfile"
            },
            "remarks": "Note that this field cannot be set when spec.os.name is windows.",
            "stability": "stable",
            "summary": "The seccomp options to use by the containers in this pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22525
          },
          "name": "seccompProfile",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.SeccompProfile"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSecurityContext#seLinuxOptions"
            },
            "remarks": "If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.",
            "stability": "stable",
            "summary": "The SELinux context to be applied to all containers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22518
          },
          "name": "seLinuxOptions",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.SeLinuxOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSecurityContext#supplementalGroups"
            },
            "remarks": "If unspecified, no additional groups are added to any container. Note that group memberships defined in the container image for the uid of the container process are still effective, even if they are not included in this list. Note that this field cannot be set when spec.os.name is windows.",
            "stability": "stable",
            "summary": "A list of groups applied to the first process run in each container, in addition to the container's primary GID, the fsGroup (if specified), and group memberships defined in the container image for the uid of the container process."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22532
          },
          "name": "supplementalGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSecurityContext#sysctls"
            },
            "remarks": "Pods with unsupported sysctls (by the container runtime) might fail to launch. Note that this field cannot be set when spec.os.name is windows.",
            "stability": "stable",
            "summary": "Sysctls hold a list of namespaced sysctls used for the pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22539
          },
          "name": "sysctls",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.Sysctl"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSecurityContext#windowsOptions"
            },
            "remarks": "If unspecified, the options within a container's SecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux.",
            "stability": "stable",
            "summary": "The Windows specific settings applied to all containers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22546
          },
          "name": "windowsOptions",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.WindowsSecurityContextOptions"
          }
        }
      ],
      "symbolId": "src/imports/k8s:PodSecurityContext"
    },
    "cdk8s-plus-28.k8s.PodSpec": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.PodSpec"
        },
        "stability": "stable",
        "summary": "PodSpec is a description of a pod."
      },
      "fqn": "cdk8s-plus-28.k8s.PodSpec",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 15890
      },
      "name": "PodSpec",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSpec#containers"
            },
            "remarks": "Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated.",
            "stability": "stable",
            "summary": "List of containers belonging to the pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15917
          },
          "name": "containers",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.Container"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSpec#activeDeadlineSeconds"
            },
            "remarks": "Value must be a positive integer.",
            "stability": "stable",
            "summary": "Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15896
          },
          "name": "activeDeadlineSeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSpec#affinity"
            },
            "stability": "stable",
            "summary": "If specified, the pod's scheduling constraints."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15903
          },
          "name": "affinity",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.Affinity"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSpec#automountServiceAccountToken"
            },
            "stability": "stable",
            "summary": "AutomountServiceAccountToken indicates whether a service account token should be automatically mounted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15910
          },
          "name": "automountServiceAccountToken",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSpec#dnsConfig"
            },
            "remarks": "Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy.",
            "stability": "stable",
            "summary": "Specifies the DNS parameters of a pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15924
          },
          "name": "dnsConfig",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.PodDnsConfig"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSpec#dnsPolicy"
            },
            "default": "ClusterFirst\". Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'.",
            "remarks": "Defaults to \"ClusterFirst\". Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'.",
            "stability": "stable",
            "summary": "Set DNS policy for the pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15932
          },
          "name": "dnsPolicy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSpec#enableServiceLinks"
            },
            "default": "true.",
            "remarks": "Optional: Defaults to true.",
            "stability": "stable",
            "summary": "EnableServiceLinks indicates whether information about services should be injected into pod's environment variables, matching the syntax of Docker links."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15940
          },
          "name": "enableServiceLinks",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSpec#ephemeralContainers"
            },
            "remarks": "Ephemeral containers may be run in an existing pod to perform user-initiated actions such as debugging. This list cannot be specified when creating a pod, and it cannot be modified by updating the pod spec. In order to add an ephemeral container to an existing pod, use the pod's ephemeralcontainers subresource.",
            "stability": "stable",
            "summary": "List of ephemeral containers run in this pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15947
          },
          "name": "ephemeralContainers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.EphemeralContainer"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSpec#hostAliases"
            },
            "remarks": "This is only valid for non-hostNetwork pods.",
            "stability": "stable",
            "summary": "HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15954
          },
          "name": "hostAliases",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.HostAlias"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSpec#hostIPC"
            },
            "default": "false.",
            "remarks": "Optional: Default to false.",
            "stability": "stable",
            "summary": "Use the host's ipc namespace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15962
          },
          "name": "hostIpc",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSpec#hostname"
            },
            "stability": "stable",
            "summary": "Specifies the hostname of the Pod If not specified, the pod's hostname will be set to a system-defined value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15993
          },
          "name": "hostname",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSpec#hostNetwork"
            },
            "default": "false.",
            "remarks": "Use the host's network namespace. If this option is set, the ports that will be used must be specified. Default to false.",
            "stability": "stable",
            "summary": "Host networking requested for this pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15970
          },
          "name": "hostNetwork",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSpec#hostPID"
            },
            "default": "false.",
            "remarks": "Optional: Default to false.",
            "stability": "stable",
            "summary": "Use the host's pid namespace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15978
          },
          "name": "hostPid",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSpec#hostUsers"
            },
            "default": "true. If set to true or not present, the pod will be run in the host user namespace, useful for when the pod needs a feature only available to the host user namespace, such as loading a kernel module with CAP_SYS_MODULE. When set to false, a new userns is created for the pod. Setting false is useful for mitigating container breakout vulnerabilities even allowing users to run their containers as root without actually having root privileges on the host. This field is alpha-level and is only honored by servers that enable the UserNamespacesSupport feature.",
            "remarks": "Optional: Default to true. If set to true or not present, the pod will be run in the host user namespace, useful for when the pod needs a feature only available to the host user namespace, such as loading a kernel module with CAP_SYS_MODULE. When set to false, a new userns is created for the pod. Setting false is useful for mitigating container breakout vulnerabilities even allowing users to run their containers as root without actually having root privileges on the host. This field is alpha-level and is only honored by servers that enable the UserNamespacesSupport feature.",
            "stability": "stable",
            "summary": "Use the host's user namespace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 15986
          },
          "name": "hostUsers",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSpec#imagePullSecrets"
            },
            "remarks": "If specified, these secrets will be passed to individual puller implementations for them to use. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod",
            "stability": "stable",
            "summary": "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16000
          },
          "name": "imagePullSecrets",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.LocalObjectReference"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSpec#initContainers"
            },
            "remarks": "Init containers are executed in order prior to containers being started. If any init container fails, the pod is considered to have failed and is handled according to its restartPolicy. The name for an init container or normal container must be unique among all containers. Init containers may not have Lifecycle actions, Readiness probes, Liveness probes, or Startup probes. The resourceRequirements of an init container are taken into account during scheduling by finding the highest request/limit for each resource type, and then using the max of of that value or the sum of the normal containers. Limits are applied to init containers in a similar fashion. Init containers cannot currently be added or removed. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
            "stability": "stable",
            "summary": "List of initialization containers belonging to the pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16007
          },
          "name": "initContainers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.Container"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSpec#nodeName"
            },
            "remarks": "If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.",
            "stability": "stable",
            "summary": "NodeName is a request to schedule this pod onto a specific node."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16014
          },
          "name": "nodeName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSpec#nodeSelector"
            },
            "remarks": "Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
            "stability": "stable",
            "summary": "NodeSelector is a selector which must be true for the pod to fit on a node."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16021
          },
          "name": "nodeSelector",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSpec#os"
            },
            "remarks": "Some pod and container fields are restricted if this is set.\n\nIf the OS field is set to linux, the following fields must be unset: -securityContext.windowsOptions\n\nIf the OS field is set to windows, following fields must be unset: - spec.hostPID - spec.hostIPC - spec.hostUsers - spec.securityContext.seLinuxOptions - spec.securityContext.seccompProfile - spec.securityContext.fsGroup - spec.securityContext.fsGroupChangePolicy - spec.securityContext.sysctls - spec.shareProcessNamespace - spec.securityContext.runAsUser - spec.securityContext.runAsGroup - spec.securityContext.supplementalGroups - spec.containers[*].securityContext.seLinuxOptions - spec.containers[*].securityContext.seccompProfile - spec.containers[*].securityContext.capabilities - spec.containers[*].securityContext.readOnlyRootFilesystem - spec.containers[*].securityContext.privileged - spec.containers[*].securityContext.allowPrivilegeEscalation - spec.containers[*].securityContext.procMount - spec.containers[*].securityContext.runAsUser - spec.containers[*].securityContext.runAsGroup",
            "stability": "stable",
            "summary": "Specifies the OS of the containers in the pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16032
          },
          "name": "os",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.PodOs"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSpec#overhead"
            },
            "remarks": "This field will be autopopulated at admission time by the RuntimeClass admission controller. If the RuntimeClass admission controller is enabled, overhead must not be set in Pod create requests. The RuntimeClass admission controller will reject Pod create requests which have the overhead already set. If RuntimeClass is configured and selected in the PodSpec, Overhead will be set to the value defined in the corresponding RuntimeClass, otherwise it will remain unset and treated as zero. More info: https://git.k8s.io/enhancements/keps/sig-node/688-pod-overhead/README.md",
            "stability": "stable",
            "summary": "Overhead represents the resource overhead associated with running a pod for a given RuntimeClass."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16039
          },
          "name": "overhead",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.Quantity"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSpec#preemptionPolicy"
            },
            "default": "PreemptLowerPriority if unset.",
            "remarks": "One of Never, PreemptLowerPriority. Defaults to PreemptLowerPriority if unset.",
            "stability": "stable",
            "summary": "PreemptionPolicy is the Policy for preempting pods with lower priority."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16047
          },
          "name": "preemptionPolicy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSpec#priority"
            },
            "remarks": "Various system components use this field to find the priority of the pod. When Priority Admission Controller is enabled, it prevents users from setting this field. The admission controller populates this field from PriorityClassName. The higher the value, the higher the priority.",
            "stability": "stable",
            "summary": "The priority value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16054
          },
          "name": "priority",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSpec#priorityClassName"
            },
            "remarks": "\"system-node-critical\" and \"system-cluster-critical\" are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default.",
            "stability": "stable",
            "summary": "If specified, indicates the pod's priority."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16061
          },
          "name": "priorityClassName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSpec#readinessGates"
            },
            "remarks": "A pod is ready when all its containers are ready AND all conditions specified in the readiness gates have status equal to \"True\" More info: https://git.k8s.io/enhancements/keps/sig-network/580-pod-readiness-gates",
            "stability": "stable",
            "summary": "If specified, all readiness gates will be evaluated for pod readiness."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16068
          },
          "name": "readinessGates",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.PodReadinessGate"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSpec#resourceClaims"
            },
            "remarks": "The resources will be made available to those containers which consume them by name.\n\nThis is an alpha field and requires enabling the DynamicResourceAllocation feature gate.\n\nThis field is immutable.",
            "stability": "stable",
            "summary": "ResourceClaims defines which ResourceClaims must be allocated and reserved before the Pod is allowed to start."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16079
          },
          "name": "resourceClaims",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.PodResourceClaim"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSpec#restartPolicy"
            },
            "default": "Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy",
            "remarks": "One of Always, OnFailure, Never. In some contexts, only a subset of those values may be permitted. Default to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy",
            "stability": "stable",
            "summary": "Restart policy for all containers within the pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16087
          },
          "name": "restartPolicy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSpec#runtimeClassName"
            },
            "stability": "stable",
            "summary": "RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used to run this pod.  If no RuntimeClass resource matches the named class, the pod will not be run. If unset or empty, the \"legacy\" RuntimeClass will be used, which is an implicit class with an empty definition that uses the default runtime handler. More info: https://git.k8s.io/enhancements/keps/sig-node/585-runtime-class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16094
          },
          "name": "runtimeClassName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSpec#schedulerName"
            },
            "remarks": "If not specified, the pod will be dispatched by default scheduler.",
            "stability": "stable",
            "summary": "If specified, the pod will be dispatched by specified scheduler."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16101
          },
          "name": "schedulerName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSpec#schedulingGates"
            },
            "remarks": "If schedulingGates is not empty, the pod will stay in the SchedulingGated state and the scheduler will not attempt to schedule the pod.\n\nSchedulingGates can only be set at pod creation time, and be removed only afterwards.\n\nThis is a beta feature enabled by the PodSchedulingReadiness feature gate.",
            "stability": "stable",
            "summary": "SchedulingGates is an opaque list of values that if specified will block scheduling the pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16112
          },
          "name": "schedulingGates",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.PodSchedulingGate"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSpec#securityContext"
            },
            "default": "empty.  See type description for default values of each field.",
            "remarks": "Optional: Defaults to empty.  See type description for default values of each field.",
            "stability": "stable",
            "summary": "SecurityContext holds pod-level security attributes and common container settings."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16120
          },
          "name": "securityContext",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.PodSecurityContext"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSpec#serviceAccount"
            },
            "remarks": "Deprecated: Use serviceAccountName instead.",
            "stability": "stable",
            "summary": "DeprecatedServiceAccount is a depreciated alias for ServiceAccountName."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16127
          },
          "name": "serviceAccount",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSpec#serviceAccountName"
            },
            "remarks": "More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
            "stability": "stable",
            "summary": "ServiceAccountName is the name of the ServiceAccount to use to run this pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16134
          },
          "name": "serviceAccountName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSpec#setHostnameAsFQDN"
            },
            "default": "false.",
            "remarks": "In Linux containers, this means setting the FQDN in the hostname field of the kernel (the nodename field of struct utsname). In Windows containers, this means setting the registry value of hostname for the registry key HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters to FQDN. If a pod does not have FQDN, this has no effect. Default to false.",
            "stability": "stable",
            "summary": "If true the pod's hostname will be configured as the pod's FQDN, rather than the leaf name (the default)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16142
          },
          "name": "setHostnameAsFqdn",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSpec#shareProcessNamespace"
            },
            "default": "false.",
            "remarks": "When this is set containers will be able to view and signal processes from other containers in the same pod, and the first process in each container will not be assigned PID 1. HostPID and ShareProcessNamespace cannot both be set. Optional: Default to false.",
            "stability": "stable",
            "summary": "Share a single process namespace between all of the containers in a pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16150
          },
          "name": "shareProcessNamespace",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSpec#subdomain"
            },
            "stability": "stable",
            "summary": "If specified, the fully qualified Pod hostname will be \"<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>\". If not specified, the pod will not have a domainname at all."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16157
          },
          "name": "subdomain",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSpec#terminationGracePeriodSeconds"
            },
            "default": "30 seconds.",
            "remarks": "May be decreased in delete request. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.",
            "stability": "stable",
            "summary": "Optional duration in seconds the pod needs to terminate gracefully."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16165
          },
          "name": "terminationGracePeriodSeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSpec#tolerations"
            },
            "stability": "stable",
            "summary": "If specified, the pod's tolerations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16172
          },
          "name": "tolerations",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.Toleration"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSpec#topologySpreadConstraints"
            },
            "remarks": "Scheduler will schedule pods in a way which abides by the constraints. All topologySpreadConstraints are ANDed.",
            "stability": "stable",
            "summary": "TopologySpreadConstraints describes how a group of pods ought to spread across topology domains."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16179
          },
          "name": "topologySpreadConstraints",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.TopologySpreadConstraint"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodSpec#volumes"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes",
            "stability": "stable",
            "summary": "List of volumes that can be mounted by containers belonging to the pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16186
          },
          "name": "volumes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.Volume"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:PodSpec"
    },
    "cdk8s-plus-28.k8s.PodTemplateSpec": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.PodTemplateSpec"
        },
        "stability": "stable",
        "summary": "PodTemplateSpec describes the data a pod should have when created from a template."
      },
      "fqn": "cdk8s-plus-28.k8s.PodTemplateSpec",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 16247
      },
      "name": "PodTemplateSpec",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodTemplateSpec#metadata"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "stability": "stable",
            "summary": "Standard object's metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16253
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PodTemplateSpec#spec"
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
            "stability": "stable",
            "summary": "Specification of the desired behavior of the pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16260
          },
          "name": "spec",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.PodSpec"
          }
        }
      ],
      "symbolId": "src/imports/k8s:PodTemplateSpec"
    },
    "cdk8s-plus-28.k8s.PodsMetricSourceV2": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.autoscaling.v2.PodsMetricSource"
        },
        "remarks": "The values will be averaged together before being compared to the target value.",
        "stability": "stable",
        "summary": "PodsMetricSource indicates how to scale on a metric describing each pod in the current scale target (for example, transactions-processed-per-second)."
      },
      "fqn": "cdk8s-plus-28.k8s.PodsMetricSourceV2",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 25046
      },
      "name": "PodsMetricSourceV2",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v2.PodsMetricSource#metric"
            },
            "stability": "stable",
            "summary": "metric identifies the target metric by name and selector."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25052
          },
          "name": "metric",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.MetricIdentifierV2"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v2.PodsMetricSource#target"
            },
            "stability": "stable",
            "summary": "target specifies the target value for the given metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25059
          },
          "name": "target",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.MetricTargetV2"
          }
        }
      ],
      "symbolId": "src/imports/k8s:PodsMetricSourceV2"
    },
    "cdk8s-plus-28.k8s.PolicyRule": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.rbac.v1.PolicyRule"
        },
        "stability": "stable",
        "summary": "PolicyRule holds information that describes a policy rule, but does not contain information about who the rule applies to or which namespace the rule applies to."
      },
      "fqn": "cdk8s-plus-28.k8s.PolicyRule",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 17398
      },
      "name": "PolicyRule",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.rbac.v1.PolicyRule#verbs"
            },
            "remarks": "'*' represents all verbs.",
            "stability": "stable",
            "summary": "Verbs is a list of Verbs that apply to ALL the ResourceKinds contained in this rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17432
          },
          "name": "verbs",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.rbac.v1.PolicyRule#apiGroups"
            },
            "remarks": "If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed. \"\" represents the core API group and \"*\" represents all API groups.",
            "stability": "stable",
            "summary": "APIGroups is the name of the APIGroup that contains the resources."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17404
          },
          "name": "apiGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.rbac.v1.PolicyRule#nonResourceURLs"
            },
            "remarks": "*s are allowed, but only as the full, final step in the path Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding. Rules can either apply to API resources (such as \"pods\" or \"secrets\") or non-resource URL paths (such as \"/api\"),  but not both.",
            "stability": "stable",
            "summary": "NonResourceURLs is a set of partial urls that a user should have access to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17411
          },
          "name": "nonResourceUrLs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.rbac.v1.PolicyRule#resourceNames"
            },
            "remarks": "An empty set means that everything is allowed.",
            "stability": "stable",
            "summary": "ResourceNames is an optional white list of names that the rule applies to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17418
          },
          "name": "resourceNames",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.rbac.v1.PolicyRule#resources"
            },
            "remarks": "'*' represents all resources.",
            "stability": "stable",
            "summary": "Resources is a list of resources this rule applies to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17425
          },
          "name": "resources",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:PolicyRule"
    },
    "cdk8s-plus-28.k8s.PolicyRulesWithSubjectsV1Beta2": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.flowcontrol.v1beta2.PolicyRulesWithSubjects"
        },
        "remarks": "The test considers the subject making the request, the verb being requested, and the resource to be acted upon. This PolicyRulesWithSubjects matches a request if and only if both (a) at least one member of subjects matches the request and (b) at least one member of resourceRules or nonResourceRules matches the request.",
        "stability": "stable",
        "summary": "PolicyRulesWithSubjects prescribes a test that applies to a request to an apiserver."
      },
      "fqn": "cdk8s-plus-28.k8s.PolicyRulesWithSubjectsV1Beta2",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 23281
      },
      "name": "PolicyRulesWithSubjectsV1Beta2",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta2.PolicyRulesWithSubjects#subjects"
            },
            "remarks": "There must be at least one member in this slice. A slice that includes both the system:authenticated and system:unauthenticated user groups matches every request. Required.",
            "stability": "stable",
            "summary": "subjects is the list of normal user, serviceaccount, or group that this rule cares about."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23301
          },
          "name": "subjects",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.SubjectV1Beta2"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta2.PolicyRulesWithSubjects#nonResourceRules"
            },
            "stability": "stable",
            "summary": "`nonResourceRules` is a list of NonResourcePolicyRules that identify matching requests according to their verb and the target non-resource URL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23287
          },
          "name": "nonResourceRules",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.NonResourcePolicyRuleV1Beta2"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta2.PolicyRulesWithSubjects#resourceRules"
            },
            "remarks": "At least one of `resourceRules` and `nonResourceRules` has to be non-empty.",
            "stability": "stable",
            "summary": "`resourceRules` is a slice of ResourcePolicyRules that identify matching requests according to their verb and the target resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23294
          },
          "name": "resourceRules",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.ResourcePolicyRuleV1Beta2"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:PolicyRulesWithSubjectsV1Beta2"
    },
    "cdk8s-plus-28.k8s.PolicyRulesWithSubjectsV1Beta3": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.flowcontrol.v1beta3.PolicyRulesWithSubjects"
        },
        "remarks": "The test considers the subject making the request, the verb being requested, and the resource to be acted upon. This PolicyRulesWithSubjects matches a request if and only if both (a) at least one member of subjects matches the request and (b) at least one member of resourceRules or nonResourceRules matches the request.",
        "stability": "stable",
        "summary": "PolicyRulesWithSubjects prescribes a test that applies to a request to an apiserver."
      },
      "fqn": "cdk8s-plus-28.k8s.PolicyRulesWithSubjectsV1Beta3",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 23492
      },
      "name": "PolicyRulesWithSubjectsV1Beta3",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta3.PolicyRulesWithSubjects#subjects"
            },
            "remarks": "There must be at least one member in this slice. A slice that includes both the system:authenticated and system:unauthenticated user groups matches every request. Required.",
            "stability": "stable",
            "summary": "subjects is the list of normal user, serviceaccount, or group that this rule cares about."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23512
          },
          "name": "subjects",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.SubjectV1Beta3"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta3.PolicyRulesWithSubjects#nonResourceRules"
            },
            "stability": "stable",
            "summary": "`nonResourceRules` is a list of NonResourcePolicyRules that identify matching requests according to their verb and the target non-resource URL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23498
          },
          "name": "nonResourceRules",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.NonResourcePolicyRuleV1Beta3"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta3.PolicyRulesWithSubjects#resourceRules"
            },
            "remarks": "At least one of `resourceRules` and `nonResourceRules` has to be non-empty.",
            "stability": "stable",
            "summary": "`resourceRules` is a slice of ResourcePolicyRules that identify matching requests according to their verb and the target resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23505
          },
          "name": "resourceRules",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.ResourcePolicyRuleV1Beta3"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:PolicyRulesWithSubjectsV1Beta3"
    },
    "cdk8s-plus-28.k8s.PortworxVolumeSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.PortworxVolumeSource"
        },
        "stability": "stable",
        "summary": "PortworxVolumeSource represents a Portworx volume resource."
      },
      "fqn": "cdk8s-plus-28.k8s.PortworxVolumeSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 21202
      },
      "name": "PortworxVolumeSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PortworxVolumeSource#volumeID"
            },
            "stability": "stable",
            "summary": "volumeID uniquely identifies a Portworx volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21222
          },
          "name": "volumeId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PortworxVolumeSource#fsType"
            },
            "remarks": "Ex. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified.",
            "stability": "stable",
            "summary": "fSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21208
          },
          "name": "fsType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PortworxVolumeSource#readOnly"
            },
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "stability": "stable",
            "summary": "readOnly defaults to false (read/write)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21215
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/imports/k8s:PortworxVolumeSource"
    },
    "cdk8s-plus-28.k8s.Preconditions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions"
        },
        "stability": "stable",
        "summary": "Preconditions must be fulfilled before an operation (update, delete, etc.) is carried out."
      },
      "fqn": "cdk8s-plus-28.k8s.Preconditions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 23968
      },
      "name": "Preconditions",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions#resourceVersion"
            },
            "stability": "stable",
            "summary": "Specifies the target ResourceVersion."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23974
          },
          "name": "resourceVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions#uid"
            },
            "stability": "stable",
            "summary": "Specifies the target UID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23981
          },
          "name": "uid",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:Preconditions"
    },
    "cdk8s-plus-28.k8s.PreferredSchedulingTerm": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.PreferredSchedulingTerm"
        },
        "stability": "stable",
        "summary": "An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op)."
      },
      "fqn": "cdk8s-plus-28.k8s.PreferredSchedulingTerm",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 28399
      },
      "name": "PreferredSchedulingTerm",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PreferredSchedulingTerm#preference"
            },
            "stability": "stable",
            "summary": "A node selector term, associated with the corresponding weight."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28405
          },
          "name": "preference",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.NodeSelectorTerm"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.PreferredSchedulingTerm#weight"
            },
            "stability": "stable",
            "summary": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28412
          },
          "name": "weight",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/imports/k8s:PreferredSchedulingTerm"
    },
    "cdk8s-plus-28.k8s.PriorityLevelConfigurationReferenceV1Beta2": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.flowcontrol.v1beta2.PriorityLevelConfigurationReference"
        },
        "stability": "stable",
        "summary": "PriorityLevelConfigurationReference contains information that points to the \"request-priority\" being used."
      },
      "fqn": "cdk8s-plus-28.k8s.PriorityLevelConfigurationReferenceV1Beta2",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 23252
      },
      "name": "PriorityLevelConfigurationReferenceV1Beta2",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta2.PriorityLevelConfigurationReference#name"
            },
            "stability": "stable",
            "summary": "`name` is the name of the priority level configuration being referenced Required."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23258
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:PriorityLevelConfigurationReferenceV1Beta2"
    },
    "cdk8s-plus-28.k8s.PriorityLevelConfigurationReferenceV1Beta3": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationReference"
        },
        "stability": "stable",
        "summary": "PriorityLevelConfigurationReference contains information that points to the \"request-priority\" being used."
      },
      "fqn": "cdk8s-plus-28.k8s.PriorityLevelConfigurationReferenceV1Beta3",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 23463
      },
      "name": "PriorityLevelConfigurationReferenceV1Beta3",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationReference#name"
            },
            "stability": "stable",
            "summary": "`name` is the name of the priority level configuration being referenced Required."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23469
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:PriorityLevelConfigurationReferenceV1Beta3"
    },
    "cdk8s-plus-28.k8s.PriorityLevelConfigurationSpecV1Beta2": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.flowcontrol.v1beta2.PriorityLevelConfigurationSpec"
        },
        "stability": "stable",
        "summary": "PriorityLevelConfigurationSpec specifies the configuration of a priority level."
      },
      "fqn": "cdk8s-plus-28.k8s.PriorityLevelConfigurationSpecV1Beta2",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 16794
      },
      "name": "PriorityLevelConfigurationSpecV1Beta2",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta2.PriorityLevelConfigurationSpec#type"
            },
            "remarks": "A value of `\"Exempt\"` means that requests of this priority level are not subject to a limit (and thus are never queued) and do not detract from the capacity made available to other priority levels.  A value of `\"Limited\"` means that (a) requests of this priority level _are_ subject to limits and (b) some of the server's limited capacity is made available exclusively to this priority level. Required.",
            "stability": "stable",
            "summary": "`type` indicates whether this priority level is subject to limitation on request execution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16814
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta2.PriorityLevelConfigurationSpec#exempt"
            },
            "remarks": "This field MUST be empty if `type` is `\"Limited\"`. This field MAY be non-empty if `type` is `\"Exempt\"`. If empty and `type` is `\"Exempt\"` then the default values for `ExemptPriorityLevelConfiguration` apply.",
            "stability": "stable",
            "summary": "`exempt` specifies how requests are handled for an exempt priority level."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16800
          },
          "name": "exempt",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ExemptPriorityLevelConfigurationV1Beta2"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta2.PriorityLevelConfigurationSpec#limited"
            },
            "remarks": "This field must be non-empty if and only if `type` is `\"Limited\"`.",
            "stability": "stable",
            "summary": "`limited` specifies how requests are handled for a Limited priority level."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16807
          },
          "name": "limited",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.LimitedPriorityLevelConfigurationV1Beta2"
          }
        }
      ],
      "symbolId": "src/imports/k8s:PriorityLevelConfigurationSpecV1Beta2"
    },
    "cdk8s-plus-28.k8s.PriorityLevelConfigurationSpecV1Beta3": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationSpec"
        },
        "stability": "stable",
        "summary": "PriorityLevelConfigurationSpec specifies the configuration of a priority level."
      },
      "fqn": "cdk8s-plus-28.k8s.PriorityLevelConfigurationSpecV1Beta3",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 16892
      },
      "name": "PriorityLevelConfigurationSpecV1Beta3",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationSpec#type"
            },
            "remarks": "A value of `\"Exempt\"` means that requests of this priority level are not subject to a limit (and thus are never queued) and do not detract from the capacity made available to other priority levels.  A value of `\"Limited\"` means that (a) requests of this priority level _are_ subject to limits and (b) some of the server's limited capacity is made available exclusively to this priority level. Required.",
            "stability": "stable",
            "summary": "`type` indicates whether this priority level is subject to limitation on request execution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16912
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationSpec#exempt"
            },
            "remarks": "This field MUST be empty if `type` is `\"Limited\"`. This field MAY be non-empty if `type` is `\"Exempt\"`. If empty and `type` is `\"Exempt\"` then the default values for `ExemptPriorityLevelConfiguration` apply.",
            "stability": "stable",
            "summary": "`exempt` specifies how requests are handled for an exempt priority level."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16898
          },
          "name": "exempt",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ExemptPriorityLevelConfigurationV1Beta3"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationSpec#limited"
            },
            "remarks": "This field must be non-empty if and only if `type` is `\"Limited\"`.",
            "stability": "stable",
            "summary": "`limited` specifies how requests are handled for a Limited priority level."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16905
          },
          "name": "limited",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.LimitedPriorityLevelConfigurationV1Beta3"
          }
        }
      ],
      "symbolId": "src/imports/k8s:PriorityLevelConfigurationSpecV1Beta3"
    },
    "cdk8s-plus-28.k8s.Probe": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.Probe"
        },
        "stability": "stable",
        "summary": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic."
      },
      "fqn": "cdk8s-plus-28.k8s.Probe",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 25543
      },
      "name": "Probe",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Probe#exec"
            },
            "stability": "stable",
            "summary": "Exec specifies the action to take."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25549
          },
          "name": "exec",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ExecAction"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Probe#failureThreshold"
            },
            "default": "3. Minimum value is 1.",
            "remarks": "Defaults to 3. Minimum value is 1.",
            "stability": "stable",
            "summary": "Minimum consecutive failures for the probe to be considered failed after having succeeded."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25557
          },
          "name": "failureThreshold",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Probe#grpc"
            },
            "stability": "stable",
            "summary": "GRPC specifies an action involving a GRPC port."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25564
          },
          "name": "grpc",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.GrpcAction"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Probe#httpGet"
            },
            "stability": "stable",
            "summary": "HTTPGet specifies the http request to perform."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25571
          },
          "name": "httpGet",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.HttpGetAction"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Probe#initialDelaySeconds"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "stability": "stable",
            "summary": "Number of seconds after the container has started before liveness probes are initiated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25578
          },
          "name": "initialDelaySeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Probe#periodSeconds"
            },
            "default": "10 seconds. Minimum value is 1.",
            "remarks": "Default to 10 seconds. Minimum value is 1.",
            "stability": "stable",
            "summary": "How often (in seconds) to perform the probe."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25586
          },
          "name": "periodSeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Probe#successThreshold"
            },
            "default": "1. Must be 1 for liveness and startup. Minimum value is 1.",
            "remarks": "Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
            "stability": "stable",
            "summary": "Minimum consecutive successes for the probe to be considered successful after having failed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25594
          },
          "name": "successThreshold",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Probe#tcpSocket"
            },
            "stability": "stable",
            "summary": "TCPSocket specifies an action involving a TCP port."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25601
          },
          "name": "tcpSocket",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.TcpSocketAction"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Probe#terminationGracePeriodSeconds"
            },
            "remarks": "The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
            "stability": "stable",
            "summary": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25608
          },
          "name": "terminationGracePeriodSeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Probe#timeoutSeconds"
            },
            "default": "1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "remarks": "Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "stability": "stable",
            "summary": "Number of seconds after which the probe times out."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25616
          },
          "name": "timeoutSeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/imports/k8s:Probe"
    },
    "cdk8s-plus-28.k8s.ProjectedVolumeSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ProjectedVolumeSource"
        },
        "stability": "stable",
        "summary": "Represents a projected volume source."
      },
      "fqn": "cdk8s-plus-28.k8s.ProjectedVolumeSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 26928
      },
      "name": "ProjectedVolumeSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ProjectedVolumeSource#defaultMode"
            },
            "remarks": "Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "stability": "stable",
            "summary": "defaultMode are the mode bits used to set permissions on created files by default."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26934
          },
          "name": "defaultMode",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ProjectedVolumeSource#sources"
            },
            "stability": "stable",
            "summary": "sources is the list of volume projections."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26941
          },
          "name": "sources",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.VolumeProjection"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:ProjectedVolumeSource"
    },
    "cdk8s-plus-28.k8s.Quantity": {
      "assembly": "cdk8s-plus-28",
      "docs": {
        "custom": {
          "schema": "io.k8s.apimachinery.pkg.api.resource.Quantity"
        },
        "stability": "stable"
      },
      "fqn": "cdk8s-plus-28.k8s.Quantity",
      "kind": "class",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 17921
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17925
          },
          "name": "fromNumber",
          "parameters": [
            {
              "name": "value",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.k8s.Quantity"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17922
          },
          "name": "fromString",
          "parameters": [
            {
              "name": "value",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-plus-28.k8s.Quantity"
            }
          },
          "static": true
        }
      ],
      "name": "Quantity",
      "namespace": "k8s",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17928
          },
          "name": "value",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "primitive": "number"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:Quantity"
    },
    "cdk8s-plus-28.k8s.QueuingConfigurationV1Beta2": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.flowcontrol.v1beta2.QueuingConfiguration"
        },
        "stability": "stable",
        "summary": "QueuingConfiguration holds the configuration parameters for queuing."
      },
      "fqn": "cdk8s-plus-28.k8s.QueuingConfigurationV1Beta2",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 29187
      },
      "name": "QueuingConfigurationV1Beta2",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta2.QueuingConfiguration#handSize"
            },
            "remarks": "When enqueuing a request at this priority level the request's flow identifier (a string pair) is hashed and the hash value is used to shuffle the list of queues and deal a hand of the size specified here.  The request is put into one of the shortest queues in that hand. `handSize` must be no larger than `queues`, and should be significantly smaller (so that a few heavy flows do not saturate most of the queues).  See the user-facing documentation for more extensive guidance on setting this field.  This field has a default value of 8.",
            "stability": "stable",
            "summary": "`handSize` is a small positive number that configures the shuffle sharding of requests into queues."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29193
          },
          "name": "handSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta2.QueuingConfiguration#queueLengthLimit"
            },
            "remarks": "excess requests are rejected.  This value must be positive.  If not specified, it will be defaulted to 50.",
            "stability": "stable",
            "summary": "`queueLengthLimit` is the maximum number of requests allowed to be waiting in a given queue of this priority level at a time;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29200
          },
          "name": "queueLengthLimit",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta2.QueuingConfiguration#queues"
            },
            "remarks": "The queues exist independently at each apiserver. The value must be positive.  Setting it to 1 effectively precludes shufflesharding and thus makes the distinguisher method of associated flow schemas irrelevant.  This field has a default value of 64.",
            "stability": "stable",
            "summary": "`queues` is the number of queues for this priority level."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29207
          },
          "name": "queues",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/imports/k8s:QueuingConfigurationV1Beta2"
    },
    "cdk8s-plus-28.k8s.QueuingConfigurationV1Beta3": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.flowcontrol.v1beta3.QueuingConfiguration"
        },
        "stability": "stable",
        "summary": "QueuingConfiguration holds the configuration parameters for queuing."
      },
      "fqn": "cdk8s-plus-28.k8s.QueuingConfigurationV1Beta3",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 29327
      },
      "name": "QueuingConfigurationV1Beta3",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta3.QueuingConfiguration#handSize"
            },
            "remarks": "When enqueuing a request at this priority level the request's flow identifier (a string pair) is hashed and the hash value is used to shuffle the list of queues and deal a hand of the size specified here.  The request is put into one of the shortest queues in that hand. `handSize` must be no larger than `queues`, and should be significantly smaller (so that a few heavy flows do not saturate most of the queues).  See the user-facing documentation for more extensive guidance on setting this field.  This field has a default value of 8.",
            "stability": "stable",
            "summary": "`handSize` is a small positive number that configures the shuffle sharding of requests into queues."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29333
          },
          "name": "handSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta3.QueuingConfiguration#queueLengthLimit"
            },
            "remarks": "excess requests are rejected.  This value must be positive.  If not specified, it will be defaulted to 50.",
            "stability": "stable",
            "summary": "`queueLengthLimit` is the maximum number of requests allowed to be waiting in a given queue of this priority level at a time;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29340
          },
          "name": "queueLengthLimit",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta3.QueuingConfiguration#queues"
            },
            "remarks": "The queues exist independently at each apiserver. The value must be positive.  Setting it to 1 effectively precludes shufflesharding and thus makes the distinguisher method of associated flow schemas irrelevant.  This field has a default value of 64.",
            "stability": "stable",
            "summary": "`queues` is the number of queues for this priority level."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29347
          },
          "name": "queues",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/imports/k8s:QueuingConfigurationV1Beta3"
    },
    "cdk8s-plus-28.k8s.QuobyteVolumeSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.QuobyteVolumeSource"
        },
        "remarks": "Quobyte volumes do not support ownership management or SELinux relabeling.",
        "stability": "stable",
        "summary": "Represents a Quobyte mount that lasts the lifetime of a pod."
      },
      "fqn": "cdk8s-plus-28.k8s.QuobyteVolumeSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 21247
      },
      "name": "QuobyteVolumeSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.QuobyteVolumeSource#registry"
            },
            "stability": "stable",
            "summary": "registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21269
          },
          "name": "registry",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.QuobyteVolumeSource#volume"
            },
            "stability": "stable",
            "summary": "volume is a string that references an already created Quobyte volume by name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21291
          },
          "name": "volume",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.QuobyteVolumeSource#group"
            },
            "default": "no group",
            "stability": "stable",
            "summary": "group to map volume access to Default is no group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21254
          },
          "name": "group",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.QuobyteVolumeSource#readOnly"
            },
            "default": "false.",
            "remarks": "Defaults to false.",
            "stability": "stable",
            "summary": "readOnly here will force the Quobyte volume to be mounted with read-only permissions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21262
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.QuobyteVolumeSource#tenant"
            },
            "stability": "stable",
            "summary": "tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21276
          },
          "name": "tenant",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.QuobyteVolumeSource#user"
            },
            "default": "serivceaccount user",
            "stability": "stable",
            "summary": "user to map volume access to Defaults to serivceaccount user."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21284
          },
          "name": "user",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:QuobyteVolumeSource"
    },
    "cdk8s-plus-28.k8s.RbdPersistentVolumeSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.RBDPersistentVolumeSource"
        },
        "remarks": "RBD volumes support ownership management and SELinux relabeling.",
        "stability": "stable",
        "summary": "Represents a Rados Block Device mount that lasts the lifetime of a pod."
      },
      "fqn": "cdk8s-plus-28.k8s.RbdPersistentVolumeSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 21319
      },
      "name": "RbdPersistentVolumeSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.RBDPersistentVolumeSource#image"
            },
            "remarks": "More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "stability": "stable",
            "summary": "image is the rados image name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21332
          },
          "name": "image",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.RBDPersistentVolumeSource#monitors"
            },
            "remarks": "More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "stability": "stable",
            "summary": "monitors is a collection of Ceph monitors."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21347
          },
          "name": "monitors",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.RBDPersistentVolumeSource#fsType"
            },
            "remarks": "Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd",
            "stability": "stable",
            "summary": "fsType is the filesystem type of the volume that you want to mount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21325
          },
          "name": "fsType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.RBDPersistentVolumeSource#keyring"
            },
            "default": "etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "remarks": "Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "stability": "stable",
            "summary": "keyring is the path to key ring for RBDUser."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21340
          },
          "name": "keyring",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.RBDPersistentVolumeSource#pool"
            },
            "default": "rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "remarks": "Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "stability": "stable",
            "summary": "pool is the rados pool name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21355
          },
          "name": "pool",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.RBDPersistentVolumeSource#readOnly"
            },
            "default": "false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "remarks": "Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "stability": "stable",
            "summary": "readOnly here will force the ReadOnly setting in VolumeMounts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21363
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.RBDPersistentVolumeSource#secretRef"
            },
            "default": "nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "remarks": "If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "stability": "stable",
            "summary": "secretRef is name of the authentication secret for RBDUser."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21371
          },
          "name": "secretRef",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.SecretReference"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.RBDPersistentVolumeSource#user"
            },
            "default": "admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "remarks": "Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "stability": "stable",
            "summary": "user is the rados user name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21379
          },
          "name": "user",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:RbdPersistentVolumeSource"
    },
    "cdk8s-plus-28.k8s.RbdVolumeSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.RBDVolumeSource"
        },
        "remarks": "RBD volumes support ownership management and SELinux relabeling.",
        "stability": "stable",
        "summary": "Represents a Rados Block Device mount that lasts the lifetime of a pod."
      },
      "fqn": "cdk8s-plus-28.k8s.RbdVolumeSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 26965
      },
      "name": "RbdVolumeSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.RBDVolumeSource#image"
            },
            "remarks": "More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "stability": "stable",
            "summary": "image is the rados image name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26978
          },
          "name": "image",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.RBDVolumeSource#monitors"
            },
            "remarks": "More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "stability": "stable",
            "summary": "monitors is a collection of Ceph monitors."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26993
          },
          "name": "monitors",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.RBDVolumeSource#fsType"
            },
            "remarks": "Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd",
            "stability": "stable",
            "summary": "fsType is the filesystem type of the volume that you want to mount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26971
          },
          "name": "fsType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.RBDVolumeSource#keyring"
            },
            "default": "etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "remarks": "Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "stability": "stable",
            "summary": "keyring is the path to key ring for RBDUser."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26986
          },
          "name": "keyring",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.RBDVolumeSource#pool"
            },
            "default": "rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "remarks": "Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "stability": "stable",
            "summary": "pool is the rados pool name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27001
          },
          "name": "pool",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.RBDVolumeSource#readOnly"
            },
            "default": "false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "remarks": "Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "stability": "stable",
            "summary": "readOnly here will force the ReadOnly setting in VolumeMounts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27009
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.RBDVolumeSource#secretRef"
            },
            "default": "nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "remarks": "If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "stability": "stable",
            "summary": "secretRef is name of the authentication secret for RBDUser."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27017
          },
          "name": "secretRef",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.LocalObjectReference"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.RBDVolumeSource#user"
            },
            "default": "admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "remarks": "Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
            "stability": "stable",
            "summary": "user is the rados user name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27025
          },
          "name": "user",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:RbdVolumeSource"
    },
    "cdk8s-plus-28.k8s.ReplicaSetSpec": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.apps.v1.ReplicaSetSpec"
        },
        "stability": "stable",
        "summary": "ReplicaSetSpec is the specification of a ReplicaSet."
      },
      "fqn": "cdk8s-plus-28.k8s.ReplicaSetSpec",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 14141
      },
      "name": "ReplicaSetSpec",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.ReplicaSetSpec#selector"
            },
            "remarks": "Label keys and values that must match in order to be controlled by this replica set. It must match the pod template's labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors",
            "stability": "stable",
            "summary": "Selector is a label query over pods that should match the replica count."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14163
          },
          "name": "selector",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.LabelSelector"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.ReplicaSetSpec#minReadySeconds"
            },
            "default": "0 (pod will be considered available as soon as it is ready)",
            "remarks": "Defaults to 0 (pod will be considered available as soon as it is ready)",
            "stability": "stable",
            "summary": "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14148
          },
          "name": "minReadySeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.ReplicaSetSpec#replicas"
            },
            "default": "1. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller",
            "remarks": "This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller",
            "stability": "stable",
            "summary": "Replicas is the number of desired replicas."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14156
          },
          "name": "replicas",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.ReplicaSetSpec#template"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template",
            "stability": "stable",
            "summary": "Template is the object that describes the pod that will be created if insufficient replicas are detected."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14170
          },
          "name": "template",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.PodTemplateSpec"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ReplicaSetSpec"
    },
    "cdk8s-plus-28.k8s.ReplicationControllerSpec": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ReplicationControllerSpec"
        },
        "stability": "stable",
        "summary": "ReplicationControllerSpec is the specification of a replication controller."
      },
      "fqn": "cdk8s-plus-28.k8s.ReplicationControllerSpec",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 16284
      },
      "name": "ReplicationControllerSpec",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ReplicationControllerSpec#minReadySeconds"
            },
            "default": "0 (pod will be considered available as soon as it is ready)",
            "remarks": "Defaults to 0 (pod will be considered available as soon as it is ready)",
            "stability": "stable",
            "summary": "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16291
          },
          "name": "minReadySeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ReplicationControllerSpec#replicas"
            },
            "default": "1. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#what-is-a-replicationcontroller",
            "remarks": "This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#what-is-a-replicationcontroller",
            "stability": "stable",
            "summary": "Replicas is the number of desired replicas."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16299
          },
          "name": "replicas",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ReplicationControllerSpec#selector"
            },
            "remarks": "If Selector is empty, it is defaulted to the labels present on the Pod template. Label keys and values that must match in order to be controlled by this replication controller, if empty defaulted to labels on Pod template. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors",
            "stability": "stable",
            "summary": "Selector is a label query over pods that should match the Replicas count."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16306
          },
          "name": "selector",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ReplicationControllerSpec#template"
            },
            "remarks": "This takes precedence over a TemplateRef. The only allowed template.spec.restartPolicy value is \"Always\". More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template",
            "stability": "stable",
            "summary": "Template is the object that describes the pod that will be created if insufficient replicas are detected."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16313
          },
          "name": "template",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.PodTemplateSpec"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ReplicationControllerSpec"
    },
    "cdk8s-plus-28.k8s.ResourceAttributes": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.authorization.v1.ResourceAttributes"
        },
        "stability": "stable",
        "summary": "ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface."
      },
      "fqn": "cdk8s-plus-28.k8s.ResourceAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 19684
      },
      "name": "ResourceAttributes",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.authorization.v1.ResourceAttributes#group"
            },
            "remarks": "\"*\" means all.",
            "stability": "stable",
            "summary": "Group is the API Group of the Resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19690
          },
          "name": "group",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.authorization.v1.ResourceAttributes#name"
            },
            "remarks": "\"\" (empty) means all.",
            "stability": "stable",
            "summary": "Name is the name of the resource being requested for a \"get\" or deleted for a \"delete\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19697
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.authorization.v1.ResourceAttributes#namespace"
            },
            "remarks": "Currently, there is no distinction between no namespace and all namespaces \"\" (empty) is defaulted for LocalSubjectAccessReviews \"\" (empty) is empty for cluster-scoped resources \"\" (empty) means \"all\" for namespace scoped resources from a SubjectAccessReview or SelfSubjectAccessReview",
            "stability": "stable",
            "summary": "Namespace is the namespace of the action being requested."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19704
          },
          "name": "namespace",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.authorization.v1.ResourceAttributes#resource"
            },
            "remarks": "\"*\" means all.",
            "stability": "stable",
            "summary": "Resource is one of the existing resource types."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19711
          },
          "name": "resource",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.authorization.v1.ResourceAttributes#subresource"
            },
            "remarks": "\"\" means none.",
            "stability": "stable",
            "summary": "Subresource is one of the existing resource types."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19718
          },
          "name": "subresource",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.authorization.v1.ResourceAttributes#verb"
            },
            "remarks": "\"*\" means all.",
            "stability": "stable",
            "summary": "Verb is a kubernetes resource API verb, like: get, list, watch, create, update, delete, proxy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19725
          },
          "name": "verb",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.authorization.v1.ResourceAttributes#version"
            },
            "remarks": "\"*\" means all.",
            "stability": "stable",
            "summary": "Version is the API Version of the Resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19732
          },
          "name": "version",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ResourceAttributes"
    },
    "cdk8s-plus-28.k8s.ResourceClaim": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ResourceClaim"
        },
        "stability": "stable",
        "summary": "ResourceClaim references one entry in PodSpec.ResourceClaims."
      },
      "fqn": "cdk8s-plus-28.k8s.ResourceClaim",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 25275
      },
      "name": "ResourceClaim",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ResourceClaim#name"
            },
            "stability": "stable",
            "summary": "Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25281
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ResourceClaim"
    },
    "cdk8s-plus-28.k8s.ResourceClaimParametersReferenceV1Alpha2": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.resource.v1alpha2.ResourceClaimParametersReference"
        },
        "remarks": "The object must be in the same namespace as the ResourceClaim.",
        "stability": "stable",
        "summary": "ResourceClaimParametersReference contains enough information to let you locate the parameters for a ResourceClaim."
      },
      "fqn": "cdk8s-plus-28.k8s.ResourceClaimParametersReferenceV1Alpha2",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 24019
      },
      "name": "ResourceClaimParametersReferenceV1Alpha2",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.resource.v1alpha2.ResourceClaimParametersReference#kind"
            },
            "remarks": "This is the same value as in the parameter object's metadata, for example \"ConfigMap\".",
            "stability": "stable",
            "summary": "Kind is the type of resource being referenced."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24032
          },
          "name": "kind",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.resource.v1alpha2.ResourceClaimParametersReference#name"
            },
            "stability": "stable",
            "summary": "Name is the name of resource being referenced."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24039
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.resource.v1alpha2.ResourceClaimParametersReference#apiGroup"
            },
            "remarks": "It is empty for the core API. This matches the group in the APIVersion that is used when creating the resources.",
            "stability": "stable",
            "summary": "APIGroup is the group for the resource being referenced."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24025
          },
          "name": "apiGroup",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ResourceClaimParametersReferenceV1Alpha2"
    },
    "cdk8s-plus-28.k8s.ResourceClaimSpecV1Alpha2": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.resource.v1alpha2.ResourceClaimSpec"
        },
        "stability": "stable",
        "summary": "ResourceClaimSpec defines how a resource is to be allocated."
      },
      "fqn": "cdk8s-plus-28.k8s.ResourceClaimSpecV1Alpha2",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 17597
      },
      "name": "ResourceClaimSpecV1Alpha2",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.resource.v1alpha2.ResourceClaimSpec#resourceClassName"
            },
            "stability": "stable",
            "summary": "ResourceClassName references the driver and additional parameters via the name of a ResourceClass that was created as part of the driver deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17619
          },
          "name": "resourceClassName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.resource.v1alpha2.ResourceClaimSpec#allocationMode"
            },
            "remarks": "\"WaitForFirstConsumer\" is the default.",
            "stability": "stable",
            "summary": "Allocation can start immediately or when a Pod wants to use the resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17603
          },
          "name": "allocationMode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.resource.v1alpha2.ResourceClaimSpec#parametersRef"
            },
            "remarks": "The object must be in the same namespace as the ResourceClaim.",
            "stability": "stable",
            "summary": "ParametersRef references a separate object with arbitrary parameters that will be used by the driver when allocating a resource for the claim."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17612
          },
          "name": "parametersRef",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ResourceClaimParametersReferenceV1Alpha2"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ResourceClaimSpecV1Alpha2"
    },
    "cdk8s-plus-28.k8s.ResourceClaimTemplateSpecV1Alpha2": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.resource.v1alpha2.ResourceClaimTemplateSpec"
        },
        "stability": "stable",
        "summary": "ResourceClaimTemplateSpec contains the metadata and fields for a ResourceClaim."
      },
      "fqn": "cdk8s-plus-28.k8s.ResourceClaimTemplateSpecV1Alpha2",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 17644
      },
      "name": "ResourceClaimTemplateSpecV1Alpha2",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.resource.v1alpha2.ResourceClaimTemplateSpec#spec"
            },
            "remarks": "The entire content is copied unchanged into the ResourceClaim that gets created from this template. The same fields as in a ResourceClaim are also valid here.",
            "stability": "stable",
            "summary": "Spec for the ResourceClaim."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17657
          },
          "name": "spec",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ResourceClaimSpecV1Alpha2"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.resource.v1alpha2.ResourceClaimTemplateSpec#metadata"
            },
            "remarks": "No other fields are allowed and will be rejected during validation.",
            "stability": "stable",
            "summary": "ObjectMeta may contain labels and annotations that will be copied into the PVC when creating it."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17650
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectMeta"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ResourceClaimTemplateSpecV1Alpha2"
    },
    "cdk8s-plus-28.k8s.ResourceClassParametersReferenceV1Alpha2": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.resource.v1alpha2.ResourceClassParametersReference"
        },
        "stability": "stable",
        "summary": "ResourceClassParametersReference contains enough information to let you locate the parameters for a ResourceClass."
      },
      "fqn": "cdk8s-plus-28.k8s.ResourceClassParametersReferenceV1Alpha2",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 17681
      },
      "name": "ResourceClassParametersReferenceV1Alpha2",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.resource.v1alpha2.ResourceClassParametersReference#kind"
            },
            "remarks": "This is the same value as in the parameter object's metadata.",
            "stability": "stable",
            "summary": "Kind is the type of resource being referenced."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17694
          },
          "name": "kind",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.resource.v1alpha2.ResourceClassParametersReference#name"
            },
            "stability": "stable",
            "summary": "Name is the name of resource being referenced."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17701
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.resource.v1alpha2.ResourceClassParametersReference#apiGroup"
            },
            "remarks": "It is empty for the core API. This matches the group in the APIVersion that is used when creating the resources.",
            "stability": "stable",
            "summary": "APIGroup is the group for the resource being referenced."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17687
          },
          "name": "apiGroup",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.resource.v1alpha2.ResourceClassParametersReference#namespace"
            },
            "remarks": "Must be empty for cluster-scoped resources and non-empty for namespaced resources.",
            "stability": "stable",
            "summary": "Namespace that contains the referenced resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17708
          },
          "name": "namespace",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ResourceClassParametersReferenceV1Alpha2"
    },
    "cdk8s-plus-28.k8s.ResourceFieldSelector": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ResourceFieldSelector"
        },
        "stability": "stable",
        "summary": "ResourceFieldSelector represents container resources (cpu, memory) and their output format."
      },
      "fqn": "cdk8s-plus-28.k8s.ResourceFieldSelector",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 29967
      },
      "name": "ResourceFieldSelector",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ResourceFieldSelector#resource"
            },
            "stability": "stable",
            "summary": "Required: resource to select."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29987
          },
          "name": "resource",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ResourceFieldSelector#containerName"
            },
            "stability": "stable",
            "summary": "Container name: required for volumes, optional for env vars."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29973
          },
          "name": "containerName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ResourceFieldSelector#divisor"
            },
            "stability": "stable",
            "summary": "Specifies the output format of the exposed resources, defaults to \"1\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29980
          },
          "name": "divisor",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.Quantity"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ResourceFieldSelector"
    },
    "cdk8s-plus-28.k8s.ResourceMetricSourceV2": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.autoscaling.v2.ResourceMetricSource"
        },
        "stability": "stable",
        "summary": "ResourceMetricSource indicates how to scale on a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  The values will be averaged together before being compared to the target.  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the \"pods\" source.  Only one \"target\" type should be set."
      },
      "fqn": "cdk8s-plus-28.k8s.ResourceMetricSourceV2",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 25083
      },
      "name": "ResourceMetricSourceV2",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v2.ResourceMetricSource#name"
            },
            "stability": "stable",
            "summary": "name is the name of the resource in question."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25089
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v2.ResourceMetricSource#target"
            },
            "stability": "stable",
            "summary": "target specifies the target value for the given metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25096
          },
          "name": "target",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.MetricTargetV2"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ResourceMetricSourceV2"
    },
    "cdk8s-plus-28.k8s.ResourcePolicyRuleV1Beta2": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.flowcontrol.v1beta2.ResourcePolicyRule"
        },
        "remarks": "A ResourcePolicyRule matches a resource request if and only if: (a) at least one member of verbs matches the request, (b) at least one member of apiGroups matches the request, (c) at least one member of resources matches the request, and (d) either (d1) the request does not specify a namespace (i.e., `Namespace==\"\"`) and clusterScope is true or (d2) the request specifies a namespace and least one member of namespaces matches the request's namespace.",
        "stability": "stable",
        "summary": "ResourcePolicyRule is a predicate that matches some resource requests, testing the request's verb and the target resource."
      },
      "fqn": "cdk8s-plus-28.k8s.ResourcePolicyRuleV1Beta2",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 27422
      },
      "name": "ResourcePolicyRuleV1Beta2",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta2.ResourcePolicyRule#apiGroups"
            },
            "remarks": "\"*\" matches all API groups and, if present, must be the only entry. Required.",
            "stability": "stable",
            "summary": "`apiGroups` is a list of matching API groups and may not be empty."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27428
          },
          "name": "apiGroups",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta2.ResourcePolicyRule#resources"
            },
            "stability": "stable",
            "summary": "`resources` is a list of matching resources (i.e., lowercase and plural) with, if desired, subresource.  For example, [ \"services\", \"nodes/status\" ].  This list may not be empty. \"*\" matches all resources and, if present, must be the only entry. Required."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27449
          },
          "name": "resources",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta2.ResourcePolicyRule#verbs"
            },
            "remarks": "\"*\" matches all verbs and, if present, must be the only entry. Required.",
            "stability": "stable",
            "summary": "`verbs` is a list of matching verbs and may not be empty."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27456
          },
          "name": "verbs",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta2.ResourcePolicyRule#clusterScope"
            },
            "remarks": "If this field is omitted or false then the `namespaces` field must contain a non-empty list.",
            "stability": "stable",
            "summary": "`clusterScope` indicates whether to match requests that do not specify a namespace (which happens either because the resource is not namespaced or the request targets all namespaces)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27435
          },
          "name": "clusterScope",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta2.ResourcePolicyRule#namespaces"
            },
            "remarks": "A request that specifies a target namespace matches only if either (a) this list contains that target namespace or (b) this list contains \"*\".  Note that \"*\" matches any specified namespace but does not match a request that _does not specify_ a namespace (see the `clusterScope` field for that). This list may be empty, but only if `clusterScope` is true.",
            "stability": "stable",
            "summary": "`namespaces` is a list of target namespaces that restricts matches."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27442
          },
          "name": "namespaces",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:ResourcePolicyRuleV1Beta2"
    },
    "cdk8s-plus-28.k8s.ResourcePolicyRuleV1Beta3": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.flowcontrol.v1beta3.ResourcePolicyRule"
        },
        "remarks": "A ResourcePolicyRule matches a resource request if and only if: (a) at least one member of verbs matches the request, (b) at least one member of apiGroups matches the request, (c) at least one member of resources matches the request, and (d) either (d1) the request does not specify a namespace (i.e., `Namespace==\"\"`) and clusterScope is true or (d2) the request specifies a namespace and least one member of namespaces matches the request's namespace.",
        "stability": "stable",
        "summary": "ResourcePolicyRule is a predicate that matches some resource requests, testing the request's verb and the target resource."
      },
      "fqn": "cdk8s-plus-28.k8s.ResourcePolicyRuleV1Beta3",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 27616
      },
      "name": "ResourcePolicyRuleV1Beta3",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta3.ResourcePolicyRule#apiGroups"
            },
            "remarks": "\"*\" matches all API groups and, if present, must be the only entry. Required.",
            "stability": "stable",
            "summary": "`apiGroups` is a list of matching API groups and may not be empty."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27622
          },
          "name": "apiGroups",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta3.ResourcePolicyRule#resources"
            },
            "stability": "stable",
            "summary": "`resources` is a list of matching resources (i.e., lowercase and plural) with, if desired, subresource.  For example, [ \"services\", \"nodes/status\" ].  This list may not be empty. \"*\" matches all resources and, if present, must be the only entry. Required."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27643
          },
          "name": "resources",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta3.ResourcePolicyRule#verbs"
            },
            "remarks": "\"*\" matches all verbs and, if present, must be the only entry. Required.",
            "stability": "stable",
            "summary": "`verbs` is a list of matching verbs and may not be empty."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27650
          },
          "name": "verbs",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta3.ResourcePolicyRule#clusterScope"
            },
            "remarks": "If this field is omitted or false then the `namespaces` field must contain a non-empty list.",
            "stability": "stable",
            "summary": "`clusterScope` indicates whether to match requests that do not specify a namespace (which happens either because the resource is not namespaced or the request targets all namespaces)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27629
          },
          "name": "clusterScope",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta3.ResourcePolicyRule#namespaces"
            },
            "remarks": "A request that specifies a target namespace matches only if either (a) this list contains that target namespace or (b) this list contains \"*\".  Note that \"*\" matches any specified namespace but does not match a request that _does not specify_ a namespace (see the `clusterScope` field for that). This list may be empty, but only if `clusterScope` is true.",
            "stability": "stable",
            "summary": "`namespaces` is a list of target namespaces that restricts matches."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27636
          },
          "name": "namespaces",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:ResourcePolicyRuleV1Beta3"
    },
    "cdk8s-plus-28.k8s.ResourceQuotaSpec": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ResourceQuotaSpec"
        },
        "stability": "stable",
        "summary": "ResourceQuotaSpec defines the desired hard limits to enforce for Quota."
      },
      "fqn": "cdk8s-plus-28.k8s.ResourceQuotaSpec",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 16339
      },
      "name": "ResourceQuotaSpec",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ResourceQuotaSpec#hard"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/",
            "stability": "stable",
            "summary": "hard is the set of desired hard limits for each named resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16345
          },
          "name": "hard",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.Quantity"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ResourceQuotaSpec#scopes"
            },
            "remarks": "If not specified, the quota matches all objects.",
            "stability": "stable",
            "summary": "A collection of filters that must match each object tracked by a quota."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16359
          },
          "name": "scopes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ResourceQuotaSpec#scopeSelector"
            },
            "remarks": "For a resource to match, both scopes AND scopeSelector (if specified in spec), must be matched.",
            "stability": "stable",
            "summary": "scopeSelector is also a collection of filters like scopes that must match each object tracked by a quota but expressed using ScopeSelectorOperator in combination with possible values."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16352
          },
          "name": "scopeSelector",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ScopeSelector"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ResourceQuotaSpec"
    },
    "cdk8s-plus-28.k8s.ResourceRequirements": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ResourceRequirements"
        },
        "stability": "stable",
        "summary": "ResourceRequirements describes the compute resource requirements."
      },
      "fqn": "cdk8s-plus-28.k8s.ResourceRequirements",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 21722
      },
      "name": "ResourceRequirements",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ResourceRequirements#claims"
            },
            "remarks": "This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
            "stability": "stable",
            "summary": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21732
          },
          "name": "claims",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.ResourceClaim"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ResourceRequirements#limits"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
            "stability": "stable",
            "summary": "Limits describes the maximum amount of compute resources allowed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21739
          },
          "name": "limits",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.Quantity"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ResourceRequirements#requests"
            },
            "remarks": "If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
            "stability": "stable",
            "summary": "Requests describes the minimum amount of compute resources required."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21746
          },
          "name": "requests",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.Quantity"
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:ResourceRequirements"
    },
    "cdk8s-plus-28.k8s.RoleRef": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.rbac.v1.RoleRef"
        },
        "stability": "stable",
        "summary": "RoleRef contains information that points to the role being used."
      },
      "fqn": "cdk8s-plus-28.k8s.RoleRef",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 17459
      },
      "name": "RoleRef",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.rbac.v1.RoleRef#apiGroup"
            },
            "stability": "stable",
            "summary": "APIGroup is the group for the resource being referenced."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17465
          },
          "name": "apiGroup",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.rbac.v1.RoleRef#kind"
            },
            "stability": "stable",
            "summary": "Kind is the type of resource being referenced."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17472
          },
          "name": "kind",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.rbac.v1.RoleRef#name"
            },
            "stability": "stable",
            "summary": "Name is the name of resource being referenced."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17479
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:RoleRef"
    },
    "cdk8s-plus-28.k8s.RollingUpdateDaemonSet": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.apps.v1.RollingUpdateDaemonSet"
        },
        "stability": "stable",
        "summary": "Spec to control the desired behavior of daemon set rolling update."
      },
      "fqn": "cdk8s-plus-28.k8s.RollingUpdateDaemonSet",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 24760
      },
      "name": "RollingUpdateDaemonSet",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.RollingUpdateDaemonSet#maxSurge"
            },
            "remarks": "Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up to a minimum of 1. Default value is 0. Example: when this is set to 30%, at most 30% of the total number of nodes that should be running the daemon pod (i.e. status.desiredNumberScheduled) can have their a new pod created before the old pod is marked as deleted. The update starts by launching new pods on 30% of nodes. Once an updated pod is available (Ready for at least minReadySeconds) the old DaemonSet pod on that node is marked deleted. If the old pod becomes unavailable for any reason (Ready transitions to false, is evicted, or is drained) an updated pod is immediatedly created on that node without considering surge limits. Allowing surge implies the possibility that the resources consumed by the daemonset on any given node can double if the readiness check fails, and so resource intensive daemonsets should take into account that they may cause evictions during disruption.",
            "stability": "stable",
            "summary": "The maximum number of nodes with an existing available DaemonSet pod that can have an updated DaemonSet pod during during an update."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24766
          },
          "name": "maxSurge",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.IntOrString"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.RollingUpdateDaemonSet#maxUnavailable"
            },
            "remarks": "Value can be an absolute number (ex: 5) or a percentage of total number of DaemonSet pods at the start of the update (ex: 10%). Absolute number is calculated from percentage by rounding up. This cannot be 0 if MaxSurge is 0 Default value is 1. Example: when this is set to 30%, at most 30% of the total number of nodes that should be running the daemon pod (i.e. status.desiredNumberScheduled) can have their pods stopped for an update at any given time. The update starts by stopping at most 30% of those DaemonSet pods and then brings up new DaemonSet pods in their place. Once the new pods are available, it then proceeds onto other DaemonSet pods, thus ensuring that at least 70% of original number of DaemonSet pods are available at all times during the update.",
            "stability": "stable",
            "summary": "The maximum number of DaemonSet pods that can be unavailable during the update."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24773
          },
          "name": "maxUnavailable",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.IntOrString"
          }
        }
      ],
      "symbolId": "src/imports/k8s:RollingUpdateDaemonSet"
    },
    "cdk8s-plus-28.k8s.RollingUpdateDeployment": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.apps.v1.RollingUpdateDeployment"
        },
        "stability": "stable",
        "summary": "Spec to control the desired behavior of rolling update."
      },
      "fqn": "cdk8s-plus-28.k8s.RollingUpdateDeployment",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 24797
      },
      "name": "RollingUpdateDeployment",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.RollingUpdateDeployment#maxSurge"
            },
            "default": "25%. Example: when this is set to 30%, the new ReplicaSet can be scaled up immediately when the rolling update starts, such that the total number of old and new pods do not exceed 130% of desired pods. Once old pods have been killed, new ReplicaSet can be scaled up further, ensuring that total number of pods running at any time during the update is at most 130% of desired pods.",
            "remarks": "Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. Defaults to 25%. Example: when this is set to 30%, the new ReplicaSet can be scaled up immediately when the rolling update starts, such that the total number of old and new pods do not exceed 130% of desired pods. Once old pods have been killed, new ReplicaSet can be scaled up further, ensuring that total number of pods running at any time during the update is at most 130% of desired pods.",
            "stability": "stable",
            "summary": "The maximum number of pods that can be scheduled above the desired number of pods."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24804
          },
          "name": "maxSurge",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.IntOrString"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.RollingUpdateDeployment#maxUnavailable"
            },
            "default": "25%. Example: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods immediately when the rolling update starts. Once new pods are ready, old ReplicaSet can be scaled down further, followed by scaling up the new ReplicaSet, ensuring that the total number of pods available at all times during the update is at least 70% of desired pods.",
            "remarks": "Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). Absolute number is calculated from percentage by rounding down. This can not be 0 if MaxSurge is 0. Defaults to 25%. Example: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods immediately when the rolling update starts. Once new pods are ready, old ReplicaSet can be scaled down further, followed by scaling up the new ReplicaSet, ensuring that the total number of pods available at all times during the update is at least 70% of desired pods.",
            "stability": "stable",
            "summary": "The maximum number of pods that can be unavailable during the update."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24812
          },
          "name": "maxUnavailable",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.IntOrString"
          }
        }
      ],
      "symbolId": "src/imports/k8s:RollingUpdateDeployment"
    },
    "cdk8s-plus-28.k8s.RollingUpdateStatefulSetStrategy": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.apps.v1.RollingUpdateStatefulSetStrategy"
        },
        "stability": "stable",
        "summary": "RollingUpdateStatefulSetStrategy is used to communicate parameter for RollingUpdateStatefulSetStrategyType."
      },
      "fqn": "cdk8s-plus-28.k8s.RollingUpdateStatefulSetStrategy",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 24836
      },
      "name": "RollingUpdateStatefulSetStrategy",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.RollingUpdateStatefulSetStrategy#maxUnavailable"
            },
            "default": "1. This field is alpha-level and is only honored by servers that enable the MaxUnavailableStatefulSet feature. The field applies to all pods in the range 0 to Replicas-1. That means if there is any unavailable pod in the range 0 to Replicas-1, it will be counted towards MaxUnavailable.",
            "remarks": "Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). Absolute number is calculated from percentage by rounding up. This can not be 0. Defaults to 1. This field is alpha-level and is only honored by servers that enable the MaxUnavailableStatefulSet feature. The field applies to all pods in the range 0 to Replicas-1. That means if there is any unavailable pod in the range 0 to Replicas-1, it will be counted towards MaxUnavailable.",
            "stability": "stable",
            "summary": "The maximum number of pods that can be unavailable during the update."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24843
          },
          "name": "maxUnavailable",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.IntOrString"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.RollingUpdateStatefulSetStrategy#partition"
            },
            "remarks": "During a rolling update, all pods from ordinal Replicas-1 to Partition are updated. All pods from ordinal Partition-1 to 0 remain untouched. This is helpful in being able to do a canary based deployment. The default value is 0.",
            "stability": "stable",
            "summary": "Partition indicates the ordinal at which the StatefulSet should be partitioned for updates."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24850
          },
          "name": "partition",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/imports/k8s:RollingUpdateStatefulSetStrategy"
    },
    "cdk8s-plus-28.k8s.RuleWithOperations": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1.RuleWithOperations"
        },
        "remarks": "It is recommended to make sure that all the tuple expansions are valid.",
        "stability": "stable",
        "summary": "RuleWithOperations is a tuple of Operations and Resources."
      },
      "fqn": "cdk8s-plus-28.k8s.RuleWithOperations",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 18514
      },
      "name": "RuleWithOperations",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1.RuleWithOperations#apiGroups"
            },
            "remarks": "'*' is all groups. If '*' is present, the length of the slice must be one. Required.",
            "stability": "stable",
            "summary": "APIGroups is the API groups the resources belong to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18520
          },
          "name": "apiGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1.RuleWithOperations#apiVersions"
            },
            "remarks": "'*' is all versions. If '*' is present, the length of the slice must be one. Required.",
            "stability": "stable",
            "summary": "APIVersions is the API versions the resources belong to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18527
          },
          "name": "apiVersions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1.RuleWithOperations#operations"
            },
            "remarks": "If '*' is present, the length of the slice must be one. Required.",
            "stability": "stable",
            "summary": "Operations is the operations the admission hook cares about - CREATE, UPDATE, DELETE, CONNECT or * for all of those operations and any future admission operations that are added."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18534
          },
          "name": "operations",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1.RuleWithOperations#resources"
            },
            "remarks": "For example: 'pods' means pods. 'pods/log' means the log subresource of pods. '*' means all resources, but not subresources. 'pods/*' means all subresources of pods. '_/scale' means all scale subresources. '_/*' means all resources and their subresources.\n\nIf wildcard is present, the validation rule will ensure resources do not overlap with each other.\n\nDepending on the enclosing object, subresources might not be allowed. Required.",
            "stability": "stable",
            "summary": "Resources is a list of resources this rule applies to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18547
          },
          "name": "resources",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1.RuleWithOperations#scope"
            },
            "default": ".",
            "remarks": "Valid values are \"Cluster\", \"Namespaced\", and \"*\" \"Cluster\" means that only cluster-scoped resources will match this rule. Namespace API objects are cluster-scoped. \"Namespaced\" means that only namespaced resources will match this rule. \"*\" means that there are no scope restrictions. Subresources match the scope of their parent resource. Default is \"*\".",
            "stability": "stable",
            "summary": "scope specifies the scope of this rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18555
          },
          "name": "scope",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:RuleWithOperations"
    },
    "cdk8s-plus-28.k8s.ScaleIoPersistentVolumeSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ScaleIOPersistentVolumeSource"
        },
        "stability": "stable",
        "summary": "ScaleIOPersistentVolumeSource represents a persistent ScaleIO volume."
      },
      "fqn": "cdk8s-plus-28.k8s.ScaleIoPersistentVolumeSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 21409
      },
      "name": "ScaleIoPersistentVolumeSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ScaleIOPersistentVolumeSource#gateway"
            },
            "stability": "stable",
            "summary": "gateway is the host address of the ScaleIO API Gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21423
          },
          "name": "gateway",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ScaleIOPersistentVolumeSource#secretRef"
            },
            "remarks": "If this is not provided, Login operation will fail.",
            "stability": "stable",
            "summary": "secretRef references to the secret for ScaleIO user and other sensitive information."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21444
          },
          "name": "secretRef",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.SecretReference"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ScaleIOPersistentVolumeSource#system"
            },
            "stability": "stable",
            "summary": "system is the name of the storage system as configured in ScaleIO."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21473
          },
          "name": "system",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ScaleIOPersistentVolumeSource#fsType"
            },
            "default": "xfs\"",
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Default is \"xfs\"",
            "stability": "stable",
            "summary": "fsType is the filesystem type to mount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21416
          },
          "name": "fsType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ScaleIOPersistentVolumeSource#protectionDomain"
            },
            "stability": "stable",
            "summary": "protectionDomain is the name of the ScaleIO Protection Domain for the configured storage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21430
          },
          "name": "protectionDomain",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ScaleIOPersistentVolumeSource#readOnly"
            },
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "stability": "stable",
            "summary": "readOnly defaults to false (read/write)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21437
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ScaleIOPersistentVolumeSource#sslEnabled"
            },
            "stability": "stable",
            "summary": "sslEnabled is the flag to enable/disable SSL communication with Gateway, default false."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21451
          },
          "name": "sslEnabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ScaleIOPersistentVolumeSource#storageMode"
            },
            "default": "ThinProvisioned.",
            "remarks": "Default is ThinProvisioned.",
            "stability": "stable",
            "summary": "storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21459
          },
          "name": "storageMode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ScaleIOPersistentVolumeSource#storagePool"
            },
            "stability": "stable",
            "summary": "storagePool is the ScaleIO Storage Pool associated with the protection domain."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21466
          },
          "name": "storagePool",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ScaleIOPersistentVolumeSource#volumeName"
            },
            "stability": "stable",
            "summary": "volumeName is the name of a volume already created in the ScaleIO system that is associated with this volume source."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21480
          },
          "name": "volumeName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ScaleIoPersistentVolumeSource"
    },
    "cdk8s-plus-28.k8s.ScaleIoVolumeSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ScaleIOVolumeSource"
        },
        "stability": "stable",
        "summary": "ScaleIOVolumeSource represents a persistent ScaleIO volume."
      },
      "fqn": "cdk8s-plus-28.k8s.ScaleIoVolumeSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 27055
      },
      "name": "ScaleIoVolumeSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ScaleIOVolumeSource#gateway"
            },
            "stability": "stable",
            "summary": "gateway is the host address of the ScaleIO API Gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27069
          },
          "name": "gateway",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ScaleIOVolumeSource#secretRef"
            },
            "remarks": "If this is not provided, Login operation will fail.",
            "stability": "stable",
            "summary": "secretRef references to the secret for ScaleIO user and other sensitive information."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27091
          },
          "name": "secretRef",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.LocalObjectReference"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ScaleIOVolumeSource#system"
            },
            "stability": "stable",
            "summary": "system is the name of the storage system as configured in ScaleIO."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27120
          },
          "name": "system",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ScaleIOVolumeSource#fsType"
            },
            "default": "xfs\".",
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Default is \"xfs\".",
            "stability": "stable",
            "summary": "fsType is the filesystem type to mount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27062
          },
          "name": "fsType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ScaleIOVolumeSource#protectionDomain"
            },
            "stability": "stable",
            "summary": "protectionDomain is the name of the ScaleIO Protection Domain for the configured storage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27076
          },
          "name": "protectionDomain",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ScaleIOVolumeSource#readOnly"
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "stability": "stable",
            "summary": "readOnly Defaults to false (read/write)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27084
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ScaleIOVolumeSource#sslEnabled"
            },
            "stability": "stable",
            "summary": "sslEnabled Flag enable/disable SSL communication with Gateway, default false."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27098
          },
          "name": "sslEnabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ScaleIOVolumeSource#storageMode"
            },
            "default": "ThinProvisioned.",
            "remarks": "Default is ThinProvisioned.",
            "stability": "stable",
            "summary": "storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27106
          },
          "name": "storageMode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ScaleIOVolumeSource#storagePool"
            },
            "stability": "stable",
            "summary": "storagePool is the ScaleIO Storage Pool associated with the protection domain."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27113
          },
          "name": "storagePool",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ScaleIOVolumeSource#volumeName"
            },
            "stability": "stable",
            "summary": "volumeName is the name of a volume already created in the ScaleIO system that is associated with this volume source."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27127
          },
          "name": "volumeName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ScaleIoVolumeSource"
    },
    "cdk8s-plus-28.k8s.ScaleSpec": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.autoscaling.v1.ScaleSpec"
        },
        "stability": "stable",
        "summary": "ScaleSpec describes the attributes of a scale subresource."
      },
      "fqn": "cdk8s-plus-28.k8s.ScaleSpec",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 14576
      },
      "name": "ScaleSpec",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.autoscaling.v1.ScaleSpec#replicas"
            },
            "stability": "stable",
            "summary": "replicas is the desired number of instances for the scaled object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14582
          },
          "name": "replicas",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ScaleSpec"
    },
    "cdk8s-plus-28.k8s.Scheduling": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.node.v1.Scheduling"
        },
        "stability": "stable",
        "summary": "Scheduling specifies the scheduling constraints for nodes supporting a RuntimeClass."
      },
      "fqn": "cdk8s-plus-28.k8s.Scheduling",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 17191
      },
      "name": "Scheduling",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.node.v1.Scheduling#nodeSelector"
            },
            "remarks": "Pods using this RuntimeClass can only be scheduled to a node matched by this selector. The RuntimeClass nodeSelector is merged with a pod's existing nodeSelector. Any conflicts will cause the pod to be rejected in admission.",
            "stability": "stable",
            "summary": "nodeSelector lists labels that must be present on nodes that support this RuntimeClass."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17197
          },
          "name": "nodeSelector",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.node.v1.Scheduling#tolerations"
            },
            "stability": "stable",
            "summary": "tolerations are appended (excluding duplicates) to pods running with this RuntimeClass during admission, effectively unioning the set of nodes tolerated by the pod and the RuntimeClass."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17204
          },
          "name": "tolerations",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.Toleration"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:Scheduling"
    },
    "cdk8s-plus-28.k8s.ScopeSelector": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ScopeSelector"
        },
        "stability": "stable",
        "summary": "A scope selector represents the AND of the selectors represented by the scoped-resource selector requirements."
      },
      "fqn": "cdk8s-plus-28.k8s.ScopeSelector",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 23012
      },
      "name": "ScopeSelector",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ScopeSelector#matchExpressions"
            },
            "stability": "stable",
            "summary": "A list of scope selector requirements by scope of the resources."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23018
          },
          "name": "matchExpressions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.ScopedResourceSelectorRequirement"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:ScopeSelector"
    },
    "cdk8s-plus-28.k8s.ScopedResourceSelectorRequirement": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ScopedResourceSelectorRequirement"
        },
        "stability": "stable",
        "summary": "A scoped-resource selector requirement is a selector that contains values, a scope name, and an operator that relates the scope name and values."
      },
      "fqn": "cdk8s-plus-28.k8s.ScopedResourceSelectorRequirement",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 27276
      },
      "name": "ScopedResourceSelectorRequirement",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ScopedResourceSelectorRequirement#operator"
            },
            "remarks": "Valid operators are In, NotIn, Exists, DoesNotExist.",
            "stability": "stable",
            "summary": "Represents a scope's relationship to a set of values."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27282
          },
          "name": "operator",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ScopedResourceSelectorRequirement#scopeName"
            },
            "stability": "stable",
            "summary": "The name of the scope that the selector applies to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27289
          },
          "name": "scopeName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ScopedResourceSelectorRequirement#values"
            },
            "remarks": "If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
            "stability": "stable",
            "summary": "An array of string values."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27296
          },
          "name": "values",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:ScopedResourceSelectorRequirement"
    },
    "cdk8s-plus-28.k8s.SeLinuxOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.SELinuxOptions"
        },
        "stability": "stable",
        "summary": "SELinuxOptions are the labels to be applied to the container."
      },
      "fqn": "cdk8s-plus-28.k8s.SeLinuxOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 26047
      },
      "name": "SeLinuxOptions",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.SELinuxOptions#level"
            },
            "stability": "stable",
            "summary": "Level is SELinux level label that applies to the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26053
          },
          "name": "level",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.SELinuxOptions#role"
            },
            "stability": "stable",
            "summary": "Role is a SELinux role label that applies to the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26060
          },
          "name": "role",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.SELinuxOptions#type"
            },
            "stability": "stable",
            "summary": "Type is a SELinux type label that applies to the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26067
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.SELinuxOptions#user"
            },
            "stability": "stable",
            "summary": "User is a SELinux user label that applies to the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26074
          },
          "name": "user",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:SeLinuxOptions"
    },
    "cdk8s-plus-28.k8s.SeccompProfile": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.SeccompProfile"
        },
        "remarks": "Only one profile source may be set.",
        "stability": "stable",
        "summary": "SeccompProfile defines a pod/container's seccomp profile settings."
      },
      "fqn": "cdk8s-plus-28.k8s.SeccompProfile",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 26100
      },
      "name": "SeccompProfile",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.SeccompProfile#type"
            },
            "remarks": "Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.",
            "stability": "stable",
            "summary": "type indicates which kind of seccomp profile will be applied. Valid options are:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26115
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.SeccompProfile#localhostProfile"
            },
            "remarks": "The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must be set if type is \"Localhost\". Must NOT be set for any other type.",
            "stability": "stable",
            "summary": "localhostProfile indicates a profile defined in a file on the node should be used."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26106
          },
          "name": "localhostProfile",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:SeccompProfile"
    },
    "cdk8s-plus-28.k8s.SecretEnvSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.SecretEnvSource"
        },
        "remarks": "The contents of the target Secret's Data field will represent the key-value pairs as environment variables.",
        "stability": "stable",
        "summary": "SecretEnvSource selects a Secret to populate the environment variables with."
      },
      "fqn": "cdk8s-plus-28.k8s.SecretEnvSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 28620
      },
      "name": "SecretEnvSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.SecretEnvSource#name"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
            "stability": "stable",
            "summary": "Name of the referent."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28626
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.SecretEnvSource#optional"
            },
            "stability": "stable",
            "summary": "Specify whether the Secret must be defined."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28633
          },
          "name": "optional",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/imports/k8s:SecretEnvSource"
    },
    "cdk8s-plus-28.k8s.SecretKeySelector": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.SecretKeySelector"
        },
        "stability": "stable",
        "summary": "SecretKeySelector selects a key of a Secret."
      },
      "fqn": "cdk8s-plus-28.k8s.SecretKeySelector",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 30012
      },
      "name": "SecretKeySelector",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.SecretKeySelector#key"
            },
            "remarks": "Must be a valid secret key.",
            "stability": "stable",
            "summary": "The key of the secret to select from."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 30018
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.SecretKeySelector#name"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
            "stability": "stable",
            "summary": "Name of the referent."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 30025
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.SecretKeySelector#optional"
            },
            "stability": "stable",
            "summary": "Specify whether the Secret or its key must be defined."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 30032
          },
          "name": "optional",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/imports/k8s:SecretKeySelector"
    },
    "cdk8s-plus-28.k8s.SecretProjection": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.SecretProjection"
        },
        "remarks": "The contents of the target Secret's Data field will be presented in a projected volume as files using the keys in the Data field as the file names. Note that this is identical to a secret volume source without the default mode.",
        "stability": "stable",
        "summary": "Adapts a secret into a projected volume."
      },
      "fqn": "cdk8s-plus-28.k8s.SecretProjection",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 30172
      },
      "name": "SecretProjection",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.SecretProjection#items"
            },
            "remarks": "If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
            "stability": "stable",
            "summary": "items if unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 30178
          },
          "name": "items",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KeyToPath"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.SecretProjection#name"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
            "stability": "stable",
            "summary": "Name of the referent."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 30185
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.SecretProjection#optional"
            },
            "stability": "stable",
            "summary": "optional field specify whether the Secret or its key must be defined."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 30192
          },
          "name": "optional",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/imports/k8s:SecretProjection"
    },
    "cdk8s-plus-28.k8s.SecretReference": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.SecretReference"
        },
        "remarks": "It has enough information to retrieve secret in any namespace",
        "stability": "stable",
        "summary": "SecretReference represents a Secret Reference."
      },
      "fqn": "cdk8s-plus-28.k8s.SecretReference",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 25238
      },
      "name": "SecretReference",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.SecretReference#name"
            },
            "stability": "stable",
            "summary": "name is unique within a namespace to reference a secret resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25244
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.SecretReference#namespace"
            },
            "stability": "stable",
            "summary": "namespace defines the space within which the secret name must be unique."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25251
          },
          "name": "namespace",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:SecretReference"
    },
    "cdk8s-plus-28.k8s.SecretVolumeSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.SecretVolumeSource"
        },
        "remarks": "The contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names. Secret volumes support ownership management and SELinux relabeling.",
        "stability": "stable",
        "summary": "Adapts a Secret into a volume."
      },
      "fqn": "cdk8s-plus-28.k8s.SecretVolumeSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 27161
      },
      "name": "SecretVolumeSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.SecretVolumeSource#defaultMode"
            },
            "default": "0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "remarks": "Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "stability": "stable",
            "summary": "defaultMode is Optional: mode bits used to set permissions on created files by default."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27168
          },
          "name": "defaultMode",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.SecretVolumeSource#items"
            },
            "remarks": "If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
            "stability": "stable",
            "summary": "items If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27175
          },
          "name": "items",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KeyToPath"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.SecretVolumeSource#optional"
            },
            "stability": "stable",
            "summary": "optional field specify whether the Secret or its keys must be defined."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27182
          },
          "name": "optional",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.SecretVolumeSource#secretName"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
            "stability": "stable",
            "summary": "secretName is the name of the secret in the pod's namespace to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27189
          },
          "name": "secretName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:SecretVolumeSource"
    },
    "cdk8s-plus-28.k8s.SecurityContext": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.SecurityContext"
        },
        "remarks": "Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.",
        "stability": "stable",
        "summary": "SecurityContext holds security configuration that will be applied to a container."
      },
      "fqn": "cdk8s-plus-28.k8s.SecurityContext",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 25747
      },
      "name": "SecurityContext",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.SecurityContext#allowPrivilegeEscalation"
            },
            "remarks": "This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN Note that this field cannot be set when spec.os.name is windows.",
            "stability": "stable",
            "summary": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25753
          },
          "name": "allowPrivilegeEscalation",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.SecurityContext#capabilities"
            },
            "default": "the default set of capabilities granted by the container runtime. Note that this field cannot be set when spec.os.name is windows.",
            "remarks": "Defaults to the default set of capabilities granted by the container runtime. Note that this field cannot be set when spec.os.name is windows.",
            "stability": "stable",
            "summary": "The capabilities to add/drop when running containers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25761
          },
          "name": "capabilities",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.Capabilities"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.SecurityContext#privileged"
            },
            "default": "false. Note that this field cannot be set when spec.os.name is windows.",
            "remarks": "Processes in privileged containers are essentially equivalent to root on the host. Defaults to false. Note that this field cannot be set when spec.os.name is windows.",
            "stability": "stable",
            "summary": "Run container in privileged mode."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25769
          },
          "name": "privileged",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.SecurityContext#procMount"
            },
            "remarks": "The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled. Note that this field cannot be set when spec.os.name is windows.",
            "stability": "stable",
            "summary": "procMount denotes the type of proc mount to use for the containers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25776
          },
          "name": "procMount",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.SecurityContext#readOnlyRootFilesystem"
            },
            "default": "false. Note that this field cannot be set when spec.os.name is windows.",
            "remarks": "Default is false. Note that this field cannot be set when spec.os.name is windows.",
            "stability": "stable",
            "summary": "Whether this container has a read-only root filesystem."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25784
          },
          "name": "readOnlyRootFilesystem",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.SecurityContext#runAsGroup"
            },
            "remarks": "Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.",
            "stability": "stable",
            "summary": "The GID to run the entrypoint of the container process."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25791
          },
          "name": "runAsGroup",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.SecurityContext#runAsNonRoot"
            },
            "remarks": "If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "stability": "stable",
            "summary": "Indicates that the container must run as a non-root user."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25798
          },
          "name": "runAsNonRoot",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.SecurityContext#runAsUser"
            },
            "default": "user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.",
            "remarks": "Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.",
            "stability": "stable",
            "summary": "The UID to run the entrypoint of the container process."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25806
          },
          "name": "runAsUser",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.SecurityContext#seccompProfile"
            },
            "remarks": "If seccomp options are provided at both the pod & container level, the container options override the pod options. Note that this field cannot be set when spec.os.name is windows.",
            "stability": "stable",
            "summary": "The seccomp options to use by this container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25820
          },
          "name": "seccompProfile",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.SeccompProfile"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.SecurityContext#seLinuxOptions"
            },
            "remarks": "If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.",
            "stability": "stable",
            "summary": "The SELinux context to be applied to the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25813
          },
          "name": "seLinuxOptions",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.SeLinuxOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.SecurityContext#windowsOptions"
            },
            "remarks": "If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux.",
            "stability": "stable",
            "summary": "The Windows specific settings applied to all containers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25827
          },
          "name": "windowsOptions",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.WindowsSecurityContextOptions"
          }
        }
      ],
      "symbolId": "src/imports/k8s:SecurityContext"
    },
    "cdk8s-plus-28.k8s.SelfSubjectAccessReviewSpec": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.authorization.v1.SelfSubjectAccessReviewSpec"
        },
        "remarks": "Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set",
        "stability": "stable",
        "summary": "SelfSubjectAccessReviewSpec is a description of the access request."
      },
      "fqn": "cdk8s-plus-28.k8s.SelfSubjectAccessReviewSpec",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 14457
      },
      "name": "SelfSubjectAccessReviewSpec",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.authorization.v1.SelfSubjectAccessReviewSpec#nonResourceAttributes"
            },
            "stability": "stable",
            "summary": "NonResourceAttributes describes information for a non-resource access request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14463
          },
          "name": "nonResourceAttributes",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.NonResourceAttributes"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.authorization.v1.SelfSubjectAccessReviewSpec#resourceAttributes"
            },
            "stability": "stable",
            "summary": "ResourceAuthorizationAttributes describes information for a resource access request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14470
          },
          "name": "resourceAttributes",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ResourceAttributes"
          }
        }
      ],
      "symbolId": "src/imports/k8s:SelfSubjectAccessReviewSpec"
    },
    "cdk8s-plus-28.k8s.SelfSubjectRulesReviewSpec": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.authorization.v1.SelfSubjectRulesReviewSpec"
        },
        "stability": "stable",
        "summary": "SelfSubjectRulesReviewSpec defines the specification for SelfSubjectRulesReview."
      },
      "fqn": "cdk8s-plus-28.k8s.SelfSubjectRulesReviewSpec",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 14494
      },
      "name": "SelfSubjectRulesReviewSpec",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.authorization.v1.SelfSubjectRulesReviewSpec#namespace"
            },
            "remarks": "Required.",
            "stability": "stable",
            "summary": "Namespace to evaluate rules for."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14500
          },
          "name": "namespace",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:SelfSubjectRulesReviewSpec"
    },
    "cdk8s-plus-28.k8s.ServiceAccountSubjectV1Beta2": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.flowcontrol.v1beta2.ServiceAccountSubject"
        },
        "stability": "stable",
        "summary": "ServiceAccountSubject holds detailed information for service-account-kind subject."
      },
      "fqn": "cdk8s-plus-28.k8s.ServiceAccountSubjectV1Beta2",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 29121
      },
      "name": "ServiceAccountSubjectV1Beta2",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta2.ServiceAccountSubject#name"
            },
            "remarks": "Required.",
            "stability": "stable",
            "summary": "`name` is the name of matching ServiceAccount objects, or \"*\" to match regardless of name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29127
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta2.ServiceAccountSubject#namespace"
            },
            "remarks": "Required.",
            "stability": "stable",
            "summary": "`namespace` is the namespace of matching ServiceAccount objects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29134
          },
          "name": "namespace",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ServiceAccountSubjectV1Beta2"
    },
    "cdk8s-plus-28.k8s.ServiceAccountSubjectV1Beta3": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.flowcontrol.v1beta3.ServiceAccountSubject"
        },
        "stability": "stable",
        "summary": "ServiceAccountSubject holds detailed information for service-account-kind subject."
      },
      "fqn": "cdk8s-plus-28.k8s.ServiceAccountSubjectV1Beta3",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 29261
      },
      "name": "ServiceAccountSubjectV1Beta3",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta3.ServiceAccountSubject#name"
            },
            "remarks": "Required.",
            "stability": "stable",
            "summary": "`name` is the name of matching ServiceAccount objects, or \"*\" to match regardless of name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29267
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta3.ServiceAccountSubject#namespace"
            },
            "remarks": "Required.",
            "stability": "stable",
            "summary": "`namespace` is the namespace of matching ServiceAccount objects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29274
          },
          "name": "namespace",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ServiceAccountSubjectV1Beta3"
    },
    "cdk8s-plus-28.k8s.ServiceAccountTokenProjection": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ServiceAccountTokenProjection"
        },
        "remarks": "This projection can be used to insert a service account token into the pods runtime filesystem for use against APIs (Kubernetes API Server or otherwise).",
        "stability": "stable",
        "summary": "ServiceAccountTokenProjection represents a projected service account token volume."
      },
      "fqn": "cdk8s-plus-28.k8s.ServiceAccountTokenProjection",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 30217
      },
      "name": "ServiceAccountTokenProjection",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ServiceAccountTokenProjection#path"
            },
            "stability": "stable",
            "summary": "path is the path relative to the mount point of the file to project the token into."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 30238
          },
          "name": "path",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ServiceAccountTokenProjection#audience"
            },
            "remarks": "A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.",
            "stability": "stable",
            "summary": "audience is the intended audience of the token."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 30223
          },
          "name": "audience",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ServiceAccountTokenProjection#expirationSeconds"
            },
            "default": "1 hour and must be at least 10 minutes.",
            "remarks": "As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.",
            "stability": "stable",
            "summary": "expirationSeconds is the requested duration of validity of the service account token."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 30231
          },
          "name": "expirationSeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ServiceAccountTokenProjection"
    },
    "cdk8s-plus-28.k8s.ServiceBackendPort": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.networking.v1.ServiceBackendPort"
        },
        "stability": "stable",
        "summary": "ServiceBackendPort is the service port being referenced."
      },
      "fqn": "cdk8s-plus-28.k8s.ServiceBackendPort",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 29372
      },
      "name": "ServiceBackendPort",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.ServiceBackendPort#name"
            },
            "remarks": "This is a mutually exclusive setting with \"Number\".",
            "stability": "stable",
            "summary": "name is the name of the port on the Service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29378
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.networking.v1.ServiceBackendPort#number"
            },
            "stability": "stable",
            "summary": "number is the numerical port number (e.g. 80) on the Service. This is a mutually exclusive setting with \"Name\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29385
          },
          "name": "number",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ServiceBackendPort"
    },
    "cdk8s-plus-28.k8s.ServicePort": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ServicePort"
        },
        "stability": "stable",
        "summary": "ServicePort contains information on service's port."
      },
      "fqn": "cdk8s-plus-28.k8s.ServicePort",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 23041
      },
      "name": "ServicePort",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ServicePort#port"
            },
            "stability": "stable",
            "summary": "The port that will be exposed by this service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23077
          },
          "name": "port",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ServicePort#appProtocol"
            },
            "remarks": "This is used as a hint for implementations to offer richer behavior for protocols that they understand. This field follows standard Kubernetes label syntax. Valid values are either:\n\n* Un-prefixed protocol names - reserved for IANA standard service names (as per RFC-6335 and https://www.iana.org/assignments/service-names).\n\n* Kubernetes-defined prefixed names:\n* 'kubernetes.io/h2c' - HTTP/2 over cleartext as described in https://www.rfc-editor.org/rfc/rfc7540\n* 'kubernetes.io/ws'  - WebSocket over cleartext as described in https://www.rfc-editor.org/rfc/rfc6455\n* 'kubernetes.io/wss' - WebSocket over TLS as described in https://www.rfc-editor.org/rfc/rfc6455\n\n* Other protocols should use implementation-defined prefixed names such as mycompany.com/my-custom-protocol.",
            "stability": "stable",
            "summary": "The application protocol for this port."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23056
          },
          "name": "appProtocol",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ServicePort#name"
            },
            "remarks": "This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. When considering the endpoints for a Service, this must match the 'name' field in the EndpointPort. Optional if only one ServicePort is defined on this service.",
            "stability": "stable",
            "summary": "The name of this port within the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23063
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ServicePort#nodePort"
            },
            "remarks": "Usually assigned by the system. If a value is specified, in-range, and not in use it will be used, otherwise the operation will fail.  If not specified, a port will be allocated if this Service requires one.  If this field is specified when creating a Service which does not need it, creation will fail. This field will be wiped when updating a Service to no longer need it (e.g. changing type from NodePort to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport",
            "stability": "stable",
            "summary": "The port on each node on which this service is exposed when type is NodePort or LoadBalancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23070
          },
          "name": "nodePort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ServicePort#protocol"
            },
            "default": "TCP.",
            "remarks": "Supports \"TCP\", \"UDP\", and \"SCTP\". Default is TCP.",
            "stability": "stable",
            "summary": "The IP protocol for this port."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23085
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ServicePort#targetPort"
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. If this is a string, it will be looked up as a named port in the target Pod's container ports. If this is not specified, the value of the 'port' field is used (an identity map). This field is ignored for services with clusterIP=None, and should be omitted or set equal to the 'port' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service",
            "stability": "stable",
            "summary": "Number or name of the port to access on the pods targeted by the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23092
          },
          "name": "targetPort",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.IntOrString"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ServicePort"
    },
    "cdk8s-plus-28.k8s.ServiceReference": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1.ServiceReference"
        },
        "stability": "stable",
        "summary": "ServiceReference holds a reference to Service.legacy.k8s.io."
      },
      "fqn": "cdk8s-plus-28.k8s.ServiceReference",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 24554
      },
      "name": "ServiceReference",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1.ServiceReference#name"
            },
            "remarks": "Required",
            "stability": "stable",
            "summary": "`name` is the name of the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24560
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1.ServiceReference#namespace"
            },
            "remarks": "Required",
            "stability": "stable",
            "summary": "`namespace` is the namespace of the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24567
          },
          "name": "namespace",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1.ServiceReference#path"
            },
            "stability": "stable",
            "summary": "`path` is an optional URL path which will be sent in any request to this service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24574
          },
          "name": "path",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1.ServiceReference#port"
            },
            "default": "443 for backward compatibility. `port` should be a valid port number (1-65535, inclusive).",
            "remarks": "Default to 443 for backward compatibility. `port` should be a valid port number (1-65535, inclusive).",
            "stability": "stable",
            "summary": "If specified, the port on the service that hosting webhook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24582
          },
          "name": "port",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ServiceReference"
    },
    "cdk8s-plus-28.k8s.ServiceSpec": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.ServiceSpec"
        },
        "stability": "stable",
        "summary": "ServiceSpec describes the attributes that a user creates on a service."
      },
      "fqn": "cdk8s-plus-28.k8s.ServiceSpec",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 16384
      },
      "name": "ServiceSpec",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ServiceSpec#allocateLoadBalancerNodePorts"
            },
            "default": "true\". It may be set to \"false\" if the cluster load-balancer does not rely on NodePorts.  If the caller requests specific NodePorts (by specifying a value), those requests will be respected, regardless of this field. This field may only be set for services with type LoadBalancer and will be cleared if the type is changed to any other type.",
            "remarks": "Default is \"true\". It may be set to \"false\" if the cluster load-balancer does not rely on NodePorts.  If the caller requests specific NodePorts (by specifying a value), those requests will be respected, regardless of this field. This field may only be set for services with type LoadBalancer and will be cleared if the type is changed to any other type.",
            "stability": "stable",
            "summary": "allocateLoadBalancerNodePorts defines if NodePorts will be automatically allocated for services with type LoadBalancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16391
          },
          "name": "allocateLoadBalancerNodePorts",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ServiceSpec#clusterIP"
            },
            "remarks": "If an address is specified manually, is in-range (as per system configuration), and is not in use, it will be allocated to the service; otherwise creation of the service will fail. This field may not be changed through updates unless the type field is also being changed to ExternalName (which requires this field to be blank) or the type field is being changed from ExternalName (in which case this field may optionally be specified, as describe above).  Valid values are \"None\", empty string (\"\"), or a valid IP address. Setting this to \"None\" makes a \"headless service\" (no virtual IP), which is useful when direct endpoint connections are preferred and proxying is not required.  Only applies to types ClusterIP, NodePort, and LoadBalancer. If this field is specified when creating a Service of type ExternalName, creation will fail. This field will be wiped when updating a Service to type ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
            "stability": "stable",
            "summary": "clusterIP is the IP address of the service and is usually assigned randomly."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16398
          },
          "name": "clusterIp",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ServiceSpec#clusterIPs"
            },
            "remarks": "If an address is specified manually, is in-range (as per system configuration), and is not in use, it will be allocated to the service; otherwise creation of the service will fail. This field may not be changed through updates unless the type field is also being changed to ExternalName (which requires this field to be empty) or the type field is being changed from ExternalName (in which case this field may optionally be specified, as describe above).  Valid values are \"None\", empty string (\"\"), or a valid IP address.  Setting this to \"None\" makes a \"headless service\" (no virtual IP), which is useful when direct endpoint connections are preferred and proxying is not required.  Only applies to types ClusterIP, NodePort, and LoadBalancer. If this field is specified when creating a Service of type ExternalName, creation will fail. This field will be wiped when updating a Service to type ExternalName.  If this field is not specified, it will be initialized from the clusterIP field.  If this field is specified, clients must ensure that clusterIPs[0] and clusterIP have the same value.\n\nThis field may hold a maximum of two entries (dual-stack IPs, in either order). These IPs must correspond to the values of the ipFamilies field. Both clusterIPs and ipFamilies are governed by the ipFamilyPolicy field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
            "stability": "stable",
            "summary": "ClusterIPs is a list of IP addresses assigned to this service, and are usually assigned randomly."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16407
          },
          "name": "clusterIPs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ServiceSpec#externalIPs"
            },
            "remarks": "These IPs are not managed by Kubernetes.  The user is responsible for ensuring that traffic arrives at a node with this IP.  A common example is external load-balancers that are not part of the Kubernetes system.",
            "stability": "stable",
            "summary": "externalIPs is a list of IP addresses for which nodes in the cluster will also accept traffic for this service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16414
          },
          "name": "externalIPs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ServiceSpec#externalName"
            },
            "stability": "stable",
            "summary": "externalName is the external reference that discovery mechanisms will return as an alias for this service (e.g. a DNS CNAME record). No proxying will be involved.  Must be a lowercase RFC-1123 hostname (https://tools.ietf.org/html/rfc1123) and requires `type` to be \"ExternalName\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16421
          },
          "name": "externalName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ServiceSpec#externalTrafficPolicy"
            },
            "remarks": "If set to \"Local\", the proxy will configure the service in a way that assumes that external load balancers will take care of balancing the service traffic between nodes, and so each node will deliver traffic only to the node-local endpoints of the service, without masquerading the client source IP. (Traffic mistakenly sent to a node with no endpoints will be dropped.) The default value, \"Cluster\", uses the standard behavior of routing to all endpoints evenly (possibly modified by topology and other features). Note that traffic sent to an External IP or LoadBalancer IP from within the cluster will always get \"Cluster\" semantics, but clients sending to a NodePort from within the cluster may need to take traffic policy into account when picking a node.",
            "stability": "stable",
            "summary": "externalTrafficPolicy describes how nodes distribute service traffic they receive on one of the Service's \"externally-facing\" addresses (NodePorts, ExternalIPs, and LoadBalancer IPs)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16428
          },
          "name": "externalTrafficPolicy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ServiceSpec#healthCheckNodePort"
            },
            "remarks": "This only applies when type is set to LoadBalancer and externalTrafficPolicy is set to Local. If a value is specified, is in-range, and is not in use, it will be used.  If not specified, a value will be automatically allocated.  External systems (e.g. load-balancers) can use this port to determine if a given node holds endpoints for this service or not.  If this field is specified when creating a Service which does not need it, creation will fail. This field will be wiped when updating a Service to no longer need it (e.g. changing type). This field cannot be updated once set.",
            "stability": "stable",
            "summary": "healthCheckNodePort specifies the healthcheck nodePort for the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16435
          },
          "name": "healthCheckNodePort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ServiceSpec#internalTrafficPolicy"
            },
            "remarks": "If set to \"Local\", the proxy will assume that pods only want to talk to endpoints of the service on the same node as the pod, dropping the traffic if there are no local endpoints. The default value, \"Cluster\", uses the standard behavior of routing to all endpoints evenly (possibly modified by topology and other features).",
            "stability": "stable",
            "summary": "InternalTrafficPolicy describes how nodes distribute service traffic they receive on the ClusterIP."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16442
          },
          "name": "internalTrafficPolicy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ServiceSpec#ipFamilies"
            },
            "remarks": "This field may hold a maximum of two entries (dual-stack families, in either order).  These families must correspond to the values of the clusterIPs field, if specified. Both clusterIPs and ipFamilies are governed by the ipFamilyPolicy field.",
            "stability": "stable",
            "summary": "IPFamilies is a list of IP families (e.g. IPv4, IPv6) assigned to this service. This field is usually assigned automatically based on cluster configuration and the ipFamilyPolicy field. If this field is specified manually, the requested family is available in the cluster, and ipFamilyPolicy allows it, it will be used; otherwise creation of the service will fail. This field is conditionally mutable: it allows for adding or removing a secondary IP family, but it does not allow changing the primary IP family of the Service. Valid values are \"IPv4\" and \"IPv6\".  This field only applies to Services of types ClusterIP, NodePort, and LoadBalancer, and does apply to \"headless\" services. This field will be wiped when updating a Service to type ExternalName."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16451
          },
          "name": "ipFamilies",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ServiceSpec#ipFamilyPolicy"
            },
            "remarks": "If there is no value provided, then this field will be set to SingleStack. Services can be \"SingleStack\" (a single IP family), \"PreferDualStack\" (two IP families on dual-stack configured clusters or a single IP family on single-stack clusters), or \"RequireDualStack\" (two IP families on dual-stack configured clusters, otherwise fail). The ipFamilies and clusterIPs fields depend on the value of this field. This field will be wiped when updating a service to type ExternalName.",
            "stability": "stable",
            "summary": "IPFamilyPolicy represents the dual-stack-ness requested or required by this Service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16458
          },
          "name": "ipFamilyPolicy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ServiceSpec#loadBalancerClass"
            },
            "remarks": "If specified, the value of this field must be a label-style identifier, with an optional prefix, e.g. \"internal-vip\" or \"example.com/internal-vip\". Unprefixed names are reserved for end-users. This field can only be set when the Service type is 'LoadBalancer'. If not set, the default load balancer implementation is used, today this is typically done through the cloud provider integration, but should apply for any default implementation. If set, it is assumed that a load balancer implementation is watching for Services with a matching class. Any default load balancer implementation (e.g. cloud providers) should ignore Services that set this field. This field can only be set when creating or updating a Service to type 'LoadBalancer'. Once set, it can not be changed. This field will be wiped when a service is updated to a non 'LoadBalancer' type.",
            "stability": "stable",
            "summary": "loadBalancerClass is the class of the load balancer implementation this Service belongs to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16465
          },
          "name": "loadBalancerClass",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ServiceSpec#loadBalancerIP"
            },
            "remarks": "This feature depends on whether the underlying cloud-provider supports specifying the loadBalancerIP when a load balancer is created. This field will be ignored if the cloud-provider does not support the feature. Deprecated: This field was under-specified and its meaning varies across implementations. Using it is non-portable and it may not support dual-stack. Users are encouraged to use implementation-specific annotations when available.",
            "stability": "stable",
            "summary": "Only applies to Service Type: LoadBalancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16472
          },
          "name": "loadBalancerIp",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ServiceSpec#loadBalancerSourceRanges"
            },
            "remarks": "This field will be ignored if the cloud-provider does not support the feature.\" More info: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/",
            "stability": "stable",
            "summary": "If specified and supported by the platform, this will restrict traffic through the cloud-provider load-balancer will be restricted to the specified client IPs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16479
          },
          "name": "loadBalancerSourceRanges",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ServiceSpec#ports"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
            "stability": "stable",
            "summary": "The list of ports that are exposed by this service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16486
          },
          "name": "ports",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.ServicePort"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ServiceSpec#publishNotReadyAddresses"
            },
            "remarks": "The primary use case for setting this field is for a StatefulSet's Headless Service to propagate SRV DNS records for its Pods for the purpose of peer discovery. The Kubernetes controllers that generate Endpoints and EndpointSlice resources for Services interpret this to mean that all endpoints are considered \"ready\" even if the Pods themselves are not. Agents which consume only Kubernetes generated endpoints through the Endpoints or EndpointSlice resources can safely assume this behavior.",
            "stability": "stable",
            "summary": "publishNotReadyAddresses indicates that any agent which deals with endpoints for this Service should disregard any indications of ready/not-ready."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16493
          },
          "name": "publishNotReadyAddresses",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ServiceSpec#selector"
            },
            "remarks": "If empty or not present, the service is assumed to have an external process managing its endpoints, which Kubernetes will not modify. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/",
            "stability": "stable",
            "summary": "Route service traffic to pods with label keys and values matching this selector."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16500
          },
          "name": "selector",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ServiceSpec#sessionAffinity"
            },
            "default": "None. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
            "remarks": "Used to maintain session affinity. Enable client IP based session affinity. Must be ClientIP or None. Defaults to None. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
            "stability": "stable",
            "summary": "Supports \"ClientIP\" and \"None\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16508
          },
          "name": "sessionAffinity",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ServiceSpec#sessionAffinityConfig"
            },
            "stability": "stable",
            "summary": "sessionAffinityConfig contains the configurations of session affinity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16515
          },
          "name": "sessionAffinityConfig",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.SessionAffinityConfig"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.ServiceSpec#type"
            },
            "default": "ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. \"ClusterIP\" allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object or EndpointSlice objects. If clusterIP is \"None\", no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a virtual IP. \"NodePort\" builds on ClusterIP and allocates a port on every node which routes to the same endpoints as the clusterIP. \"LoadBalancer\" builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the same endpoints as the clusterIP. \"ExternalName\" aliases this service to the specified externalName. Several other fields do not apply to ExternalName services. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types",
            "remarks": "Defaults to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. \"ClusterIP\" allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object or EndpointSlice objects. If clusterIP is \"None\", no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a virtual IP. \"NodePort\" builds on ClusterIP and allocates a port on every node which routes to the same endpoints as the clusterIP. \"LoadBalancer\" builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the same endpoints as the clusterIP. \"ExternalName\" aliases this service to the specified externalName. Several other fields do not apply to ExternalName services. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types",
            "stability": "stable",
            "summary": "type determines how the Service is exposed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 16523
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ServiceSpec"
    },
    "cdk8s-plus-28.k8s.SessionAffinityConfig": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.SessionAffinityConfig"
        },
        "stability": "stable",
        "summary": "SessionAffinityConfig represents the configurations of session affinity."
      },
      "fqn": "cdk8s-plus-28.k8s.SessionAffinityConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 23120
      },
      "name": "SessionAffinityConfig",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.SessionAffinityConfig#clientIP"
            },
            "stability": "stable",
            "summary": "clientIP contains the configurations of Client IP based session affinity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 23126
          },
          "name": "clientIp",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ClientIpConfig"
          }
        }
      ],
      "symbolId": "src/imports/k8s:SessionAffinityConfig"
    },
    "cdk8s-plus-28.k8s.StatefulSetOrdinals": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.apps.v1.StatefulSetOrdinals"
        },
        "stability": "stable",
        "summary": "StatefulSetOrdinals describes the policy used for replica ordinal assignment in this StatefulSet."
      },
      "fqn": "cdk8s-plus-28.k8s.StatefulSetOrdinals",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 19487
      },
      "name": "StatefulSetOrdinals",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.StatefulSetOrdinals#start"
            },
            "remarks": "It may be used to number replicas from an alternate index (eg: 1-indexed) over the default 0-indexed names, or to orchestrate progressive movement of replicas from one StatefulSet to another. If set, replica indices will be in the range:\n[.spec.ordinals.start, .spec.ordinals.start + .spec.replicas).\nIf unset, defaults to 0. Replica indices will be in the range:\n[0, .spec.replicas).",
            "stability": "stable",
            "summary": "start is the number representing the first replica's index."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19496
          },
          "name": "start",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/imports/k8s:StatefulSetOrdinals"
    },
    "cdk8s-plus-28.k8s.StatefulSetPersistentVolumeClaimRetentionPolicy": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.apps.v1.StatefulSetPersistentVolumeClaimRetentionPolicy"
        },
        "stability": "stable",
        "summary": "StatefulSetPersistentVolumeClaimRetentionPolicy describes the policy used for PVCs created from the StatefulSet VolumeClaimTemplates."
      },
      "fqn": "cdk8s-plus-28.k8s.StatefulSetPersistentVolumeClaimRetentionPolicy",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 19519
      },
      "name": "StatefulSetPersistentVolumeClaimRetentionPolicy",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.StatefulSetPersistentVolumeClaimRetentionPolicy#whenDeleted"
            },
            "remarks": "The default policy of `Retain` causes PVCs to not be affected by StatefulSet deletion. The `Delete` policy causes those PVCs to be deleted.",
            "stability": "stable",
            "summary": "WhenDeleted specifies what happens to PVCs created from StatefulSet VolumeClaimTemplates when the StatefulSet is deleted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19525
          },
          "name": "whenDeleted",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.StatefulSetPersistentVolumeClaimRetentionPolicy#whenScaled"
            },
            "remarks": "The default policy of `Retain` causes PVCs to not be affected by a scaledown. The `Delete` policy causes the associated PVCs for any excess pods above the replica count to be deleted.",
            "stability": "stable",
            "summary": "WhenScaled specifies what happens to PVCs created from StatefulSet VolumeClaimTemplates when the StatefulSet is scaled down."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19532
          },
          "name": "whenScaled",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:StatefulSetPersistentVolumeClaimRetentionPolicy"
    },
    "cdk8s-plus-28.k8s.StatefulSetSpec": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.apps.v1.StatefulSetSpec"
        },
        "stability": "stable",
        "summary": "A StatefulSetSpec is the specification of a StatefulSet."
      },
      "fqn": "cdk8s-plus-28.k8s.StatefulSetSpec",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 14196
      },
      "name": "StatefulSetSpec",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.StatefulSetSpec#selector"
            },
            "remarks": "It must match the pod template's labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors",
            "stability": "stable",
            "summary": "selector is a label query over pods that should match the replica count."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14245
          },
          "name": "selector",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.LabelSelector"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.StatefulSetSpec#serviceName"
            },
            "remarks": "This service must exist before the StatefulSet, and is responsible for the network identity of the set. Pods get DNS/hostnames that follow the pattern: pod-specific-string.serviceName.default.svc.cluster.local where \"pod-specific-string\" is managed by the StatefulSet controller.",
            "stability": "stable",
            "summary": "serviceName is the name of the service that governs this StatefulSet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14252
          },
          "name": "serviceName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.StatefulSetSpec#template"
            },
            "remarks": "Each pod stamped out by the StatefulSet will fulfill this Template, but have a unique identity from the rest of the StatefulSet. Each pod will be named with the format <statefulsetname>-<podindex>. For example, a pod in a StatefulSet named \"web\" with index number \"3\" would be named \"web-3\". The only allowed template.spec.restartPolicy value is \"Always\".",
            "stability": "stable",
            "summary": "template is the object that describes the pod that will be created if insufficient replicas are detected."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14259
          },
          "name": "template",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.PodTemplateSpec"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.StatefulSetSpec#minReadySeconds"
            },
            "default": "0 (pod will be considered available as soon as it is ready)",
            "remarks": "Defaults to 0 (pod will be considered available as soon as it is ready)",
            "stability": "stable",
            "summary": "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing for it to be considered available."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14203
          },
          "name": "minReadySeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.StatefulSetSpec#ordinals"
            },
            "remarks": "The default ordinals behavior assigns a \"0\" index to the first replica and increments the index by one for each additional replica requested. Using the ordinals field requires the StatefulSetStartOrdinal feature gate to be enabled, which is beta.",
            "stability": "stable",
            "summary": "ordinals controls the numbering of replica indices in a StatefulSet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14210
          },
          "name": "ordinals",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.StatefulSetOrdinals"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.StatefulSetSpec#persistentVolumeClaimRetentionPolicy"
            },
            "remarks": "By default, all persistent volume claims are created as needed and retained until manually deleted. This policy allows the lifecycle to be altered, for example by deleting persistent volume claims when their stateful set is deleted, or when their pod is scaled down. This requires the StatefulSetAutoDeletePVC feature gate to be enabled, which is alpha.  +optional",
            "stability": "stable",
            "summary": "persistentVolumeClaimRetentionPolicy describes the lifecycle of persistent volume claims created from volumeClaimTemplates."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14217
          },
          "name": "persistentVolumeClaimRetentionPolicy",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.StatefulSetPersistentVolumeClaimRetentionPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.StatefulSetSpec#podManagementPolicy"
            },
            "remarks": "The default policy is `OrderedReady`, where pods are created in increasing order (pod-0, then pod-1, etc) and the controller will wait until each pod is ready before continuing. When scaling down, the pods are removed in the opposite order. The alternative policy is `Parallel` which will create pods in parallel to match the desired scale without waiting, and on scale down will delete all pods at once.",
            "stability": "stable",
            "summary": "podManagementPolicy controls how pods are created during initial scale up, when replacing pods on nodes, or when scaling down."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14224
          },
          "name": "podManagementPolicy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.StatefulSetSpec#replicas"
            },
            "remarks": "These are replicas in the sense that they are instantiations of the same Template, but individual replicas also have a consistent identity. If unspecified, defaults to 1.",
            "stability": "stable",
            "summary": "replicas is the desired number of replicas of the given Template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14231
          },
          "name": "replicas",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.StatefulSetSpec#revisionHistoryLimit"
            },
            "remarks": "The revision history consists of all revisions not represented by a currently applied StatefulSetSpec version. The default value is 10.",
            "stability": "stable",
            "summary": "revisionHistoryLimit is the maximum number of revisions that will be maintained in the StatefulSet's revision history."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14238
          },
          "name": "revisionHistoryLimit",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.StatefulSetSpec#updateStrategy"
            },
            "stability": "stable",
            "summary": "updateStrategy indicates the StatefulSetUpdateStrategy that will be employed to update Pods in the StatefulSet when a revision is made to Template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14266
          },
          "name": "updateStrategy",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.StatefulSetUpdateStrategy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.StatefulSetSpec#volumeClaimTemplates"
            },
            "remarks": "The StatefulSet controller is responsible for mapping network identities to claims in a way that maintains the identity of a pod. Every claim in this list must have at least one matching (by name) volumeMount in one container in the template. A claim in this list takes precedence over any volumes in the template, with the same name.",
            "stability": "stable",
            "summary": "volumeClaimTemplates is a list of claims that pods are allowed to reference."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14273
          },
          "name": "volumeClaimTemplates",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.KubePersistentVolumeClaimProps"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:StatefulSetSpec"
    },
    "cdk8s-plus-28.k8s.StatefulSetUpdateStrategy": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.apps.v1.StatefulSetUpdateStrategy"
        },
        "remarks": "It includes any additional parameters necessary to perform the update for the indicated strategy.",
        "stability": "stable",
        "summary": "StatefulSetUpdateStrategy indicates the strategy that the StatefulSet controller will use to perform updates."
      },
      "fqn": "cdk8s-plus-28.k8s.StatefulSetUpdateStrategy",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 19556
      },
      "name": "StatefulSetUpdateStrategy",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.StatefulSetUpdateStrategy#rollingUpdate"
            },
            "stability": "stable",
            "summary": "RollingUpdate is used to communicate parameters when Type is RollingUpdateStatefulSetStrategyType."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19562
          },
          "name": "rollingUpdate",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.RollingUpdateStatefulSetStrategy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.apps.v1.StatefulSetUpdateStrategy#type"
            },
            "default": "RollingUpdate.",
            "remarks": "Default is RollingUpdate.",
            "stability": "stable",
            "summary": "Type indicates the type of the StatefulSetUpdateStrategy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19570
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:StatefulSetUpdateStrategy"
    },
    "cdk8s-plus-28.k8s.StatusCause": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause"
        },
        "stability": "stable",
        "summary": "StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered."
      },
      "fqn": "cdk8s-plus-28.k8s.StatusCause",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 24505
      },
      "name": "StatusCause",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause#field"
            },
            "remarks": "May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.\n\nExamples:\n\"name\" - the field \"name\" on the current resource\n\"items[0].name\" - the field \"name\" on the first array entry in \"items\"",
            "stability": "stable",
            "summary": "The field of the resource that has caused this error, as named by its JSON serialization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24515
          },
          "name": "field",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause#message"
            },
            "remarks": "This field may be presented as-is to a reader.",
            "stability": "stable",
            "summary": "A human-readable description of the cause of the error."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24522
          },
          "name": "message",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause#reason"
            },
            "remarks": "If this value is empty there is no information available.",
            "stability": "stable",
            "summary": "A machine-readable description of the cause of the error."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24529
          },
          "name": "reason",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:StatusCause"
    },
    "cdk8s-plus-28.k8s.StatusDetails": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails"
        },
        "remarks": "The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.",
        "stability": "stable",
        "summary": "StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response."
      },
      "fqn": "cdk8s-plus-28.k8s.StatusDetails",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 18117
      },
      "name": "StatusDetails",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails#causes"
            },
            "remarks": "Not all StatusReasons may provide detailed causes.",
            "stability": "stable",
            "summary": "The Causes array includes more details associated with the StatusReason failure."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18123
          },
          "name": "causes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.StatusCause"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails#group"
            },
            "stability": "stable",
            "summary": "The group attribute of the resource associated with the status StatusReason."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18130
          },
          "name": "group",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails#kind"
            },
            "remarks": "On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "stability": "stable",
            "summary": "The kind attribute of the resource associated with the status StatusReason."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18137
          },
          "name": "kind",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails#name"
            },
            "stability": "stable",
            "summary": "The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18144
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails#retryAfterSeconds"
            },
            "remarks": "Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action.",
            "stability": "stable",
            "summary": "If specified, the time in seconds before the operation should be retried."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18151
          },
          "name": "retryAfterSeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails#uid"
            },
            "remarks": "(when there is a single resource which can be described). More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
            "stability": "stable",
            "summary": "UID of the resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18158
          },
          "name": "uid",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:StatusDetails"
    },
    "cdk8s-plus-28.k8s.StorageOsPersistentVolumeSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.StorageOSPersistentVolumeSource"
        },
        "stability": "stable",
        "summary": "Represents a StorageOS persistent volume resource."
      },
      "fqn": "cdk8s-plus-28.k8s.StorageOsPersistentVolumeSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 21512
      },
      "name": "StorageOsPersistentVolumeSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.StorageOSPersistentVolumeSource#fsType"
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
            "stability": "stable",
            "summary": "fsType is the filesystem type to mount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21518
          },
          "name": "fsType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.StorageOSPersistentVolumeSource#readOnly"
            },
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "stability": "stable",
            "summary": "readOnly defaults to false (read/write)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21525
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.StorageOSPersistentVolumeSource#secretRef"
            },
            "remarks": "If not specified, default values will be attempted.",
            "stability": "stable",
            "summary": "secretRef specifies the secret to use for obtaining the StorageOS API credentials."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21532
          },
          "name": "secretRef",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ObjectReference"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.StorageOSPersistentVolumeSource#volumeName"
            },
            "remarks": "Volume names are only unique within a namespace.",
            "stability": "stable",
            "summary": "volumeName is the human-readable name of the StorageOS volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21539
          },
          "name": "volumeName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.StorageOSPersistentVolumeSource#volumeNamespace"
            },
            "remarks": "If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to \"default\" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.",
            "stability": "stable",
            "summary": "volumeNamespace specifies the scope of the volume within StorageOS."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21546
          },
          "name": "volumeNamespace",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:StorageOsPersistentVolumeSource"
    },
    "cdk8s-plus-28.k8s.StorageOsVolumeSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.StorageOSVolumeSource"
        },
        "stability": "stable",
        "summary": "Represents a StorageOS persistent volume resource."
      },
      "fqn": "cdk8s-plus-28.k8s.StorageOsVolumeSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 27215
      },
      "name": "StorageOsVolumeSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.StorageOSVolumeSource#fsType"
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
            "stability": "stable",
            "summary": "fsType is the filesystem type to mount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27221
          },
          "name": "fsType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.StorageOSVolumeSource#readOnly"
            },
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "stability": "stable",
            "summary": "readOnly defaults to false (read/write)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27228
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.StorageOSVolumeSource#secretRef"
            },
            "remarks": "If not specified, default values will be attempted.",
            "stability": "stable",
            "summary": "secretRef specifies the secret to use for obtaining the StorageOS API credentials."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27235
          },
          "name": "secretRef",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.LocalObjectReference"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.StorageOSVolumeSource#volumeName"
            },
            "remarks": "Volume names are only unique within a namespace.",
            "stability": "stable",
            "summary": "volumeName is the human-readable name of the StorageOS volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27242
          },
          "name": "volumeName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.StorageOSVolumeSource#volumeNamespace"
            },
            "remarks": "If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to \"default\" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.",
            "stability": "stable",
            "summary": "volumeNamespace specifies the scope of the volume within StorageOS."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27249
          },
          "name": "volumeNamespace",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:StorageOsVolumeSource"
    },
    "cdk8s-plus-28.k8s.Subject": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.rbac.v1.Subject"
        },
        "remarks": "This can either hold a direct API object reference, or a value for non-objects such as user and group names.",
        "stability": "stable",
        "summary": "Subject contains a reference to the object or user identities a role binding applies to."
      },
      "fqn": "cdk8s-plus-28.k8s.Subject",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 17504
      },
      "name": "Subject",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.rbac.v1.Subject#kind"
            },
            "remarks": "Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\". If the Authorizer does not recognized the kind value, the Authorizer should report an error.",
            "stability": "stable",
            "summary": "Kind of object being referenced."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17518
          },
          "name": "kind",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.rbac.v1.Subject#name"
            },
            "stability": "stable",
            "summary": "Name of the object being referenced."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17525
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.rbac.v1.Subject#apiGroup"
            },
            "default": "for ServiceAccount subjects. Defaults to \"rbac.authorization.k8s.io\" for User and Group subjects.",
            "remarks": "Defaults to \"\" for ServiceAccount subjects. Defaults to \"rbac.authorization.k8s.io\" for User and Group subjects.",
            "stability": "stable",
            "summary": "APIGroup holds the API group of the referenced subject."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17511
          },
          "name": "apiGroup",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.rbac.v1.Subject#namespace"
            },
            "remarks": "If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty the Authorizer should report an error.",
            "stability": "stable",
            "summary": "Namespace of the referenced object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17532
          },
          "name": "namespace",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:Subject"
    },
    "cdk8s-plus-28.k8s.SubjectAccessReviewSpec": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.authorization.v1.SubjectAccessReviewSpec"
        },
        "remarks": "Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set",
        "stability": "stable",
        "summary": "SubjectAccessReviewSpec is a description of the access request."
      },
      "fqn": "cdk8s-plus-28.k8s.SubjectAccessReviewSpec",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 14388
      },
      "name": "SubjectAccessReviewSpec",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.authorization.v1.SubjectAccessReviewSpec#extra"
            },
            "stability": "stable",
            "summary": "Extra corresponds to the user.Info.GetExtra() method from the authenticator.  Since that is input to the authorizer it needs a reflection here."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14394
          },
          "name": "extra",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.authorization.v1.SubjectAccessReviewSpec#groups"
            },
            "stability": "stable",
            "summary": "Groups is the groups you're testing for."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14401
          },
          "name": "groups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.authorization.v1.SubjectAccessReviewSpec#nonResourceAttributes"
            },
            "stability": "stable",
            "summary": "NonResourceAttributes describes information for a non-resource access request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14408
          },
          "name": "nonResourceAttributes",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.NonResourceAttributes"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.authorization.v1.SubjectAccessReviewSpec#resourceAttributes"
            },
            "stability": "stable",
            "summary": "ResourceAuthorizationAttributes describes information for a resource access request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14415
          },
          "name": "resourceAttributes",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ResourceAttributes"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.authorization.v1.SubjectAccessReviewSpec#uid"
            },
            "stability": "stable",
            "summary": "UID information about the requesting user."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14422
          },
          "name": "uid",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.authorization.v1.SubjectAccessReviewSpec#user"
            },
            "remarks": "If you specify \"User\" but not \"Groups\", then is it interpreted as \"What if User were not a member of any groups",
            "stability": "stable",
            "summary": "User is the user you're testing for."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14429
          },
          "name": "user",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:SubjectAccessReviewSpec"
    },
    "cdk8s-plus-28.k8s.SubjectV1Beta2": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.flowcontrol.v1beta2.Subject"
        },
        "remarks": "There are three ways of matching an originator; by user, group, or service account.",
        "stability": "stable",
        "summary": "Subject matches the originator of a request, as identified by the request authentication system."
      },
      "fqn": "cdk8s-plus-28.k8s.SubjectV1Beta2",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 27483
      },
      "name": "SubjectV1Beta2",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta2.Subject#kind"
            },
            "remarks": "Required",
            "stability": "stable",
            "summary": "`kind` indicates which one of the other fields is non-empty."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27496
          },
          "name": "kind",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta2.Subject#group"
            },
            "stability": "stable",
            "summary": "`group` matches based on user group name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27489
          },
          "name": "group",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.GroupSubjectV1Beta2"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta2.Subject#serviceAccount"
            },
            "stability": "stable",
            "summary": "`serviceAccount` matches ServiceAccounts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27503
          },
          "name": "serviceAccount",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ServiceAccountSubjectV1Beta2"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta2.Subject#user"
            },
            "stability": "stable",
            "summary": "`user` matches based on username."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27510
          },
          "name": "user",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.UserSubjectV1Beta2"
          }
        }
      ],
      "symbolId": "src/imports/k8s:SubjectV1Beta2"
    },
    "cdk8s-plus-28.k8s.SubjectV1Beta3": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.flowcontrol.v1beta3.Subject"
        },
        "remarks": "There are three ways of matching an originator; by user, group, or service account.",
        "stability": "stable",
        "summary": "Subject matches the originator of a request, as identified by the request authentication system."
      },
      "fqn": "cdk8s-plus-28.k8s.SubjectV1Beta3",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 27677
      },
      "name": "SubjectV1Beta3",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta3.Subject#kind"
            },
            "remarks": "Required",
            "stability": "stable",
            "summary": "`kind` indicates which one of the other fields is non-empty."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27690
          },
          "name": "kind",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta3.Subject#group"
            },
            "stability": "stable",
            "summary": "`group` matches based on user group name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27683
          },
          "name": "group",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.GroupSubjectV1Beta3"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta3.Subject#serviceAccount"
            },
            "stability": "stable",
            "summary": "`serviceAccount` matches ServiceAccounts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27697
          },
          "name": "serviceAccount",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ServiceAccountSubjectV1Beta3"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta3.Subject#user"
            },
            "stability": "stable",
            "summary": "`user` matches based on username."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27704
          },
          "name": "user",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.UserSubjectV1Beta3"
          }
        }
      ],
      "symbolId": "src/imports/k8s:SubjectV1Beta3"
    },
    "cdk8s-plus-28.k8s.Sysctl": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.Sysctl"
        },
        "stability": "stable",
        "summary": "Sysctl defines a kernel parameter to be set."
      },
      "fqn": "cdk8s-plus-28.k8s.Sysctl",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 26139
      },
      "name": "Sysctl",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Sysctl#name"
            },
            "stability": "stable",
            "summary": "Name of a property to set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26145
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Sysctl#value"
            },
            "stability": "stable",
            "summary": "Value of a property to set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26152
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:Sysctl"
    },
    "cdk8s-plus-28.k8s.Taint": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.Taint"
        },
        "stability": "stable",
        "summary": "The node this Taint is attached to has the \"effect\" on any pod that does not tolerate the Taint."
      },
      "fqn": "cdk8s-plus-28.k8s.Taint",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 20177
      },
      "name": "Taint",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Taint#effect"
            },
            "remarks": "The effect of the taint on pods that do not tolerate the taint. Valid effects are NoSchedule, PreferNoSchedule and NoExecute.",
            "stability": "stable",
            "summary": "Required."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20183
          },
          "name": "effect",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Taint#key"
            },
            "remarks": "The taint key to be applied to a node.",
            "stability": "stable",
            "summary": "Required."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20190
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Taint#timeAdded"
            },
            "remarks": "It is only written for NoExecute taints.",
            "stability": "stable",
            "summary": "TimeAdded represents the time at which the taint was added."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20197
          },
          "name": "timeAdded",
          "optional": true,
          "type": {
            "primitive": "date"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Taint#value"
            },
            "stability": "stable",
            "summary": "The taint value corresponding to the taint key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 20204
          },
          "name": "value",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:Taint"
    },
    "cdk8s-plus-28.k8s.TcpSocketAction": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.TCPSocketAction"
        },
        "stability": "stable",
        "summary": "TCPSocketAction describes an action based on opening a socket."
      },
      "fqn": "cdk8s-plus-28.k8s.TcpSocketAction",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 28830
      },
      "name": "TcpSocketAction",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.TCPSocketAction#port"
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "stability": "stable",
            "summary": "Number or name of the port to access on the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28843
          },
          "name": "port",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.IntOrString"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.TCPSocketAction#host"
            },
            "stability": "stable",
            "summary": "Optional: Host name to connect to, defaults to the pod IP."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28836
          },
          "name": "host",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:TcpSocketAction"
    },
    "cdk8s-plus-28.k8s.TokenRequest": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.storage.v1.TokenRequest"
        },
        "stability": "stable",
        "summary": "TokenRequest contains parameters of a service account token."
      },
      "fqn": "cdk8s-plus-28.k8s.TokenRequest",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 24101
      },
      "name": "TokenRequest",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.TokenRequest#audience"
            },
            "remarks": "It will default to the audiences of kube apiserver.",
            "stability": "stable",
            "summary": "audience is the intended audience of the token in \"TokenRequestSpec\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24107
          },
          "name": "audience",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.TokenRequest#expirationSeconds"
            },
            "remarks": "It has the same default value of \"ExpirationSeconds\" in \"TokenRequestSpec\".",
            "stability": "stable",
            "summary": "expirationSeconds is the duration of validity of the token in \"TokenRequestSpec\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24114
          },
          "name": "expirationSeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/imports/k8s:TokenRequest"
    },
    "cdk8s-plus-28.k8s.TokenRequestSpec": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.authentication.v1.TokenRequestSpec"
        },
        "stability": "stable",
        "summary": "TokenRequestSpec contains client provided parameters of a token request."
      },
      "fqn": "cdk8s-plus-28.k8s.TokenRequestSpec",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 14306
      },
      "name": "TokenRequestSpec",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.authentication.v1.TokenRequestSpec#audiences"
            },
            "remarks": "A recipient of a token must identify themself with an identifier in the list of audiences of the token, and otherwise should reject the token. A token issued for multiple audiences may be used to authenticate against any of the audiences listed but implies a high degree of trust between the target audiences.",
            "stability": "stable",
            "summary": "Audiences are the intendend audiences of the token."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14312
          },
          "name": "audiences",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.authentication.v1.TokenRequestSpec#boundObjectRef"
            },
            "remarks": "The token will only be valid for as long as the bound object exists. NOTE: The API server's TokenReview endpoint will validate the BoundObjectRef, but other audiences may not. Keep ExpirationSeconds small if you want prompt revocation.",
            "stability": "stable",
            "summary": "BoundObjectRef is a reference to an object that the token will be bound to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14319
          },
          "name": "boundObjectRef",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.BoundObjectReference"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.authentication.v1.TokenRequestSpec#expirationSeconds"
            },
            "remarks": "The token issuer may return a token with a different validity duration so a client needs to check the 'expiration' field in a response.",
            "stability": "stable",
            "summary": "ExpirationSeconds is the requested duration of validity of the request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14326
          },
          "name": "expirationSeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/imports/k8s:TokenRequestSpec"
    },
    "cdk8s-plus-28.k8s.TokenReviewSpec": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.authentication.v1.TokenReviewSpec"
        },
        "stability": "stable",
        "summary": "TokenReviewSpec is a description of the token authentication request."
      },
      "fqn": "cdk8s-plus-28.k8s.TokenReviewSpec",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 14351
      },
      "name": "TokenReviewSpec",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.authentication.v1.TokenReviewSpec#audiences"
            },
            "remarks": "Audience-aware token authenticators will verify that the token was intended for at least one of the audiences in this list. If no audiences are provided, the audience will default to the audience of the Kubernetes apiserver.",
            "stability": "stable",
            "summary": "Audiences is a list of the identifiers that the resource server presented with the token identifies as."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14357
          },
          "name": "audiences",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.authentication.v1.TokenReviewSpec#token"
            },
            "stability": "stable",
            "summary": "Token is the opaque bearer token."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 14364
          },
          "name": "token",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:TokenReviewSpec"
    },
    "cdk8s-plus-28.k8s.Toleration": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.Toleration"
        },
        "stability": "stable",
        "summary": "The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>."
      },
      "fqn": "cdk8s-plus-28.k8s.Toleration",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 22578
      },
      "name": "Toleration",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Toleration#effect"
            },
            "remarks": "Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
            "stability": "stable",
            "summary": "Effect indicates the taint effect to match."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22584
          },
          "name": "effect",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Toleration#key"
            },
            "remarks": "Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
            "stability": "stable",
            "summary": "Key is the taint key that the toleration applies to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22591
          },
          "name": "key",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Toleration#operator"
            },
            "default": "Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
            "remarks": "Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
            "stability": "stable",
            "summary": "Operator represents a key's relationship to the value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22599
          },
          "name": "operator",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Toleration#tolerationSeconds"
            },
            "remarks": "By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
            "stability": "stable",
            "summary": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22606
          },
          "name": "tolerationSeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Toleration#value"
            },
            "remarks": "If the operator is Exists, the value should be empty, otherwise just a regular string.",
            "stability": "stable",
            "summary": "Value is the taint value the toleration matches to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22613
          },
          "name": "value",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:Toleration"
    },
    "cdk8s-plus-28.k8s.TopologySelectorLabelRequirement": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.TopologySelectorLabelRequirement"
        },
        "remarks": "This is an alpha feature and may change in the future.",
        "stability": "stable",
        "summary": "A topology selector requirement is a selector that matches given label."
      },
      "fqn": "cdk8s-plus-28.k8s.TopologySelectorLabelRequirement",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 24236
      },
      "name": "TopologySelectorLabelRequirement",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.TopologySelectorLabelRequirement#key"
            },
            "stability": "stable",
            "summary": "The label key that the selector applies to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24242
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.TopologySelectorLabelRequirement#values"
            },
            "remarks": "One value must match the label to be selected. Each entry in Values is ORed.",
            "stability": "stable",
            "summary": "An array of string values."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24249
          },
          "name": "values",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:TopologySelectorLabelRequirement"
    },
    "cdk8s-plus-28.k8s.TopologySelectorTerm": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.TopologySelectorTerm"
        },
        "remarks": "A null or empty topology selector term matches no objects. The requirements of them are ANDed. It provides a subset of functionality as NodeSelectorTerm. This is an alpha feature and may change in the future.",
        "stability": "stable",
        "summary": "A topology selector term represents the result of label queries."
      },
      "fqn": "cdk8s-plus-28.k8s.TopologySelectorTerm",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 17974
      },
      "name": "TopologySelectorTerm",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.TopologySelectorTerm#matchLabelExpressions"
            },
            "stability": "stable",
            "summary": "A list of topology selector requirements by labels."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 17980
          },
          "name": "matchLabelExpressions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.TopologySelectorLabelRequirement"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:TopologySelectorTerm"
    },
    "cdk8s-plus-28.k8s.TopologySpreadConstraint": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.TopologySpreadConstraint"
        },
        "stability": "stable",
        "summary": "TopologySpreadConstraint specifies how to spread matching pods among the given topology."
      },
      "fqn": "cdk8s-plus-28.k8s.TopologySpreadConstraint",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 22640
      },
      "name": "TopologySpreadConstraint",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.TopologySpreadConstraint#maxSkew"
            },
            "remarks": "When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference between the number of matching pods in the target topology and the global minimum. The global minimum is the minimum number of matching pods in an eligible domain or zero if the number of eligible domains is less than MinDomains. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 2/2/1: In this case, the global minimum is 1. | zone1 | zone2 | zone3 | |  P P  |  P P  |   P   | - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2; scheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2) violate MaxSkew(1). - if MaxSkew is 2, incoming pod can be scheduled onto any zone. When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence to topologies that satisfy it. It's a required field. Default value is 1 and 0 is not allowed.",
            "stability": "stable",
            "summary": "MaxSkew describes the degree to which pods may be unevenly distributed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22662
          },
          "name": "maxSkew",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.TopologySpreadConstraint#topologyKey"
            },
            "remarks": "Nodes that have a label with this key and identical values are considered to be in the same topology. We consider each <key, value> as a \"bucket\", and try to put balanced number of pods into each bucket. We define a domain as a particular instance of a topology. Also, we define an eligible domain as a domain whose nodes meet the requirements of nodeAffinityPolicy and nodeTaintsPolicy. e.g. If TopologyKey is \"kubernetes.io/hostname\", each Node is a domain of that topology. And, if TopologyKey is \"topology.kubernetes.io/zone\", each zone is a domain of that topology. It's a required field.",
            "stability": "stable",
            "summary": "TopologyKey is the key of node labels."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22698
          },
          "name": "topologyKey",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.TopologySpreadConstraint#whenUnsatisfiable"
            },
            "remarks": "- DoNotSchedule (default) tells the scheduler not to schedule it. - ScheduleAnyway tells the scheduler to schedule the pod in any location,\nbut giving higher precedence to topologies that would help reduce the\nskew.\nA constraint is considered \"Unsatisfiable\" for an incoming pod if and only if every possible node assignment for that pod would violate \"MaxSkew\" on some topology. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   | If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler won't make it *more* imbalanced. It's a required field.",
            "stability": "stable",
            "summary": "WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy the spread constraint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22708
          },
          "name": "whenUnsatisfiable",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.TopologySpreadConstraint#labelSelector"
            },
            "remarks": "Pods that match this label selector are counted to determine the number of pods in their corresponding topology domain.",
            "stability": "stable",
            "summary": "LabelSelector is used to find matching pods."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22646
          },
          "name": "labelSelector",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.LabelSelector"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.TopologySpreadConstraint#matchLabelKeys"
            },
            "remarks": "The keys are used to lookup values from the incoming pod labels, those key-value labels are ANDed with labelSelector to select the group of existing pods over which spreading will be calculated for the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. MatchLabelKeys cannot be set when LabelSelector isn't set. Keys that don't exist in the incoming pod labels will be ignored. A null or empty list means only match against labelSelector.\n\nThis is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default).",
            "stability": "stable",
            "summary": "MatchLabelKeys is a set of pod label keys to select the pods over which spreading will be calculated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22655
          },
          "name": "matchLabelKeys",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.TopologySpreadConstraint#minDomains"
            },
            "remarks": "When the number of eligible domains with matching topology keys is less than minDomains, Pod Topology Spread treats \"global minimum\" as 0, and then the calculation of Skew is performed. And when the number of eligible domains with matching topology keys equals or greater than minDomains, this value has no effect on scheduling. As a result, when the number of eligible domains is less than minDomains, scheduler won't schedule more than maxSkew Pods to those domains. If value is nil, the constraint behaves as if MinDomains is equal to 1. Valid values are integers greater than 0. When value is not nil, WhenUnsatisfiable must be DoNotSchedule.\n\nFor example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same labelSelector spread as 2/2/2: | zone1 | zone2 | zone3 | |  P P  |  P P  |  P P  | The number of domains is less than 5(MinDomains), so \"global minimum\" is treated as 0. In this situation, new pod with the same labelSelector cannot be scheduled, because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones, it will violate MaxSkew.\n\nThis is a beta field and requires the MinDomainsInPodTopologySpread feature gate to be enabled (enabled by default).",
            "stability": "stable",
            "summary": "MinDomains indicates a minimum number of eligible domains."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22673
          },
          "name": "minDomains",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.TopologySpreadConstraint#nodeAffinityPolicy"
            },
            "remarks": "Options are: - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations. - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.\n\nIf this value is nil, the behavior is equivalent to the Honor policy. This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.",
            "stability": "stable",
            "summary": "NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector when calculating pod topology spread skew."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22682
          },
          "name": "nodeAffinityPolicy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.TopologySpreadConstraint#nodeTaintsPolicy"
            },
            "remarks": "Options are: - Honor: nodes without taints, along with tainted nodes for which the incoming pod has a toleration, are included. - Ignore: node taints are ignored. All nodes are included.\n\nIf this value is nil, the behavior is equivalent to the Ignore policy. This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.",
            "stability": "stable",
            "summary": "NodeTaintsPolicy indicates how we will treat node taints when calculating pod topology spread skew."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22691
          },
          "name": "nodeTaintsPolicy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:TopologySpreadConstraint"
    },
    "cdk8s-plus-28.k8s.TypedLocalObjectReference": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.TypedLocalObjectReference"
        },
        "stability": "stable",
        "summary": "TypedLocalObjectReference contains enough information to let you locate the typed referenced object inside the same namespace."
      },
      "fqn": "cdk8s-plus-28.k8s.TypedLocalObjectReference",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 21626
      },
      "name": "TypedLocalObjectReference",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.TypedLocalObjectReference#kind"
            },
            "stability": "stable",
            "summary": "Kind is the type of resource being referenced."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21639
          },
          "name": "kind",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.TypedLocalObjectReference#name"
            },
            "stability": "stable",
            "summary": "Name is the name of resource being referenced."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21646
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.TypedLocalObjectReference#apiGroup"
            },
            "remarks": "If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.",
            "stability": "stable",
            "summary": "APIGroup is the group for the resource being referenced."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21632
          },
          "name": "apiGroup",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:TypedLocalObjectReference"
    },
    "cdk8s-plus-28.k8s.TypedObjectReference": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.TypedObjectReference"
        },
        "stability": "stable"
      },
      "fqn": "cdk8s-plus-28.k8s.TypedObjectReference",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 21669
      },
      "name": "TypedObjectReference",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.TypedObjectReference#kind"
            },
            "stability": "stable",
            "summary": "Kind is the type of resource being referenced."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21682
          },
          "name": "kind",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.TypedObjectReference#name"
            },
            "stability": "stable",
            "summary": "Name is the name of resource being referenced."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21689
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.TypedObjectReference#apiGroup"
            },
            "remarks": "If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.",
            "stability": "stable",
            "summary": "APIGroup is the group for the resource being referenced."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21675
          },
          "name": "apiGroup",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.TypedObjectReference#namespace"
            },
            "stability": "stable",
            "summary": "Namespace is the namespace of resource being referenced Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details. (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21696
          },
          "name": "namespace",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:TypedObjectReference"
    },
    "cdk8s-plus-28.k8s.UserSubjectV1Beta2": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.flowcontrol.v1beta2.UserSubject"
        },
        "stability": "stable",
        "summary": "UserSubject holds detailed information for user-kind subject."
      },
      "fqn": "cdk8s-plus-28.k8s.UserSubjectV1Beta2",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 29158
      },
      "name": "UserSubjectV1Beta2",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta2.UserSubject#name"
            },
            "remarks": "Required.",
            "stability": "stable",
            "summary": "`name` is the username that matches, or \"*\" to match all usernames."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29164
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:UserSubjectV1Beta2"
    },
    "cdk8s-plus-28.k8s.UserSubjectV1Beta3": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.flowcontrol.v1beta3.UserSubject"
        },
        "stability": "stable",
        "summary": "UserSubject holds detailed information for user-kind subject."
      },
      "fqn": "cdk8s-plus-28.k8s.UserSubjectV1Beta3",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 29298
      },
      "name": "UserSubjectV1Beta3",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.flowcontrol.v1beta3.UserSubject#name"
            },
            "remarks": "Required.",
            "stability": "stable",
            "summary": "`name` is the username that matches, or \"*\" to match all usernames."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29304
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:UserSubjectV1Beta3"
    },
    "cdk8s-plus-28.k8s.ValidatingAdmissionPolicyBindingSpecV1Alpha1": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyBindingSpec"
        },
        "stability": "stable",
        "summary": "ValidatingAdmissionPolicyBindingSpec is the specification of the ValidatingAdmissionPolicyBinding."
      },
      "fqn": "cdk8s-plus-28.k8s.ValidatingAdmissionPolicyBindingSpecV1Alpha1",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 13750
      },
      "name": "ValidatingAdmissionPolicyBindingSpecV1Alpha1",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyBindingSpec#matchResources"
            },
            "remarks": "Note that this is intersected with the policy's matchConstraints, so only requests that are matched by the policy can be selected by this. If this is unset, all resources matched by the policy are validated by this binding When resourceRules is unset, it does not constrain resource matching. If a resource is matched by the other fields of this object, it will be validated. Note that this is differs from ValidatingAdmissionPolicy matchConstraints, where resourceRules are required.",
            "stability": "stable",
            "summary": "MatchResources declares what resources match this binding and will be validated by it."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13756
          },
          "name": "matchResources",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.MatchResourcesV1Alpha1"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyBindingSpec#paramRef"
            },
            "remarks": "It should point to a resource of the type specified in ParamKind of the bound ValidatingAdmissionPolicy. If the policy specifies a ParamKind and the resource referred to by ParamRef does not exist, this binding is considered mis-configured and the FailurePolicy of the ValidatingAdmissionPolicy applied. If the policy does not specify a ParamKind then this field is ignored, and the rules are evaluated without a param.",
            "stability": "stable",
            "summary": "paramRef specifies the parameter resource used to configure the admission control policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13763
          },
          "name": "paramRef",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ParamRefV1Alpha1"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyBindingSpec#policyName"
            },
            "remarks": "If the referenced resource does not exist, this binding is considered invalid and will be ignored Required.",
            "stability": "stable",
            "summary": "PolicyName references a ValidatingAdmissionPolicy name which the ValidatingAdmissionPolicyBinding binds to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13770
          },
          "name": "policyName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyBindingSpec#validationActions"
            },
            "remarks": "If a validation evaluates to false it is always enforced according to these actions.\n\nFailures defined by the ValidatingAdmissionPolicy's FailurePolicy are enforced according to these actions only if the FailurePolicy is set to Fail, otherwise the failures are ignored. This includes compilation errors, runtime errors and misconfigurations of the policy.\n\nvalidationActions is declared as a set of action values. Order does not matter. validationActions may not contain duplicates of the same action.\n\nThe supported actions values are:\n\n\"Deny\" specifies that a validation failure results in a denied request.\n\n\"Warn\" specifies that a validation failure is reported to the request client in HTTP Warning headers, with a warning code of 299. Warnings can be sent both for allowed or denied admission responses.\n\n\"Audit\" specifies that a validation failure is included in the published audit event for the request. The audit event will contain a `validation.policy.admission.k8s.io/validation_failure` audit annotation with a value containing the details of the validation failures, formatted as a JSON list of objects, each with the following fields: - message: The validation failure message string - policy: The resource name of the ValidatingAdmissionPolicy - binding: The resource name of the ValidatingAdmissionPolicyBinding - expressionIndex: The index of the failed validations in the ValidatingAdmissionPolicy - validationActions: The enforcement actions enacted for the validation failure Example audit annotation: `\"validation.policy.admission.k8s.io/validation_failure\": \"[{\"message\": \"Invalid value\", {\"policy\": \"policy.example.com\", {\"binding\": \"policybinding.example.com\", {\"expressionIndex\": \"1\", {\"validationActions\": [\"Audit\"]}]\"`\n\nClients should expect to handle additional values by ignoring any values not recognized.\n\n\"Deny\" and \"Warn\" may not be used together since this combination needlessly duplicates the validation failure both in the API response body and the HTTP warning headers.\n\nRequired.",
            "stability": "stable",
            "summary": "validationActions declares how Validations of the referenced ValidatingAdmissionPolicy are enforced."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13795
          },
          "name": "validationActions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:ValidatingAdmissionPolicyBindingSpecV1Alpha1"
    },
    "cdk8s-plus-28.k8s.ValidatingAdmissionPolicyBindingSpecV1Beta1": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyBindingSpec"
        },
        "stability": "stable",
        "summary": "ValidatingAdmissionPolicyBindingSpec is the specification of the ValidatingAdmissionPolicyBinding."
      },
      "fqn": "cdk8s-plus-28.k8s.ValidatingAdmissionPolicyBindingSpecV1Beta1",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 13918
      },
      "name": "ValidatingAdmissionPolicyBindingSpecV1Beta1",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyBindingSpec#matchResources"
            },
            "remarks": "Note that this is intersected with the policy's matchConstraints, so only requests that are matched by the policy can be selected by this. If this is unset, all resources matched by the policy are validated by this binding When resourceRules is unset, it does not constrain resource matching. If a resource is matched by the other fields of this object, it will be validated. Note that this is differs from ValidatingAdmissionPolicy matchConstraints, where resourceRules are required.",
            "stability": "stable",
            "summary": "MatchResources declares what resources match this binding and will be validated by it."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13924
          },
          "name": "matchResources",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.MatchResourcesV1Beta1"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyBindingSpec#paramRef"
            },
            "remarks": "It should point to a resource of the type specified in ParamKind of the bound ValidatingAdmissionPolicy. If the policy specifies a ParamKind and the resource referred to by ParamRef does not exist, this binding is considered mis-configured and the FailurePolicy of the ValidatingAdmissionPolicy applied. If the policy does not specify a ParamKind then this field is ignored, and the rules are evaluated without a param.",
            "stability": "stable",
            "summary": "paramRef specifies the parameter resource used to configure the admission control policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13931
          },
          "name": "paramRef",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ParamRefV1Beta1"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyBindingSpec#policyName"
            },
            "remarks": "If the referenced resource does not exist, this binding is considered invalid and will be ignored Required.",
            "stability": "stable",
            "summary": "PolicyName references a ValidatingAdmissionPolicy name which the ValidatingAdmissionPolicyBinding binds to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13938
          },
          "name": "policyName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyBindingSpec#validationActions"
            },
            "remarks": "If a validation evaluates to false it is always enforced according to these actions.\n\nFailures defined by the ValidatingAdmissionPolicy's FailurePolicy are enforced according to these actions only if the FailurePolicy is set to Fail, otherwise the failures are ignored. This includes compilation errors, runtime errors and misconfigurations of the policy.\n\nvalidationActions is declared as a set of action values. Order does not matter. validationActions may not contain duplicates of the same action.\n\nThe supported actions values are:\n\n\"Deny\" specifies that a validation failure results in a denied request.\n\n\"Warn\" specifies that a validation failure is reported to the request client in HTTP Warning headers, with a warning code of 299. Warnings can be sent both for allowed or denied admission responses.\n\n\"Audit\" specifies that a validation failure is included in the published audit event for the request. The audit event will contain a `validation.policy.admission.k8s.io/validation_failure` audit annotation with a value containing the details of the validation failures, formatted as a JSON list of objects, each with the following fields: - message: The validation failure message string - policy: The resource name of the ValidatingAdmissionPolicy - binding: The resource name of the ValidatingAdmissionPolicyBinding - expressionIndex: The index of the failed validations in the ValidatingAdmissionPolicy - validationActions: The enforcement actions enacted for the validation failure Example audit annotation: `\"validation.policy.admission.k8s.io/validation_failure\": \"[{\"message\": \"Invalid value\", {\"policy\": \"policy.example.com\", {\"binding\": \"policybinding.example.com\", {\"expressionIndex\": \"1\", {\"validationActions\": [\"Audit\"]}]\"`\n\nClients should expect to handle additional values by ignoring any values not recognized.\n\n\"Deny\" and \"Warn\" may not be used together since this combination needlessly duplicates the validation failure both in the API response body and the HTTP warning headers.\n\nRequired.",
            "stability": "stable",
            "summary": "validationActions declares how Validations of the referenced ValidatingAdmissionPolicy are enforced."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13963
          },
          "name": "validationActions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:ValidatingAdmissionPolicyBindingSpecV1Beta1"
    },
    "cdk8s-plus-28.k8s.ValidatingAdmissionPolicySpecV1Alpha1": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicySpec"
        },
        "stability": "stable",
        "summary": "ValidatingAdmissionPolicySpec is the specification of the desired behavior of the AdmissionPolicy."
      },
      "fqn": "cdk8s-plus-28.k8s.ValidatingAdmissionPolicySpecV1Alpha1",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 13653
      },
      "name": "ValidatingAdmissionPolicySpecV1Alpha1",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicySpec#auditAnnotations"
            },
            "remarks": "validations and auditAnnotations may not both be empty; a least one of validations or auditAnnotations is required.",
            "stability": "stable",
            "summary": "auditAnnotations contains CEL expressions which are used to produce audit annotations for the audit event of the API request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13659
          },
          "name": "auditAnnotations",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.AuditAnnotationV1Alpha1"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicySpec#failurePolicy"
            },
            "default": "Fail.",
            "remarks": "Failures can occur from CEL expression parse errors, type check errors, runtime errors and invalid or mis-configured policy definitions or bindings.\n\nA policy is invalid if spec.paramKind refers to a non-existent Kind. A binding is invalid if spec.paramRef.name refers to a non-existent resource.\n\nfailurePolicy does not define how validations that evaluate to false are handled.\n\nWhen failurePolicy is set to Fail, ValidatingAdmissionPolicyBinding validationActions define how failures are enforced.\n\nAllowed values are Ignore or Fail. Defaults to Fail.",
            "stability": "stable",
            "summary": "failurePolicy defines how to handle failures for the admission policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13675
          },
          "name": "failurePolicy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicySpec#matchConditions"
            },
            "remarks": "Match conditions filter requests that have already been matched by the rules, namespaceSelector, and objectSelector. An empty list of matchConditions matches all requests. There are a maximum of 64 match conditions allowed.\n\nIf a parameter object is provided, it can be accessed via the `params` handle in the same manner as validation expressions.\n\nThe exact matching logic is (in order):\n1. If ANY matchCondition evaluates to FALSE, the policy is skipped.\n2. If ALL matchConditions evaluate to TRUE, the policy is evaluated.\n3. If any matchCondition evaluates to an error (but none are FALSE):\n- If failurePolicy=Fail, reject the request\n- If failurePolicy=Ignore, the policy is skipped",
            "stability": "stable",
            "summary": "MatchConditions is a list of conditions that must be met for a request to be validated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13691
          },
          "name": "matchConditions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.MatchConditionV1Alpha1"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicySpec#matchConstraints"
            },
            "remarks": "The AdmissionPolicy cares about a request if it matches _all_ Constraints. However, in order to prevent clusters from being put into an unstable state that cannot be recovered from via the API ValidatingAdmissionPolicy cannot match ValidatingAdmissionPolicy and ValidatingAdmissionPolicyBinding. Required.",
            "stability": "stable",
            "summary": "MatchConstraints specifies what resources this policy is designed to validate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13698
          },
          "name": "matchConstraints",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.MatchResourcesV1Alpha1"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicySpec#paramKind"
            },
            "remarks": "If absent, there are no parameters for this policy and the param CEL variable will not be provided to validation expressions. If ParamKind refers to a non-existent kind, this policy definition is mis-configured and the FailurePolicy is applied. If paramKind is specified but paramRef is unset in ValidatingAdmissionPolicyBinding, the params variable will be null.",
            "stability": "stable",
            "summary": "ParamKind specifies the kind of resources used to parameterize this policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13705
          },
          "name": "paramKind",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ParamKindV1Alpha1"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicySpec#validations"
            },
            "remarks": "Validations and AuditAnnotations may not both be empty; a minimum of one Validations or AuditAnnotations is required.",
            "stability": "stable",
            "summary": "Validations contain CEL expressions which is used to apply the validation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13712
          },
          "name": "validations",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.ValidationV1Alpha1"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicySpec#variables"
            },
            "remarks": "Each variable is defined as a named CEL expression. The variables defined here will be available under `variables` in other expressions of the policy except MatchConditions because MatchConditions are evaluated before the rest of the policy.\n\nThe expression of a variable can refer to other variables defined earlier in the list but not those after. Thus, Variables must be sorted by the order of first appearance and acyclic.",
            "stability": "stable",
            "summary": "Variables contain definitions of variables that can be used in composition of other expressions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13721
          },
          "name": "variables",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.VariableV1Alpha1"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:ValidatingAdmissionPolicySpecV1Alpha1"
    },
    "cdk8s-plus-28.k8s.ValidatingAdmissionPolicySpecV1Beta1": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicySpec"
        },
        "stability": "stable",
        "summary": "ValidatingAdmissionPolicySpec is the specification of the desired behavior of the AdmissionPolicy."
      },
      "fqn": "cdk8s-plus-28.k8s.ValidatingAdmissionPolicySpecV1Beta1",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 13821
      },
      "name": "ValidatingAdmissionPolicySpecV1Beta1",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicySpec#auditAnnotations"
            },
            "remarks": "validations and auditAnnotations may not both be empty; a least one of validations or auditAnnotations is required.",
            "stability": "stable",
            "summary": "auditAnnotations contains CEL expressions which are used to produce audit annotations for the audit event of the API request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13827
          },
          "name": "auditAnnotations",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.AuditAnnotationV1Beta1"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicySpec#failurePolicy"
            },
            "default": "Fail.",
            "remarks": "Failures can occur from CEL expression parse errors, type check errors, runtime errors and invalid or mis-configured policy definitions or bindings.\n\nA policy is invalid if spec.paramKind refers to a non-existent Kind. A binding is invalid if spec.paramRef.name refers to a non-existent resource.\n\nfailurePolicy does not define how validations that evaluate to false are handled.\n\nWhen failurePolicy is set to Fail, ValidatingAdmissionPolicyBinding validationActions define how failures are enforced.\n\nAllowed values are Ignore or Fail. Defaults to Fail.",
            "stability": "stable",
            "summary": "failurePolicy defines how to handle failures for the admission policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13843
          },
          "name": "failurePolicy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicySpec#matchConditions"
            },
            "remarks": "Match conditions filter requests that have already been matched by the rules, namespaceSelector, and objectSelector. An empty list of matchConditions matches all requests. There are a maximum of 64 match conditions allowed.\n\nIf a parameter object is provided, it can be accessed via the `params` handle in the same manner as validation expressions.\n\nThe exact matching logic is (in order):\n1. If ANY matchCondition evaluates to FALSE, the policy is skipped.\n2. If ALL matchConditions evaluate to TRUE, the policy is evaluated.\n3. If any matchCondition evaluates to an error (but none are FALSE):\n- If failurePolicy=Fail, reject the request\n- If failurePolicy=Ignore, the policy is skipped",
            "stability": "stable",
            "summary": "MatchConditions is a list of conditions that must be met for a request to be validated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13859
          },
          "name": "matchConditions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.MatchConditionV1Beta1"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicySpec#matchConstraints"
            },
            "remarks": "The AdmissionPolicy cares about a request if it matches _all_ Constraints. However, in order to prevent clusters from being put into an unstable state that cannot be recovered from via the API ValidatingAdmissionPolicy cannot match ValidatingAdmissionPolicy and ValidatingAdmissionPolicyBinding. Required.",
            "stability": "stable",
            "summary": "MatchConstraints specifies what resources this policy is designed to validate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13866
          },
          "name": "matchConstraints",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.MatchResourcesV1Beta1"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicySpec#paramKind"
            },
            "remarks": "If absent, there are no parameters for this policy and the param CEL variable will not be provided to validation expressions. If ParamKind refers to a non-existent kind, this policy definition is mis-configured and the FailurePolicy is applied. If paramKind is specified but paramRef is unset in ValidatingAdmissionPolicyBinding, the params variable will be null.",
            "stability": "stable",
            "summary": "ParamKind specifies the kind of resources used to parameterize this policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13873
          },
          "name": "paramKind",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ParamKindV1Beta1"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicySpec#validations"
            },
            "remarks": "Validations and AuditAnnotations may not both be empty; a minimum of one Validations or AuditAnnotations is required.",
            "stability": "stable",
            "summary": "Validations contain CEL expressions which is used to apply the validation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13880
          },
          "name": "validations",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.ValidationV1Beta1"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicySpec#variables"
            },
            "remarks": "Each variable is defined as a named CEL expression. The variables defined here will be available under `variables` in other expressions of the policy except MatchConditions because MatchConditions are evaluated before the rest of the policy.\n\nThe expression of a variable can refer to other variables defined earlier in the list but not those after. Thus, Variables must be sorted by the order of first appearance and acyclic.",
            "stability": "stable",
            "summary": "Variables contain definitions of variables that can be used in composition of other expressions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13889
          },
          "name": "variables",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.VariableV1Beta1"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/imports/k8s:ValidatingAdmissionPolicySpecV1Beta1"
    },
    "cdk8s-plus-28.k8s.ValidatingWebhook": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1.ValidatingWebhook"
        },
        "stability": "stable",
        "summary": "ValidatingWebhook describes an admission webhook and the resources and operations it applies to."
      },
      "fqn": "cdk8s-plus-28.k8s.ValidatingWebhook",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 13494
      },
      "name": "ValidatingWebhook",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1.ValidatingWebhook#admissionReviewVersions"
            },
            "remarks": "API server will try to use first version in the list which it supports. If none of the versions specified in this list supported by API server, validation will fail for this object. If a persisted webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail and be subject to the failure policy.",
            "stability": "stable",
            "summary": "AdmissionReviewVersions is an ordered list of preferred `AdmissionReview` versions the Webhook expects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13500
          },
          "name": "admissionReviewVersions",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1.ValidatingWebhook#clientConfig"
            },
            "remarks": "Required",
            "stability": "stable",
            "summary": "ClientConfig defines how to communicate with the hook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13507
          },
          "name": "clientConfig",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.WebhookClientConfig"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1.ValidatingWebhook#name"
            },
            "remarks": "Name should be fully qualified, e.g., imagepolicy.kubernetes.io, where \"imagepolicy\" is the name of the webhook, and kubernetes.io is the name of the organization. Required.",
            "stability": "stable",
            "summary": "The name of the admission webhook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13552
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1.ValidatingWebhook#sideEffects"
            },
            "remarks": "Acceptable values are: None, NoneOnDryRun (webhooks created via v1beta1 may also specify Some or Unknown). Webhooks with side effects MUST implement a reconciliation system, since a request may be rejected by a future step in the admission chain and the side effects therefore need to be undone. Requests with the dryRun attribute will be auto-rejected if they match a webhook with sideEffects == Unknown or Some.",
            "stability": "stable",
            "summary": "SideEffects states whether this webhook has side effects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13612
          },
          "name": "sideEffects",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1.ValidatingWebhook#failurePolicy"
            },
            "default": "Fail.",
            "remarks": "Defaults to Fail.",
            "stability": "stable",
            "summary": "FailurePolicy defines how unrecognized errors from the admission endpoint are handled - allowed values are Ignore or Fail."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13515
          },
          "name": "failurePolicy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1.ValidatingWebhook#matchConditions"
            },
            "remarks": "Match conditions filter requests that have already been matched by the rules, namespaceSelector, and objectSelector. An empty list of matchConditions matches all requests. There are a maximum of 64 match conditions allowed.\n\nThe exact matching logic is (in order):\n1. If ANY matchCondition evaluates to FALSE, the webhook is skipped.\n2. If ALL matchConditions evaluate to TRUE, the webhook is called.\n3. If any matchCondition evaluates to an error (but none are FALSE):\n- If failurePolicy=Fail, reject the request\n- If failurePolicy=Ignore, the error is ignored and the webhook is skipped\n\nThis is a beta feature and managed by the AdmissionWebhookMatchConditions feature gate.",
            "stability": "stable",
            "summary": "MatchConditions is a list of conditions that must be met for a request to be sent to this webhook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13531
          },
          "name": "matchConditions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.MatchCondition"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1.ValidatingWebhook#matchPolicy"
            },
            "default": "Equivalent\"",
            "remarks": "- Exact: match a request only if it exactly matches a specified rule. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, but \"rules\" only included `apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"]`, a request to apps/v1beta1 or extensions/v1beta1 would not be sent to the webhook.\n\n- Equivalent: match a request if modifies a resource listed in rules, even via another API group or version. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, and \"rules\" only included `apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"]`, a request to apps/v1beta1 or extensions/v1beta1 would be converted to apps/v1 and sent to the webhook.\n\nDefaults to \"Equivalent\"",
            "stability": "stable",
            "summary": "matchPolicy defines how the \"rules\" list is used to match incoming requests. Allowed values are \"Exact\" or \"Equivalent\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13545
          },
          "name": "matchPolicy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1.ValidatingWebhook#namespaceSelector"
            },
            "default": "the empty LabelSelector, which matches everything.",
            "remarks": "If the object itself is a namespace, the matching is performed on object.metadata.labels. If the object is another cluster scoped resource, it never skips the webhook.\n\nFor example, to run the webhook on any objects whose namespace is not associated with \"runlevel\" of \"0\" or \"1\";  you will set the selector as follows: \"namespaceSelector\": {\n\"matchExpressions\": [\n{\n\"key\": \"runlevel\",\n\"operator\": \"NotIn\",\n\"values\": [\n\"0\",\n\"1\"\n]\n}\n]\n}\n\nIf instead you want to only run the webhook on any objects whose namespace is associated with the \"environment\" of \"prod\" or \"staging\"; you will set the selector as follows: \"namespaceSelector\": {\n\"matchExpressions\": [\n{\n\"key\": \"environment\",\n\"operator\": \"In\",\n\"values\": [\n\"prod\",\n\"staging\"\n]\n}\n]\n}\n\nSee https://kubernetes.io/docs/concepts/overview/working-with-objects/labels for more examples of label selectors.\n\nDefault to the empty LabelSelector, which matches everything.",
            "stability": "stable",
            "summary": "NamespaceSelector decides whether to run the webhook on an object based on whether the namespace for that object matches the selector."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13590
          },
          "name": "namespaceSelector",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.LabelSelector"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1.ValidatingWebhook#objectSelector"
            },
            "default": "the empty LabelSelector, which matches everything.",
            "remarks": "objectSelector is evaluated against both the oldObject and newObject that would be sent to the webhook, and is considered to match if either object matches the selector. A null object (oldObject in the case of create, or newObject in the case of delete) or an object that cannot have labels (like a DeploymentRollback or a PodProxyOptions object) is not considered to match. Use the object selector only if the webhook is opt-in, because end users may skip the admission webhook by setting the labels. Default to the empty LabelSelector, which matches everything.",
            "stability": "stable",
            "summary": "ObjectSelector decides whether to run the webhook based on if the object has matching labels."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13598
          },
          "name": "objectSelector",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.LabelSelector"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1.ValidatingWebhook#rules"
            },
            "remarks": "The webhook cares about an operation if it matches _any_ Rule. However, in order to prevent ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks from putting the cluster in a state which cannot be recovered from without completely disabling the plugin, ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks are never called on admission requests for ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects.",
            "stability": "stable",
            "summary": "Rules describes what operations on what resources/subresources the webhook cares about."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13605
          },
          "name": "rules",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-plus-28.k8s.RuleWithOperations"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1.ValidatingWebhook#timeoutSeconds"
            },
            "default": "10 seconds.",
            "remarks": "After the timeout passes, the webhook call will be ignored or the API call will fail based on the failure policy. The timeout value must be between 1 and 30 seconds. Default to 10 seconds.",
            "stability": "stable",
            "summary": "TimeoutSeconds specifies the timeout for this webhook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 13620
          },
          "name": "timeoutSeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ValidatingWebhook"
    },
    "cdk8s-plus-28.k8s.ValidationRule": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ValidationRule"
        },
        "stability": "stable",
        "summary": "ValidationRule describes a validation rule written in the CEL expression language."
      },
      "fqn": "cdk8s-plus-28.k8s.ValidationRule",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 30296
      },
      "name": "ValidationRule",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ValidationRule#rule"
            },
            "remarks": "ref: https://github.com/google/cel-spec The Rule is scoped to the location of the x-kubernetes-validations extension in the schema. The `self` variable in the CEL expression is bound to the scoped value. Example: - Rule scoped to the root of a resource with a status subresource: {\"rule\": \"self.status.actual <= self.spec.maxDesired\"}\n\nIf the Rule is scoped to an object with properties, the accessible properties of the object are field selectable via `self.field` and field presence can be checked via `has(self.field)`. Null valued fields are treated as absent fields in CEL expressions. If the Rule is scoped to an object with additionalProperties (i.e. a map) the value of the map are accessible via `self[mapKey]`, map containment can be checked via `mapKey in self` and all entries of the map are accessible via CEL macros and functions such as `self.all(...)`. If the Rule is scoped to an array, the elements of the array are accessible via `self[i]` and also by macros and functions. If the Rule is scoped to a scalar, `self` is bound to the scalar value. Examples: - Rule scoped to a map of objects: {\"rule\": \"self.components['Widget'].priority < 10\"} - Rule scoped to a list of integers: {\"rule\": \"self.values.all(value, value >= 0 && value < 100)\"} - Rule scoped to a string value: {\"rule\": \"self.startsWith('kube')\"}\n\nThe `apiVersion`, `kind`, `metadata.name` and `metadata.generateName` are always accessible from the root of the object and from any x-kubernetes-embedded-resource annotated objects. No other metadata properties are accessible.\n\nUnknown data preserved in custom resources via x-kubernetes-preserve-unknown-fields is not accessible in CEL expressions. This includes: - Unknown field values that are preserved by object schemas with x-kubernetes-preserve-unknown-fields. - Object properties where the property schema is of an \"unknown type\". An \"unknown type\" is recursively defined as:\n- A schema with no type and x-kubernetes-preserve-unknown-fields set to true\n- An array where the items schema is of an \"unknown type\"\n- An object where the additionalProperties schema is of an \"unknown type\"\n\nOnly property names of the form `[a-zA-Z_.-/][a-zA-Z0-9_.-/]*` are accessible. Accessible property names are escaped according to the following rules when accessed in the expression: - '__' escapes to '__underscores__' - '.' escapes to '__dot__' - '-' escapes to '__dash__' - '/' escapes to '__slash__' - Property names that exactly match a CEL RESERVED keyword escape to '__{keyword}__'. The keywords are:\n\"true\", \"false\", \"null\", \"in\", \"as\", \"break\", \"const\", \"continue\", \"else\", \"for\", \"function\", \"if\",\n\"import\", \"let\", \"loop\", \"package\", \"namespace\", \"return\".\nExamples:\n- Rule accessing a property named \"namespace\": {\"rule\": \"self.__namespace__ > 0\"}\n- Rule accessing a property named \"x-prop\": {\"rule\": \"self.x__dash__prop > 0\"}\n- Rule accessing a property named \"redact__d\": {\"rule\": \"self.redact__underscores__d > 0\"}\n\nEquality on arrays with x-kubernetes-list-type of 'set' or 'map' ignores element order, i.e. [1, 2] == [2, 1]. Concatenation on arrays with x-kubernetes-list-type use the semantics of the list type:\n- 'set': `X + Y` performs a union where the array positions of all elements in `X` are preserved and\nnon-intersecting elements in `Y` are appended, retaining their partial order.\n- 'map': `X + Y` performs a merge where the array positions of all keys in `X` are preserved but the values\nare overwritten by values in `Y` when the key sets of `X` and `Y` intersect. Elements in `Y` with\nnon-intersecting keys are appended, retaining their partial order.",
            "stability": "stable",
            "summary": "Rule represents the expression which will be evaluated by CEL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 30354
          },
          "name": "rule",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ValidationRule#fieldPath"
            },
            "remarks": "It must be a relative JSON path (i.e. with array notation) scoped to the location of this x-kubernetes-validations extension in the schema and refer to an existing field. e.g. when validation checks if a specific attribute `foo` under a map `testMap`, the fieldPath could be set to `.testMap.foo` If the validation checks two lists must have unique attributes, the fieldPath could be set to either of the list: e.g. `.testList` It does not support list numeric index. It supports child operation to refer to an existing field currently. Refer to [JSONPath support in Kubernetes](https://kubernetes.io/docs/reference/kubectl/jsonpath/) for more info. Numeric index of array is not supported. For field name which contains special characters, use `['specialName']` to refer the field name. e.g. for attribute `foo.34$` appears in a list `testList`, the fieldPath could be set to `.testList['foo.34$']`",
            "stability": "stable",
            "summary": "fieldPath represents the field path returned when the validation fails."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 30302
          },
          "name": "fieldPath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ValidationRule#message"
            },
            "remarks": "The message is required if the Rule contains line breaks. The message must not contain line breaks. If unset, the message is \"failed rule: {Rule}\". e.g. \"must be a URL with the host matching spec.host\"",
            "stability": "stable",
            "summary": "Message represents the message displayed when validation fails."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 30309
          },
          "name": "message",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ValidationRule#messageExpression"
            },
            "remarks": "Since messageExpression is used as a failure message, it must evaluate to a string. If both message and messageExpression are present on a rule, then messageExpression will be used if validation fails. If messageExpression results in a runtime error, the runtime error is logged, and the validation failure message is produced as if the messageExpression field were unset. If messageExpression evaluates to an empty string, a string with only spaces, or a string that contains line breaks, then the validation failure message will also be produced as if the messageExpression field were unset, and the fact that messageExpression produced an empty string/string with only spaces/string with line breaks will be logged. messageExpression has access to all the same variables as the rule; the only difference is the return type. Example: \"x must be less than max (\"+string(self.max)+\")\"",
            "stability": "stable",
            "summary": "MessageExpression declares a CEL expression that evaluates to the validation failure message that is returned when this rule fails."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 30316
          },
          "name": "messageExpression",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ValidationRule#reason"
            },
            "remarks": "The HTTP status code returned to the caller will match the reason of the reason of the first failed validation rule. The currently supported reasons are: \"FieldValueInvalid\", \"FieldValueForbidden\", \"FieldValueRequired\", \"FieldValueDuplicate\". If not set, default to use \"FieldValueInvalid\". All future added reasons must be accepted by clients when reading this value and unknown reasons should be treated as FieldValueInvalid.",
            "stability": "stable",
            "summary": "reason provides a machine-readable validation failure reason that is returned to the caller when a request fails this validation rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 30323
          },
          "name": "reason",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ValidationRule"
    },
    "cdk8s-plus-28.k8s.ValidationV1Alpha1": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1alpha1.Validation"
        },
        "stability": "stable",
        "summary": "Validation specifies the CEL expression which is used to apply the validation."
      },
      "fqn": "cdk8s-plus-28.k8s.ValidationV1Alpha1",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 18811
      },
      "name": "ValidationV1Alpha1",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1alpha1.Validation#expression"
            },
            "remarks": "ref: https://github.com/google/cel-spec CEL expressions have access to the contents of the API request/response, organized into CEL variables as well as some other useful variables:\n\n- 'object' - The object from the incoming request. The value is null for DELETE requests. - 'oldObject' - The existing object. The value is null for CREATE requests. - 'request' - Attributes of the API request([ref](/pkg/apis/admission/types.go#AdmissionRequest)). - 'params' - Parameter resource referred to by the policy binding being evaluated. Only populated if the policy has a ParamKind. - 'namespaceObject' - The namespace object that the incoming object belongs to. The value is null for cluster-scoped resources. - 'variables' - Map of composited variables, from its name to its lazily evaluated value.\nFor example, a variable named 'foo' can be accessed as 'variables.foo'.\n- 'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request.\nSee https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz\n- 'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the\nrequest resource.\n\nThe `apiVersion`, `kind`, `metadata.name` and `metadata.generateName` are always accessible from the root of the object. No other metadata properties are accessible.\n\nOnly property names of the form `[a-zA-Z_.-/][a-zA-Z0-9_.-/]*` are accessible. Accessible property names are escaped according to the following rules when accessed in the expression: - '__' escapes to '__underscores__' - '.' escapes to '__dot__' - '-' escapes to '__dash__' - '/' escapes to '__slash__' - Property names that exactly match a CEL RESERVED keyword escape to '__{keyword}__'. The keywords are:\n\"true\", \"false\", \"null\", \"in\", \"as\", \"break\", \"const\", \"continue\", \"else\", \"for\", \"function\", \"if\",\n\"import\", \"let\", \"loop\", \"package\", \"namespace\", \"return\".\nExamples:\n- Expression accessing a property named \"namespace\": {\"Expression\": \"object.__namespace__ > 0\"}\n- Expression accessing a property named \"x-prop\": {\"Expression\": \"object.x__dash__prop > 0\"}\n- Expression accessing a property named \"redact__d\": {\"Expression\": \"object.redact__underscores__d > 0\"}\n\nEquality on arrays with list type of 'set' or 'map' ignores element order, i.e. [1, 2] == [2, 1]. Concatenation on arrays with x-kubernetes-list-type use the semantics of the list type:\n- 'set': `X + Y` performs a union where the array positions of all elements in `X` are preserved and\nnon-intersecting elements in `Y` are appended, retaining their partial order.\n- 'map': `X + Y` performs a merge where the array positions of all keys in `X` are preserved but the values\nare overwritten by values in `Y` when the key sets of `X` and `Y` intersect. Elements in `Y` with\nnon-intersecting keys are appended, retaining their partial order.\nRequired.",
            "stability": "stable",
            "summary": "Expression represents the expression which will be evaluated by CEL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18842
          },
          "name": "expression",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1alpha1.Validation#message"
            },
            "remarks": "The message is required if the Expression contains line breaks. The message must not contain line breaks. If unset, the message is \"failed rule: {Rule}\". e.g. \"must be a URL with the host matching spec.host\" If the Expression contains line breaks. Message is required. The message must not contain line breaks. If unset, the message is \"failed Expression: {Expression}\".",
            "stability": "stable",
            "summary": "Message represents the message displayed when validation fails."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18849
          },
          "name": "message",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1alpha1.Validation#messageExpression"
            },
            "remarks": "Since messageExpression is used as a failure message, it must evaluate to a string. If both message and messageExpression are present on a validation, then messageExpression will be used if validation fails. If messageExpression results in a runtime error, the runtime error is logged, and the validation failure message is produced as if the messageExpression field were unset. If messageExpression evaluates to an empty string, a string with only spaces, or a string that contains line breaks, then the validation failure message will also be produced as if the messageExpression field were unset, and the fact that messageExpression produced an empty string/string with only spaces/string with line breaks will be logged. messageExpression has access to all the same variables as the `expression` except for 'authorizer' and 'authorizer.requestResource'. Example: \"object.x must be less than max (\"+string(params.max)+\")\"",
            "stability": "stable",
            "summary": "messageExpression declares a CEL expression that evaluates to the validation failure message that is returned when this rule fails."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18856
          },
          "name": "messageExpression",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1alpha1.Validation#reason"
            },
            "remarks": "If this is the first validation in the list to fail, this reason, as well as the corresponding HTTP response code, are used in the HTTP response to the client. The currently supported reasons are: \"Unauthorized\", \"Forbidden\", \"Invalid\", \"RequestEntityTooLarge\". If not set, StatusReasonInvalid is used in the response to the client.",
            "stability": "stable",
            "summary": "Reason represents a machine-readable description of why this validation failed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18863
          },
          "name": "reason",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ValidationV1Alpha1"
    },
    "cdk8s-plus-28.k8s.ValidationV1Beta1": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1beta1.Validation"
        },
        "stability": "stable",
        "summary": "Validation specifies the CEL expression which is used to apply the validation."
      },
      "fqn": "cdk8s-plus-28.k8s.ValidationV1Beta1",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 19225
      },
      "name": "ValidationV1Beta1",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1beta1.Validation#expression"
            },
            "remarks": "ref: https://github.com/google/cel-spec CEL expressions have access to the contents of the API request/response, organized into CEL variables as well as some other useful variables:\n\n- 'object' - The object from the incoming request. The value is null for DELETE requests. - 'oldObject' - The existing object. The value is null for CREATE requests. - 'request' - Attributes of the API request([ref](/pkg/apis/admission/types.go#AdmissionRequest)). - 'params' - Parameter resource referred to by the policy binding being evaluated. Only populated if the policy has a ParamKind. - 'namespaceObject' - The namespace object that the incoming object belongs to. The value is null for cluster-scoped resources. - 'variables' - Map of composited variables, from its name to its lazily evaluated value.\nFor example, a variable named 'foo' can be accessed as 'variables.foo'.\n- 'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request.\nSee https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz\n- 'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the\nrequest resource.\n\nThe `apiVersion`, `kind`, `metadata.name` and `metadata.generateName` are always accessible from the root of the object. No other metadata properties are accessible.\n\nOnly property names of the form `[a-zA-Z_.-/][a-zA-Z0-9_.-/]*` are accessible. Accessible property names are escaped according to the following rules when accessed in the expression: - '__' escapes to '__underscores__' - '.' escapes to '__dot__' - '-' escapes to '__dash__' - '/' escapes to '__slash__' - Property names that exactly match a CEL RESERVED keyword escape to '__{keyword}__'. The keywords are:\n\"true\", \"false\", \"null\", \"in\", \"as\", \"break\", \"const\", \"continue\", \"else\", \"for\", \"function\", \"if\",\n\"import\", \"let\", \"loop\", \"package\", \"namespace\", \"return\".\nExamples:\n- Expression accessing a property named \"namespace\": {\"Expression\": \"object.__namespace__ > 0\"}\n- Expression accessing a property named \"x-prop\": {\"Expression\": \"object.x__dash__prop > 0\"}\n- Expression accessing a property named \"redact__d\": {\"Expression\": \"object.redact__underscores__d > 0\"}\n\nEquality on arrays with list type of 'set' or 'map' ignores element order, i.e. [1, 2] == [2, 1]. Concatenation on arrays with x-kubernetes-list-type use the semantics of the list type:\n- 'set': `X + Y` performs a union where the array positions of all elements in `X` are preserved and\nnon-intersecting elements in `Y` are appended, retaining their partial order.\n- 'map': `X + Y` performs a merge where the array positions of all keys in `X` are preserved but the values\nare overwritten by values in `Y` when the key sets of `X` and `Y` intersect. Elements in `Y` with\nnon-intersecting keys are appended, retaining their partial order.\nRequired.",
            "stability": "stable",
            "summary": "Expression represents the expression which will be evaluated by CEL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19256
          },
          "name": "expression",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1beta1.Validation#message"
            },
            "remarks": "The message is required if the Expression contains line breaks. The message must not contain line breaks. If unset, the message is \"failed rule: {Rule}\". e.g. \"must be a URL with the host matching spec.host\" If the Expression contains line breaks. Message is required. The message must not contain line breaks. If unset, the message is \"failed Expression: {Expression}\".",
            "stability": "stable",
            "summary": "Message represents the message displayed when validation fails."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19263
          },
          "name": "message",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1beta1.Validation#messageExpression"
            },
            "remarks": "Since messageExpression is used as a failure message, it must evaluate to a string. If both message and messageExpression are present on a validation, then messageExpression will be used if validation fails. If messageExpression results in a runtime error, the runtime error is logged, and the validation failure message is produced as if the messageExpression field were unset. If messageExpression evaluates to an empty string, a string with only spaces, or a string that contains line breaks, then the validation failure message will also be produced as if the messageExpression field were unset, and the fact that messageExpression produced an empty string/string with only spaces/string with line breaks will be logged. messageExpression has access to all the same variables as the `expression` except for 'authorizer' and 'authorizer.requestResource'. Example: \"object.x must be less than max (\"+string(params.max)+\")\"",
            "stability": "stable",
            "summary": "messageExpression declares a CEL expression that evaluates to the validation failure message that is returned when this rule fails."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19270
          },
          "name": "messageExpression",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1beta1.Validation#reason"
            },
            "remarks": "If this is the first validation in the list to fail, this reason, as well as the corresponding HTTP response code, are used in the HTTP response to the client. The currently supported reasons are: \"Unauthorized\", \"Forbidden\", \"Invalid\", \"RequestEntityTooLarge\". If not set, StatusReasonInvalid is used in the response to the client.",
            "stability": "stable",
            "summary": "Reason represents a machine-readable description of why this validation failed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19277
          },
          "name": "reason",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:ValidationV1Beta1"
    },
    "cdk8s-plus-28.k8s.VariableV1Alpha1": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1alpha1.Variable"
        },
        "stability": "stable",
        "summary": "Variable is the definition of a variable that is used for composition."
      },
      "fqn": "cdk8s-plus-28.k8s.VariableV1Alpha1",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 18889
      },
      "name": "VariableV1Alpha1",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1alpha1.Variable#expression"
            },
            "remarks": "The CEL expression has access to the same identifiers as the CEL expressions in Validation.",
            "stability": "stable",
            "summary": "Expression is the expression that will be evaluated as the value of the variable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18895
          },
          "name": "expression",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1alpha1.Variable#name"
            },
            "remarks": "The name must be a valid CEL identifier and unique among all variables. The variable can be accessed in other expressions through `variables` For example, if name is \"foo\", the variable will be available as `variables.foo`",
            "stability": "stable",
            "summary": "Name is the name of the variable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18902
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:VariableV1Alpha1"
    },
    "cdk8s-plus-28.k8s.VariableV1Beta1": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1beta1.Variable"
        },
        "remarks": "A variable is defined as a named expression.",
        "stability": "stable",
        "summary": "Variable is the definition of a variable that is used for composition."
      },
      "fqn": "cdk8s-plus-28.k8s.VariableV1Beta1",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 19303
      },
      "name": "VariableV1Beta1",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1beta1.Variable#expression"
            },
            "remarks": "The CEL expression has access to the same identifiers as the CEL expressions in Validation.",
            "stability": "stable",
            "summary": "Expression is the expression that will be evaluated as the value of the variable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19309
          },
          "name": "expression",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1beta1.Variable#name"
            },
            "remarks": "The name must be a valid CEL identifier and unique among all variables. The variable can be accessed in other expressions through `variables` For example, if name is \"foo\", the variable will be available as `variables.foo`",
            "stability": "stable",
            "summary": "Name is the name of the variable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 19316
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:VariableV1Beta1"
    },
    "cdk8s-plus-28.k8s.Volume": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.Volume"
        },
        "stability": "stable",
        "summary": "Volume represents a named volume in a pod that may be accessed by any container in the pod."
      },
      "fqn": "cdk8s-plus-28.k8s.Volume",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 22738
      },
      "name": "Volume",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Volume#name"
            },
            "remarks": "Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
            "stability": "stable",
            "summary": "name of the volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22883
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Volume#awsElasticBlockStore"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
            "stability": "stable",
            "summary": "awsElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22744
          },
          "name": "awsElasticBlockStore",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.AwsElasticBlockStoreVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Volume#azureDisk"
            },
            "stability": "stable",
            "summary": "azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22751
          },
          "name": "azureDisk",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.AzureDiskVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Volume#azureFile"
            },
            "stability": "stable",
            "summary": "azureFile represents an Azure File Service mount on the host and bind mount to the pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22758
          },
          "name": "azureFile",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.AzureFileVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Volume#cephfs"
            },
            "stability": "stable",
            "summary": "cephFS represents a Ceph FS mount on the host that shares a pod's lifetime."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22765
          },
          "name": "cephfs",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.CephFsVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Volume#cinder"
            },
            "remarks": "More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
            "stability": "stable",
            "summary": "cinder represents a cinder volume attached and mounted on kubelets host machine."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22772
          },
          "name": "cinder",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.CinderVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Volume#configMap"
            },
            "stability": "stable",
            "summary": "configMap represents a configMap that should populate this volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22779
          },
          "name": "configMap",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ConfigMapVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Volume#csi"
            },
            "stability": "stable",
            "summary": "csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22786
          },
          "name": "csi",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.CsiVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Volume#downwardAPI"
            },
            "stability": "stable",
            "summary": "downwardAPI represents downward API about the pod that should populate this volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22793
          },
          "name": "downwardApi",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.DownwardApiVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Volume#emptyDir"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
            "stability": "stable",
            "summary": "emptyDir represents a temporary directory that shares a pod's lifetime."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22800
          },
          "name": "emptyDir",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.EmptyDirVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Volume#ephemeral"
            },
            "remarks": "The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts, and deleted when the pod is removed.\n\nUse this if: a) the volume is only needed while the pod runs, b) features of normal volumes like restoring from snapshot or capacity\ntracking are needed,\nc) the storage driver is specified through a storage class, and d) the storage driver supports dynamic volume provisioning through\na PersistentVolumeClaim (see EphemeralVolumeSource for more\ninformation on the connection between this volume type\nand PersistentVolumeClaim).\n\nUse PersistentVolumeClaim or one of the vendor-specific APIs for volumes that persist for longer than the lifecycle of an individual pod.\n\nUse CSI for light-weight local ephemeral volumes if the CSI driver is meant to be used that way - see the documentation of the driver for more information.\n\nA pod can use both types of ephemeral volumes and persistent volumes at the same time.",
            "stability": "stable",
            "summary": "ephemeral represents a volume that is handled by a cluster storage driver."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22820
          },
          "name": "ephemeral",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.EphemeralVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Volume#fc"
            },
            "stability": "stable",
            "summary": "fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22827
          },
          "name": "fc",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.FcVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Volume#flexVolume"
            },
            "stability": "stable",
            "summary": "flexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22834
          },
          "name": "flexVolume",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.FlexVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Volume#flocker"
            },
            "remarks": "This depends on the Flocker control service being running",
            "stability": "stable",
            "summary": "flocker represents a Flocker volume attached to a kubelet's host machine."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22841
          },
          "name": "flocker",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.FlockerVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Volume#gcePersistentDisk"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
            "stability": "stable",
            "summary": "gcePersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22848
          },
          "name": "gcePersistentDisk",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.GcePersistentDiskVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Volume#gitRepo"
            },
            "remarks": "DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.",
            "stability": "stable",
            "summary": "gitRepo represents a git repository at a particular revision."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22855
          },
          "name": "gitRepo",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.GitRepoVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Volume#glusterfs"
            },
            "remarks": "More info: https://examples.k8s.io/volumes/glusterfs/README.md",
            "stability": "stable",
            "summary": "glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22862
          },
          "name": "glusterfs",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.GlusterfsVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Volume#hostPath"
            },
            "remarks": "This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
            "stability": "stable",
            "summary": "hostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22869
          },
          "name": "hostPath",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.HostPathVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Volume#iscsi"
            },
            "remarks": "More info: https://examples.k8s.io/volumes/iscsi/README.md",
            "stability": "stable",
            "summary": "iscsi represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22876
          },
          "name": "iscsi",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.IscsiVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Volume#nfs"
            },
            "stability": "stable",
            "summary": "nfs represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22890
          },
          "name": "nfs",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.NfsVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Volume#persistentVolumeClaim"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
            "stability": "stable",
            "summary": "persistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22897
          },
          "name": "persistentVolumeClaim",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.PersistentVolumeClaimVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Volume#photonPersistentDisk"
            },
            "stability": "stable",
            "summary": "photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22904
          },
          "name": "photonPersistentDisk",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.PhotonPersistentDiskVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Volume#portworxVolume"
            },
            "stability": "stable",
            "summary": "portworxVolume represents a portworx volume attached and mounted on kubelets host machine."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22911
          },
          "name": "portworxVolume",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.PortworxVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Volume#projected"
            },
            "stability": "stable",
            "summary": "projected items for all in one resources secrets, configmaps, and downward API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22918
          },
          "name": "projected",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ProjectedVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Volume#quobyte"
            },
            "stability": "stable",
            "summary": "quobyte represents a Quobyte mount on the host that shares a pod's lifetime."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22925
          },
          "name": "quobyte",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.QuobyteVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Volume#rbd"
            },
            "remarks": "More info: https://examples.k8s.io/volumes/rbd/README.md",
            "stability": "stable",
            "summary": "rbd represents a Rados Block Device mount on the host that shares a pod's lifetime."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22932
          },
          "name": "rbd",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.RbdVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Volume#scaleIO"
            },
            "stability": "stable",
            "summary": "scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22939
          },
          "name": "scaleIo",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ScaleIoVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Volume#secret"
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
            "stability": "stable",
            "summary": "secret represents a secret that should populate this volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22946
          },
          "name": "secret",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.SecretVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Volume#storageos"
            },
            "stability": "stable",
            "summary": "storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22953
          },
          "name": "storageos",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.StorageOsVolumeSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.Volume#vsphereVolume"
            },
            "stability": "stable",
            "summary": "vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 22960
          },
          "name": "vsphereVolume",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.VsphereVirtualDiskVolumeSource"
          }
        }
      ],
      "symbolId": "src/imports/k8s:Volume"
    },
    "cdk8s-plus-28.k8s.VolumeAttachmentSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.storage.v1.VolumeAttachmentSource"
        },
        "remarks": "Right now only PersistenVolumes can be attached via external attacher, in future we may allow also inline volumes in pods. Exactly one member can be set.",
        "stability": "stable",
        "summary": "VolumeAttachmentSource represents a volume that should be attached."
      },
      "fqn": "cdk8s-plus-28.k8s.VolumeAttachmentSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 24273
      },
      "name": "VolumeAttachmentSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.VolumeAttachmentSource#inlineVolumeSpec"
            },
            "remarks": "This field is populated only for the CSIMigration feature. It contains translated fields from a pod's inline VolumeSource to a PersistentVolumeSpec. This field is beta-level and is only honored by servers that enabled the CSIMigration feature.",
            "stability": "stable",
            "summary": "inlineVolumeSpec contains all the information necessary to attach a persistent volume defined by a pod's inline VolumeSource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24279
          },
          "name": "inlineVolumeSpec",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.PersistentVolumeSpec"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.VolumeAttachmentSource#persistentVolumeName"
            },
            "stability": "stable",
            "summary": "persistentVolumeName represents the name of the persistent volume to attach."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 24286
          },
          "name": "persistentVolumeName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:VolumeAttachmentSource"
    },
    "cdk8s-plus-28.k8s.VolumeAttachmentSpec": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.storage.v1.VolumeAttachmentSpec"
        },
        "stability": "stable",
        "summary": "VolumeAttachmentSpec is the specification of a VolumeAttachment request."
      },
      "fqn": "cdk8s-plus-28.k8s.VolumeAttachmentSpec",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 18003
      },
      "name": "VolumeAttachmentSpec",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.VolumeAttachmentSpec#attacher"
            },
            "remarks": "This is the name returned by GetPluginName().",
            "stability": "stable",
            "summary": "attacher indicates the name of the volume driver that MUST handle this request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18009
          },
          "name": "attacher",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.VolumeAttachmentSpec#nodeName"
            },
            "stability": "stable",
            "summary": "nodeName represents the node that the volume should be attached to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18016
          },
          "name": "nodeName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.VolumeAttachmentSpec#source"
            },
            "stability": "stable",
            "summary": "source represents the volume that should be attached."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18023
          },
          "name": "source",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.VolumeAttachmentSource"
          }
        }
      ],
      "symbolId": "src/imports/k8s:VolumeAttachmentSpec"
    },
    "cdk8s-plus-28.k8s.VolumeDevice": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.VolumeDevice"
        },
        "stability": "stable",
        "summary": "volumeDevice describes a mapping of a raw block device within a container."
      },
      "fqn": "cdk8s-plus-28.k8s.VolumeDevice",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 25860
      },
      "name": "VolumeDevice",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.VolumeDevice#devicePath"
            },
            "stability": "stable",
            "summary": "devicePath is the path inside of the container that the device will be mapped to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25866
          },
          "name": "devicePath",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.VolumeDevice#name"
            },
            "stability": "stable",
            "summary": "name must match the name of a persistentVolumeClaim in the pod."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25873
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:VolumeDevice"
    },
    "cdk8s-plus-28.k8s.VolumeMount": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.VolumeMount"
        },
        "stability": "stable",
        "summary": "VolumeMount describes a mounting of a Volume within a container."
      },
      "fqn": "cdk8s-plus-28.k8s.VolumeMount",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 25897
      },
      "name": "VolumeMount",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.VolumeMount#mountPath"
            },
            "remarks": "Must not contain ':'.",
            "stability": "stable",
            "summary": "Path within the container at which the volume should be mounted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25903
          },
          "name": "mountPath",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.VolumeMount#name"
            },
            "stability": "stable",
            "summary": "This must match the Name of a Volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25917
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.VolumeMount#mountPropagation"
            },
            "remarks": "When not set, MountPropagationNone is used. This field is beta in 1.10.",
            "stability": "stable",
            "summary": "mountPropagation determines how mounts are propagated from the host to container and the other way around."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25910
          },
          "name": "mountPropagation",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.VolumeMount#readOnly"
            },
            "default": "false.",
            "remarks": "Defaults to false.",
            "stability": "stable",
            "summary": "Mounted read-only if true, read-write otherwise (false or unspecified)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25925
          },
          "name": "readOnly",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.VolumeMount#subPath"
            },
            "default": "volume's root).",
            "remarks": "Defaults to \"\" (volume's root).",
            "stability": "stable",
            "summary": "Path within the volume from which the container's volume should be mounted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25933
          },
          "name": "subPath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.VolumeMount#subPathExpr"
            },
            "default": "volume's root). SubPathExpr and SubPath are mutually exclusive.",
            "remarks": "Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \"\" (volume's root). SubPathExpr and SubPath are mutually exclusive.",
            "stability": "stable",
            "summary": "Expanded path within the volume from which the container's volume should be mounted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 25941
          },
          "name": "subPathExpr",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:VolumeMount"
    },
    "cdk8s-plus-28.k8s.VolumeNodeAffinity": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.VolumeNodeAffinity"
        },
        "stability": "stable",
        "summary": "VolumeNodeAffinity defines constraints that limit what nodes this volume can be accessed from."
      },
      "fqn": "cdk8s-plus-28.k8s.VolumeNodeAffinity",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 21136
      },
      "name": "VolumeNodeAffinity",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.VolumeNodeAffinity#required"
            },
            "stability": "stable",
            "summary": "required specifies hard node constraints that must be met."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21142
          },
          "name": "required",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.NodeSelector"
          }
        }
      ],
      "symbolId": "src/imports/k8s:VolumeNodeAffinity"
    },
    "cdk8s-plus-28.k8s.VolumeNodeResources": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.storage.v1.VolumeNodeResources"
        },
        "stability": "stable",
        "summary": "VolumeNodeResources is a set of resource limits for scheduling of volumes."
      },
      "fqn": "cdk8s-plus-28.k8s.VolumeNodeResources",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 27972
      },
      "name": "VolumeNodeResources",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.storage.v1.VolumeNodeResources#count"
            },
            "remarks": "A volume that is both attached and mounted on a node is considered to be used once, not twice. The same rule applies for a unique volume that is shared among multiple pods on the same node. If this field is not specified, then the supported number of volumes on this node is unbounded.",
            "stability": "stable",
            "summary": "count indicates the maximum number of unique volumes managed by the CSI driver that can be used on a node."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 27978
          },
          "name": "count",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/imports/k8s:VolumeNodeResources"
    },
    "cdk8s-plus-28.k8s.VolumeProjection": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.VolumeProjection"
        },
        "stability": "stable",
        "summary": "Projection that may be projected along with other supported volume types."
      },
      "fqn": "cdk8s-plus-28.k8s.VolumeProjection",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 29039
      },
      "name": "VolumeProjection",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.VolumeProjection#configMap"
            },
            "stability": "stable",
            "summary": "configMap information about the configMap data to project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29045
          },
          "name": "configMap",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ConfigMapProjection"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.VolumeProjection#downwardAPI"
            },
            "stability": "stable",
            "summary": "downwardAPI information about the downwardAPI data to project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29052
          },
          "name": "downwardApi",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.DownwardApiProjection"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.VolumeProjection#secret"
            },
            "stability": "stable",
            "summary": "secret information about the secret data to project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29059
          },
          "name": "secret",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.SecretProjection"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.VolumeProjection#serviceAccountToken"
            },
            "stability": "stable",
            "summary": "serviceAccountToken is information about the serviceAccountToken data to project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 29066
          },
          "name": "serviceAccountToken",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ServiceAccountTokenProjection"
          }
        }
      ],
      "symbolId": "src/imports/k8s:VolumeProjection"
    },
    "cdk8s-plus-28.k8s.VsphereVirtualDiskVolumeSource": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource"
        },
        "stability": "stable",
        "summary": "Represents a vSphere volume resource."
      },
      "fqn": "cdk8s-plus-28.k8s.VsphereVirtualDiskVolumeSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 21573
      },
      "name": "VsphereVirtualDiskVolumeSource",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource#volumePath"
            },
            "stability": "stable",
            "summary": "volumePath is the path that identifies vSphere volume vmdk."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21600
          },
          "name": "volumePath",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource#fsType"
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
            "stability": "stable",
            "summary": "fsType is filesystem type to mount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21579
          },
          "name": "fsType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource#storagePolicyID"
            },
            "stability": "stable",
            "summary": "storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21586
          },
          "name": "storagePolicyId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource#storagePolicyName"
            },
            "stability": "stable",
            "summary": "storagePolicyName is the storage Policy Based Management (SPBM) profile name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 21593
          },
          "name": "storagePolicyName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:VsphereVirtualDiskVolumeSource"
    },
    "cdk8s-plus-28.k8s.WebhookClientConfig": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.admissionregistration.v1.WebhookClientConfig"
        },
        "stability": "stable",
        "summary": "WebhookClientConfig contains the information to make a TLS connection with the webhook."
      },
      "fqn": "cdk8s-plus-28.k8s.WebhookClientConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 18410
      },
      "name": "WebhookClientConfig",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1.WebhookClientConfig#caBundle"
            },
            "remarks": "If unspecified, system trust roots on the apiserver are used.",
            "stability": "stable",
            "summary": "`caBundle` is a PEM encoded CA bundle which will be used to validate the webhook's server certificate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18416
          },
          "name": "caBundle",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1.WebhookClientConfig#service"
            },
            "remarks": "If the webhook is running within the cluster, then you should use `service`.",
            "stability": "stable",
            "summary": "`service` is a reference to the service for this webhook. Either `service` or `url` must be specified."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18425
          },
          "name": "service",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.ServiceReference"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.admissionregistration.v1.WebhookClientConfig#url"
            },
            "remarks": "Exactly one of `url` or `service` must be specified.\n\nThe `host` should not refer to a service running in the cluster; use the `service` field instead. The host might be resolved via external DNS in some apiservers (e.g., `kube-apiserver` cannot resolve in-cluster DNS as that would be a layering violation). `host` may also be an IP address.\n\nPlease note that using `localhost` or `127.0.0.1` as a `host` is risky unless you take great care to run this webhook on all hosts which run an apiserver which might need to make calls to this webhook. Such installs are likely to be non-portable, i.e., not easy to turn up in a new cluster.\n\nThe scheme must be \"https\"; the URL must begin with \"https://\".\n\nA path is optional, and if present may be any string permissible in a URL. You may use the path to pass an arbitrary string to the webhook, for example, a cluster identifier.\n\nAttempting to use a user or basic auth e.g. \"user:password@\" is not allowed. Fragments (\"#...\") and query parameters (\"?...\") are not allowed, either.",
            "stability": "stable",
            "summary": "`url` gives the location of the webhook, in standard URL form (`scheme://host:port/path`)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 18442
          },
          "name": "url",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:WebhookClientConfig"
    },
    "cdk8s-plus-28.k8s.WebhookConversion": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookConversion"
        },
        "stability": "stable",
        "summary": "WebhookConversion describes how to call a conversion webhook."
      },
      "fqn": "cdk8s-plus-28.k8s.WebhookConversion",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 28001
      },
      "name": "WebhookConversion",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookConversion#conversionReviewVersions"
            },
            "remarks": "The API server will use the first version in the list which it supports. If none of the versions specified in this list are supported by API server, conversion will fail for the custom resource. If a persisted Webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail.",
            "stability": "stable",
            "summary": "conversionReviewVersions is an ordered list of preferred `ConversionReview` versions the Webhook expects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28014
          },
          "name": "conversionReviewVersions",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookConversion#clientConfig"
            },
            "stability": "stable",
            "summary": "clientConfig is the instructions for how to call the webhook if strategy is `Webhook`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28007
          },
          "name": "clientConfig",
          "optional": true,
          "type": {
            "fqn": "cdk8s-plus-28.k8s.WebhookClientConfig"
          }
        }
      ],
      "symbolId": "src/imports/k8s:WebhookConversion"
    },
    "cdk8s-plus-28.k8s.WeightedPodAffinityTerm": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.WeightedPodAffinityTerm"
        },
        "stability": "stable",
        "summary": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)."
      },
      "fqn": "cdk8s-plus-28.k8s.WeightedPodAffinityTerm",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 28436
      },
      "name": "WeightedPodAffinityTerm",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.WeightedPodAffinityTerm#podAffinityTerm"
            },
            "remarks": "A pod affinity term, associated with the corresponding weight.",
            "stability": "stable",
            "summary": "Required."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28442
          },
          "name": "podAffinityTerm",
          "type": {
            "fqn": "cdk8s-plus-28.k8s.PodAffinityTerm"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.WeightedPodAffinityTerm#weight"
            },
            "stability": "stable",
            "summary": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 28449
          },
          "name": "weight",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "src/imports/k8s:WeightedPodAffinityTerm"
    },
    "cdk8s-plus-28.k8s.WindowsSecurityContextOptions": {
      "assembly": "cdk8s-plus-28",
      "datatype": true,
      "docs": {
        "custom": {
          "schema": "io.k8s.api.core.v1.WindowsSecurityContextOptions"
        },
        "stability": "stable",
        "summary": "WindowsSecurityContextOptions contain Windows-specific options and credentials."
      },
      "fqn": "cdk8s-plus-28.k8s.WindowsSecurityContextOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/imports/k8s.ts",
        "line": 26176
      },
      "name": "WindowsSecurityContextOptions",
      "namespace": "k8s",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.WindowsSecurityContextOptions#gmsaCredentialSpec"
            },
            "stability": "stable",
            "summary": "GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26182
          },
          "name": "gmsaCredentialSpec",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.WindowsSecurityContextOptions#gmsaCredentialSpecName"
            },
            "stability": "stable",
            "summary": "GMSACredentialSpecName is the name of the GMSA credential spec to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26189
          },
          "name": "gmsaCredentialSpecName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.WindowsSecurityContextOptions#hostProcess"
            },
            "remarks": "All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers). In addition, if HostProcess is true then HostNetwork must also be set to true.",
            "stability": "stable",
            "summary": "HostProcess determines if a container should be run as a 'Host Process' container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26196
          },
          "name": "hostProcess",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "schema": "io.k8s.api.core.v1.WindowsSecurityContextOptions#runAsUserName"
            },
            "default": "the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "remarks": "Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "stability": "stable",
            "summary": "The UserName in Windows to run the entrypoint of the container process."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/imports/k8s.ts",
            "line": 26204
          },
          "name": "runAsUserName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/imports/k8s:WindowsSecurityContextOptions"
    }
  },
  "version": "2.5.6",
  "fingerprint": "gbSMPC4ACyQpRTposFPTlvfylU6SKQrtKAbPcjzVSKI="
}
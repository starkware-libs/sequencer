# Default values for a papyrus deployment.

# The verbosity level of logs ("debug", "info", "error", etc.)
rustLogLevel: "info"

node:
  # Number of concurrent requests to the SN feeder gateway
  concurrentFgRequests: 50

# Ethereum node URL. A value for this variable is mandatory.
base_layer_node_url:

starknet:
  # possible values: "mainnet.json, sepolia_testnet" and "sepolia_integration".
  preset: mainnet.json

p2p:
  enabled: false
  # Set to true if node act as bootstrap server
  bootstrap: false
  # General config
  config:
    # Optional - The node self port to listen
    networkTcpPort: 10000
    # Optional - The node data path
    storageDbConfigPathPrefix: data
    # Optional - network.#is_none flag
    networkIsNone: false
  nodeConfig:
    # Use a custom external IP in case running outside cloud environment and no loadbalancer is available.
    # The port by default will be the .Values.p2p.config.networkTcpPort
    overrideIP:
    # Set the bootstrap server to connect to.
    # This should be set only if p2p.bootstrap = false
    bootstrapServer:
      # Mandatory - The network.#is_none flag on the bootsrap server.
      multiaddrIsNone:
      # Mandatory - The bootstrap server to connect to, ip.
      multiaddrIp:
      # Mandatory - The bootstrap server to connect to, port.
      multiaddrPort:
      # Mandatory - The bootstrap server to connect to, uid.
      multiaddrUid:
  service:
    enabled: false
    type: ClusterIP
    port: 10000
    protocol: TCP
    # If p2p.service.type = "ClusterIP".
    # Optional - Set a static ip for the papyrus p2p service. 
    # Note that the ip address is not reserved and there might be a chance for ip collision.
    # See https://kubernetes.io/docs/concepts/services-networking/cluster-ip-allocation/ to understand how to avoid it.
    clusterIP: 
    # If p2p.service.type = "LoadBalancer".
    # Optional - Set a static ip for the papyrus p2p loadbalancer. 
    # Note that a static IP needs to be reserved first in a cloud environment in order to use it.
    # See https://cloud.google.com/vpc/docs/reserve-static-external-ip-address for more info.
    loadBalancerIP:
    annotations: {}

deployment:
  # Supported values: deployment, statefulset
  type: deployment

  # The container image
  image:
    repository: ghcr.io/starkware-libs/sequencer/papyrus
    tag: 0.4.0

  # The container's pullPolicy
  pullPolicy: Always

  # Set pod annotations
  annotations: {}

  # Set deployment nodeSelector
  nodeSelector: {}

  # Set deployment tolerations
  tolerations: []
  # - key: "key1"
  #   operator: "Equal"
  #   value: "value1"
  #   effect: "NoSchedule"

  affinity: {}

  ## Pod anti-affinity can prevent the scheduler from placing papyrus server replicas on the same node.
  ## The value "soft" means that the scheduler should *prefer* to not schedule two replica pods onto the same node but no guarantee is provided.
  ## The value "hard" means that the scheduler is *required* to not schedule two replica pods onto the same node.
  ## The default value "" will disable pod anti-affinity so that no anti-affinity rules will be configured (unless set in `deployment.affinity`).
  ##
  podAntiAffinity: ""

  ## If anti-affinity is enabled sets the topologyKey to use for anti-affinity.
  ## This can be changed to, for example, failure-domain.beta.kubernetes.io/zone
  ##
  podAntiAffinityTopologyKey: failure-domain.beta.kubernetes.io/zone

  ## Pod topology spread constraints
  ## ref. https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
  topologySpreadConstraints: []

  ## PodDisruptionBudget settings
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/disruptions/
  ##
  podDisruptionBudget:
    enabled: false
    maxUnavailable: 1
    # minAvailable: 1
    ## unhealthyPodEvictionPolicy is available since 1.27.0 (beta)
    ## https://kubernetes.io/docs/tasks/run-application/configure-pdb/#unhealthy-pod-eviction-policy
    # unhealthyPodEvictionPolicy: IfHealthyBudget

  # The default resources for a pod.
  resources:
    limits:
      cpu: "1"
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 1Gi

  ## Optionally specify extra environment variables to add to papyrus container
  env: []
    # - name: FOO
    #   value: BAR

  extraArgs: {} # Optional additional deployment args
    # foo: "bar"

# Service variables for a papyrus pod.
service:
  # Specify service type, supported options are ClusterIP, LoadBalancer
  type: ClusterIP
  ports:
    rpc:
      enabled: true
      port: 8080
      protocol: TCP
    monitoring:
      enabled: true
      port: 8081
      protocol: TCP

# Persistent volume claim variables for a papyrus pod.
pvc:
  # Recommended size is at least 512Gi.
  size: 512Gi
  # Is is recommended to use an SSD volume (such as GKE premium-rwo).
  storageClass: ""
  # Use an existing snapshot for the node's data. The kubernetes volumesnapshot object should
  # exist in the same namespace as the rest of the resources.
  restoreFromSnapshot:
    enabled: false
    snapshotName: my-snapshot

# Configure Ingress.
ingress:
  # Should an ingress object be created
  enabled: false
  # Ingress class type.
  type:
  # Ingress object name in Kubernetes.
  name:
  # Host name to create Ingress rules.
  host:
  # Ingress path type.
  pathType:
  # Annotations to apply to the node ingress.
  annotations: {}

# GrafanaDashboad CRD configuration
# This is relevant for Grafana Operator users https://grafana.github.io/grafana-operator/docs/
grafanaDashboard:
  # Should the GrafanaDashboard object be installed
  enabled: false

grafanaAlerts:
  enabled: false

# Backup mode
backup:
  enabled: false
  sleepInterval: 6h
  compress: false
  aws:
    s3BucketName: my-backup-bucket-name
    s3BucketRegion: my-backup-bucket-region
    accessKeyId: my aws_access_key_id
    secretAccessKey: my aws_secret_access_key

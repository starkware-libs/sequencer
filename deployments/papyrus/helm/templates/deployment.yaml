{{- if eq .Values.deployment.type "deployment" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "papyrus.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "papyrus.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "papyrus.selectorLabels" . | nindent 6 }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      annotations:
      {{- if .Values.deployment.annotations }}
        {{ toYaml .Values.deployment.annotations | nindent 8 }}
      {{- end}}
      {{- if .Values.service.ports.monitoring.enabled }}
        prometheus.io/scrape: "true"
        prometheus.io/path: "/monitoring/metrics"
        prometheus.io/port: {{ .Values.service.ports.monitoring.port | quote }}
      {{- end }}
      labels:
        app: papyrus
        {{- include "papyrus.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
        fsGroup: 1000
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ template "papyrus.name" . }}-data
        {{- if .Values.backup.enabled }}
        - name: run
          configMap:
            name: {{ template "papyrus.name" . }}-run
            defaultMode: 0777
        {{- end }}
      {{- with .Values.deployment.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.deployment.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ template "papyrus.name" . }}
        image: "{{ .Values.deployment.image.repository }}:{{ .Values.deployment.image.tag }}"
        imagePullPolicy: {{ .Values.deployment.pullPolicy }}
        resources:
          limits:
            cpu: {{ .Values.deployment.resources.limits.cpu | quote }}
            memory: {{ .Values.deployment.resources.limits.memory }}
          requests:
            cpu: {{ .Values.deployment.resources.requests.cpu | quote}}
            memory: {{ .Values.deployment.resources.requests.memory }}
        {{- if not .Values.backup.enabled }}
        {{- with .Values.deployment.env }}
        env:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        args:
          - --config_file
          - /app/config/papyrus/presets/{{ .Values.starknet.preset }}
          - --base_layer.node_url
          - {{ .Values.base_layer_node_url }}
          {{- if .Values.p2p.enabled }}
          - --network.tcp_port
          - {{ .Values.p2p.config.networkTcpPort | quote }}
          - --storage.db_config.path_prefix
          - {{ .Values.p2p.config.storageDbConfigPathPrefix | quote }}
          - --network.#is_none
          - {{ .Values.p2p.config.networkIsNone | quote }}
          {{- if not .Values.p2p.bootstrap }}
          - --network.bootstrap_peer_multiaddr.#is_none
          - {{ .Values.p2p.nodeConfig.bootstrapServer.multiaddrIsNone | quote }}
          - --network.bootstrap_peer_multiaddr
          - {{ include "p2p.bootstrapPeerMultiaddr" . | quote }}
          {{- end }}
          # A python similar condition would have looked like this:
          # if override_ip or (service_enabled and not bootstrap and (cluster_ip or load_balancer_ip))
          {{- if or .Values.p2p.nodeConfig.overrideIP (and .Values.p2p.service.enabled (not .Values.p2p.bootstrap) (or .Values.p2p.service.clusterIP .Values.p2p.service.loadBalancerIP)) }}
          - --network.hardcoded_external_multiaddr.#is_none
          - "false"
          - --network.hardcoded_external_multiaddr
          - {{ include "p2p.nodePeerMultiaddr" . | quote }}
          {{- end }}
          {{- end }}
          {{ range $key, $value := .Values.deployment.extraArgs }}
          {{- if $value }}
          - --{{ $key }}
          - {{ $value | quote }}
          {{- else }}
          - --{{ $key }}
          {{- end }}
          {{ end }}
        ports:
        {{- if .Values.service.ports.rpc.enabled }}
        - containerPort: {{ .Values.service.ports.rpc.port }}
          name: rpc
        {{- end }}
        {{- if .Values.service.ports.monitoring.enabled }}
        - containerPort: {{ .Values.service.ports.monitoring.port }}
          name: monitoring
        {{- end }}
        {{- if .Values.p2p.enabled }}
        - containerPort: {{ .Values.p2p.config.networkTcpPort }}
          name: p2p
        {{- end }}
        volumeMounts:
        - name: data
          mountPath: /app/data
        envFrom:
        - configMapRef:
            name: {{ template "papyrus.name" . }}-config
        {{- else }}
        command:
        - sh
        - -c
        - /app/run/backup.sh
        volumeMounts:
        - name: data
          mountPath: /app/data
        - name: run
          mountPath: /app/run
        envFrom:
        - configMapRef:
            name: {{ template "papyrus.name" . }}-config
        - secretRef:
            name: {{ template "papyrus.name" . }}-aws-creds
        {{- end }}
{{- if or .Values.deployment.affinity .Values.deployment.podAntiAffinity }}
      affinity:
    {{- end }}
      {{- with .Values.deployment.affinity }}
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if eq .Values.deployment.podAntiAffinity "hard" }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: {{ .Values.deployment.podAntiAffinityTopologyKey }}
              labelSelector:
                matchExpressions:
                  - {key: app.kubernetes.io/name, operator: In, values: [{{ template "papyrus.name" . }}]}
      {{- else if eq .Values.deployment.podAntiAffinity "soft" }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                topologyKey: {{ .Values.deployment.podAntiAffinityTopologyKey }}
                labelSelector:
                  matchExpressions:
                    - {key: app.kubernetes.io/name, operator: In, values: [{{ template "papyrus.name" . }}]}
      {{- end }}
    {{- with .Values.deployment.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end }}

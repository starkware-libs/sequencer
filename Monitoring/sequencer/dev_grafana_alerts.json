{
  "alerts": [
    {
      "name": "consensus_block_number_stuck",
      "title": "Consensus block number stuck",
      "ruleGroup": "consensus",
      "expr": "changes(consensus_block_number{cluster=~\"$cluster\", namespace=~\"$namespace\"}[30s])",
      "conditions": [
        {
          "evaluator": {
            "params": [
              2.0
            ],
            "type": "lt"
          },
          "operator": {
            "type": "and"
          },
          "reducer": {
            "params": [],
            "type": "avg"
          },
          "type": "query"
        }
      ],
      "for": "1s",
      "intervalSec": 10,
      "severity": "p2"
    },
    {
      "name": "consensus_build_proposal_failed",
      "title": "Consensus build proposal failed",
      "ruleGroup": "consensus",
      "expr": "rate(consensus_build_proposal_failed{cluster=~\"$cluster\", namespace=~\"$namespace\"}[1m])",
      "conditions": [
        {
          "evaluator": {
            "params": [
              0.0
            ],
            "type": "gt"
          },
          "operator": {
            "type": "and"
          },
          "reducer": {
            "params": [],
            "type": "avg"
          },
          "type": "query"
        }
      ],
      "for": "10s",
      "intervalSec": 20,
      "severity": "p3"
    },
    {
      "name": "consensus_validate_proposal_failed",
      "title": "Consensus validate proposal failed",
      "ruleGroup": "consensus",
      "expr": "rate(consensus_proposals_invalid{cluster=~\"$cluster\", namespace=~\"$namespace\"}[1h])",
      "conditions": [
        {
          "evaluator": {
            "params": [
              0.001388888888888889
            ],
            "type": "gt"
          },
          "operator": {
            "type": "and"
          },
          "reducer": {
            "params": [],
            "type": "avg"
          },
          "type": "query"
        }
      ],
      "for": "1m",
      "intervalSec": 20,
      "severity": "p3"
    },
    {
      "name": "consensus_votes_num_sent_messages",
      "title": "Consensus votes num sent messages",
      "ruleGroup": "consensus",
      "expr": "rate(apollo_consensus_votes_num_sent_messages{cluster=~\"$cluster\", namespace=~\"$namespace\"}[20m])",
      "conditions": [
        {
          "evaluator": {
            "params": [
              0.027777777777777776
            ],
            "type": "lt"
          },
          "operator": {
            "type": "and"
          },
          "reducer": {
            "params": [],
            "type": "avg"
          },
          "type": "query"
        }
      ],
      "for": "1m",
      "intervalSec": 20,
      "severity": "p4"
    },
    {
      "name": "consensus_decisions_reached_by_consensus_stuck",
      "title": "Consensus decisions reached by consensus stuck",
      "ruleGroup": "consensus",
      "expr": "changes(consensus_decisions_reached_by_consensus{cluster=~\"$cluster\", namespace=~\"$namespace\"}[10m])",
      "conditions": [
        {
          "evaluator": {
            "params": [
              1.0
            ],
            "type": "lt"
          },
          "operator": {
            "type": "and"
          },
          "reducer": {
            "params": [],
            "type": "avg"
          },
          "type": "query"
        }
      ],
      "for": "1m",
      "intervalSec": 20,
      "severity": "p4"
    },
    {
      "name": "consensus_inbound_stream_evicted",
      "title": "Consensus inbound stream evicted",
      "ruleGroup": "consensus",
      "expr": "rate(consensus_inbound_stream_evicted{cluster=~\"$cluster\", namespace=~\"$namespace\"}[1h])",
      "conditions": [
        {
          "evaluator": {
            "params": [
              0.001388888888888889
            ],
            "type": "gt"
          },
          "operator": {
            "type": "and"
          },
          "reducer": {
            "params": [],
            "type": "avg"
          },
          "type": "query"
        }
      ],
      "for": "1m",
      "intervalSec": 20,
      "severity": "p4"
    },
    {
      "name": "cende_write_prev_height_blob_latency_too_high",
      "title": "Cende write prev height blob latency too high",
      "ruleGroup": "consensus",
      "expr": "avg_over_time(cende_write_prev_height_blob_latency{cluster=~\"$cluster\", namespace=~\"$namespace\"}[20m])",
      "conditions": [
        {
          "evaluator": {
            "params": [
              1.5
            ],
            "type": "gt"
          },
          "operator": {
            "type": "and"
          },
          "reducer": {
            "params": [],
            "type": "avg"
          },
          "type": "query"
        }
      ],
      "for": "1m",
      "intervalSec": 20,
      "severity": "p4"
    },
    {
      "name": "cende_write_blob_failure",
      "title": "Cende write blob failure",
      "ruleGroup": "consensus",
      "expr": "rate(cende_write_blob_failure{cluster=~\"$cluster\", namespace=~\"$namespace\"}[20m])",
      "conditions": [
        {
          "evaluator": {
            "params": [
              0.0
            ],
            "type": "gt"
          },
          "operator": {
            "type": "and"
          },
          "reducer": {
            "params": [],
            "type": "avg"
          },
          "type": "query"
        }
      ],
      "for": "1m",
      "intervalSec": 20,
      "severity": "p4"
    },
    {
      "name": "consensus_l1_gas_price_provider_error_rate",
      "title": "Consensus L1 gas price provider error rate",
      "ruleGroup": "consensus",
      "expr": "rate(consensus_l1_gas_price_provider_error{cluster=~\"$cluster\", namespace=~\"$namespace\"}[1h])",
      "conditions": [
        {
          "evaluator": {
            "params": [
              0.001388888888888889
            ],
            "type": "gt"
          },
          "operator": {
            "type": "and"
          },
          "reducer": {
            "params": [],
            "type": "avg"
          },
          "type": "query"
        }
      ],
      "for": "1m",
      "intervalSec": 20,
      "severity": "p4"
    },
    {
      "name": "consensus_round_above_zero",
      "title": "Consensus round above zero",
      "ruleGroup": "consensus",
      "expr": "rate(consensus_round_above_zero{cluster=~\"$cluster\", namespace=~\"$namespace\"}[1h])",
      "conditions": [
        {
          "evaluator": {
            "params": [
              0.001388888888888889
            ],
            "type": "gt"
          },
          "operator": {
            "type": "and"
          },
          "reducer": {
            "params": [],
            "type": "avg"
          },
          "type": "query"
        }
      ],
      "for": "1m",
      "intervalSec": 20,
      "severity": "p4"
    },
    {
      "name": "consensus_conflicting_votes_rate",
      "title": "Consensus conflicting votes rate",
      "ruleGroup": "consensus",
      "expr": "rate(consensus_conflicting_votes{cluster=~\"$cluster\", namespace=~\"$namespace\"}[20m])",
      "conditions": [
        {
          "evaluator": {
            "params": [
              0.0
            ],
            "type": "gt"
          },
          "operator": {
            "type": "and"
          },
          "reducer": {
            "params": [],
            "type": "avg"
          },
          "type": "query"
        }
      ],
      "for": "1m",
      "intervalSec": 20,
      "severity": "p4"
    },
    {
      "name": "gateway_add_tx_rate_drop",
      "title": "Gateway add_tx rate drop",
      "ruleGroup": "gateway",
      "expr": "sum(rate(gateway_transactions_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}[20m])) or vector(0)",
      "conditions": [
        {
          "evaluator": {
            "params": [
              0.1
            ],
            "type": "lt"
          },
          "operator": {
            "type": "and"
          },
          "reducer": {
            "params": [],
            "type": "avg"
          },
          "type": "query"
        }
      ],
      "for": "1m",
      "intervalSec": 20,
      "severity": "p2"
    },
    {
      "name": "gateway_add_tx_latency_increase",
      "title": "Gateway avg add_tx latency increase",
      "ruleGroup": "gateway",
      "expr": "sum(rate(gateway_add_tx_latency_sum{cluster=~\"$cluster\", namespace=~\"$namespace\"}[1m]))/sum(rate(gateway_add_tx_latency_count{cluster=~\"$cluster\", namespace=~\"$namespace\"}[1m]))",
      "conditions": [
        {
          "evaluator": {
            "params": [
              2.0
            ],
            "type": "gt"
          },
          "operator": {
            "type": "and"
          },
          "reducer": {
            "params": [],
            "type": "avg"
          },
          "type": "query"
        }
      ],
      "for": "1m",
      "intervalSec": 20,
      "severity": "p2"
    },
    {
      "name": "l1_message_scraper_baselayer_error_count",
      "title": "L1 message scraper baselayer error count",
      "ruleGroup": "l1_gas_price",
      "expr": "rate(l1_gas_price_scraper_baselayer_error_count{cluster=~\"$cluster\", namespace=~\"$namespace\"}[1h])",
      "conditions": [
        {
          "evaluator": {
            "params": [
              0.001388888888888889
            ],
            "type": "gt"
          },
          "operator": {
            "type": "and"
          },
          "reducer": {
            "params": [],
            "type": "avg"
          },
          "type": "query"
        }
      ],
      "for": "1m",
      "intervalSec": 20,
      "severity": "p5"
    },
    {
      "name": "l1_gas_price_provider_insufficient_history",
      "title": "L1 gas price provider insufficient history",
      "ruleGroup": "l1_gas_price",
      "expr": "rate(l1_gas_price_provider_insufficient_history{cluster=~\"$cluster\", namespace=~\"$namespace\"}[1m])",
      "conditions": [
        {
          "evaluator": {
            "params": [
              0.0
            ],
            "type": "gt"
          },
          "operator": {
            "type": "and"
          },
          "reducer": {
            "params": [],
            "type": "avg"
          },
          "type": "query"
        }
      ],
      "for": "1m",
      "intervalSec": 20,
      "severity": "p5"
    },
    {
      "name": "l1_message_scraper_baselayer_error_count",
      "title": "L1 message scraper baselayer error count",
      "ruleGroup": "l1_messages",
      "expr": "rate(l1_message_scraper_baselayer_error_count{cluster=~\"$cluster\", namespace=~\"$namespace\"}[1h])",
      "conditions": [
        {
          "evaluator": {
            "params": [
              0.001388888888888889
            ],
            "type": "gt"
          },
          "operator": {
            "type": "and"
          },
          "reducer": {
            "params": [],
            "type": "avg"
          },
          "type": "query"
        }
      ],
      "for": "1m",
      "intervalSec": 20,
      "severity": "p5"
    },
    {
      "name": "l1_message_scraper_reorg_detected",
      "title": "L1 message scraper reorg detected",
      "ruleGroup": "l1_messages",
      "expr": "rate(l1_message_scraper_baselayer_error_count{cluster=~\"$cluster\", namespace=~\"$namespace\"}[1m])",
      "conditions": [
        {
          "evaluator": {
            "params": [
              0.0
            ],
            "type": "gt"
          },
          "operator": {
            "type": "and"
          },
          "reducer": {
            "params": [],
            "type": "avg"
          },
          "type": "query"
        }
      ],
      "for": "1m",
      "intervalSec": 20,
      "severity": "p5"
    },
    {
      "name": "mempool_add_tx_rate_drop",
      "title": "Mempool add_tx rate drop",
      "ruleGroup": "mempool",
      "expr": "sum(rate(mempool_transactions_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}[20m])) or vector(0)",
      "conditions": [
        {
          "evaluator": {
            "params": [
              0.1
            ],
            "type": "lt"
          },
          "operator": {
            "type": "and"
          },
          "reducer": {
            "params": [],
            "type": "avg"
          },
          "type": "query"
        }
      ],
      "for": "1m",
      "intervalSec": 20,
      "severity": "p2"
    },
    {
      "name": "mempool_get_txs_size_drop",
      "title": "Mempool get_txs size drop",
      "ruleGroup": "mempool",
      "expr": "avg_over_time(mempool_get_txs_size{cluster=~\"$cluster\", namespace=~\"$namespace\"}[20m])",
      "conditions": [
        {
          "evaluator": {
            "params": [
              0.01
            ],
            "type": "lt"
          },
          "operator": {
            "type": "and"
          },
          "reducer": {
            "params": [],
            "type": "avg"
          },
          "type": "query"
        }
      ],
      "for": "1m",
      "intervalSec": 20,
      "severity": "p2"
    },
    {
      "name": "http_server_idle",
      "title": "http server idle",
      "ruleGroup": "http_server",
      "expr": "rate(max(http_server_added_transactions_total{cluster=~\"$cluster\", namespace=~\"$namespace\"})[60m:])",
      "conditions": [
        {
          "evaluator": {
            "params": [
              1e-6
            ],
            "type": "lt"
          },
          "operator": {
            "type": "and"
          },
          "reducer": {
            "params": [],
            "type": "avg"
          },
          "type": "query"
        }
      ],
      "for": "5m",
      "intervalSec": 60,
      "severity": "p2"
    },
    {
      "name": "mempool_pool_size_increase",
      "title": "Mempool pool size increase",
      "ruleGroup": "mempool",
      "expr": "mempool_pool_size{cluster=~\"$cluster\", namespace=~\"$namespace\"}",
      "conditions": [
        {
          "evaluator": {
            "params": [
              2000.0
            ],
            "type": "gt"
          },
          "operator": {
            "type": "and"
          },
          "reducer": {
            "params": [],
            "type": "avg"
          },
          "type": "query"
        }
      ],
      "for": "1m",
      "intervalSec": 20,
      "severity": "p2"
    },
    {
      "name": "consensus_round_high_avg",
      "title": "Consensus round high average",
      "ruleGroup": "consensus",
      "expr": "avg_over_time(consensus_round{cluster=~\"$cluster\", namespace=~\"$namespace\"}[10m])",
      "conditions": [
        {
          "evaluator": {
            "params": [
              0.2
            ],
            "type": "gt"
          },
          "operator": {
            "type": "and"
          },
          "reducer": {
            "params": [],
            "type": "avg"
          },
          "type": "query"
        }
      ],
      "for": "1m",
      "intervalSec": 20,
      "severity": "p2"
    },
    {
      "name": "native_compilation_error",
      "title": "Native compilation alert",
      "ruleGroup": "batcher",
      "expr": "increase(native_compilation_error[1m])",
      "conditions": [
        {
          "evaluator": {
            "params": [
              0.0
            ],
            "type": "gt"
          },
          "operator": {
            "type": "and"
          },
          "reducer": {
            "params": [],
            "type": "avg"
          },
          "type": "query"
        }
      ],
      "for": "1m",
      "intervalSec": 20,
      "severity": "p5"
    },
    {
      "name": "state_sync_lag",
      "title": "State sync lag",
      "ruleGroup": "state_sync",
      "expr": "min_over_time((apollo_central_sync_central_block_marker{cluster=~\"$cluster\", namespace=~\"$namespace\"} - apollo_state_sync_class_manager_marker{cluster=~\"$cluster\", namespace=~\"$namespace\"})[3m])",
      "conditions": [
        {
          "evaluator": {
            "params": [
              5.0
            ],
            "type": "gt"
          },
          "operator": {
            "type": "and"
          },
          "reducer": {
            "params": [],
            "type": "avg"
          },
          "type": "query"
        }
      ],
      "for": "3m",
      "intervalSec": 20,
      "severity": "p2"
    },
    {
      "name": "state_sync_stuck",
      "title": "State sync stuck",
      "ruleGroup": "state_sync",
      "expr": "rate(apollo_state_sync_class_manager_marker{cluster=~\"$cluster\", namespace=~\"$namespace\"}[1m])",
      "conditions": [
        {
          "evaluator": {
            "params": [
              0.0001
            ],
            "type": "lt"
          },
          "operator": {
            "type": "and"
          },
          "reducer": {
            "params": [],
            "type": "avg"
          },
          "type": "query"
        }
      ],
      "for": "3m",
      "intervalSec": 60,
      "severity": "p2"
    },
    {
      "name": "batched_transactions_stuck",
      "title": "Batched transactions stuck",
      "ruleGroup": "batcher",
      "expr": "changes(batcher_batched_transactions{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])",
      "conditions": [
        {
          "evaluator": {
            "params": [
              1.0
            ],
            "type": "lt"
          },
          "operator": {
            "type": "and"
          },
          "reducer": {
            "params": [],
            "type": "avg"
          },
          "type": "query"
        }
      ],
      "for": "1s",
      "intervalSec": 10,
      "severity": "p2"
    },
    {
      "name": "last_batched_block_stuck",
      "title": "Last batched block stuck",
      "ruleGroup": "batcher",
      "expr": "changes(batcher_last_batched_block{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])",
      "conditions": [
        {
          "evaluator": {
            "params": [
              1.0
            ],
            "type": "lt"
          },
          "operator": {
            "type": "and"
          },
          "reducer": {
            "params": [],
            "type": "avg"
          },
          "type": "query"
        }
      ],
      "for": "1s",
      "intervalSec": 10,
      "severity": "p2"
    }
  ]
}

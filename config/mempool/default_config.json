{
  "batcher_config.storage.db_config.chain_id": {
    "description": "The chain to follow. For more details see https://docs.starknet.io/documentation/architecture_and_concepts/Blocks/transactions/#chain-id.",
    "pointer_target": "chain_id",
    "privacy": "Public"
  },
  "batcher_config.storage.db_config.enforce_file_exists": {
    "description": "Whether to enforce that the path exists. If true, `open_env` fails when the mdbx.dat file does not exist.",
    "privacy": "Public",
    "value": true
  },
  "batcher_config.storage.db_config.growth_step": {
    "description": "The growth step in bytes, must be greater than zero to allow the database to grow.",
    "privacy": "Public",
    "value": 4294967296
  },
  "batcher_config.storage.db_config.max_size": {
    "description": "The maximum size of the node's storage in bytes.",
    "privacy": "Public",
    "value": 1099511627776
  },
  "batcher_config.storage.db_config.min_size": {
    "description": "The minimum size of the node's storage in bytes.",
    "privacy": "Public",
    "value": 1048576
  },
  "batcher_config.storage.db_config.path_prefix": {
    "description": "Prefix of the path of the node's storage directory, the storage file path will be <path_prefix>/<chain_id>. The path is not created automatically.",
    "privacy": "Public",
    "value": "."
  },
  "batcher_config.storage.mmap_file_config.growth_step": {
    "description": "The growth step in bytes, must be greater than max_object_size.",
    "privacy": "Public",
    "value": 1073741824
  },
  "batcher_config.storage.mmap_file_config.max_object_size": {
    "description": "The maximum size of a single object in the file in bytes",
    "privacy": "Public",
    "value": 268435456
  },
  "batcher_config.storage.mmap_file_config.max_size": {
    "description": "The maximum size of a memory mapped file in bytes. Must be greater than growth_step.",
    "privacy": "Public",
    "value": 1099511627776
  },
  "batcher_config.storage.scope": {
    "description": "The categories of data saved in storage.",
    "privacy": "Public",
    "value": "StateOnly"
  },
  "chain_id": {
    "description": "The chain to follow.",
    "privacy": "TemporaryValue",
    "value": "SN_MAIN"
  },
  "compiler_config.max_bytecode_size": {
    "description": "Limitation of contract bytecode size.",
    "privacy": "Public",
    "value": 81920
  },
  "components.batcher.component_type": {
    "description": "The component type.",
    "privacy": "Public",
    "value": "Reactive"
  },
  "components.batcher.execute": {
    "description": "The component execution flag.",
    "privacy": "Public",
    "value": true
  },
  "components.batcher.local_config.#is_none": {
    "description": "Flag for an optional field.",
    "privacy": "TemporaryValue",
    "value": false
  },
  "components.batcher.local_config.channel_buffer_size": {
    "description": "The communication channel buffer size.",
    "privacy": "Public",
    "value": 32
  },
  "components.batcher.location": {
    "description": "The component location.",
    "privacy": "Public",
    "value": "Local"
  },
  "components.batcher.remote_config.#is_none": {
    "description": "Flag for an optional field.",
    "privacy": "TemporaryValue",
    "value": true
  },
  "components.batcher.remote_config.ip": {
    "description": "The remote component server ip.",
    "privacy": "Public",
    "value": "0.0.0.0"
  },
  "components.batcher.remote_config.port": {
    "description": "The remote component server port.",
    "privacy": "Public",
    "value": 8080
  },
  "components.batcher.remote_config.retries": {
    "description": "The max number of retries for sending a message.",
    "privacy": "Public",
    "value": 3
  },
  "components.consensus_manager.component_type": {
    "description": "The component type.",
    "privacy": "Public",
    "value": "Reactive"
  },
  "components.consensus_manager.execute": {
    "description": "The component execution flag.",
    "privacy": "Public",
    "value": true
  },
  "components.consensus_manager.local_config.#is_none": {
    "description": "Flag for an optional field.",
    "privacy": "TemporaryValue",
    "value": false
  },
  "components.consensus_manager.local_config.channel_buffer_size": {
    "description": "The communication channel buffer size.",
    "privacy": "Public",
    "value": 32
  },
  "components.consensus_manager.location": {
    "description": "The component location.",
    "privacy": "Public",
    "value": "Local"
  },
  "components.consensus_manager.remote_config.#is_none": {
    "description": "Flag for an optional field.",
    "privacy": "TemporaryValue",
    "value": true
  },
  "components.consensus_manager.remote_config.ip": {
    "description": "The remote component server ip.",
    "privacy": "Public",
    "value": "0.0.0.0"
  },
  "components.consensus_manager.remote_config.port": {
    "description": "The remote component server port.",
    "privacy": "Public",
    "value": 8080
  },
  "components.consensus_manager.remote_config.retries": {
    "description": "The max number of retries for sending a message.",
    "privacy": "Public",
    "value": 3
  },
  "components.gateway.component_type": {
    "description": "The component type.",
    "privacy": "Public",
    "value": "Autonomous"
  },
  "components.gateway.execute": {
    "description": "The component execution flag.",
    "privacy": "Public",
    "value": true
  },
  "components.gateway.local_config.#is_none": {
    "description": "Flag for an optional field.",
    "privacy": "TemporaryValue",
    "value": false
  },
  "components.gateway.local_config.channel_buffer_size": {
    "description": "The communication channel buffer size.",
    "privacy": "Public",
    "value": 32
  },
  "components.gateway.location": {
    "description": "The component location.",
    "privacy": "Public",
    "value": "Local"
  },
  "components.gateway.remote_config.#is_none": {
    "description": "Flag for an optional field.",
    "privacy": "TemporaryValue",
    "value": true
  },
  "components.gateway.remote_config.ip": {
    "description": "The remote component server ip.",
    "privacy": "Public",
    "value": "0.0.0.0"
  },
  "components.gateway.remote_config.port": {
    "description": "The remote component server port.",
    "privacy": "Public",
    "value": 8080
  },
  "components.gateway.remote_config.retries": {
    "description": "The max number of retries for sending a message.",
    "privacy": "Public",
    "value": 3
  },
  "components.mempool.component_type": {
    "description": "The component type.",
    "privacy": "Public",
    "value": "Reactive"
  },
  "components.mempool.execute": {
    "description": "The component execution flag.",
    "privacy": "Public",
    "value": true
  },
  "components.mempool.local_config.#is_none": {
    "description": "Flag for an optional field.",
    "privacy": "TemporaryValue",
    "value": false
  },
  "components.mempool.local_config.channel_buffer_size": {
    "description": "The communication channel buffer size.",
    "privacy": "Public",
    "value": 32
  },
  "components.mempool.location": {
    "description": "The component location.",
    "privacy": "Public",
    "value": "Local"
  },
  "components.mempool.remote_config.#is_none": {
    "description": "Flag for an optional field.",
    "privacy": "TemporaryValue",
    "value": true
  },
  "components.mempool.remote_config.ip": {
    "description": "The remote component server ip.",
    "privacy": "Public",
    "value": "0.0.0.0"
  },
  "components.mempool.remote_config.port": {
    "description": "The remote component server port.",
    "privacy": "Public",
    "value": 8080
  },
  "components.mempool.remote_config.retries": {
    "description": "The max number of retries for sending a message.",
    "privacy": "Public",
    "value": 3
  },
  "consensus_manager_config.consensus_config_param_1": {
    "description": "The first consensus manager configuration parameter",
    "privacy": "Public",
    "value": 1
  },
  "gateway_config.stateful_tx_validator_config.chain_info.chain_id": {
    "description": "The chain ID of the StarkNet chain.",
    "privacy": "Public",
    "value": "0x0"
  },
  "gateway_config.stateful_tx_validator_config.chain_info.fee_token_addresses.eth_fee_token_address": {
    "description": "Address of the ETH fee token.",
    "privacy": "Public",
    "value": "0x0"
  },
  "gateway_config.stateful_tx_validator_config.chain_info.fee_token_addresses.strk_fee_token_address": {
    "description": "Address of the STRK fee token.",
    "privacy": "Public",
    "value": "0x0"
  },
  "gateway_config.stateful_tx_validator_config.max_nonce_for_validation_skip": {
    "description": "Maximum nonce for which the validation is skipped.",
    "privacy": "Public",
    "value": "0x1"
  },
  "gateway_config.stateful_tx_validator_config.max_recursion_depth": {
    "description": "Maximum recursion depth for nested calls during blockifier validation.",
    "privacy": "Public",
    "value": 50
  },
  "gateway_config.stateful_tx_validator_config.validate_max_n_steps": {
    "description": "Maximum number of steps the validation function is allowed to take.",
    "privacy": "Public",
    "value": 1000000
  },
  "gateway_config.stateless_tx_validator_config.max_calldata_length": {
    "description": "Limitation of calldata length.",
    "privacy": "Public",
    "value": 4000
  },
  "gateway_config.stateless_tx_validator_config.max_contract_class_object_size": {
    "description": "Limitation of contract class object size.",
    "privacy": "Public",
    "value": 4089446
  },
  "gateway_config.stateless_tx_validator_config.max_sierra_version.major": {
    "description": "The major version of the configuration.",
    "privacy": "Public",
    "value": 1
  },
  "gateway_config.stateless_tx_validator_config.max_sierra_version.minor": {
    "description": "The minor version of the configuration.",
    "privacy": "Public",
    "value": 5
  },
  "gateway_config.stateless_tx_validator_config.max_sierra_version.patch": {
    "description": "The patch version of the configuration.",
    "privacy": "Public",
    "value": 18446744073709551615
  },
  "gateway_config.stateless_tx_validator_config.max_signature_length": {
    "description": "Limitation of signature length.",
    "privacy": "Public",
    "value": 4000
  },
  "gateway_config.stateless_tx_validator_config.min_sierra_version.major": {
    "description": "The major version of the configuration.",
    "privacy": "Public",
    "value": 1
  },
  "gateway_config.stateless_tx_validator_config.min_sierra_version.minor": {
    "description": "The minor version of the configuration.",
    "privacy": "Public",
    "value": 1
  },
  "gateway_config.stateless_tx_validator_config.min_sierra_version.patch": {
    "description": "The patch version of the configuration.",
    "privacy": "Public",
    "value": 0
  },
  "gateway_config.stateless_tx_validator_config.validate_non_zero_l1_gas_fee": {
    "description": "If true, validates that a transaction has non-zero L1 resource bounds.",
    "privacy": "Public",
    "value": true
  },
  "gateway_config.stateless_tx_validator_config.validate_non_zero_l2_gas_fee": {
    "description": "If true, validates that a transaction has non-zero L2 resource bounds.",
    "privacy": "Public",
    "value": false
  },
  "http_server_config.ip": {
    "description": "The http server ip.",
    "privacy": "Public",
    "value": "0.0.0.0"
  },
  "http_server_config.port": {
    "description": "The http server port.",
    "privacy": "Public",
    "value": 8080
  },
  "rpc_state_reader_config.json_rpc_version": {
    "description": "The json rpc version.",
    "privacy": "Public",
    "value": ""
  },
  "rpc_state_reader_config.url": {
    "description": "The url of the rpc server.",
    "privacy": "Public",
    "value": ""
  }
}
Running integration test alias: positive
    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.41s
==> Building test: integration_test_positive_flow
    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.39s
==> Running test: integration_test_positive_flow
[2m2025-03-02T17:37:43.871004Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::trace_util[0m[2m:[0m Tracing has been successfully initialized.
[2m2025-03-02T17:37:43.871081Z[0m [32m INFO[0m [2mstarknet_integration_tests::integration_test_utils[0m[2m:[0m Running sequencer node end to end positive flow integration test setup.
[2m2025-03-02T17:37:43.879329Z[0m [32m INFO[0m [2mstarknet_integration_tests::integration_test_utils[0m[2m:[0m Ephemeral port range set successfully.
[2m2025-03-02T17:37:43.879439Z[0m [33m WARN[0m [2mstarknet_integration_tests::integration_test_utils[0m[2m:[0m This test uses a compiled sequencer node binary located at /home/itay/workspace/sequencer1/target/debug/starknet_sequencer_node. Make sure to pre-compile the binary before running this test. Alternatively, you can compile the binary and run this test with './scripts/sequencer_integration_test.sh positive'
[2m2025-03-02T17:37:43.879465Z[0m [32m INFO[0m [2mstarknet_integration_tests::sequencer_manager[0m[2m:[0m Checking that the sequencer node executable is present.
[2m2025-03-02T17:37:43.881831Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55540 in range [55540,55600]
[2m2025-03-02T17:37:43.881855Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55541 in range [55540,55600]
[2m2025-03-02T17:37:43.881864Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55542 in range [55540,55600]
[2m2025-03-02T17:37:43.881873Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55543 in range [55540,55600]
[2m2025-03-02T17:37:43.881881Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55544 in range [55540,55600]
[2m2025-03-02T17:37:43.881912Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55545 in range [55540,55600]
[2m2025-03-02T17:37:43.881921Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55546 in range [55540,55600]
[2m2025-03-02T17:37:43.881929Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55547 in range [55540,55600]
[2m2025-03-02T17:37:43.881937Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55548 in range [55540,55600]
[2m2025-03-02T17:37:43.881946Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55549 in range [55540,55600]
[2m2025-03-02T17:37:43.881966Z[0m [32m INFO[0m [2mstarknet_integration_tests::sequencer_manager[0m[2m:[0m Creating node configurations.
[2m2025-03-02T17:37:43.881996Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55550 in range [55540,55600]
[2m2025-03-02T17:37:43.882005Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55551 in range [55540,55600]
[2m2025-03-02T17:37:43.882013Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55552 in range [55540,55600]
[2m2025-03-02T17:37:43.882021Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55553 in range [55540,55600]
[2m2025-03-02T17:37:43.882029Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55554 in range [55540,55600]
[2m2025-03-02T17:37:43.882037Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55555 in range [55540,55600]
[2m2025-03-02T17:37:43.882044Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55556 in range [55540,55600]
[2m2025-03-02T17:37:43.882610Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55557 in range [55540,55600]
[2m2025-03-02T17:37:43.882637Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55558 in range [55540,55600]
[2m2025-03-02T17:37:43.882645Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55559 in range [55540,55600]
[2m2025-03-02T17:37:43.882653Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55560 in range [55540,55600]
[2m2025-03-02T17:37:43.882660Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55561 in range [55540,55600]
[2m2025-03-02T17:37:43.882667Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55562 in range [55540,55600]
[2m2025-03-02T17:37:43.882675Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55563 in range [55540,55600]
[2m2025-03-02T17:37:43.882878Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55564 in range [55540,55600]
[2m2025-03-02T17:37:43.882889Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55565 in range [55540,55600]
[2m2025-03-02T17:37:43.882897Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55566 in range [55540,55600]
[2m2025-03-02T17:37:43.882904Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55567 in range [55540,55600]
[2m2025-03-02T17:37:43.882912Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55568 in range [55540,55600]
[2m2025-03-02T17:37:43.882919Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55569 in range [55540,55600]
[2m2025-03-02T17:37:43.882926Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55570 in range [55540,55600]
[2m2025-03-02T17:37:44.005077Z[0m [32m INFO[0m [2mpapyrus_storage[0m[2m:[0m Opening storage: /tmp/.tmpGYQTay
[2m2025-03-02T17:37:44.103151Z[0m [32m INFO[0m [2mpapyrus_storage[0m[2m:[0m Opening storage: /tmp/.tmpSJyNou
[2m2025-03-02T17:37:44.193164Z[0m [32m INFO[0m [2mpapyrus_storage[0m[2m:[0m Opening storage: /tmp/.tmpVDY545
[2m2025-03-02T17:37:45.566624Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55000 in range [55000,55060]
[2m2025-03-02T17:37:45.566788Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55001 in range [55000,55060]
[2m2025-03-02T17:37:45.566831Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55002 in range [55000,55060]
[2m2025-03-02T17:37:45.600208Z[0m [32m INFO[0m [2mstarknet_sequencer_node::config::config_utils[0m[2m:[0m Writing required config changes to: "/tmp/.tmp1Vm4JV/node_integration_test_config_changes.json"
[2m2025-03-02T17:37:45.701250Z[0m [32m INFO[0m [2mpapyrus_storage[0m[2m:[0m Opening storage: /tmp/.tmp5SUm56
[2m2025-03-02T17:37:45.792145Z[0m [32m INFO[0m [2mpapyrus_storage[0m[2m:[0m Opening storage: /tmp/.tmpvIYuWt
[2m2025-03-02T17:37:45.866390Z[0m [32m INFO[0m [2mpapyrus_storage[0m[2m:[0m Opening storage: /tmp/.tmpAqwCgl
[2m2025-03-02T17:37:47.334427Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55060 in range [55060,55120]
[2m2025-03-02T17:37:47.334568Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55061 in range [55060,55120]
[2m2025-03-02T17:37:47.334597Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55062 in range [55060,55120]
[2m2025-03-02T17:37:47.368185Z[0m [32m INFO[0m [2mstarknet_sequencer_node::config::config_utils[0m[2m:[0m Writing required config changes to: "/tmp/.tmpJJwqCl/node_integration_test_config_changes.json"
[2m2025-03-02T17:37:47.479088Z[0m [32m INFO[0m [2mpapyrus_storage[0m[2m:[0m Opening storage: /tmp/.tmpCcrqF1
[2m2025-03-02T17:37:47.581091Z[0m [32m INFO[0m [2mpapyrus_storage[0m[2m:[0m Opening storage: /tmp/.tmpTCrQie
[2m2025-03-02T17:37:47.659802Z[0m [32m INFO[0m [2mpapyrus_storage[0m[2m:[0m Opening storage: /tmp/.tmpUO1mgV
[2m2025-03-02T17:37:49.131443Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55120 in range [55120,55180]
[2m2025-03-02T17:37:49.131617Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55121 in range [55120,55180]
[2m2025-03-02T17:37:49.131646Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55122 in range [55120,55180]
[2m2025-03-02T17:37:49.165608Z[0m [32m INFO[0m [2mstarknet_sequencer_node::config::config_utils[0m[2m:[0m Writing required config changes to: "/tmp/.tmplClyjq/node_integration_test_config_changes.json"
[2m2025-03-02T17:37:49.276658Z[0m [32m INFO[0m [2mpapyrus_storage[0m[2m:[0m Opening storage: /tmp/.tmpXLLEzC
[2m2025-03-02T17:37:49.354349Z[0m [32m INFO[0m [2mpapyrus_storage[0m[2m:[0m Opening storage: /tmp/.tmpphy677
[2m2025-03-02T17:37:49.435533Z[0m [32m INFO[0m [2mpapyrus_storage[0m[2m:[0m Opening storage: /tmp/.tmpo2fbuc
[2m2025-03-02T17:37:50.841160Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55180 in range [55180,55240]
[2m2025-03-02T17:37:50.841405Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55181 in range [55180,55240]
[2m2025-03-02T17:37:50.841471Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55182 in range [55180,55240]
[2m2025-03-02T17:37:50.878049Z[0m [32m INFO[0m [2mstarknet_sequencer_node::config::config_utils[0m[2m:[0m Writing required config changes to: "/tmp/.tmpId1quG/node_integration_test_config_changes.json"
[2m2025-03-02T17:37:50.978434Z[0m [32m INFO[0m [2mpapyrus_storage[0m[2m:[0m Opening storage: /tmp/.tmpUbQi81
[2m2025-03-02T17:37:51.078532Z[0m [32m INFO[0m [2mpapyrus_storage[0m[2m:[0m Opening storage: /tmp/.tmpLkBlZ4
[2m2025-03-02T17:37:51.156497Z[0m [32m INFO[0m [2mpapyrus_storage[0m[2m:[0m Opening storage: /tmp/.tmpMtMEz2
[2m2025-03-02T17:37:52.557103Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55240 in range [55240,55300]
[2m2025-03-02T17:37:52.557264Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55241 in range [55240,55300]
[2m2025-03-02T17:37:52.557307Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55242 in range [55240,55300]
[2m2025-03-02T17:37:52.589337Z[0m [32m INFO[0m [2mstarknet_sequencer_node::config::config_utils[0m[2m:[0m Writing required config changes to: "/tmp/.tmpGOih8x/node_integration_test_config_changes.json"
[2m2025-03-02T17:37:52.707832Z[0m [32m INFO[0m [2mpapyrus_storage[0m[2m:[0m Opening storage: /tmp/.tmpVXeHAz
[2m2025-03-02T17:37:52.799324Z[0m [32m INFO[0m [2mpapyrus_storage[0m[2m:[0m Opening storage: /tmp/.tmpnRGosp
[2m2025-03-02T17:37:52.877985Z[0m [32m INFO[0m [2mpapyrus_storage[0m[2m:[0m Opening storage: /tmp/.tmpMclo1l
[2m2025-03-02T17:37:54.229637Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55300 in range [55300,55360]
[2m2025-03-02T17:37:54.229792Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55301 in range [55300,55360]
[2m2025-03-02T17:37:54.229827Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55302 in range [55300,55360]
[2m2025-03-02T17:37:54.261314Z[0m [32m INFO[0m [2mstarknet_sequencer_node::config::config_utils[0m[2m:[0m Writing required config changes to: "/tmp/.tmpxkcQqq/node_integration_test_config_changes.json"
[2m2025-03-02T17:37:54.363458Z[0m [32m INFO[0m [2mpapyrus_storage[0m[2m:[0m Opening storage: /tmp/.tmpnKRux4
[2m2025-03-02T17:37:54.451919Z[0m [32m INFO[0m [2mpapyrus_storage[0m[2m:[0m Opening storage: /tmp/.tmpontX6C
[2m2025-03-02T17:37:54.532432Z[0m [32m INFO[0m [2mpapyrus_storage[0m[2m:[0m Opening storage: /tmp/.tmp40RFP4
[2m2025-03-02T17:37:56.030964Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55360 in range [55360,55420]
[2m2025-03-02T17:37:56.031104Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55361 in range [55360,55420]
[2m2025-03-02T17:37:56.031131Z[0m [32m INFO[0m [2mstarknet_infra_utils::test_utils[0m[2m:[0m Allocated port: 55362 in range [55360,55420]
[2m2025-03-02T17:37:56.065160Z[0m [32m INFO[0m [2mstarknet_sequencer_node::config::config_utils[0m[2m:[0m Writing required config changes to: "/tmp/.tmpubK9EH/node_integration_test_config_changes.json"
[2m2025-03-02T17:37:56.065438Z[0m [32m INFO[0m [2mstarknet_integration_tests::sequencer_manager[0m[2m:[0m Running specified nodes.
[2m2025-03-02T17:37:56.065455Z[0m [32m INFO[0m [2mstarknet_integration_tests::sequencer_manager[0m[2m:[0m Running node 3.
[2m2025-03-02T17:37:56.065465Z[0m [32m INFO[0m [2mstarknet_integration_tests::sequencer_manager[0m[2m:[0m Running Node id 3 part 0.
[2m2025-03-02T17:37:56.065546Z[0m [32m INFO[0m [2mstarknet_integration_tests::sequencer_manager[0m[2m:[0m Running Node id 3 part 1.
[2m2025-03-02T17:37:56.065557Z[0m [32m INFO[0m [2mstarknet_integration_tests::sequencer_manager[0m[2m:[0m Running node 2.
[2m2025-03-02T17:37:56.065561Z[0m [32m INFO[0m [2mstarknet_integration_tests::sequencer_manager[0m[2m:[0m Running Node id 2 part 0.
[2m2025-03-02T17:37:56.065570Z[0m [32m INFO[0m [2mstarknet_integration_tests::sequencer_manager[0m[2m:[0m Running node 4.
[2m2025-03-02T17:37:56.065574Z[0m [32m INFO[0m [2mstarknet_integration_tests::sequencer_manager[0m[2m:[0m Running Node id 4 part 0.
[2m2025-03-02T17:37:56.065579Z[0m [32m INFO[0m [2mstarknet_integration_tests::sequencer_manager[0m[2m:[0m Running Node id 4 part 1.
[2m2025-03-02T17:37:56.065584Z[0m [32m INFO[0m [2mstarknet_integration_tests::sequencer_manager[0m[2m:[0m Running node 0.
[2m2025-03-02T17:37:56.065588Z[0m [32m INFO[0m [2mstarknet_integration_tests::sequencer_manager[0m[2m:[0m Running Node id 0 part 0.
[2m2025-03-02T17:37:56.065595Z[0m [32m INFO[0m [2mstarknet_integration_tests::sequencer_manager[0m[2m:[0m Running node 1.
[2m2025-03-02T17:37:56.065598Z[0m [32m INFO[0m [2mstarknet_integration_tests::sequencer_manager[0m[2m:[0m Running Node id 1 part 0.
[2m2025-03-02T17:37:56.065622Z[0m [32m INFO[0m [2mstarknet_monitoring_endpoint::test_utils[0m[2m:[0m Querying the node for aliveness.
[2m2025-03-02T17:37:56.065668Z[0m [32m INFO[0m [2mstarknet_sequencer_node::test_utils::node_runner[0m[2m:[0m Running the node from its spawned task.
[2m2025-03-02T17:37:56.065688Z[0m [32m INFO[0m [2mstarknet_sequencer_node::test_utils::node_runner[0m[2m:[0m Running the node from its spawned task.
[2m2025-03-02T17:37:56.065670Z[0m [32m INFO[0m [2mstarknet_sequencer_node::test_utils::node_runner[0m[2m:[0m Running the node from its spawned task.
[2m2025-03-02T17:37:56.065712Z[0m [32m INFO[0m [2mstarknet_sequencer_node::test_utils::node_runner[0m[2m:[0m Running the node from its spawned task.
[2m2025-03-02T17:37:56.065797Z[0m [32m INFO[0m [2mstarknet_sequencer_node::test_utils::node_runner[0m[2m:[0m Running the node from its spawned task.
[2m2025-03-02T17:37:56.065785Z[0m [32m INFO[0m [2mstarknet_sequencer_node::test_utils::node_runner[0m[2m:[0m Running the node from its spawned task.
[2m2025-03-02T17:37:56.065835Z[0m [32m INFO[0m [2mstarknet_sequencer_node::test_utils::node_runner[0m[2m:[0m Running the node from its spawned task.
[2m2025-03-02T17:37:56.065830Z[0m [32m INFO[0m [1mspawn_node_child_process[0m: [2mstarknet_sequencer_node::test_utils::node_runner[0m[2m:[0m Getting the node executable. [2m[3mnode_config_path[0m[2m=[0m"/tmp/.tmpxkcQqq/node_integration_test_config_changes.json"[0m
[2m2025-03-02T17:37:56.065830Z[0m [32m INFO[0m [1mspawn_node_child_process[0m: [2mstarknet_sequencer_node::test_utils::node_runner[0m[2m:[0m Getting the node executable. [2m[3mnode_config_path[0m[2m=[0m"/tmp/.tmpGOih8x/node_integration_test_config_changes.json"[0m
[2m2025-03-02T17:37:56.065830Z[0m [32m INFO[0m [1mspawn_node_child_process[0m: [2mstarknet_sequencer_node::test_utils::node_runner[0m[2m:[0m Getting the node executable. [2m[3mnode_config_path[0m[2m=[0m"/tmp/.tmplClyjq/node_integration_test_config_changes.json"[0m
[2m2025-03-02T17:37:56.065830Z[0m [32m INFO[0m [1mspawn_node_child_process[0m: [2mstarknet_sequencer_node::test_utils::node_runner[0m[2m:[0m Getting the node executable. [2m[3mnode_config_path[0m[2m=[0m"/tmp/.tmpId1quG/node_integration_test_config_changes.json"[0m
[2m2025-03-02T17:37:56.065895Z[0m [32m INFO[0m [1mspawn_node_child_process[0m: [2mstarknet_sequencer_node::test_utils::node_runner[0m[2m:[0m Getting the node executable. [2m[3mnode_config_path[0m[2m=[0m"/tmp/.tmp1Vm4JV/node_integration_test_config_changes.json"[0m
[2m2025-03-02T17:37:56.065901Z[0m [32m INFO[0m [1mspawn_node_child_process[0m: [2mstarknet_sequencer_node::test_utils::node_runner[0m[2m:[0m Getting the node executable. [2m[3mnode_config_path[0m[2m=[0m"/tmp/.tmpJJwqCl/node_integration_test_config_changes.json"[0m
[2m2025-03-02T17:37:56.065919Z[0m [32m INFO[0m [1mspawn_node_child_process[0m: [2mstarknet_sequencer_node::test_utils::node_runner[0m[2m:[0m Running the node from: /home/itay/workspace/sequencer1/target/debug/starknet_sequencer_node [2m[3mnode_config_path[0m[2m=[0m"/tmp/.tmpxkcQqq/node_integration_test_config_changes.json"[0m
[2m2025-03-02T17:37:56.065919Z[0m [32m INFO[0m [1mspawn_node_child_process[0m: [2mstarknet_sequencer_node::test_utils::node_runner[0m[2m:[0m Running the node from: /home/itay/workspace/sequencer1/target/debug/starknet_sequencer_node [2m[3mnode_config_path[0m[2m=[0m"/tmp/.tmpGOih8x/node_integration_test_config_changes.json"[0m
[2m2025-03-02T17:37:56.065926Z[0m [32m INFO[0m [1mspawn_node_child_process[0m: [2mstarknet_sequencer_node::test_utils::node_runner[0m[2m:[0m Running the node from: /home/itay/workspace/sequencer1/target/debug/starknet_sequencer_node [2m[3mnode_config_path[0m[2m=[0m"/tmp/.tmplClyjq/node_integration_test_config_changes.json"[0m
[2m2025-03-02T17:37:56.065934Z[0m [32m INFO[0m [1mspawn_node_child_process[0m: [2mstarknet_sequencer_node::test_utils::node_runner[0m[2m:[0m Running the node from: /home/itay/workspace/sequencer1/target/debug/starknet_sequencer_node [2m[3mnode_config_path[0m[2m=[0m"/tmp/.tmpId1quG/node_integration_test_config_changes.json"[0m
[2m2025-03-02T17:37:56.065957Z[0m [32m INFO[0m [2mstarknet_monitoring_endpoint::test_utils[0m[2m:[0m Querying the node for aliveness.
[2m2025-03-02T17:37:56.065947Z[0m [32m INFO[0m [1mspawn_node_child_process[0m: [2mstarknet_sequencer_node::test_utils::node_runner[0m[2m:[0m Running the node from: /home/itay/workspace/sequencer1/target/debug/starknet_sequencer_node [2m[3mnode_config_path[0m[2m=[0m"/tmp/.tmpJJwqCl/node_integration_test_config_changes.json"[0m
[2m2025-03-02T17:37:56.065947Z[0m [32m INFO[0m [1mspawn_node_child_process[0m: [2mstarknet_sequencer_node::test_utils::node_runner[0m[2m:[0m Running the node from: /home/itay/workspace/sequencer1/target/debug/starknet_sequencer_node [2m[3mnode_config_path[0m[2m=[0m"/tmp/.tmp1Vm4JV/node_integration_test_config_changes.json"[0m
[2m2025-03-02T17:37:56.065926Z[0m [32m INFO[0m [1mspawn_node_child_process[0m: [2mstarknet_sequencer_node::test_utils::node_runner[0m[2m:[0m Getting the node executable. [2m[3mnode_config_path[0m[2m=[0m"/tmp/.tmpubK9EH/node_integration_test_config_changes.json"[0m
[2m2025-03-02T17:37:56.066010Z[0m [32m INFO[0m [2mstarknet_monitoring_endpoint::test_utils[0m[2m:[0m Querying the node for aliveness.
[2m2025-03-02T17:37:56.066001Z[0m [32m INFO[0m [1mspawn_node_child_process[0m: [2mstarknet_sequencer_node::test_utils::node_runner[0m[2m:[0m Running the node from: /home/itay/workspace/sequencer1/target/debug/starknet_sequencer_node [2m[3mnode_config_path[0m[2m=[0m"/tmp/.tmpubK9EH/node_integration_test_config_changes.json"[0m
[2m2025-03-02T17:37:56.066050Z[0m [32m INFO[0m [2mstarknet_monitoring_endpoint::test_utils[0m[2m:[0m Querying the node for aliveness.
[2m2025-03-02T17:37:56.066089Z[0m [32m INFO[0m [2mstarknet_monitoring_endpoint::test_utils[0m[2m:[0m Querying the node for aliveness.
[2m2025-03-02T17:37:56.066123Z[0m [32m INFO[0m [2mstarknet_monitoring_endpoint::test_utils[0m[2m:[0m Querying the node for aliveness.
[2m2025-03-02T17:37:56.066214Z[0m [32m INFO[0m [2mstarknet_monitoring_endpoint::test_utils[0m[2m:[0m Querying the node for aliveness.
[2m2025-03-02T17:37:56.066495Z[0m [32m INFO[0m [2mstarknet_infra_utils::tracing[0m[2m:[0m Waiting for node to be alive: Attempt 1/50, Value false
[2m2025-03-02T17:37:56.066602Z[0m [32m INFO[0m [2mstarknet_infra_utils::tracing[0m[2m:[0m Waiting for node to be alive: Attempt 1/50, Value false
[2m2025-03-02T17:37:56.066659Z[0m [32m INFO[0m [2mstarknet_infra_utils::tracing[0m[2m:[0m Waiting for node to be alive: Attempt 1/50, Value false
[2m2025-03-02T17:37:56.066710Z[0m [32m INFO[0m [2mstarknet_infra_utils::tracing[0m[2m:[0m Waiting for node to be alive: Attempt 1/50, Value false
[2m2025-03-02T17:37:56.066762Z[0m [32m INFO[0m [2mstarknet_infra_utils::tracing[0m[2m:[0m Waiting for node to be alive: Attempt 1/50, Value false
[2m2025-03-02T17:37:56.066806Z[0m [32m INFO[0m [2mstarknet_infra_utils::tracing[0m[2m:[0m Waiting for node to be alive: Attempt 1/50, Value false
[2m2025-03-02T17:37:56.066848Z[0m [32m INFO[0m [2mstarknet_infra_utils::tracing[0m[2m:[0m Waiting for node to be alive: Attempt 1/50, Value false
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.075389Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::trace_util[0m[2m:[0m Tracing has been successfully initialized.
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.124760Z[0m [32m INFO[0m [2mpapyrus_config::loading[0m[2m:[0m Loading custom config file: "/tmp/.tmp1Vm4JV/node_integration_test_config_changes.json"
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.131498Z[0m [32m INFO[0m [1mload[0m: [2mpapyrus_config::loading[0m[2m:[0m config_map: {
[31mNode id 0 part 0:[0m   "base_layer_config.node_url": "https://node_url/",
[31mNode id 0 part 0:[0m   "base_layer_config.starknet_contract_address": "0xc662c410C0ECf747543f5bA90660f6ABeBD9C8c4",
[31mNode id 0 part 0:[0m   "batcher_config.block_builder_config.bouncer_config.block_max_capacity.l1_gas": 2500000,
[31mNode id 0 part 0:[0m   "batcher_config.block_builder_config.bouncer_config.block_max_capacity.message_segment_length": 3700,
[31mNode id 0 part 0:[0m   "batcher_config.block_builder_config.bouncer_config.block_max_capacity.n_events": 5000,
[31mNode id 0 part 0:[0m   "batcher_config.block_builder_config.bouncer_config.block_max_capacity.sierra_gas": 17000000,
[31mNode id 0 part 0:[0m   "batcher_config.block_builder_config.bouncer_config.block_max_capacity.state_diff_size": 4000,
[31mNode id 0 part 0:[0m   "batcher_config.block_builder_config.chain_info.chain_id": "CHAIN_ID_SUBDIR",
[31mNode id 0 part 0:[0m   "batcher_config.block_builder_config.chain_info.fee_token_addresses.eth_fee_token_address": "0x1001",
[31mNode id 0 part 0:[0m   "batcher_config.block_builder_config.chain_info.fee_token_addresses.strk_fee_token_address": "0x1002",
[31mNode id 0 part 0:[0m   "batcher_config.block_builder_config.execute_config.concurrency_config.chunk_size": 64,
[31mNode id 0 part 0:[0m   "batcher_config.block_builder_config.execute_config.concurrency_config.enabled": true,
[31mNode id 0 part 0:[0m   "batcher_config.block_builder_config.execute_config.concurrency_config.n_workers": 4,
[31mNode id 0 part 0:[0m   "batcher_config.block_builder_config.execute_config.stack_size": 62914560,
[31mNode id 0 part 0:[0m   "batcher_config.block_builder_config.tx_chunk_size": 100,
[31mNode id 0 part 0:[0m   "batcher_config.block_builder_config.versioned_constants_overrides.invoke_tx_max_n_steps": 10000000,
[31mNode id 0 part 0:[0m   "batcher_config.block_builder_config.versioned_constants_overrides.max_n_events": 1000,
[31mNode id 0 part 0:[0m   "batcher_config.block_builder_config.versioned_constants_overrides.max_recursion_depth": 50,
[31mNode id 0 part 0:[0m   "batcher_config.block_builder_config.versioned_constants_overrides.validate_max_n_steps": 1000000,
[31mNode id 0 part 0:[0m   "batcher_config.contract_class_manager_config.cairo_native_run_config.channel_size": 2000,
[31mNode id 0 part 0:[0m   "batcher_config.contract_class_manager_config.cairo_native_run_config.run_cairo_native": false,
[31mNode id 0 part 0:[0m   "batcher_config.contract_class_manager_config.cairo_native_run_config.wait_on_native_compilation": false,
[31mNode id 0 part 0:[0m   "batcher_config.contract_class_manager_config.contract_cache_size": 600,
[31mNode id 0 part 0:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.max_casm_bytecode_size": 81920,
[31mNode id 0 part 0:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.max_cpu_time": 20,
[31mNode id 0 part 0:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.max_memory_usage": 5368709120,
[31mNode id 0 part 0:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.max_native_bytecode_size": 15728640,
[31mNode id 0 part 0:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.optimization_level": 2,
[31mNode id 0 part 0:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.panic_on_compilation_failure": false,
[31mNode id 0 part 0:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.sierra_to_native_compiler_path": null,
[31mNode id 0 part 0:[0m   "batcher_config.input_stream_content_buffer_size": 400,
[31mNode id 0 part 0:[0m   "batcher_config.max_l1_handler_txs_per_block_proposal": 3,
[31mNode id 0 part 0:[0m   "batcher_config.outstream_content_buffer_size": 100,
[31mNode id 0 part 0:[0m   "batcher_config.storage.db_config.chain_id": "CHAIN_ID_SUBDIR",
[31mNode id 0 part 0:[0m   "batcher_config.storage.db_config.enforce_file_exists": false,
[31mNode id 0 part 0:[0m   "batcher_config.storage.db_config.growth_step": 67108864,
[31mNode id 0 part 0:[0m   "batcher_config.storage.db_config.max_size": 34359738368,
[31mNode id 0 part 0:[0m   "batcher_config.storage.db_config.min_size": 1048576,
[31mNode id 0 part 0:[0m   "batcher_config.storage.db_config.path_prefix": "/tmp/.tmpGYQTay",
[31mNode id 0 part 0:[0m   "batcher_config.storage.mmap_file_config.growth_step": 1048576,
[31mNode id 0 part 0:[0m   "batcher_config.storage.mmap_file_config.max_object_size": 65536,
[31mNode id 0 part 0:[0m   "batcher_config.storage.mmap_file_config.max_size": 16777216,
[31mNode id 0 part 0:[0m   "batcher_config.storage.scope": "StateOnly",
[31mNode id 0 part 0:[0m   "chain_id": "CHAIN_ID_SUBDIR",
[31mNode id 0 part 0:[0m   "class_manager_config.class_manager_config.cached_class_storage_config.class_cache_size": 100,
[31mNode id 0 part 0:[0m   "class_manager_config.class_manager_config.cached_class_storage_config.deprecated_class_cache_size": 100,
[31mNode id 0 part 0:[0m   "class_manager_config.class_storage_config.class_hash_storage_config.enforce_file_exists": false,
[31mNode id 0 part 0:[0m   "class_manager_config.class_storage_config.class_hash_storage_config.max_size": 1048576,
[31mNode id 0 part 0:[0m   "class_manager_config.class_storage_config.class_hash_storage_config.path_prefix": "/tmp/.tmpVDY545",
[31mNode id 0 part 0:[0m   "class_manager_config.class_storage_config.persistent_root": "/tmp/.tmpkugQWz",
[31mNode id 0 part 0:[0m   "compiler_config.max_casm_bytecode_size": 81920,
[31mNode id 0 part 0:[0m   "compiler_config.max_cpu_time": 20,
[31mNode id 0 part 0:[0m   "compiler_config.max_memory_usage": 5368709120,
[31mNode id 0 part 0:[0m   "compiler_config.max_native_bytecode_size": 15728640,
[31mNode id 0 part 0:[0m   "compiler_config.optimization_level": 2,
[31mNode id 0 part 0:[0m   "compiler_config.panic_on_compilation_failure": false,
[31mNode id 0 part 0:[0m   "compiler_config.sierra_to_native_compiler_path": null,
[31mNode id 0 part 0:[0m   "components.batcher.execution_mode": "LocalExecutionWithRemoteDisabled",
[31mNode id 0 part 0:[0m   "components.batcher.ip": "0.0.0.0",
[31mNode id 0 part 0:[0m   "components.batcher.local_server_config.channel_buffer_size": 32,
[31mNode id 0 part 0:[0m   "components.batcher.max_concurrency": 10,
[31mNode id 0 part 0:[0m   "components.batcher.port": 0,
[31mNode id 0 part 0:[0m   "components.batcher.remote_client_config.idle_connections": 18446744073709551615,
[31mNode id 0 part 0:[0m   "components.batcher.remote_client_config.idle_timeout": 90,
[31mNode id 0 part 0:[0m   "components.batcher.remote_client_config.retries": 3,
[31mNode id 0 part 0:[0m   "components.batcher.url": "localhost",
[31mNode id 0 part 0:[0m   "components.class_manager.execution_mode": "LocalExecutionWithRemoteDisabled",
[31mNode id 0 part 0:[0m   "components.class_manager.ip": "0.0.0.0",
[31mNode id 0 part 0:[0m   "components.class_manager.local_server_config.channel_buffer_size": 32,
[31mNode id 0 part 0:[0m   "components.class_manager.max_concurrency": 10,
[31mNode id 0 part 0:[0m   "components.class_manager.port": 0,
[31mNode id 0 part 0:[0m   "components.class_manager.remote_client_config.idle_connections": 18446744073709551615,
[31mNode id 0 part 0:[0m   "components.class_manager.remote_client_config.idle_timeout": 90,
[31mNode id 0 part 0:[0m   "components.class_manager.remote_client_config.retries": 3,
[31mNode id 0 part 0:[0m   "components.class_manager.url": "localhost",
[31mNode id 0 part 0:[0m   "components.consensus_manager.execution_mode": "Enabled",
[31mNode id 0 part 0:[0m   "components.gateway.execution_mode": "LocalExecutionWithRemoteDisabled",
[31mNode id 0 part 0:[0m   "components.gateway.ip": "0.0.0.0",
[31mNode id 0 part 0:[0m   "components.gateway.local_server_config.channel_buffer_size": 32,
[31mNode id 0 part 0:[0m   "components.gateway.max_concurrency": 10,
[31mNode id 0 part 0:[0m   "components.gateway.port": 0,
[31mNode id 0 part 0:[0m   "components.gateway.remote_client_config.idle_connections": 18446744073709551615,
[31mNode id 0 part 0:[0m   "components.gateway.remote_client_config.idle_timeout": 90,
[31mNode id 0 part 0:[0m   "components.gateway.remote_client_config.retries": 3,
[31mNode id 0 part 0:[0m   "components.gateway.url": "localhost",
[31mNode id 0 part 0:[0m   "components.http_server.execution_mode": "Enabled",
[31mNode id 0 part 0:[0m   "components.l1_provider.execution_mode": "LocalExecutionWithRemoteDisabled",
[31mNode id 0 part 0:[0m   "components.l1_provider.ip": "0.0.0.0",
[31mNode id 0 part 0:[0m   "components.l1_provider.local_server_config.channel_buffer_size": 32,
[31mNode id 0 part 0:[0m   "components.l1_provider.max_concurrency": 10,
[31mNode id 0 part 0:[0m   "components.l1_provider.port": 0,
[31mNode id 0 part 0:[0m   "components.l1_provider.remote_client_config.idle_connections": 18446744073709551615,
[31mNode id 0 part 0:[0m   "components.l1_provider.remote_client_config.idle_timeout": 90,
[31mNode id 0 part 0:[0m   "components.l1_provider.remote_client_config.retries": 3,
[31mNode id 0 part 0:[0m   "components.l1_provider.url": "localhost",
[31mNode id 0 part 0:[0m   "components.l1_scraper.execution_mode": "Enabled",
[31mNode id 0 part 0:[0m   "components.mempool.execution_mode": "LocalExecutionWithRemoteDisabled",
[31mNode id 0 part 0:[0m   "components.mempool.ip": "0.0.0.0",
[31mNode id 0 part 0:[0m   "components.mempool.local_server_config.channel_buffer_size": 32,
[31mNode id 0 part 0:[0m   "components.mempool.max_concurrency": 10,
[31mNode id 0 part 0:[0m   "components.mempool.port": 0,
[31mNode id 0 part 0:[0m   "components.mempool.remote_client_config.idle_connections": 18446744073709551615,
[31mNode id 0 part 0:[0m   "components.mempool.remote_client_config.idle_timeout": 90,
[31mNode id 0 part 0:[0m   "components.mempool.remote_client_config.retries": 3,
[31mNode id 0 part 0:[0m   "components.mempool.url": "localhost",
[31mNode id 0 part 0:[0m   "components.mempool_p2p.execution_mode": "LocalExecutionWithRemoteDisabled",
[31mNode id 0 part 0:[0m   "components.mempool_p2p.ip": "0.0.0.0",
[31mNode id 0 part 0:[0m   "components.mempool_p2p.local_server_config.channel_buffer_size": 32,
[31mNode id 0 part 0:[0m   "components.mempool_p2p.max_concurrency": 10,
[31mNode id 0 part 0:[0m   "components.mempool_p2p.port": 0,
[31mNode id 0 part 0:[0m   "components.mempool_p2p.remote_client_config.idle_connections": 18446744073709551615,
[31mNode id 0 part 0:[0m   "components.mempool_p2p.remote_client_config.idle_timeout": 90,
[31mNode id 0 part 0:[0m   "components.mempool_p2p.remote_client_config.retries": 3,
[31mNode id 0 part 0:[0m   "components.mempool_p2p.url": "localhost",
[31mNode id 0 part 0:[0m   "components.monitoring_endpoint.execution_mode": "Enabled",
[31mNode id 0 part 0:[0m   "components.sierra_compiler.execution_mode": "LocalExecutionWithRemoteDisabled",
[31mNode id 0 part 0:[0m   "components.sierra_compiler.ip": "0.0.0.0",
[31mNode id 0 part 0:[0m   "components.sierra_compiler.local_server_config.channel_buffer_size": 32,
[31mNode id 0 part 0:[0m   "components.sierra_compiler.max_concurrency": 10,
[31mNode id 0 part 0:[0m   "components.sierra_compiler.port": 0,
[31mNode id 0 part 0:[0m   "components.sierra_compiler.remote_client_config.idle_connections": 18446744073709551615,
[31mNode id 0 part 0:[0m   "components.sierra_compiler.remote_client_config.idle_timeout": 90,
[31mNode id 0 part 0:[0m   "components.sierra_compiler.remote_client_config.retries": 3,
[31mNode id 0 part 0:[0m   "components.sierra_compiler.url": "localhost",
[31mNode id 0 part 0:[0m   "components.state_sync.execution_mode": "LocalExecutionWithRemoteDisabled",
[31mNode id 0 part 0:[0m   "components.state_sync.ip": "0.0.0.0",
[31mNode id 0 part 0:[0m   "components.state_sync.local_server_config.channel_buffer_size": 32,
[31mNode id 0 part 0:[0m   "components.state_sync.max_concurrency": 10,
[31mNode id 0 part 0:[0m   "components.state_sync.port": 0,
[31mNode id 0 part 0:[0m   "components.state_sync.remote_client_config.idle_connections": 18446744073709551615,
[31mNode id 0 part 0:[0m   "components.state_sync.remote_client_config.idle_timeout": 90,
[31mNode id 0 part 0:[0m   "components.state_sync.remote_client_config.retries": 3,
[31mNode id 0 part 0:[0m   "components.state_sync.url": "localhost",
[31mNode id 0 part 0:[0m   "consensus_manager_config.broadcast_buffer_size": 10000,
[31mNode id 0 part 0:[0m   "consensus_manager_config.cende_config.recorder_url": "http://127.0.0.1:55000/",
[31mNode id 0 part 0:[0m   "consensus_manager_config.cende_config.skip_write_height": 1,
[31mNode id 0 part 0:[0m   "consensus_manager_config.consensus_config.future_height_limit": 10,
[31mNode id 0 part 0:[0m   "consensus_manager_config.consensus_config.future_height_round_limit": 1,
[31mNode id 0 part 0:[0m   "consensus_manager_config.consensus_config.future_round_limit": 10,
[31mNode id 0 part 0:[0m   "consensus_manager_config.consensus_config.startup_delay": 15,
[31mNode id 0 part 0:[0m   "consensus_manager_config.consensus_config.sync_retry_interval": 1.0,
[31mNode id 0 part 0:[0m   "consensus_manager_config.consensus_config.timeouts.precommit_timeout": 3.0,
[31mNode id 0 part 0:[0m   "consensus_manager_config.consensus_config.timeouts.prevote_timeout": 3.0,
[31mNode id 0 part 0:[0m   "consensus_manager_config.consensus_config.timeouts.proposal_timeout": 9.0,
[31mNode id 0 part 0:[0m   "consensus_manager_config.consensus_config.validator_id": "0x64",
[31mNode id 0 part 0:[0m   "consensus_manager_config.context_config.block_timestamp_window": 1,
[31mNode id 0 part 0:[0m   "consensus_manager_config.context_config.chain_id": "CHAIN_ID_SUBDIR",
[31mNode id 0 part 0:[0m   "consensus_manager_config.context_config.l1_da_mode": true,
[31mNode id 0 part 0:[0m   "consensus_manager_config.context_config.num_validators": 5,
[31mNode id 0 part 0:[0m   "consensus_manager_config.context_config.proposal_buffer_size": 100,
[31mNode id 0 part 0:[0m   "consensus_manager_config.immediate_active_height": 1,
[31mNode id 0 part 0:[0m   "consensus_manager_config.network_config.advertised_multiaddr": null,
[31mNode id 0 part 0:[0m   "consensus_manager_config.network_config.bootstrap_peer_multiaddr": null,
[31mNode id 0 part 0:[0m   "consensus_manager_config.network_config.chain_id": "CHAIN_ID_SUBDIR",
[31mNode id 0 part 0:[0m   "consensus_manager_config.network_config.discovery_config.bootstrap_dial_retry_config.base_delay_millis": 2,
[31mNode id 0 part 0:[0m   "consensus_manager_config.network_config.discovery_config.bootstrap_dial_retry_config.factor": 5,
[31mNode id 0 part 0:[0m   "consensus_manager_config.network_config.discovery_config.bootstrap_dial_retry_config.max_delay_seconds": 5,
[31mNode id 0 part 0:[0m   "consensus_manager_config.network_config.discovery_config.heartbeat_interval": 100,
[31mNode id 0 part 0:[0m   "consensus_manager_config.network_config.idle_connection_timeout": 120,
[31mNode id 0 part 0:[0m   "consensus_manager_config.network_config.peer_manager_config.malicious_timeout_seconds": 1,
[31mNode id 0 part 0:[0m   "consensus_manager_config.network_config.peer_manager_config.unstable_timeout_millis": 1000,
[31mNode id 0 part 0:[0m   "consensus_manager_config.network_config.port": 55550,
[31mNode id 0 part 0:[0m   "consensus_manager_config.network_config.secret_key": "0x0101010101010101010101010101010101010101010101010101010101010101",
[31mNode id 0 part 0:[0m   "consensus_manager_config.network_config.session_timeout": 120,
[31mNode id 0 part 0:[0m   "consensus_manager_config.proposals_topic": "consensus_proposals",
[31mNode id 0 part 0:[0m   "consensus_manager_config.revert_config.revert_up_to_and_including": 18446744073709551615,
[31mNode id 0 part 0:[0m   "consensus_manager_config.revert_config.should_revert": false,
[31mNode id 0 part 0:[0m   "consensus_manager_config.votes_topic": "consensus_votes",
[31mNode id 0 part 0:[0m   "eth_fee_token_address": "0x1001",
[31mNode id 0 part 0:[0m   "gateway_config.chain_info.chain_id": "CHAIN_ID_SUBDIR",
[31mNode id 0 part 0:[0m   "gateway_config.chain_info.fee_token_addresses.eth_fee_token_address": "0x1001",
[31mNode id 0 part 0:[0m   "gateway_config.chain_info.fee_token_addresses.strk_fee_token_address": "0x1002",
[31mNode id 0 part 0:[0m   "gateway_config.stateful_tx_validator_config.max_nonce_for_validation_skip": "0x1",
[31mNode id 0 part 0:[0m   "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.invoke_tx_max_n_steps": 10000000,
[31mNode id 0 part 0:[0m   "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.max_n_events": 1000,
[31mNode id 0 part 0:[0m   "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.max_recursion_depth": 50,
[31mNode id 0 part 0:[0m   "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.validate_max_n_steps": 1000000,
[31mNode id 0 part 0:[0m   "gateway_config.stateless_tx_validator_config.max_calldata_length": 10,
[31mNode id 0 part 0:[0m   "gateway_config.stateless_tx_validator_config.max_contract_class_object_size": 4089446,
[31mNode id 0 part 0:[0m   "gateway_config.stateless_tx_validator_config.max_sierra_version.major": 1,
[31mNode id 0 part 0:[0m   "gateway_config.stateless_tx_validator_config.max_sierra_version.minor": 5,
[31mNode id 0 part 0:[0m   "gateway_config.stateless_tx_validator_config.max_sierra_version.patch": 18446744073709551615,
[31mNode id 0 part 0:[0m   "gateway_config.stateless_tx_validator_config.max_signature_length": 2,
[31mNode id 0 part 0:[0m   "gateway_config.stateless_tx_validator_config.min_sierra_version.major": 1,
[31mNode id 0 part 0:[0m   "gateway_config.stateless_tx_validator_config.min_sierra_version.minor": 1,
[31mNode id 0 part 0:[0m   "gateway_config.stateless_tx_validator_config.min_sierra_version.patch": 0,
[31mNode id 0 part 0:[0m   "gateway_config.stateless_tx_validator_config.validate_non_zero_l1_data_gas_fee": false,
[31mNode id 0 part 0:[0m   "gateway_config.stateless_tx_validator_config.validate_non_zero_l1_gas_fee": true,
[31mNode id 0 part 0:[0m   "gateway_config.stateless_tx_validator_config.validate_non_zero_l2_gas_fee": false,
[31mNode id 0 part 0:[0m   "http_server_config.ip": "127.0.0.1",
[31mNode id 0 part 0:[0m   "http_server_config.port": 55002,
[31mNode id 0 part 0:[0m   "l1_provider_config.bootstrap_catch_up_height": 0,
[31mNode id 0 part 0:[0m   "l1_provider_config.provider_startup_height": 1,
[31mNode id 0 part 0:[0m   "l1_provider_config.startup_sync_sleep_retry_interval": 0.0,
[31mNode id 0 part 0:[0m   "l1_scraper_config.chain_id": "CHAIN_ID_SUBDIR",
[31mNode id 0 part 0:[0m   "l1_scraper_config.finality": 0,
[31mNode id 0 part 0:[0m   "l1_scraper_config.polling_interval": 1,
[31mNode id 0 part 0:[0m   "l1_scraper_config.startup_rewind_time": 0,
[31mNode id 0 part 0:[0m   "mempool_config.enable_fee_escalation": true,
[31mNode id 0 part 0:[0m   "mempool_config.fee_escalation_percentage": 10,
[31mNode id 0 part 0:[0m   "mempool_config.transaction_ttl": 300,
[31mNode id 0 part 0:[0m   "mempool_p2p_config.network_buffer_size": 10000,
[31mNode id 0 part 0:[0m   "mempool_p2p_config.network_config.advertised_multiaddr": null,
[31mNode id 0 part 0:[0m   "mempool_p2p_config.network_config.bootstrap_peer_multiaddr": null,
[31mNode id 0 part 0:[0m   "mempool_p2p_config.network_config.chain_id": "CHAIN_ID_SUBDIR",
[31mNode id 0 part 0:[0m   "mempool_p2p_config.network_config.discovery_config.bootstrap_dial_retry_config.base_delay_millis": 2,
[31mNode id 0 part 0:[0m   "mempool_p2p_config.network_config.discovery_config.bootstrap_dial_retry_config.factor": 5,
[31mNode id 0 part 0:[0m   "mempool_p2p_config.network_config.discovery_config.bootstrap_dial_retry_config.max_delay_seconds": 5,
[31mNode id 0 part 0:[0m   "mempool_p2p_config.network_config.discovery_config.heartbeat_interval": 100,
[31mNode id 0 part 0:[0m   "mempool_p2p_config.network_config.idle_connection_timeout": 120,
[31mNode id 0 part 0:[0m   "mempool_p2p_config.network_config.peer_manager_config.malicious_timeout_seconds": 1,
[31mNode id 0 part 0:[0m   "mempool_p2p_config.network_config.peer_manager_config.unstable_timeout_millis": 1000,
[31mNode id 0 part 0:[0m   "mempool_p2p_config.network_config.port": 55564,
[31mNode id 0 part 0:[0m   "mempool_p2p_config.network_config.secret_key": "0x0101010101010101010101010101010101010101010101010101010101010101",
[31mNode id 0 part 0:[0m   "mempool_p2p_config.network_config.session_timeout": 120,
[31mNode id 0 part 0:[0m   "monitoring_endpoint_config.collect_metrics": true,
[31mNode id 0 part 0:[0m   "monitoring_endpoint_config.ip": "0.0.0.0",
[31mNode id 0 part 0:[0m   "monitoring_endpoint_config.port": 55001,
[31mNode id 0 part 0:[0m   "recorder_url": "http://127.0.0.1:55000/",
[31mNode id 0 part 0:[0m   "revert_config.revert_up_to_and_including": 18446744073709551615,
[31mNode id 0 part 0:[0m   "revert_config.should_revert": false,
[31mNode id 0 part 0:[0m   "state_sync_config.central_sync_client_config": null,
[31mNode id 0 part 0:[0m   "state_sync_config.network_config.advertised_multiaddr": null,
[31mNode id 0 part 0:[0m   "state_sync_config.network_config.bootstrap_peer_multiaddr": null,
[31mNode id 0 part 0:[0m   "state_sync_config.network_config.chain_id": "CHAIN_ID_SUBDIR",
[31mNode id 0 part 0:[0m   "state_sync_config.network_config.discovery_config.bootstrap_dial_retry_config.base_delay_millis": 2,
[31mNode id 0 part 0:[0m   "state_sync_config.network_config.discovery_config.bootstrap_dial_retry_config.factor": 5,
[31mNode id 0 part 0:[0m   "state_sync_config.network_config.discovery_config.bootstrap_dial_retry_config.max_delay_seconds": 5,
[31mNode id 0 part 0:[0m   "state_sync_config.network_config.discovery_config.heartbeat_interval": 100,
[31mNode id 0 part 0:[0m   "state_sync_config.network_config.idle_connection_timeout": 120,
[31mNode id 0 part 0:[0m   "state_sync_config.network_config.peer_manager_config.malicious_timeout_seconds": 1,
[31mNode id 0 part 0:[0m   "state_sync_config.network_config.peer_manager_config.unstable_timeout_millis": 1000,
[31mNode id 0 part 0:[0m   "state_sync_config.network_config.port": 55557,
[31mNode id 0 part 0:[0m   "state_sync_config.network_config.secret_key": "0x0101010101010101010101010101010101010101010101010101010101010101",
[31mNode id 0 part 0:[0m   "state_sync_config.network_config.session_timeout": 120,
[31mNode id 0 part 0:[0m   "state_sync_config.p2p_sync_client_config.buffer_size": 100000,
[31mNode id 0 part 0:[0m   "state_sync_config.p2p_sync_client_config.num_block_classes_per_query": 100,
[31mNode id 0 part 0:[0m   "state_sync_config.p2p_sync_client_config.num_block_state_diffs_per_query": 100,
[31mNode id 0 part 0:[0m   "state_sync_config.p2p_sync_client_config.num_block_transactions_per_query": 100,
[31mNode id 0 part 0:[0m   "state_sync_config.p2p_sync_client_config.num_headers_per_query": 10000,
[31mNode id 0 part 0:[0m   "state_sync_config.p2p_sync_client_config.wait_period_for_new_data": 50,
[31mNode id 0 part 0:[0m   "state_sync_config.p2p_sync_client_config.wait_period_for_other_protocol": 50,
[31mNode id 0 part 0:[0m   "state_sync_config.revert_config.revert_up_to_and_including": 18446744073709551615,
[31mNode id 0 part 0:[0m   "state_sync_config.revert_config.should_revert": false,
[31mNode id 0 part 0:[0m   "state_sync_config.storage_config.db_config.chain_id": "CHAIN_ID_SUBDIR",
[31mNode id 0 part 0:[0m   "state_sync_config.storage_config.db_config.enforce_file_exists": false,
[31mNode id 0 part 0:[0m   "state_sync_config.storage_config.db_config.growth_step": 67108864,
[31mNode id 0 part 0:[0m   "state_sync_config.storage_config.db_config.max_size": 34359738368,
[31mNode id 0 part 0:[0m   "state_sync_config.storage_config.db_config.min_size": 1048576,
[31mNode id 0 part 0:[0m   "state_sync_config.storage_config.db_config.path_prefix": "/tmp/.tmpSJyNou",
[31mNode id 0 part 0:[0m   "state_sync_config.storage_config.mmap_file_config.growth_step": 1048576,
[31mNode id 0 part 0:[0m   "state_sync_config.storage_config.mmap_file_config.max_object_size": 65536,
[31mNode id 0 part 0:[0m   "state_sync_config.storage_config.mmap_file_config.max_size": 16777216,
[31mNode id 0 part 0:[0m   "state_sync_config.storage_config.scope": "FullArchive",
[31mNode id 0 part 0:[0m   "strk_fee_token_address": "0x1002",
[31mNode id 0 part 0:[0m   "validator_id": "0x64",
[31mNode id 0 part 0:[0m   "versioned_constants_overrides.invoke_tx_max_n_steps": 10000000,
[31mNode id 0 part 0:[0m   "versioned_constants_overrides.max_n_events": 1000,
[31mNode id 0 part 0:[0m   "versioned_constants_overrides.max_recursion_depth": 50,
[31mNode id 0 part 0:[0m   "versioned_constants_overrides.validate_max_n_steps": 1000000
[31mNode id 0 part 0:[0m }
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.133362Z[0m [32m INFO[0m [2mstarknet_sequencer_node::utils[0m[2m:[0m Finished loading configuration.
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.133503Z[0m [32m INFO[0m [2mstarknet_sequencer_node::utils[0m[2m:[0m Finished validating configuration.
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.133510Z[0m [32m INFO[0m [2mstarknet_sequencer_node[0m[2m:[0m Config dump:
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.135462Z[0m [32m INFO[0m [2mstarknet_sequencer_node[0m[2m:[0m {"base_layer_config.node_url": SerializedParam { description: "A required param! Ethereum node URL. A schema to match to Infura node: https://mainnet.infura.io/v3/<your_api_key>, but any other node can be used.", content: ParamType(String), privacy: Private }, "base_layer_config.starknet_contract_address": SerializedParam { description: "Starknet contract address in ethereum.", content: DefaultValue(String("0xc662c410C0ECf747543f5bA90660f6ABeBD9C8c4")), privacy: Public }, "batcher_config.block_builder_config.bouncer_config.block_max_capacity.l1_gas": SerializedParam { description: "An upper bound on the total l1_gas used in a block.", content: DefaultValue(Number(2500000)), privacy: Public }, "batcher_config.block_builder_config.bouncer_config.block_max_capacity.message_segment_length": SerializedParam { description: "An upper bound on the message segment length in a block.", content: DefaultValue(Number(3700)), privacy: Public }, "batcher_config.block_builder_config.bouncer_config.block_max_capacity.n_events": SerializedParam { description: "An upper bound on the total number of events generated in a block.", content: DefaultValue(Number(5000)), privacy: Public }, "batcher_config.block_builder_config.bouncer_config.block_max_capacity.sierra_gas": SerializedParam { description: "An upper bound on the total sierra_gas used in a block.", content: DefaultValue(Number(17000000)), privacy: Public }, "batcher_config.block_builder_config.bouncer_config.block_max_capacity.state_diff_size": SerializedParam { description: "An upper bound on the total state diff size in a block.", content: DefaultValue(Number(4000)), privacy: Public }, "batcher_config.block_builder_config.chain_info.chain_id": SerializedParam { description: "The chain ID of the StarkNet chain.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "batcher_config.block_builder_config.chain_info.fee_token_addresses.eth_fee_token_address": SerializedParam { description: "Address of the ETH fee token.", content: DefaultValue(String("0x1001")), privacy: Public }, "batcher_config.block_builder_config.chain_info.fee_token_addresses.strk_fee_token_address": SerializedParam { description: "Address of the STRK fee token.", content: DefaultValue(String("0x1002")), privacy: Public }, "batcher_config.block_builder_config.execute_config.concurrency_config.chunk_size": SerializedParam { description: "The size of the transaction chunk executed in parallel.", content: DefaultValue(Number(64)), privacy: Public }, "batcher_config.block_builder_config.execute_config.concurrency_config.enabled": SerializedParam { description: "Enables concurrency of transaction execution.", content: DefaultValue(Bool(true)), privacy: Public }, "batcher_config.block_builder_config.execute_config.concurrency_config.n_workers": SerializedParam { description: "Number of parallel transaction execution workers.", content: DefaultValue(Number(4)), privacy: Public }, "batcher_config.block_builder_config.execute_config.stack_size": SerializedParam { description: "The thread stack size (proportional to the maximal gas of a transaction).", content: DefaultValue(Number(62914560)), privacy: Public }, "batcher_config.block_builder_config.tx_chunk_size": SerializedParam { description: "The size of the transaction chunk.", content: DefaultValue(Number(100)), privacy: Public }, "batcher_config.block_builder_config.versioned_constants_overrides.invoke_tx_max_n_steps": SerializedParam { description: "Maximum number of steps the invoke function is allowed to run.", content: DefaultValue(Number(10000000)), privacy: Public }, "batcher_config.block_builder_config.versioned_constants_overrides.max_n_events": SerializedParam { description: "Maximum number of events that can be emitted from the transation.", content: DefaultValue(Number(1000)), privacy: Public }, "batcher_config.block_builder_config.versioned_constants_overrides.max_recursion_depth": SerializedParam { description: "Maximum recursion depth for nested calls during blockifier validation.", content: DefaultValue(Number(50)), privacy: Public }, "batcher_config.block_builder_config.versioned_constants_overrides.validate_max_n_steps": SerializedParam { description: "Maximum number of steps the validation function is allowed to run.", content: DefaultValue(Number(1000000)), privacy: Public }, "batcher_config.contract_class_manager_config.cairo_native_run_config.channel_size": SerializedParam { description: "The size of the compilation request channel.", content: DefaultValue(Number(2000)), privacy: Public }, "batcher_config.contract_class_manager_config.cairo_native_run_config.run_cairo_native": SerializedParam { description: "Enables Cairo native execution.", content: DefaultValue(Bool(false)), privacy: Public }, "batcher_config.contract_class_manager_config.cairo_native_run_config.wait_on_native_compilation": SerializedParam { description: "Block Sequencer main program while compiling sierra, for testing.", content: DefaultValue(Bool(false)), privacy: Public }, "batcher_config.contract_class_manager_config.contract_cache_size": SerializedParam { description: "The size of the global contract cache.", content: DefaultValue(Number(600)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.max_casm_bytecode_size": SerializedParam { description: "Limitation of compiled casm bytecode size.", content: DefaultValue(Number(81920)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.max_cpu_time": SerializedParam { description: "Limitation of compilation cpu time (seconds).", content: DefaultValue(Number(20)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.max_memory_usage": SerializedParam { description: "Limitation of compilation process's virtual memory (bytes).", content: DefaultValue(Number(5368709120)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.max_native_bytecode_size": SerializedParam { description: "Limitation of compiled native bytecode size.", content: DefaultValue(Number(15728640)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.optimization_level": SerializedParam { description: "The level of optimization to apply during compilation.", content: DefaultValue(Number(2)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.panic_on_compilation_failure": SerializedParam { description: "Whether to panic on compilation failure.", content: DefaultValue(Bool(false)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.sierra_to_native_compiler_path": SerializedParam { description: "The path to the Sierra-to-Native compiler binary.", content: DefaultValue(String("")), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.sierra_to_native_compiler_path.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(true)), privacy: TemporaryValue }, "batcher_config.input_stream_content_buffer_size": SerializedParam { description: "Sets the buffer size for the input transaction channel. Adding more transactions beyond this limit will block until space is available.", content: DefaultValue(Number(400)), privacy: Public }, "batcher_config.max_l1_handler_txs_per_block_proposal": SerializedParam { description: "The maximum number of L1 handler transactions to include in a block proposal.", content: DefaultValue(Number(3)), privacy: Public }, "batcher_config.outstream_content_buffer_size": SerializedParam { description: "The maximum number of items to include in a single get_proposal_content response.", content: DefaultValue(Number(100)), privacy: Public }, "batcher_config.storage.db_config.chain_id": SerializedParam { description: "The chain to follow. For more details see https://docs.starknet.io/documentation/architecture_and_concepts/Blocks/transactions/#chain-id.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "batcher_config.storage.db_config.enforce_file_exists": SerializedParam { description: "Whether to enforce that the path exists. If true, `open_env` fails when the mdbx.dat file does not exist.", content: DefaultValue(Bool(false)), privacy: Public }, "batcher_config.storage.db_config.growth_step": SerializedParam { description: "The growth step in bytes, must be greater than zero to allow the database to grow.", content: DefaultValue(Number(67108864)), privacy: Public }, "batcher_config.storage.db_config.max_size": SerializedParam { description: "The maximum size of the node's storage in bytes.", content: DefaultValue(Number(34359738368)), privacy: Public }, "batcher_config.storage.db_config.min_size": SerializedParam { description: "The minimum size of the node's storage in bytes.", content: DefaultValue(Number(1048576)), privacy: Public }, "batcher_config.storage.db_config.path_prefix": SerializedParam { description: "Prefix of the path of the node's storage directory, the storage file path will be <path_prefix>/<chain_id>. The path is not created automatically.", content: DefaultValue(String("/tmp/.tmpGYQTay")), privacy: Public }, "batcher_config.storage.mmap_file_config.growth_step": SerializedParam { description: "The growth step in bytes, must be greater than max_object_size.", content: DefaultValue(Number(1048576)), privacy: Public }, "batcher_config.storage.mmap_file_config.max_object_size": SerializedParam { description: "The maximum size of a single object in the file in bytes", content: DefaultValue(Number(65536)), privacy: Public }, "batcher_config.storage.mmap_file_config.max_size": SerializedParam { description: "The maximum size of a memory mapped file in bytes. Must be greater than growth_step.", content: DefaultValue(Number(16777216)), privacy: Public }, "batcher_config.storage.scope": SerializedParam { description: "The categories of data saved in storage.", content: DefaultValue(String("StateOnly")), privacy: Public }, "class_manager_config.class_manager_config.cached_class_storage_config.class_cache_size": SerializedParam { description: "Contract classes cache size.", content: DefaultValue(Number(100)), privacy: Public }, "class_manager_config.class_manager_config.cached_class_storage_config.deprecated_class_cache_size": SerializedParam { description: "Deprecated contract classes cache size.", content: DefaultValue(Number(100)), privacy: Public }, "class_manager_config.class_storage_config.class_hash_storage_config.enforce_file_exists": SerializedParam { description: "Whether to enforce that the above path exists.", content: DefaultValue(Bool(false)), privacy: Public }, "class_manager_config.class_storage_config.class_hash_storage_config.max_size": SerializedParam { description: "The maximum size of the class hash storage in bytes.", content: DefaultValue(Number(1048576)), privacy: Public }, "class_manager_config.class_storage_config.class_hash_storage_config.path_prefix": SerializedParam { description: "Prefix of the path of class hash storage directory.", content: DefaultValue(String("/tmp/.tmpVDY545")), privacy: Public }, "class_manager_config.class_storage_config.persistent_root": SerializedParam { description: "Path to the node's class storage directory.", content: DefaultValue(String("/tmp/.tmpkugQWz")), privacy: Public }, "compiler_config.max_casm_bytecode_size": SerializedParam { description: "Limitation of compiled casm bytecode size.", content: DefaultValue(Number(81920)), privacy: Public }, "compiler_config.max_cpu_time": SerializedParam { description: "Limitation of compilation cpu time (seconds).", content: DefaultValue(Number(20)), privacy: Public }, "compiler_config.max_memory_usage": SerializedParam { description: "Limitation of compilation process's virtual memory (bytes).", content: DefaultValue(Number(5368709120)), privacy: Public }, "compiler_config.max_native_bytecode_size": SerializedParam { description: "Limitation of compiled native bytecode size.", content: DefaultValue(Number(15728640)), privacy: Public }, "compiler_config.optimization_level": SerializedParam { description: "The level of optimization to apply during compilation.", content: DefaultValue(Number(2)), privacy: Public }, "compiler_config.panic_on_compilation_failure": SerializedParam { description: "Whether to panic on compilation failure.", content: DefaultValue(Bool(false)), privacy: Public }, "compiler_config.sierra_to_native_compiler_path": SerializedParam { description: "The path to the Sierra-to-Native compiler binary.", content: DefaultValue(String("")), privacy: Public }, "compiler_config.sierra_to_native_compiler_path.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(true)), privacy: TemporaryValue }, "components.batcher.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("LocalExecutionWithRemoteDisabled")), privacy: Public }, "components.batcher.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("0.0.0.0")), privacy: Public }, "components.batcher.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.batcher.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.batcher.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(0)), privacy: Public }, "components.batcher.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.batcher.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.batcher.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.batcher.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("localhost")), privacy: Public }, "components.class_manager.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("LocalExecutionWithRemoteDisabled")), privacy: Public }, "components.class_manager.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("0.0.0.0")), privacy: Public }, "components.class_manager.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.class_manager.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.class_manager.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(0)), privacy: Public }, "components.class_manager.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.class_manager.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.class_manager.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.class_manager.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("localhost")), privacy: Public }, "components.consensus_manager.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("Enabled")), privacy: Public }, "components.gateway.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("LocalExecutionWithRemoteDisabled")), privacy: Public }, "components.gateway.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("0.0.0.0")), privacy: Public }, "components.gateway.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.gateway.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.gateway.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(0)), privacy: Public }, "components.gateway.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.gateway.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.gateway.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.gateway.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("localhost")), privacy: Public }, "components.http_server.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("Enabled")), privacy: Public }, "components.l1_provider.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("LocalExecutionWithRemoteDisabled")), privacy: Public }, "components.l1_provider.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("0.0.0.0")), privacy: Public }, "components.l1_provider.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.l1_provider.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.l1_provider.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(0)), privacy: Public }, "components.l1_provider.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.l1_provider.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.l1_provider.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.l1_provider.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("localhost")), privacy: Public }, "components.l1_scraper.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("Enabled")), privacy: Public }, "components.mempool.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("LocalExecutionWithRemoteDisabled")), privacy: Public }, "components.mempool.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("0.0.0.0")), privacy: Public }, "components.mempool.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.mempool.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.mempool.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(0)), privacy: Public }, "components.mempool.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.mempool.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.mempool.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.mempool.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("localhost")), privacy: Public }, "components.mempool_p2p.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("LocalExecutionWithRemoteDisabled")), privacy: Public }, "components.mempool_p2p.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("0.0.0.0")), privacy: Public }, "components.mempool_p2p.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.mempool_p2p.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.mempool_p2p.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(0)), privacy: Public }, "components.mempool_p2p.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.mempool_p2p.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.mempool_p2p.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.mempool_p2p.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("localhost")), privacy: Public }, "components.monitoring_endpoint.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("Enabled")), privacy: Public }, "components.sierra_compiler.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("LocalExecutionWithRemoteDisabled")), privacy: Public }, "components.sierra_compiler.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("0.0.0.0")), privacy: Public }, "components.sierra_compiler.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.sierra_compiler.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.sierra_compiler.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(0)), privacy: Public }, "components.sierra_compiler.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.sierra_compiler.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.sierra_compiler.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.sierra_compiler.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("localhost")), privacy: Public }, "components.state_sync.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("LocalExecutionWithRemoteDisabled")), privacy: Public }, "components.state_sync.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("0.0.0.0")), privacy: Public }, "components.state_sync.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.state_sync.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.state_sync.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(0)), privacy: Public }, "components.state_sync.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.state_sync.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.state_sync.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.state_sync.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("localhost")), privacy: Public }, "consensus_manager_config.broadcast_buffer_size": SerializedParam { description: "The buffer size for the broadcast channel.", content: DefaultValue(Number(10000)), privacy: Public }, "consensus_manager_config.cende_config.recorder_url": SerializedParam { description: "The URL of the Pythonic cende_recorder", content: DefaultValue(String("http://127.0.0.1:55000/")), privacy: Private }, "consensus_manager_config.cende_config.skip_write_height": SerializedParam { description: "A height that the consensus can skip writing to Aerospike. Needed for booting up (no previous height blob to write) or to handle extreme cases (all the nodes failed).", content: DefaultValue(Number(1)), privacy: Private }, "consensus_manager_config.cende_config.skip_write_height.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(false)), privacy: TemporaryValue }, "consensus_manager_config.consensus_config.future_height_limit": SerializedParam { description: "How many heights in the future should we cache.", content: DefaultValue(Number(10)), privacy: Public }, "consensus_manager_config.consensus_config.future_height_round_limit": SerializedParam { description: "How many rounds should we cache for future heights.", content: DefaultValue(Number(1)), privacy: Public }, "consensus_manager_config.consensus_config.future_round_limit": SerializedParam { description: "How many rounds in the future (for current height) should we cache.", content: DefaultValue(Number(10)), privacy: Public }, "consensus_manager_config.consensus_config.startup_delay": SerializedParam { description: "Delay (seconds) before starting consensus to give time for network peering.", content: DefaultValue(Number(15)), privacy: Public }, "consensus_manager_config.consensus_config.sync_retry_interval": SerializedParam { description: "The duration (seconds) between sync attempts.", content: DefaultValue(Number(1.0)), privacy: Public }, "consensus_manager_config.consensus_config.timeouts.precommit_timeout": SerializedParam { description: "The timeout (seconds) for a precommit.", content: DefaultValue(Number(3.0)), privacy: Public }, "consensus_manager_config.consensus_config.timeouts.prevote_timeout": SerializedParam { description: "The timeout (seconds) for a prevote.", content: DefaultValue(Number(3.0)), privacy: Public }, "consensus_manager_config.consensus_config.timeouts.proposal_timeout": SerializedParam { description: "The timeout (seconds) for a proposal.", content: DefaultValue(Number(9.0)), privacy: Public }, "consensus_manager_config.consensus_config.validator_id": SerializedParam { description: "The validator id of the node.", content: DefaultValue(String("0x64")), privacy: Public }, "consensus_manager_config.context_config.block_timestamp_window": SerializedParam { description: "Maximum allowed deviation (seconds) of a proposed block's timestamp from the current time.", content: DefaultValue(Number(1)), privacy: Public }, "consensus_manager_config.context_config.chain_id": SerializedParam { description: "The chain id of the Starknet chain.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "consensus_manager_config.context_config.l1_da_mode": SerializedParam { description: "The data availability mode, true: Blob, false: Calldata.", content: DefaultValue(Bool(true)), privacy: Public }, "consensus_manager_config.context_config.num_validators": SerializedParam { description: "The number of validators.", content: DefaultValue(Number(5)), privacy: Public }, "consensus_manager_config.context_config.proposal_buffer_size": SerializedParam { description: "The buffer size for streaming outbound proposals.", content: DefaultValue(Number(100)), privacy: Public }, "consensus_manager_config.immediate_active_height": SerializedParam { description: "The height at which the node may actively participate in consensus.", content: DefaultValue(Number(1)), privacy: Public }, "consensus_manager_config.network_config.advertised_multiaddr": SerializedParam { description: "The external address other peers see this node. If this is set, the node will not try to find out which addresses it has and will write this address as external instead", content: DefaultValue(String("")), privacy: Public }, "consensus_manager_config.network_config.advertised_multiaddr.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(true)), privacy: TemporaryValue }, "consensus_manager_config.network_config.bootstrap_peer_multiaddr": SerializedParam { description: "The multiaddress of the peer node. It should include the peer's id. For more info: https://docs.libp2p.io/concepts/fundamentals/peers/", content: DefaultValue(String("")), privacy: Public }, "consensus_manager_config.network_config.bootstrap_peer_multiaddr.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(true)), privacy: TemporaryValue }, "consensus_manager_config.network_config.chain_id": SerializedParam { description: "The chain to follow. For more details see https://docs.starknet.io/documentation/architecture_and_concepts/Blocks/transactions/#chain-id.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "consensus_manager_config.network_config.discovery_config.bootstrap_dial_retry_config.base_delay_millis": SerializedParam { description: "The base delay in milliseconds for the exponential backoff strategy.", content: DefaultValue(Number(2)), privacy: Public }, "consensus_manager_config.network_config.discovery_config.bootstrap_dial_retry_config.factor": SerializedParam { description: "The factor for the exponential backoff strategy.", content: DefaultValue(Number(5)), privacy: Public }, "consensus_manager_config.network_config.discovery_config.bootstrap_dial_retry_config.max_delay_seconds": SerializedParam { description: "The maximum delay in seconds for the exponential backoff strategy.", content: DefaultValue(Number(5)), privacy: Public }, "consensus_manager_config.network_config.discovery_config.heartbeat_interval": SerializedParam { description: "The interval between each discovery (Kademlia) query in milliseconds.", content: DefaultValue(Number(100)), privacy: Public }, "consensus_manager_config.network_config.idle_connection_timeout": SerializedParam { description: "Amount of time in seconds that a connection with no active sessions will stay alive.", content: DefaultValue(Number(120)), privacy: Public }, "consensus_manager_config.network_config.peer_manager_config.malicious_timeout_seconds": SerializedParam { description: "The duration in seconds a peer is blacklisted after being marked as malicious.", content: DefaultValue(Number(1)), privacy: Public }, "consensus_manager_config.network_config.peer_manager_config.unstable_timeout_millis": SerializedParam { description: "The duration in milliseconds a peer blacklisted after being reported as unstable.", content: DefaultValue(Number(1000)), privacy: Public }, "consensus_manager_config.network_config.port": SerializedParam { description: "The port that the node listens on for incoming tcp connections.", content: DefaultValue(Number(55550)), privacy: Public }, "consensus_manager_config.network_config.secret_key": SerializedParam { description: "The secret key used for building the peer id. If it's an empty string a random one will be used.", content: DefaultValue(String("0x0101010101010101010101010101010101010101010101010101010101010101")), privacy: Private }, "consensus_manager_config.network_config.session_timeout": SerializedParam { description: "Maximal time in seconds that each session can take before failing on timeout.", content: DefaultValue(Number(120)), privacy: Public }, "consensus_manager_config.proposals_topic": SerializedParam { description: "The topic for consensus proposals.", content: DefaultValue(String("consensus_proposals")), privacy: Public }, "consensus_manager_config.revert_config.revert_up_to_and_including": SerializedParam { description: "The component will revert blocks up to this block number (including).", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "consensus_manager_config.revert_config.should_revert": SerializedParam { description: "If set true, the component would revert blocks and do nothing else.", content: DefaultValue(Bool(false)), privacy: Public }, "consensus_manager_config.votes_topic": SerializedParam { description: "The topic for consensus votes.", content: DefaultValue(String("consensus_votes")), privacy: Public }, "gateway_config.chain_info.chain_id": SerializedParam { description: "The chain ID of the StarkNet chain.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "gateway_config.chain_info.fee_token_addresses.eth_fee_token_address": SerializedParam { description: "Address of the ETH fee token.", content: DefaultValue(String("0x1001")), privacy: Public }, "gateway_config.chain_info.fee_token_addresses.strk_fee_token_address": SerializedParam { description: "Address of the STRK fee token.", content: DefaultValue(String("0x1002")), privacy: Public }, "gateway_config.stateful_tx_validator_config.max_nonce_for_validation_skip": SerializedParam { description: "Maximum nonce for which the validation is skipped.", content: DefaultValue(String("0x1")), privacy: Public }, "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.invoke_tx_max_n_steps": SerializedParam { description: "Maximum number of steps the invoke function is allowed to run.", content: DefaultValue(Number(10000000)), privacy: Public }, "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.max_n_events": SerializedParam { description: "Maximum number of events that can be emitted from the transation.", content: DefaultValue(Number(1000)), privacy: Public }, "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.max_recursion_depth": SerializedParam { description: "Maximum recursion depth for nested calls during blockifier validation.", content: DefaultValue(Number(50)), privacy: Public }, "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.validate_max_n_steps": SerializedParam { description: "Maximum number of steps the validation function is allowed to run.", content: DefaultValue(Number(1000000)), privacy: Public }, "gateway_config.stateless_tx_validator_config.max_calldata_length": SerializedParam { description: "Limitation of calldata length.", content: DefaultValue(Number(10)), privacy: Public }, "gateway_config.stateless_tx_validator_config.max_contract_class_object_size": SerializedParam { description: "Limitation of contract class object size.", content: DefaultValue(Number(4089446)), privacy: Public }, "gateway_config.stateless_tx_validator_config.max_sierra_version.major": SerializedParam { description: "The major version of the configuration.", content: DefaultValue(Number(1)), privacy: Public }, "gateway_config.stateless_tx_validator_config.max_sierra_version.minor": SerializedParam { description: "The minor version of the configuration.", content: DefaultValue(Number(5)), privacy: Public }, "gateway_config.stateless_tx_validator_config.max_sierra_version.patch": SerializedParam { description: "The patch version of the configuration.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "gateway_config.stateless_tx_validator_config.max_signature_length": SerializedParam { description: "Limitation of signature length.", content: DefaultValue(Number(2)), privacy: Public }, "gateway_config.stateless_tx_validator_config.min_sierra_version.major": SerializedParam { description: "The major version of the configuration.", content: DefaultValue(Number(1)), privacy: Public }, "gateway_config.stateless_tx_validator_config.min_sierra_version.minor": SerializedParam { description: "The minor version of the configuration.", content: DefaultValue(Number(1)), privacy: Public }, "gateway_config.stateless_tx_validator_config.min_sierra_version.patch": SerializedParam { description: "The patch version of the configuration.", content: DefaultValue(Number(0)), privacy: Public }, "gateway_config.stateless_tx_validator_config.validate_non_zero_l1_data_gas_fee": SerializedParam { description: "If true, validates that a transaction has non-zero L1 Data (Blob) resource bounds.", content: DefaultValue(Bool(false)), privacy: Public }, "gateway_config.stateless_tx_validator_config.validate_non_zero_l1_gas_fee": SerializedParam { description: "If true, validates that a transaction has non-zero L1 resource bounds.", content: DefaultValue(Bool(true)), privacy: Public }, "gateway_config.stateless_tx_validator_config.validate_non_zero_l2_gas_fee": SerializedParam { description: "If true, validates that a transaction has non-zero L2 resource bounds.", content: DefaultValue(Bool(false)), privacy: Public }, "http_server_config.ip": SerializedParam { description: "The http server ip.", content: DefaultValue(String("127.0.0.1")), privacy: Public }, "http_server_config.port": SerializedParam { description: "The http server port.", content: DefaultValue(Number(55002)), privacy: Public }, "l1_provider_config.bootstrap_catch_up_height": SerializedParam { description: "Height at which the provider should catch up to the bootstrapper.", content: DefaultValue(Number(0)), privacy: Public }, "l1_provider_config.provider_startup_height": SerializedParam { description: "Height at which the provider should start.", content: DefaultValue(Number(1)), privacy: Public }, "l1_provider_config.startup_sync_sleep_retry_interval": SerializedParam { description: "Interval in seconds between each retry of syncing with L2 during startup.", content: DefaultValue(Number(0.0)), privacy: Public }, "l1_scraper_config.chain_id": SerializedParam { description: "The chain to follow. For more details see https://docs.starknet.io/documentation/architecture_and_concepts/Blocks/transactions/#chain-id.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "l1_scraper_config.finality": SerializedParam { description: "Number of blocks to wait for finality", content: DefaultValue(Number(0)), privacy: Public }, "l1_scraper_config.polling_interval": SerializedParam { description: "Interval in Seconds between each scraping attempt of L1.", content: DefaultValue(Number(1)), privacy: Public }, "l1_scraper_config.startup_rewind_time": SerializedParam { description: "Duration to rewind from latest L1 block when starting scraping.", content: DefaultValue(Number(0)), privacy: Public }, "mempool_config.enable_fee_escalation": SerializedParam { description: "If true, transactions can be replaced with higher fee transactions.", content: DefaultValue(Bool(true)), privacy: Public }, "mempool_config.fee_escalation_percentage": SerializedParam { description: "Percentage increase for tip and max gas price to enable transaction replacement.", content: DefaultValue(Number(10)), privacy: Public }, "mempool_config.transaction_ttl": SerializedParam { description: "Time-to-live for transactions in the mempool, in seconds.", content: DefaultValue(Number(300)), privacy: Public }, "mempool_p2p_config.network_buffer_size": SerializedParam { description: "Network buffer size.", content: DefaultValue(Number(10000)), privacy: Public }, "mempool_p2p_config.network_config.advertised_multiaddr": SerializedParam { description: "The external address other peers see this node. If this is set, the node will not try to find out which addresses it has and will write this address as external instead", content: DefaultValue(String("")), privacy: Public }, "mempool_p2p_config.network_config.advertised_multiaddr.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(true)), privacy: TemporaryValue }, "mempool_p2p_config.network_config.bootstrap_peer_multiaddr": SerializedParam { description: "The multiaddress of the peer node. It should include the peer's id. For more info: https://docs.libp2p.io/concepts/fundamentals/peers/", content: DefaultValue(String("")), privacy: Public }, "mempool_p2p_config.network_config.bootstrap_peer_multiaddr.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(true)), privacy: TemporaryValue }, "mempool_p2p_config.network_config.chain_id": SerializedParam { description: "The chain to follow. For more details see https://docs.starknet.io/documentation/architecture_and_concepts/Blocks/transactions/#chain-id.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "mempool_p2p_config.network_config.discovery_config.bootstrap_dial_retry_config.base_delay_millis": SerializedParam { description: "The base delay in milliseconds for the exponential backoff strategy.", content: DefaultValue(Number(2)), privacy: Public }, "mempool_p2p_config.network_config.discovery_config.bootstrap_dial_retry_config.factor": SerializedParam { description: "The factor for the exponential backoff strategy.", content: DefaultValue(Number(5)), privacy: Public }, "mempool_p2p_config.network_config.discovery_config.bootstrap_dial_retry_config.max_delay_seconds": SerializedParam { description: "The maximum delay in seconds for the exponential backoff strategy.", content: DefaultValue(Number(5)), privacy: Public }, "mempool_p2p_config.network_config.discovery_config.heartbeat_interval": SerializedParam { description: "The interval between each discovery (Kademlia) query in milliseconds.", content: DefaultValue(Number(100)), privacy: Public }, "mempool_p2p_config.network_config.idle_connection_timeout": SerializedParam { description: "Amount of time in seconds that a connection with no active sessions will stay alive.", content: DefaultValue(Number(120)), privacy: Public }, "mempool_p2p_config.network_config.peer_manager_config.malicious_timeout_seconds": SerializedParam { description: "The duration in seconds a peer is blacklisted after being marked as malicious.", content: DefaultValue(Number(1)), privacy: Public }, "mempool_p2p_config.network_config.peer_manager_config.unstable_timeout_millis": SerializedParam { description: "The duration in milliseconds a peer blacklisted after being reported as unstable.", content: DefaultValue(Number(1000)), privacy: Public }, "mempool_p2p_config.network_config.port": SerializedParam { description: "The port that the node listens on for incoming tcp connections.", content: DefaultValue(Number(55564)), privacy: Public }, "mempool_p2p_config.network_config.secret_key": SerializedParam { description: "The secret key used for building the peer id. If it's an empty string a random one will be used.", content: DefaultValue(String("0x0101010101010101010101010101010101010101010101010101010101010101")), privacy: Private }, "mempool_p2p_config.network_config.session_timeout": SerializedParam { description: "Maximal time in seconds that each session can take before failing on timeout.", content: DefaultValue(Number(120)), privacy: Public }, "monitoring_endpoint_config.collect_metrics": SerializedParam { description: "If true, collect and return metrics in the monitoring endpoint.", content: DefaultValue(Bool(true)), privacy: Public }, "monitoring_endpoint_config.ip": SerializedParam { description: "The monitoring endpoint ip address.", content: DefaultValue(String("0.0.0.0")), privacy: Public }, "monitoring_endpoint_config.port": SerializedParam { description: "The monitoring endpoint port.", content: DefaultValue(Number(55001)), privacy: Public }, "state_sync_config.central_sync_client_config.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(true)), privacy: TemporaryValue }, "state_sync_config.central_sync_client_config.central_source_config.class_cache_size": SerializedParam { description: "Size of class cache, must be a positive integer.", content: DefaultValue(Number(100)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.concurrent_requests": SerializedParam { description: "Maximum number of concurrent requests to Starknet feeder-gateway for getting a type of data (for example, blocks).", content: DefaultValue(Number(10)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.http_headers": SerializedParam { description: "'k1:v1 k2:v2 ...' headers for SN-client.", content: DefaultValue(String("")), privacy: Private }, "state_sync_config.central_sync_client_config.central_source_config.max_classes_to_download": SerializedParam { description: "Maximum number of classes to download at a given time.", content: DefaultValue(Number(20)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.max_state_updates_to_download": SerializedParam { description: "Maximum number of state updates to download at a given time.", content: DefaultValue(Number(20)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.max_state_updates_to_store_in_memory": SerializedParam { description: "Maximum number of state updates to store in memory at a given time.", content: DefaultValue(Number(20)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.retry_config.max_retries": SerializedParam { description: "Maximum number of retries before the node stops retrying.", content: DefaultValue(Number(10)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.retry_config.retry_base_millis": SerializedParam { description: "Base waiting time after a failed request. After that, the time increases exponentially.", content: DefaultValue(Number(30)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.retry_config.retry_max_delay_millis": SerializedParam { description: "Max waiting time after a failed request.", content: DefaultValue(Number(30000)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.starknet_url": SerializedParam { description: "Starknet feeder-gateway URL. It should match chain_id.", content: DefaultValue(String("https://alpha-mainnet.starknet.io/")), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.base_layer_propagation_sleep_duration": SerializedParam { description: "Time in seconds to poll the base layer to get the latest proved block.", content: DefaultValue(Number(10)), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.block_propagation_sleep_duration": SerializedParam { description: "Time in seconds before checking for a new block after the node is synchronized.", content: DefaultValue(Number(2)), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.blocks_max_stream_size": SerializedParam { description: "Max amount of blocks to download in a stream.", content: DefaultValue(Number(1000)), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.collect_pending_data": SerializedParam { description: "Whether to collect data on pending blocks.", content: DefaultValue(Bool(false)), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.recoverable_error_sleep_duration": SerializedParam { description: "Waiting time in seconds before restarting synchronization after a recoverable error.", content: DefaultValue(Number(3)), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.state_updates_max_stream_size": SerializedParam { description: "Max amount of state updates to download in a stream.", content: DefaultValue(Number(1000)), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.verify_blocks": SerializedParam { description: "Whether to verify incoming blocks.", content: DefaultValue(Bool(true)), privacy: Public }, "state_sync_config.network_config.advertised_multiaddr": SerializedParam { description: "The external address other peers see this node. If this is set, the node will not try to find out which addresses it has and will write this address as external instead", content: DefaultValue(String("")), privacy: Public }, "state_sync_config.network_config.advertised_multiaddr.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(true)), privacy: TemporaryValue }, "state_sync_config.network_config.bootstrap_peer_multiaddr": SerializedParam { description: "The multiaddress of the peer node. It should include the peer's id. For more info: https://docs.libp2p.io/concepts/fundamentals/peers/", content: DefaultValue(String("")), privacy: Public }, "state_sync_config.network_config.bootstrap_peer_multiaddr.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(true)), privacy: TemporaryValue }, "state_sync_config.network_config.chain_id": SerializedParam { description: "The chain to follow. For more details see https://docs.starknet.io/documentation/architecture_and_concepts/Blocks/transactions/#chain-id.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "state_sync_config.network_config.discovery_config.bootstrap_dial_retry_config.base_delay_millis": SerializedParam { description: "The base delay in milliseconds for the exponential backoff strategy.", content: DefaultValue(Number(2)), privacy: Public }, "state_sync_config.network_config.discovery_config.bootstrap_dial_retry_config.factor": SerializedParam { description: "The factor for the exponential backoff strategy.", content: DefaultValue(Number(5)), privacy: Public }, "state_sync_config.network_config.discovery_config.bootstrap_dial_retry_config.max_delay_seconds": SerializedParam { description: "The maximum delay in seconds for the exponential backoff strategy.", content: DefaultValue(Number(5)), privacy: Public }, "state_sync_config.network_config.discovery_config.heartbeat_interval": SerializedParam { description: "The interval between each discovery (Kademlia) query in milliseconds.", content: DefaultValue(Number(100)), privacy: Public }, "state_sync_config.network_config.idle_connection_timeout": SerializedParam { description: "Amount of time in seconds that a connection with no active sessions will stay alive.", content: DefaultValue(Number(120)), privacy: Public }, "state_sync_config.network_config.peer_manager_config.malicious_timeout_seconds": SerializedParam { description: "The duration in seconds a peer is blacklisted after being marked as malicious.", content: DefaultValue(Number(1)), privacy: Public }, "state_sync_config.network_config.peer_manager_config.unstable_timeout_millis": SerializedParam { description: "The duration in milliseconds a peer blacklisted after being reported as unstable.", content: DefaultValue(Number(1000)), privacy: Public }, "state_sync_config.network_config.port": SerializedParam { description: "The port that the node listens on for incoming tcp connections.", content: DefaultValue(Number(55557)), privacy: Public }, "state_sync_config.network_config.secret_key": SerializedParam { description: "The secret key used for building the peer id. If it's an empty string a random one will be used.", content: DefaultValue(String("0x0101010101010101010101010101010101010101010101010101010101010101")), privacy: Private }, "state_sync_config.network_config.session_timeout": SerializedParam { description: "Maximal time in seconds that each session can take before failing on timeout.", content: DefaultValue(Number(120)), privacy: Public }, "state_sync_config.p2p_sync_client_config.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(false)), privacy: TemporaryValue }, "state_sync_config.p2p_sync_client_config.buffer_size": SerializedParam { description: "Size of the buffer for read from the storage and for incoming responses.", content: DefaultValue(Number(100000)), privacy: Public }, "state_sync_config.p2p_sync_client_config.num_block_classes_per_query": SerializedParam { description: "The maximum amount of block's classes to ask from peers in each iteration.", content: DefaultValue(Number(100)), privacy: Public }, "state_sync_config.p2p_sync_client_config.num_block_state_diffs_per_query": SerializedParam { description: "The maximum amount of block's state diffs to ask from peers in each iteration.", content: DefaultValue(Number(100)), privacy: Public }, "state_sync_config.p2p_sync_client_config.num_block_transaction[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.074382Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::trace_util[0m[2m:[0m Tracing has been successfully initialized.
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.131930Z[0m [32m INFO[0m [2mpapyrus_config::loading[0m[2m:[0m Loading custom config file: "/tmp/.tmpId1quG/node_integration_test_config_changes.json"
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.137872Z[0m [32m INFO[0m [1mload[0m: [2mpapyrus_config::loading[0m[2m:[0m config_map: {
[34mNode id 3 part 0:[0m   "base_layer_config.node_url": "https://node_url/",
[34mNode id 3 part 0:[0m   "base_layer_config.starknet_contract_address": "0xc662c410C0ECf747543f5bA90660f6ABeBD9C8c4",
[34mNode id 3 part 0:[0m   "batcher_config.block_builder_config.bouncer_config.block_max_capacity.l1_gas": 2500000,
[34mNode id 3 part 0:[0m   "batcher_config.block_builder_config.bouncer_config.block_max_capacity.message_segment_length": 3700,
[34mNode id 3 part 0:[0m   "batcher_config.block_builder_config.bouncer_config.block_max_capacity.n_events": 5000,
[34mNode id 3 part 0:[0m   "batcher_config.block_builder_config.bouncer_config.block_max_capacity.sierra_gas": 17000000,
[34mNode id 3 part 0:[0m   "batcher_config.block_builder_config.bouncer_config.block_max_capacity.state_diff_size": 4000,
[34mNode id 3 part 0:[0m   "batcher_config.block_builder_config.chain_info.chain_id": "CHAIN_ID_SUBDIR",
[34mNode id 3 part 0:[0m   "batcher_config.block_builder_config.chain_info.fee_token_addresses.eth_fee_token_address": "0x1001",
[34mNode id 3 part 0:[0m   "batcher_config.block_builder_config.chain_info.fee_token_addresses.strk_fee_token_address": "0x1002",
[34mNode id 3 part 0:[0m   "batcher_config.block_builder_config.execute_config.concurrency_config.chunk_size": 64,
[34mNode id 3 part 0:[0m   "batcher_config.block_builder_config.execute_config.concurrency_config.enabled": true,
[34mNode id 3 part 0:[0m   "batcher_config.block_builder_config.execute_config.concurrency_config.n_workers": 4,
[34mNode id 3 part 0:[0m   "batcher_config.block_builder_config.execute_config.stack_size": 62914560,
[34mNode id 3 part 0:[0m   "batcher_config.block_builder_config.tx_chunk_size": 100,
[34mNode id 3 part 0:[0m   "batcher_config.block_builder_config.versioned_constants_overrides.invoke_tx_max_n_steps": 10000000,
[34mNode id 3 part 0:[0m   "batcher_config.block_builder_config.versioned_constants_overrides.max_n_events": 1000,
[34mNode id 3 part 0:[0m   "batcher_config.block_builder_config.versioned_constants_overrides.max_recursion_depth": 50,
[34mNode id 3 part 0:[0m   "batcher_config.block_builder_config.versioned_constants_overrides.validate_max_n_steps": 1000000,
[34mNode id 3 part 0:[0m   "batcher_config.contract_class_manager_config.cairo_native_run_config.channel_size": 2000,
[34mNode id 3 part 0:[0m   "batcher_config.contract_class_manager_config.cairo_native_run_config.run_cairo_native": false,
[34mNode id 3 part 0:[0m   "batcher_config.contract_class_manager_config.cairo_native_run_config.wait_on_native_compilation": false,
[34mNode id 3 part 0:[0m   "batcher_config.contract_class_manager_config.contract_cache_size": 600,
[34mNode id 3 part 0:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.max_casm_bytecode_size": 81920,
[34mNode id 3 part 0:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.max_cpu_time": 20,
[34mNode id 3 part 0:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.max_memory_usage": 5368709120,
[34mNode id 3 part 0:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.max_native_bytecode_size": 15728640,
[34mNode id 3 part 0:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.optimization_level": 2,
[34mNode id 3 part 0:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.panic_on_compilation_failure": false,
[34mNode id 3 part 0:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.sierra_to_native_compiler_path": null,
[34mNode id 3 part 0:[0m   "batcher_config.input_stream_content_buffer_size": 400,
[34mNode id 3 part 0:[0m   "batcher_config.max_l1_handler_txs_per_block_proposal": 3,
[34mNode id 3 part 0:[0m   "batcher_config.outstream_content_buffer_size": 100,
[34mNode id 3 part 0:[0m   "batcher_config.storage.db_config.chain_id": "CHAIN_ID_SUBDIR",
[34mNode id 3 part 0:[0m   "batcher_config.storage.db_config.enforce_file_exists": false,
[34mNode id 3 part 0:[0m   "batcher_config.storage.db_config.growth_step": 67108864,
[34mNode id 3 part 0:[0m   "batcher_config.storage.db_config.max_size": 34359738368,
[34mNode id 3 part 0:[0m   "batcher_config.storage.db_config.min_size": 1048576,
[34mNode id 3 part 0:[0m   "batcher_config.storage.db_config.path_prefix": "/tmp/.tmpXLLEzC",
[34mNode id 3 part 0:[0m   "batcher_config.storage.mmap_file_config.growth_step": 1048576,
[34mNode id 3 part 0:[0m   "batcher_config.storage.mmap_file_config.max_object_size": 65536,
[34mNode id 3 part 0:[0m   "batcher_config.storage.mmap_file_config.max_size": 16777216,
[34mNode id 3 part 0:[0m   "batcher_config.storage.scope": "StateOnly",
[34mNode id 3 part 0:[0m   "chain_id": "CHAIN_ID_SUBDIR",
[34mNode id 3 part 0:[0m   "class_manager_config.class_manager_config.cached_class_storage_config.class_cache_size": 100,
[34mNode id 3 part 0:[0m   "class_manager_config.class_manager_config.cached_class_storage_config.deprecated_class_cache_size": 100,
[34mNode id 3 part 0:[0m   "class_manager_config.class_storage_config.class_hash_storage_config.enforce_file_exists": false,
[34mNode id 3 part 0:[0m   "class_manager_config.class_storage_config.class_hash_storage_config.max_size": 1048576,
[34mNode id 3 part 0:[0m   "class_manager_config.class_storage_config.class_hash_storage_config.path_prefix": "/tmp/.tmpo2fbuc",
[34mNode id 3 part 0:[0m   "class_manager_config.class_storage_config.persistent_root": "/tmp/.tmpQ1F9lJ",
[34mNode id 3 part 0:[0m   "compiler_config.max_casm_bytecode_size": 81920,
[34mNode id 3 part 0:[0m   "compiler_config.max_cpu_time": 20,
[34mNode id 3 part 0:[0m   "compiler_config.max_memory_usage": 5368709120,
[34mNode id 3 part 0:[0m   "compiler_config.max_native_bytecode_size": 15728640,
[34mNode id 3 part 0:[0m   "compiler_config.optimization_level": 2,
[34mNode id 3 part 0:[0m   "compiler_config.panic_on_compilation_failure": false,
[34mNode id 3 part 0:[0m   "compiler_config.sierra_to_native_compiler_path": null,
[34mNode id 3 part 0:[0m   "components.batcher.execution_mode": "Disabled",
[34mNode id 3 part 0:[0m   "components.batcher.ip": "0.0.0.0",
[34mNode id 3 part 0:[0m   "components.batcher.local_server_config.channel_buffer_size": 32,
[34mNode id 3 part 0:[0m   "components.batcher.max_concurrency": 10,
[34mNode id 3 part 0:[0m   "components.batcher.port": 0,
[34mNode id 3 part 0:[0m   "components.batcher.remote_client_config.idle_connections": 18446744073709551615,
[34mNode id 3 part 0:[0m   "components.batcher.remote_client_config.idle_timeout": 90,
[34mNode id 3 part 0:[0m   "components.batcher.remote_client_config.retries": 3,
[34mNode id 3 part 0:[0m   "components.batcher.url": "localhost",
[34mNode id 3 part 0:[0m   "components.class_manager.execution_mode": "LocalExecutionWithRemoteEnabled",
[34mNode id 3 part 0:[0m   "components.class_manager.ip": "127.0.0.1",
[34mNode id 3 part 0:[0m   "components.class_manager.local_server_config.channel_buffer_size": 32,
[34mNode id 3 part 0:[0m   "components.class_manager.max_concurrency": 10,
[34mNode id 3 part 0:[0m   "components.class_manager.port": 55544,
[34mNode id 3 part 0:[0m   "components.class_manager.remote_client_config.idle_connections": 18446744073709551615,
[34mNode id 3 part 0:[0m   "components.class_manager.remote_client_config.idle_timeout": 90,
[34mNode id 3 part 0:[0m   "components.class_manager.remote_client_config.retries": 3,
[34mNode id 3 part 0:[0m   "components.class_manager.url": "127.0.0.1",
[34mNode id 3 part 0:[0m   "components.consensus_manager.execution_mode": "Disabled",
[34mNode id 3 part 0:[0m   "components.gateway.execution_mode": "LocalExecutionWithRemoteEnabled",
[34mNode id 3 part 0:[0m   "components.gateway.ip": "127.0.0.1",
[34mNode id 3 part 0:[0m   "components.gateway.local_server_config.channel_buffer_size": 32,
[34mNode id 3 part 0:[0m   "components.gateway.max_concurrency": 10,
[34mNode id 3 part 0:[0m   "components.gateway.port": 55540,
[34mNode id 3 part 0:[0m   "components.gateway.remote_client_config.idle_connections": 18446744073709551615,
[34mNode id 3 part 0:[0m   "components.gateway.remote_client_config.idle_timeout": 90,
[34mNode id 3 part 0:[0m   "components.gateway.remote_client_config.retries": 3,
[34mNode id 3 part 0:[0m   "components.gateway.url": "127.0.0.1",
[34mNode id 3 part 0:[0m   "components.http_server.execution_mode": "Enabled",
[34mNode id 3 part 0:[0m   "components.l1_provider.execution_mode": "Disabled",
[34mNode id 3 part 0:[0m   "components.l1_provider.ip": "0.0.0.0",
[34mNode id 3 part 0:[0m   "components.l1_provider.local_server_config.channel_buffer_size": 32,
[34mNode id 3 part 0:[0m   "components.l1_provider.max_concurrency": 10,
[34mNode id 3 part 0:[0m   "components.l1_provider.port": 0,
[34mNode id 3 part 0:[0m   "components.l1_provider.remote_client_config.idle_connections": 18446744073709551615,
[34mNode id 3 part 0:[0m   "components.l1_provider.remote_client_config.idle_timeout": 90,
[34mNode id 3 part 0:[0m   "components.l1_provider.remote_client_config.retries": 3,
[34mNode id 3 part 0:[0m   "components.l1_provider.url": "localhost",
[34mNode id 3 part 0:[0m   "components.l1_scraper.execution_mode": "Disabled",
[34mNode id 3 part 0:[0m   "components.mempool.execution_mode": "LocalExecutionWithRemoteEnabled",
[34mNode id 3 part 0:[0m   "components.mempool.ip": "127.0.0.1",
[34mNode id 3 part 0:[0m   "components.mempool.local_server_config.channel_buffer_size": 32,
[34mNode id 3 part 0:[0m   "components.mempool.max_concurrency": 10,
[34mNode id 3 part 0:[0m   "components.mempool.port": 55541,
[34mNode id 3 part 0:[0m   "components.mempool.remote_client_config.idle_connections": 18446744073709551615,
[34mNode id 3 part 0:[0m   "components.mempool.remote_client_config.idle_timeout": 90,
[34mNode id 3 part 0:[0m   "components.mempool.remote_client_config.retries": 3,
[34mNode id 3 part 0:[0m   "components.mempool.url": "127.0.0.1",
[34mNode id 3 part 0:[0m   "components.mempool_p2p.execution_mode": "LocalExecutionWithRemoteEnabled",
[34mNode id 3 part 0:[0m   "components.mempool_p2p.ip": "127.0.0.1",
[34mNode id 3 part 0:[0m   "components.mempool_p2p.local_server_config.channel_buffer_size": 32,
[34mNode id 3 part 0:[0m   "components.mempool_p2p.max_concurrency": 10,
[34mNode id 3 part 0:[0m   "components.mempool_p2p.port": 55542,
[34mNode id 3 part 0:[0m   "components.mempool_p2p.remote_client_config.idle_connections": 18446744073709551615,
[34mNode id 3 part 0:[0m   "components.mempool_p2p.remote_client_config.idle_timeout": 90,
[34mNode id 3 part 0:[0m   "components.mempool_p2p.remote_client_config.retries": 3,
[34mNode id 3 part 0:[0m   "components.mempool_p2p.url": "127.0.0.1",
[34mNode id 3 part 0:[0m   "components.monitoring_endpoint.execution_mode": "Enabled",
[34mNode id 3 part 0:[0m   "components.sierra_compiler.execution_mode": "LocalExecutionWithRemoteDisabled",
[34mNode id 3 part 0:[0m   "components.sierra_compiler.ip": "0.0.0.0",
[34mNode id 3 part 0:[0m   "components.sierra_compiler.local_server_config.channel_buffer_size": 32,
[34mNode id 3 part 0:[0m   "components.sierra_compiler.max_concurrency": 10,
[34mNode id 3 part 0:[0m   "components.sierra_compiler.port": 0,
[34mNode id 3 part 0:[0m   "components.sierra_compiler.remote_client_config.idle_connections": 18446744073709551615,
[34mNode id 3 part 0:[0m   "components.sierra_compiler.remote_client_config.idle_timeout": 90,
[34mNode id 3 part 0:[0m   "components.sierra_compiler.remote_client_config.retries": 3,
[34mNode id 3 part 0:[0m   "components.sierra_compiler.url": "localhost",
[34mNode id 3 part 0:[0m   "components.state_sync.execution_mode": "Remote",
[34mNode id 3 part 0:[0m   "components.state_sync.ip": "127.0.0.1",
[34mNode id 3 part 0:[0m   "components.state_sync.local_server_config.channel_buffer_size": 32,
[34mNode id 3 part 0:[0m   "components.state_sync.max_concurrency": 10,
[34mNode id 3 part 0:[0m   "components.state_sync.port": 55543,
[34mNode id 3 part 0:[0m   "components.state_sync.remote_client_config.idle_connections": 18446744073709551615,
[34mNode id 3 part 0:[0m   "components.state_sync.remote_client_config.idle_timeout": 90,
[34mNode id 3 part 0:[0m   "components.state_sync.remote_client_config.retries": 3,
[34mNode id 3 part 0:[0m   "components.state_sync.url": "127.0.0.1",
[34mNode id 3 part 0:[0m   "consensus_manager_config.broadcast_buffer_size": 10000,
[34mNode id 3 part 0:[0m   "consensus_manager_config.cende_config.recorder_url": "http://127.0.0.1:55180/",
[34mNode id 3 part 0:[0m   "consensus_manager_config.cende_config.skip_write_height": 1,
[34mNode id 3 part 0:[0m   "consensus_manager_config.consensus_config.future_height_limit": 10,
[34mNode id 3 part 0:[0m   "consensus_manager_config.consensus_config.future_height_round_limit": 1,
[34mNode id 3 part 0:[0m   "consensus_manager_config.consensus_config.future_round_limit": 10,
[34mNode id 3 part 0:[0m   "consensus_manager_config.consensus_config.startup_delay": 15,
[34mNode id 3 part 0:[0m   "consensus_manager_config.consensus_config.sync_retry_interval": 1.0,
[34mNode id 3 part 0:[0m   "consensus_manager_config.consensus_config.timeouts.precommit_timeout": 3.0,
[34mNode id 3 part 0:[0m   "consensus_manager_config.consensus_config.timeouts.prevote_timeout": 3.0,
[34mNode id 3 part 0:[0m   "consensus_manager_config.consensus_config.timeouts.proposal_timeout": 9.0,
[34mNode id 3 part 0:[0m   "consensus_manager_config.consensus_config.validator_id": "0x67",
[34mNode id 3 part 0:[0m   "consensus_manager_config.context_config.block_timestamp_window": 1,
[34mNode id 3 part 0:[0m   "consensus_manager_config.context_config.chain_id": "CHAIN_ID_SUBDIR",
[34mNode id 3 part 0:[0m   "consensus_manager_config.context_config.l1_da_mode": true,
[34mNode id 3 part 0:[0m   "consensus_manager_config.context_config.num_validators": 5,
[34mNode id 3 part 0:[0m   "consensus_manager_config.context_config.proposal_buffer_size": 100,
[34mNode id 3 part 0:[0m   "consensus_manager_config.immediate_active_height": 1,
[34mNode id 3 part 0:[0m   "consensus_manager_config.network_config.advertised_multiaddr": null,
[34mNode id 3 part 0:[0m   "consensus_manager_config.network_config.bootstrap_peer_multiaddr": "/ip4/127.0.0.1/tcp/55550/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5",
[34mNode id 3 part 0:[0m   "consensus_manager_config.network_config.chain_id": "CHAIN_ID_SUBDIR",
[34mNode id 3 part 0:[0m   "consensus_manager_config.network_config.discovery_config.bootstrap_dial_retry_config.base_delay_millis": 2,
[34mNode id 3 part 0:[0m   "consensus_manager_config.network_config.discovery_config.bootstrap_dial_retry_config.factor": 5,
[34mNode id 3 part 0:[0m   "consensus_manager_config.network_config.discovery_config.bootstrap_dial_retry_config.max_delay_seconds": 5,
[34mNode id 3 part 0:[0m   "consensus_manager_config.network_config.discovery_config.heartbeat_interval": 100,
[34mNode id 3 part 0:[0m   "consensus_manager_config.network_config.idle_connection_timeout": 120,
[34mNode id 3 part 0:[0m   "consensus_manager_config.network_config.peer_manager_config.malicious_timeout_seconds": 1,
[34mNode id 3 part 0:[0m   "consensus_manager_config.network_config.peer_manager_config.unstable_timeout_millis": 1000,
[34mNode id 3 part 0:[0m   "consensus_manager_config.network_config.port": 55553,
[34mNode id 3 part 0:[0m   "consensus_manager_config.network_config.secret_key": "",
[34mNode id 3 part 0:[0m   "consensus_manager_config.network_config.session_timeout": 120,
[34mNode id 3 part 0:[0m   "consensus_manager_config.proposals_topic": "consensus_proposals",
[34mNode id 3 part 0:[0m   "consensus_manager_config.revert_config.revert_up_to_and_including": 18446744073709551615,
[34mNode id 3 part 0:[0m   "consensus_manager_config.revert_config.should_revert": false,
[34mNode id 3 part 0:[0m   "consensus_manager_config.votes_topic": "consensus_votes",
[34mNode id 3 part 0:[0m   "eth_fee_token_address": "0x1001",
[34mNode id 3 part 0:[0m   "gateway_config.chain_info.chain_id": "CHAIN_ID_SUBDIR",
[34mNode id 3 part 0:[0m   "gateway_config.chain_info.fee_token_addresses.eth_fee_token_address": "0x1001",
[34mNode id 3 part 0:[0m   "gateway_config.chain_info.fee_token_addresses.strk_fee_token_address": "0x1002",
[34mNode id 3 part 0:[0m   "gateway_config.stateful_tx_validator_config.max_nonce_for_validation_skip": "0x1",
[34mNode id 3 part 0:[0m   "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.invoke_tx_max_n_steps": 10000000,
[34mNode id 3 part 0:[0m   "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.max_n_events": 1000,
[34mNode id 3 part 0:[0m   "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.max_recursion_depth": 50,
[34mNode id 3 part 0:[0m   "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.validate_max_n_steps": 1000000,
[34mNode id 3 part 0:[0m   "gateway_config.stateless_tx_validator_config.max_calldata_length": 10,
[34mNode id 3 part 0:[0m   "gateway_config.stateless_tx_validator_config.max_contract_class_object_size": 4089446,
[34mNode id 3 part 0:[0m   "gateway_config.stateless_tx_validator_config.max_sierra_version.major": 1,
[34mNode id 3 part 0:[0m   "gateway_config.stateless_tx_validator_config.max_sierra_version.minor": 5,
[34mNode id 3 part 0:[0m   "gateway_config.stateless_tx_validator_config.max_sierra_version.patch": 18446744073709551615,
[34mNode id 3 part 0:[0m   "gateway_config.stateless_tx_validator_config.max_signature_length": 2,
[34mNode id 3 part 0:[0m   "gateway_config.stateless_tx_validator_config.min_sierra_version.major": 1,
[34mNode id 3 part 0:[0m   "gateway_config.stateless_tx_validator_config.min_sierra_version.minor": 1,
[34mNode id 3 part 0:[0m   "gateway_config.stateless_tx_validator_config.min_sierra_version.patch": 0,
[34mNode id 3 part 0:[0m   "gateway_config.stateless_tx_validator_config.validate_non_zero_l1_data_gas_fee": false,
[34mNode id 3 part 0:[0m   "gateway_config.stateless_tx_validator_config.validate_non_zero_l1_gas_fee": true,
[34mNode id 3 part 0:[0m   "gateway_config.stateless_tx_validator_config.validate_non_zero_l2_gas_fee": false,
[34mNode id 3 part 0:[0m   "http_server_config.ip": "127.0.0.1",
[34mNode id 3 part 0:[0m   "http_server_config.port": 55182,
[34mNode id 3 part 0:[0m   "l1_provider_config.bootstrap_catch_up_height": 0,
[34mNode id 3 part 0:[0m   "l1_provider_config.provider_startup_height": 1,
[34mNode id 3 part 0:[0m   "l1_provider_config.startup_sync_sleep_retry_interval": 0.0,
[34mNode id 3 part 0:[0m   "l1_scraper_config.chain_id": "CHAIN_ID_SUBDIR",
[34mNode id 3 part 0:[0m   "l1_scraper_config.finality": 0,
[34mNode id 3 part 0:[0m   "l1_scraper_config.polling_interval": 1,
[34mNode id 3 part 0:[0m   "l1_scraper_config.startup_rewind_time": 0,
[34mNode id 3 part 0:[0m   "mempool_config.enable_fee_escalation": true,
[34mNode id 3 part 0:[0m   "mempool_config.fee_escalation_percentage": 10,
[34mNode id 3 part 0:[0m   "mempool_config.transaction_ttl": 300,
[34mNode id 3 part 0:[0m   "mempool_p2p_config.network_buffer_size": 10000,
[34mNode id 3 part 0:[0m   "mempool_p2p_config.network_config.advertised_multiaddr": null,
[34mNode id 3 part 0:[0m   "mempool_p2p_config.network_config.bootstrap_peer_multiaddr": "/ip4/127.0.0.1/tcp/55564/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5",
[34mNode id 3 part 0:[0m   "mempool_p2p_config.network_config.chain_id": "CHAIN_ID_SUBDIR",
[34mNode id 3 part 0:[0m   "mempool_p2p_config.network_config.discovery_config.bootstrap_dial_retry_config.base_delay_millis": 2,
[34mNode id 3 part 0:[0m   "mempool_p2p_config.network_config.discovery_config.bootstrap_dial_retry_config.factor": 5,
[34mNode id 3 part 0:[0m   "mempool_p2p_config.network_config.discovery_config.bootstrap_dial_retry_config.max_delay_seconds": 5,
[34mNode id 3 part 0:[0m   "mempool_p2p_config.network_config.discovery_config.heartbeat_interval": 100,
[34mNode id 3 part 0:[0m   "mempool_p2p_config.network_config.idle_connection_timeout": 120,
[34mNode id 3 part 0:[0m   "mempool_p2p_config.network_config.peer_manager_config.malicious_timeout_seconds": 1,
[34mNode id 3 part 0:[0m   "mempool_p2p_config.network_config.peer_manager_config.unstable_timeout_millis": 1000,
[34mNode id 3 part 0:[0m   "mempool_p2p_config.network_config.port": 55567,
[34mNode id 3 part 0:[0m   "mempool_p2p_config.network_config.secret_key": "",
[34mNode id 3 part 0:[0m   "mempool_p2p_config.network_config.session_timeout": 120,
[34mNode id 3 part 0:[0m   "monitoring_endpoint_config.collect_metrics": true,
[34mNode id 3 part 0:[0m   "monitoring_endpoint_config.ip": "0.0.0.0",
[34mNode id 3 part 0:[0m   "monitoring_endpoint_config.port": 55181,
[34mNode id 3 part 0:[0m   "recorder_url": "http://127.0.0.1:55180/",
[34mNode id 3 part 0:[0m   "revert_config.revert_up_to_and_including": 18446744073709551615,
[34mNode id 3 part 0:[0m   "revert_config.should_revert": false,
[34mNode id 3 part 0:[0m   "state_sync_config.central_sync_client_config": null,
[34mNode id 3 part 0:[0m   "state_sync_config.network_config.advertised_multiaddr": null,
[34mNode id 3 part 0:[0m   "state_sync_config.network_config.bootstrap_peer_multiaddr": "/ip4/127.0.0.1/tcp/55557/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5",
[34mNode id 3 part 0:[0m   "state_sync_config.network_config.chain_id": "CHAIN_ID_SUBDIR",
[34mNode id 3 part 0:[0m   "state_sync_config.network_config.discovery_config.bootstrap_dial_retry_config.base_delay_millis": 2,
[34mNode id 3 part 0:[0m   "state_sync_config.network_config.discovery_config.bootstrap_dial_retry_config.factor": 5,
[34mNode id 3 part 0:[0m   "state_sync_config.network_config.discovery_config.bootstrap_dial_retry_config.max_delay_seconds": 5,
[34mNode id 3 part 0:[0m   "state_sync_config.network_config.discovery_config.heartbeat_interval": 100,
[34mNode id 3 part 0:[0m   "state_sync_config.network_config.idle_connection_timeout": 120,
[34mNode id 3 part 0:[0m   "state_sync_config.network_config.peer_manager_config.malicious_timeout_seconds": 1,
[34mNode id 3 part 0:[0m   "state_sync_config.network_config.peer_manager_config.unstable_timeout_millis": 1000,
[34mNode id 3 part 0:[0m   "state_sync_config.network_config.port": 55560,
[34mNode id 3 part 0:[0m   "state_sync_config.network_config.secret_key": "",
[34mNode id 3 part 0:[0m   "state_sync_config.network_config.session_timeout": 120,
[34mNode id 3 part 0:[0m   "state_sync_config.p2p_sync_client_config.buffer_size": 100000,
[34mNode id 3 part 0:[0m   "state_sync_config.p2p_sync_client_config.num_block_classes_per_query": 100,
[34mNode id 3 part 0:[0m   "state_sync_config.p2p_sync_client_config.num_block_state_diffs_per_query": 100,
[34mNode id 3 part 0:[0m   "state_sync_config.p2p_sync_client_config.num_block_transactions_per_query": 100,
[34mNode id 3 part 0:[0m   "state_sync_config.p2p_sync_client_config.num_headers_per_query": 10000,
[34mNode id 3 part 0:[0m   "state_sync_config.p2p_sync_client_config.wait_period_for_new_data": 50,
[34mNode id 3 part 0:[0m   "state_sync_config.p2p_sync_client_config.wait_period_for_other_protocol": 50,
[34mNode id 3 part 0:[0m   "state_sync_config.revert_config.revert_up_to_and_including": 18446744073709551615,
[34mNode id 3 part 0:[0m   "state_sync_config.revert_config.should_revert": false,
[34mNode id 3 part 0:[0m   "state_sync_config.storage_config.db_config.chain_id": "CHAIN_ID_SUBDIR",
[34mNode id 3 part 0:[0m   "state_sync_config.storage_config.db_config.enforce_file_exists": false,
[34mNode id 3 part 0:[0m   "state_sync_config.storage_config.db_config.growth_step": 67108864,
[34mNode id 3 part 0:[0m   "state_sync_config.storage_config.db_config.max_size": 34359738368,
[34mNode id 3 part 0:[0m   "state_sync_config.storage_config.db_config.min_size": 1048576,
[34mNode id 3 part 0:[0m   "state_sync_config.storage_config.db_config.path_prefix": "/tmp/.tmpphy677",
[34mNode id 3 part 0:[0m   "state_sync_config.storage_config.mmap_file_config.growth_step": 1048576,
[34mNode id 3 part 0:[0m   "state_sync_config.storage_config.mmap_file_config.max_object_size": 65536,
[34mNode id 3 part 0:[0m   "state_sync_config.storage_config.mmap_file_config.max_size": 16777216,
[34mNode id 3 part 0:[0m   "state_sync_config.storage_config.scope": "FullArchive",
[34mNode id 3 part 0:[0m   "strk_fee_token_address": "0x1002",
[34mNode id 3 part 0:[0m   "validator_id": "0x67",
[34mNode id 3 part 0:[0m   "versioned_constants_overrides.invoke_tx_max_n_steps": 10000000,
[34mNode id 3 part 0:[0m   "versioned_constants_overrides.max_n_events": 1000,
[34mNode id 3 part 0:[0m   "versioned_constants_overrides.max_recursion_depth": 50,
[34mNode id 3 part 0:[0m   "versioned_constants_overrides.validate_max_n_steps": 1000000
[34mNode id 3 part 0:[0m }
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.139126Z[0m [32m INFO[0m [2mstarknet_sequencer_node::utils[0m[2m:[0m Finished loading configuration.
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.139212Z[0m [32m INFO[0m [2mstarknet_sequencer_node::utils[0m[2m:[0m Finished validating configuration.
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.139219Z[0m [32m INFO[0m [2mstarknet_sequencer_node[0m[2m:[0m Config dump:
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.140797Z[0m [32m INFO[0m [2mstarknet_sequencer_node[0m[2m:[0m {"base_layer_config.node_url": SerializedParam { description: "A required param! Ethereum node URL. A schema to match to Infura node: https://mainnet.infura.io/v3/<your_api_key>, but any other node can be used.", content: ParamType(String), privacy: Private }, "base_layer_config.starknet_contract_address": SerializedParam { description: "Starknet contract address in ethereum.", content: DefaultValue(String("0xc662c410C0ECf747543f5bA90660f6ABeBD9C8c4")), privacy: Public }, "batcher_config.block_builder_config.bouncer_config.block_max_capacity.l1_gas": SerializedParam { description: "An upper bound on the total l1_gas used in a block.", content: DefaultValue(Number(2500000)), privacy: Public }, "batcher_config.block_builder_config.bouncer_config.block_max_capacity.message_segment_length": SerializedParam { description: "An upper bound on the message segment length in a block.", content: DefaultValue(Number(3700)), privacy: Public }, "batcher_config.block_builder_config.bouncer_config.block_max_capacity.n_events": SerializedParam { description: "An upper bound on the total number of events generated in a block.", content: DefaultValue(Number(5000)), privacy: Public }, "batcher_config.block_builder_config.bouncer_config.block_max_capacity.sierra_gas": SerializedParam { description: "An upper bound on the total sierra_gas used in a block.", content: DefaultValue(Number(17000000)), privacy: Public }, "batcher_config.block_builder_config.bouncer_config.block_max_capacity.state_diff_size": SerializedParam { description: "An upper bound on the total state diff size in a block.", content: DefaultValue(Number(4000)), privacy: Public }, "batcher_config.block_builder_config.chain_info.chain_id": SerializedParam { description: "The chain ID of the StarkNet chain.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "batcher_config.block_builder_config.chain_info.fee_token_addresses.eth_fee_token_address": SerializedParam { description: "Address of the ETH fee token.", content: DefaultValue(String("0x1001")), privacy: Public }, "batcher_config.block_builder_config.chain_info.fee_token_addresses.strk_fee_token_address": SerializedParam { description: "Address of the STRK fee token.", content: DefaultValue(String("0x1002")), privacy: Public }, "batcher_config.block_builder_config.execute_config.concurrency_config.chunk_size": SerializedParam { description: "The size of the transaction chunk executed in parallel.", content: DefaultValue(Number(64)), privacy: Public }, "batcher_config.block_builder_config.execute_config.concurrency_config.enabled": SerializedParam { description: "Enables concurrency of transaction execution.", content: DefaultValue(Bool(true)), privacy: Public }, "batcher_config.block_builder_config.execute_config.concurrency_config.n_workers": SerializedParam { description: "Number of parallel transaction execution workers.", content: DefaultValue(Number(4)), privacy: Public }, "batcher_config.block_builder_config.execute_config.stack_size": SerializedParam { description: "The thread stack size (proportional to the maximal gas of a transaction).", content: DefaultValue(Number(62914560)), privacy: Public }, "batcher_config.block_builder_config.tx_chunk_size": SerializedParam { description: "The size of the transaction chunk.", content: DefaultValue(Number(100)), privacy: Public }, "batcher_config.block_builder_config.versioned_constants_overrides.invoke_tx_max_n_steps": SerializedParam { description: "Maximum number of steps the invoke function is allowed to run.", content: DefaultValue(Number(10000000)), privacy: Public }, "batcher_config.block_builder_config.versioned_constants_overrides.max_n_events": SerializedParam { description: "Maximum number of events that can be emitted from the transation.", content: DefaultValue(Number(1000)), privacy: Public }, "batcher_config.block_builder_config.versioned_constants_overrides.max_recursion_depth": SerializedParam { description: "Maximum recursion depth for nested calls during blockifier validation.", content: DefaultValue(Number(50)), privacy: Public }, "batcher_config.block_builder_config.versioned_constants_overrides.validate_max_n_steps": SerializedParam { description: "Maximum number of steps the validation function is allowed to run.", content: DefaultValue(Number(1000000)), privacy: Public }, "batcher_config.contract_class_manager_config.cairo_native_run_config.channel_size": SerializedParam { description: "The size of the compilation request channel.", content: DefaultValue(Number(2000)), privacy: Public }, "batcher_config.contract_class_manager_config.cairo_native_run_config.run_cairo_native": SerializedParam { description: "Enables Cairo native execution.", content: DefaultValue(Bool(false)), privacy: Public }, "batcher_config.contract_class_manager_config.cairo_native_run_config.wait_on_native_compilation": SerializedParam { description: "Block Sequencer main program while compiling sierra, for testing.", content: DefaultValue(Bool(false)), privacy: Public }, "batcher_config.contract_class_manager_config.contract_cache_size": SerializedParam { description: "The size of the global contract cache.", content: DefaultValue(Number(600)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.max_casm_bytecode_size": SerializedParam { description: "Limitation of compiled casm bytecode size.", content: DefaultValue(Number(81920)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.max_cpu_time": SerializedParam { description: "Limitation of compilation cpu time (seconds).", content: DefaultValue(Number(20)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.max_memory_usage": SerializedParam { description: "Limitation of compilation process's virtual memory (bytes).", content: DefaultValue(Number(5368709120)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.max_native_bytecode_size": SerializedParam { description: "Limitation of compiled native bytecode size.", content: DefaultValue(Number(15728640)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.optimization_level": SerializedParam { description: "The level of optimization to apply during compilation.", content: DefaultValue(Number(2)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.panic_on_compilation_failure": SerializedParam { description: "Whether to panic on compilation failure.", content: DefaultValue(Bool(false)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.sierra_to_native_compiler_path": SerializedParam { description: "The path to the Sierra-to-Native compiler binary.", content: DefaultValue(String("")), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.sierra_to_native_compiler_path.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(true)), privacy: TemporaryValue }, "batcher_config.input_stream_content_buffer_size": SerializedParam { description: "Sets the buffer size for the input transaction channel. Adding more transactions beyond this limit will block until space is available.", content: DefaultValue(Number(400)), privacy: Public }, "batcher_config.max_l1_handler_txs_per_block_proposal": SerializedParam { description: "The maximum number of L1 handler transactions to include in a block proposal.", content: DefaultValue(Number(3)), privacy: Public }, "batcher_config.outstream_content_buffer_size": SerializedParam { description: "The maximum number of items to include in a single get_proposal_content response.", content: DefaultValue(Number(100)), privacy: Public }, "batcher_config.storage.db_config.chain_id": SerializedParam { description: "The chain to follow. For more details see https://docs.starknet.io/documentation/architecture_and_concepts/Blocks/transactions/#chain-id.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "batcher_config.storage.db_config.enforce_file_exists": SerializedParam { description: "Whether to enforce that the path exists. If true, `open_env` fails when the mdbx.dat file does not exist.", content: DefaultValue(Bool(false)), privacy: Public }, "batcher_config.storage.db_config.growth_step": SerializedParam { description: "The growth step in bytes, must be greater than zero to allow the database to grow.", content: DefaultValue(Number(67108864)), privacy: Public }, "batcher_config.storage.db_config.max_size": SerializedParam { description: "The maximum size of the node's storage in bytes.", content: DefaultValue(Number(34359738368)), privacy: Public }, "batcher_config.storage.db_config.min_size": SerializedParam { description: "The minimum size of the node's storage in bytes.", content: DefaultValue(Number(1048576)), privacy: Public }, "batcher_config.storage.db_config.path_prefix": SerializedParam { description: "Prefix of the path of the node's storage directory, the storage file path will be <path_prefix>/<chain_id>. The path is not created automatically.", content: DefaultValue(String("/tmp/.tmpXLLEzC")), privacy: Public }, "batcher_config.storage.mmap_file_config.growth_step": SerializedParam { description: "The growth step in bytes, must be greater than max_object_size.", content: DefaultValue(Number(1048576)), privacy: Public }, "batcher_config.storage.mmap_file_config.max_object_size": SerializedParam { description: "The maximum size of a single object in the file in bytes", content: DefaultValue(Number(65536)), privacy: Public }, "batcher_config.storage.mmap_file_config.max_size": SerializedParam { description: "The maximum size of a memory mapped file in bytes. Must be greater than growth_step.", content: DefaultValue(Number(16777216)), privacy: Public }, "batcher_config.storage.scope": SerializedParam { description: "The categories of data saved in storage.", content: DefaultValue(String("StateOnly")), privacy: Public }, "class_manager_config.class_manager_config.cached_class_storage_config.class_cache_size": SerializedParam { description: "Contract classes cache size.", content: DefaultValue(Number(100)), privacy: Public }, "class_manager_config.class_manager_config.cached_class_storage_config.deprecated_class_cache_size": SerializedParam { description: "Deprecated contract classes cache size.", content: DefaultValue(Number(100)), privacy: Public }, "class_manager_config.class_storage_config.class_hash_storage_config.enforce_file_exists": SerializedParam { description: "Whether to enforce that the above path exists.", content: DefaultValue(Bool(false)), privacy: Public }, "class_manager_config.class_storage_config.class_hash_storage_config.max_size": SerializedParam { description: "The maximum size of the class hash storage in bytes.", content: DefaultValue(Number(1048576)), privacy: Public }, "class_manager_config.class_storage_config.class_hash_storage_config.path_prefix": SerializedParam { description: "Prefix of the path of class hash storage directory.", content: DefaultValue(String("/tmp/.tmpo2fbuc")), privacy: Public }, "class_manager_config.class_storage_config.persistent_root": SerializedParam { description: "Path to the node's class storage directory.", content: DefaultValue(String("/tmp/.tmpQ1F9lJ")), privacy: Public }, "compiler_config.max_casm_bytecode_size": SerializedParam { description: "Limitation of compiled casm bytecode size.", content: DefaultValue(Number(81920)), privacy: Public }, "compiler_config.max_cpu_time": SerializedParam { description: "Limitation of compilation cpu time (seconds).", content: DefaultValue(Number(20)), privacy: Public }, "compiler_config.max_memory_usage": SerializedParam { description: "Limitation of compilation process's virtual memory (bytes).", content: DefaultValue(Number(5368709120)), privacy: Public }, "compiler_config.max_native_bytecode_size": SerializedParam { description: "Limitation of compiled native bytecode size.", content: DefaultValue(Number(15728640)), privacy: Public }, "compiler_config.optimization_level": SerializedParam { description: "The level of optimization to apply during compilation.", content: DefaultValue(Number(2)), privacy: Public }, "compiler_config.panic_on_compilation_failure": SerializedParam { description: "Whether to panic on compilation failure.", content: DefaultValue(Bool(false)), privacy: Public }, "compiler_config.sierra_to_native_compiler_path": SerializedParam { description: "The path to the Sierra-to-Native compiler binary.", content: DefaultValue(String("")), privacy: Public }, "compiler_config.sierra_to_native_compiler_path.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(true)), privacy: TemporaryValue }, "components.batcher.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("Disabled")), privacy: Public }, "components.batcher.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("0.0.0.0")), privacy: Public }, "components.batcher.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.batcher.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.batcher.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(0)), privacy: Public }, "components.batcher.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.batcher.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.batcher.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.batcher.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("localhost")), privacy: Public }, "components.class_manager.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("LocalExecutionWithRemoteEnabled")), privacy: Public }, "components.class_manager.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("127.0.0.1")), privacy: Public }, "components.class_manager.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.class_manager.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.class_manager.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(55544)), privacy: Public }, "components.class_manager.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.class_manager.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.class_manager.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.class_manager.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("127.0.0.1")), privacy: Public }, "components.consensus_manager.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("Disabled")), privacy: Public }, "components.gateway.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("LocalExecutionWithRemoteEnabled")), privacy: Public }, "components.gateway.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("127.0.0.1")), privacy: Public }, "components.gateway.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.gateway.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.gateway.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(55540)), privacy: Public }, "components.gateway.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.gateway.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.gateway.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.gateway.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("127.0.0.1")), privacy: Public }, "components.http_server.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("Enabled")), privacy: Public }, "components.l1_provider.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("Disabled")), privacy: Public }, "components.l1_provider.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("0.0.0.0")), privacy: Public }, "components.l1_provider.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.l1_provider.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.l1_provider.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(0)), privacy: Public }, "components.l1_provider.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.l1_provider.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.l1_provider.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.l1_provider.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("localhost")), privacy: Public }, "components.l1_scraper.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("Disabled")), privacy: Public }, "components.mempool.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("LocalExecutionWithRemoteEnabled")), privacy: Public }, "components.mempool.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("127.0.0.1")), privacy: Public }, "components.mempool.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.mempool.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.mempool.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(55541)), privacy: Public }, "components.mempool.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.mempool.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.mempool.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.mempool.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("127.0.0.1")), privacy: Public }, "components.mempool_p2p.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("LocalExecutionWithRemoteEnabled")), privacy: Public }, "components.mempool_p2p.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("127.0.0.1")), privacy: Public }, "components.mempool_p2p.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.mempool_p2p.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.mempool_p2p.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(55542)), privacy: Public }, "components.mempool_p2p.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.mempool_p2p.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.mempool_p2p.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.mempool_p2p.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("127.0.0.1")), privacy: Public }, "components.monitoring_endpoint.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("Enabled")), privacy: Public }, "components.sierra_compiler.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("LocalExecutionWithRemoteDisabled")), privacy: Public }, "components.sierra_compiler.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("0.0.0.0")), privacy: Public }, "components.sierra_compiler.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.sierra_compiler.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.sierra_compiler.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(0)), privacy: Public }, "components.sierra_compiler.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.sierra_compiler.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.sierra_compiler.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.sierra_compiler.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("localhost")), privacy: Public }, "components.state_sync.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("Remote")), privacy: Public }, "components.state_sync.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("127.0.0.1")), privacy: Public }, "components.state_sync.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.state_sync.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.state_sync.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(55543)), privacy: Public }, "components.state_sync.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.state_sync.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.state_sync.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.state_sync.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("127.0.0.1")), privacy: Public }, "consensus_manager_config.broadcast_buffer_size": SerializedParam { description: "The buffer size for the broadcast channel.", content: DefaultValue(Number(10000)), privacy: Public }, "consensus_manager_config.cende_config.recorder_url": SerializedParam { description: "The URL of the Pythonic cende_recorder", content: DefaultValue(String("http://127.0.0.1:55180/")), privacy: Private }, "consensus_manager_config.cende_config.skip_write_height": SerializedParam { description: "A height that the consensus can skip writing to Aerospike. Needed for booting up (no previous height blob to write) or to handle extreme cases (all the nodes failed).", content: DefaultValue(Number(1)), privacy: Private }, "consensus_manager_config.cende_config.skip_write_height.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(false)), privacy: TemporaryValue }, "consensus_manager_config.consensus_config.future_height_limit": SerializedParam { description: "How many heights in the future should we cache.", content: DefaultValue(Number(10)), privacy: Public }, "consensus_manager_config.consensus_config.future_height_round_limit": SerializedParam { description: "How many rounds should we cache for future heights.", content: DefaultValue(Number(1)), privacy: Public }, "consensus_manager_config.consensus_config.future_round_limit": SerializedParam { description: "How many rounds in the future (for current height) should we cache.", content: DefaultValue(Number(10)), privacy: Public }, "consensus_manager_config.consensus_config.startup_delay": SerializedParam { description: "Delay (seconds) before starting consensus to give time for network peering.", content: DefaultValue(Number(15)), privacy: Public }, "consensus_manager_config.consensus_config.sync_retry_interval": SerializedParam { description: "The duration (seconds) between sync attempts.", content: DefaultValue(Number(1.0)), privacy: Public }, "consensus_manager_config.consensus_config.timeouts.precommit_timeout": SerializedParam { description: "The timeout (seconds) for a precommit.", content: DefaultValue(Number(3.0)), privacy: Public }, "consensus_manager_config.consensus_config.timeouts.prevote_timeout": SerializedParam { description: "The timeout (seconds) for a prevote.", content: DefaultValue(Number(3.0)), privacy: Public }, "consensus_manager_config.consensus_config.timeouts.proposal_timeout": SerializedParam { description: "The timeout (seconds) for a proposal.", content: DefaultValue(Number(9.0)), privacy: Public }, "consensus_manager_config.consensus_config.validator_id": SerializedParam { description: "The validator id of the node.", content: DefaultValue(String("0x67")), privacy: Public }, "consensus_manager_config.context_config.block_timestamp_window": SerializedParam { description: "Maximum allowed deviation (seconds) of a proposed block's timestamp from the current time.", content: DefaultValue(Number(1)), privacy: Public }, "consensus_manager_config.context_config.chain_id": SerializedParam { description: "The chain id of the Starknet chain.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "consensus_manager_config.context_config.l1_da_mode": SerializedParam { description: "The data availability mode, true: Blob, false: Calldata.", content: DefaultValue(Bool(true)), privacy: Public }, "consensus_manager_config.context_config.num_validators": SerializedParam { description: "The number of validators.", content: DefaultValue(Number(5)), privacy: Public }, "consensus_manager_config.context_config.proposal_buffer_size": SerializedParam { description: "The buffer size for streaming outbound proposals.", content: DefaultValue(Number(100)), privacy: Public }, "consensus_manager_config.immediate_active_height": SerializedParam { description: "The height at which the node may actively participate in consensus.", content: DefaultValue(Number(1)), privacy: Public }, "consensus_manager_config.network_config.advertised_multiaddr": SerializedParam { description: "The external address other peers see this node. If this is set, the node will not try to find out which addresses it has and will write this address as external instead", content: DefaultValue(String("")), privacy: Public }, "consensus_manager_config.network_config.advertised_multiaddr.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(true)), privacy: TemporaryValue }, "consensus_manager_config.network_config.bootstrap_peer_multiaddr": SerializedParam { description: "The multiaddress of the peer node. It should include the peer's id. For more info: https://docs.libp2p.io/concepts/fundamentals/peers/", content: DefaultValue(String("/ip4/127.0.0.1/tcp/55550/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5")), privacy: Public }, "consensus_manager_config.network_config.bootstrap_peer_multiaddr.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(false)), privacy: TemporaryValue }, "consensus_manager_config.network_config.chain_id": SerializedParam { description: "The chain to follow. For more details see https://docs.starknet.io/documentation/architecture_and_concepts/Blocks/transactions/#chain-id.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "consensus_manager_config.network_config.discovery_config.bootstrap_dial_retry_config.base_delay_millis": SerializedParam { description: "The base delay in milliseconds for the exponential backoff strategy.", content: DefaultValue(Number(2)), privacy: Public }, "consensus_manager_config.network_config.discovery_config.bootstrap_dial_retry_config.factor": SerializedParam { description: "The factor for the exponential backoff strategy.", content: DefaultValue(Number(5)), privacy: Public }, "consensus_manager_config.network_config.discovery_config.bootstrap_dial_retry_config.max_delay_seconds": SerializedParam { description: "The maximum delay in seconds for the exponential backoff strategy.", content: DefaultValue(Number(5)), privacy: Public }, "consensus_manager_config.network_config.discovery_config.heartbeat_interval": SerializedParam { description: "The interval between each discovery (Kademlia) query in milliseconds.", content: DefaultValue(Number(100)), privacy: Public }, "consensus_manager_config.network_config.idle_connection_timeout": SerializedParam { description: "Amount of time in seconds that a connection with no active sessions will stay alive.", content: DefaultValue(Number(120)), privacy: Public }, "consensus_manager_config.network_config.peer_manager_config.malicious_timeout_seconds": SerializedParam { description: "The duration in seconds a peer is blacklisted after being marked as malicious.", content: DefaultValue(Number(1)), privacy: Public }, "consensus_manager_config.network_config.peer_manager_config.unstable_timeout_millis": SerializedParam { description: "The duration in milliseconds a peer blacklisted after being reported as unstable.", content: DefaultValue(Number(1000)), privacy: Public }, "consensus_manager_config.network_config.port": SerializedParam { description: "The port that the node listens on for incoming tcp connections.", content: DefaultValue(Number(55553)), privacy: Public }, "consensus_manager_config.network_config.secret_key": SerializedParam { description: "The secret key used for building the peer id. If it's an empty string a random one will be used.", content: DefaultValue(String("")), privacy: Private }, "consensus_manager_config.network_config.session_timeout": SerializedParam { description: "Maximal time in seconds that each session can take before failing on timeout.", content: DefaultValue(Number(120)), privacy: Public }, "consensus_manager_config.proposals_topic": SerializedParam { description: "The topic for consensus proposals.", content: DefaultValue(String("consensus_proposals")), privacy: Public }, "consensus_manager_config.revert_config.revert_up_to_and_including": SerializedParam { description: "The component will revert blocks up to this block number (including).", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "consensus_manager_config.revert_config.should_revert": SerializedParam { description: "If set true, the component would revert blocks and do nothing else.", content: DefaultValue(Bool(false)), privacy: Public }, "consensus_manager_config.votes_topic": SerializedParam { description: "The topic for consensus votes.", content: DefaultValue(String("consensus_votes")), privacy: Public }, "gateway_config.chain_info.chain_id": SerializedParam { description: "The chain ID of the StarkNet chain.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "gateway_config.chain_info.fee_token_addresses.eth_fee_token_address": SerializedParam { description: "Address of the ETH fee token.", content: DefaultValue(String("0x1001")), privacy: Public }, "gateway_config.chain_info.fee_token_addresses.strk_fee_token_address": SerializedParam { description: "Address of the STRK fee token.", content: DefaultValue(String("0x1002")), privacy: Public }, "gateway_config.stateful_tx_validator_config.max_nonce_for_validation_skip": SerializedParam { description: "Maximum nonce for which the validation is skipped.", content: DefaultValue(String("0x1")), privacy: Public }, "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.invoke_tx_max_n_steps": SerializedParam { description: "Maximum number of steps the invoke function is allowed to run.", content: DefaultValue(Number(10000000)), privacy: Public }, "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.max_n_events": SerializedParam { description: "Maximum number of events that can be emitted from the transation.", content: DefaultValue(Number(1000)), privacy: Public }, "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.max_recursion_depth": SerializedParam { description: "Maximum recursion depth for nested calls during blockifier validation.", content: DefaultValue(Number(50)), privacy: Public }, "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.validate_max_n_steps": SerializedParam { description: "Maximum number of steps the validation function is allowed to run.", content: DefaultValue(Number(1000000)), privacy: Public }, "gateway_config.stateless_tx_validator_config.max_calldata_length": SerializedParam { description: "Limitation of calldata length.", content: DefaultValue(Number(10)), privacy: Public }, "gateway_config.stateless_tx_validator_config.max_contract_class_object_size": SerializedParam { description: "Limitation of contract class object size.", content: DefaultValue(Number(4089446)), privacy: Public }, "gateway_config.stateless_tx_validator_config.max_sierra_version.major": SerializedParam { description: "The major version of the configuration.", content: DefaultValue(Number(1)), privacy: Public }, "gateway_config.stateless_tx_validator_config.max_sierra_version.minor": SerializedParam { description: "The minor version of the configuration.", content: DefaultValue(Number(5)), privacy: Public }, "gateway_config.stateless_tx_validator_config.max_sierra_version.patch": SerializedParam { description: "The patch version of the configuration.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "gateway_config.stateless_tx_validator_config.max_signature_length": SerializedParam { description: "Limitation of signature length.", content: DefaultValue(Number(2)), privacy: Public }, "gateway_config.stateless_tx_validator_config.min_sierra_version.major": SerializedParam { description: "The major version of the configuration.", content: DefaultValue(Number(1)), privacy: Public }, "gateway_config.stateless_tx_validator_config.min_sierra_version.minor": SerializedParam { description: "The minor version of the configuration.", content: DefaultValue(Number(1)), privacy: Public }, "gateway_config.stateless_tx_validator_config.min_sierra_version.patch": SerializedParam { description: "The patch version of the configuration.", content: DefaultValue(Number(0)), privacy: Public }, "gateway_config.stateless_tx_validator_config.validate_non_zero_l1_data_gas_fee": SerializedParam { description: "If true, validates that a transaction has non-zero L1 Data (Blob) resource bounds.", content: DefaultValue(Bool(false)), privacy: Public }, "gateway_config.stateless_tx_validator_config.validate_non_zero_l1_gas_fee": SerializedParam { description: "If true, validates that a transaction has non-zero L1 resource bounds.", content: DefaultValue(Bool(true)), privacy: Public }, "gateway_config.stateless_tx_validator_config.validate_non_zero_l2_gas_fee": SerializedParam { description: "If true, validates that a transaction has non-zero L2 resource bounds.", content: DefaultValue(Bool(false)), privacy: Public }, "http_server_config.ip": SerializedParam { description: "The http server ip.", content: DefaultValue(String("127.0.0.1")), privacy: Public }, "http_server_config.port": SerializedParam { description: "The http server port.", content: DefaultValue(Number(55182)), privacy: Public }, "l1_provider_config.bootstrap_catch_up_height": SerializedParam { description: "Height at which the provider should catch up to the bootstrapper.", content: DefaultValue(Number(0)), privacy: Public }, "l1_provider_config.provider_startup_height": SerializedParam { description: "Height at which the provider should start.", content: DefaultValue(Number(1)), privacy: Public }, "l1_provider_config.startup_sync_sleep_retry_interval": SerializedParam { description: "Interval in seconds between each retry of syncing with L2 during startup.", content: DefaultValue(Number(0.0)), privacy: Public }, "l1_scraper_config.chain_id": SerializedParam { description: "The chain to follow. For more details see https://docs.starknet.io/documentation/architecture_and_concepts/Blocks/transactions/#chain-id.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "l1_scraper_config.finality": SerializedParam { description: "Number of blocks to wait for finality", content: DefaultValue(Number(0)), privacy: Public }, "l1_scraper_config.polling_interval": SerializedParam { description: "Interval in Seconds between each scraping attempt of L1.", content: DefaultValue(Number(1)), privacy: Public }, "l1_scraper_config.startup_rewind_time": SerializedParam { description: "Duration to rewind from latest L1 block when starting scraping.", content: DefaultValue(Number(0)), privacy: Public }, "mempool_config.enable_fee_escalation": SerializedParam { description: "If true, transactions can be replaced with higher fee transactions.", content: DefaultValue(Bool(true)), privacy: Public }, "mempool_config.fee_escalation_percentage": SerializedParam { description: "Percentage increase for tip and max gas price to enable transaction replacement.", content: DefaultValue(Number(10)), privacy: Public }, "mempool_config.transaction_ttl": SerializedParam { description: "Time-to-live for transactions in the mempool, in seconds.", content: DefaultValue(Number(300)), privacy: Public }, "mempool_p2p_config.network_buffer_size": SerializedParam { description: "Network buffer size.", content: DefaultValue(Number(10000)), privacy: Public }, "mempool_p2p_config.network_config.advertised_multiaddr": SerializedParam { description: "The external address other peers see this node. If this is set, the node will not try to find out which addresses it has and will write this address as external instead", content: DefaultValue(String("")), privacy: Public }, "mempool_p2p_config.network_config.advertised_multiaddr.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(true)), privacy: TemporaryValue }, "mempool_p2p_config.network_config.bootstrap_peer_multiaddr": SerializedParam { description: "The multiaddress of the peer node. It should include the peer's id. For more info: https://docs.libp2p.io/concepts/fundamentals/peers/", content: DefaultValue(String("/ip4/127.0.0.1/tcp/55564/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5")), privacy: Public }, "mempool_p2p_config.network_config.bootstrap_peer_multiaddr.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(false)), privacy: TemporaryValue }, "mempool_p2p_config.network_config.chain_id": SerializedParam { description: "The chain to follow. For more details see https://docs.starknet.io/documentation/architecture_and_concepts/Blocks/transactions/#chain-id.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "mempool_p2p_config.network_config.discovery_config.bootstrap_dial_retry_config.base_delay_millis": SerializedParam { description: "The base delay in milliseconds for the exponential backoff strategy.", content: DefaultValue(Number(2)), privacy: Public }, "mempool_p2p_config.network_config.discovery_config.bootstrap_dial_retry_config.factor": SerializedParam { description: "The factor for the exponential backoff strategy.", content: DefaultValue(Number(5)), privacy: Public }, "mempool_p2p_config.network_config.discovery_config.bootstrap_dial_retry_config.max_delay_seconds": SerializedParam { description: "The maximum delay in seconds for the exponential backoff strategy.", content: DefaultValue(Number(5)), privacy: Public }, "mempool_p2p_config.network_config.discovery_config.heartbeat_interval": SerializedParam { description: "The interval between each discovery (Kademlia) query in milliseconds.", content: DefaultValue(Number(100)), privacy: Public }, "mempool_p2p_config.network_config.idle_connection_timeout": SerializedParam { description: "Amount of time in seconds that a connection with no active sessions will stay alive.", content: DefaultValue(Number(120)), privacy: Public }, "mempool_p2p_config.network_config.peer_manager_config.malicious_timeout_seconds": SerializedParam { description: "The duration in seconds a peer is blacklisted after being marked as malicious.", content: DefaultValue(Number(1)), privacy: Public }, "mempool_p2p_config.network_config.peer_manager_config.unstable_timeout_millis": SerializedParam { description: "The duration in milliseconds a peer blacklisted after being reported as unstable.", content: DefaultValue(Number(1000)), privacy: Public }, "mempool_p2p_config.network_config.port": SerializedParam { description: "The port that the node listens on for incoming tcp connections.", content: DefaultValue(Number(55567)), privacy: Public }, "mempool_p2p_config.network_config.secret_key": SerializedParam { description: "The secret key used for building the peer id. If it's an empty string a random one will be used.", content: DefaultValue(String("")), privacy: Private }, "mempool_p2p_config.network_config.session_timeout": SerializedParam { description: "Maximal time in seconds that each session can take before failing on timeout.", content: DefaultValue(Number(120)), privacy: Public }, "monitoring_endpoint_config.collect_metrics": SerializedParam { description: "If true, collect and return metrics in the monitoring endpoint.", content: DefaultValue(Bool(true)), privacy: Public }, "monitoring_endpoint_config.ip": SerializedParam { description: "The monitoring endpoint ip address.", content: DefaultValue(String("0.0.0.0")), privacy: Public }, "monitoring_endpoint_config.port": SerializedParam { description: "The monitoring endpoint port.", content: DefaultValue(Number(55181)), privacy: Public }, "state_sync_config.central_sync_client_config.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(true)), privacy: TemporaryValue }, "state_sync_config.central_sync_client_config.central_source_config.class_cache_size": SerializedParam { description: "Size of class cache, must be a positive integer.", content: DefaultValue(Number(100)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.concurrent_requests": SerializedParam { description: "Maximum number of concurrent requests to Starknet feeder-gateway for getting a type of data (for example, blocks).", content: DefaultValue(Number(10)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.http_headers": SerializedParam { description: "'k1:v1 k2:v2 ...' headers for SN-client.", content: DefaultValue(String("")), privacy: Private }, "state_sync_config.central_sync_client_config.central_source_config.max_classes_to_download": SerializedParam { description: "Maximum number of classes to download at a given time.", content: DefaultValue(Number(20)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.max_state_updates_to_download": SerializedParam { description: "Maximum number of state updates to download at a given time.", content: DefaultValue(Number(20)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.max_state_updates_to_store_in_memory": SerializedParam { description: "Maximum number of state updates to store in memory at a given time.", content: DefaultValue(Number(20)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.retry_config.max_retries": SerializedParam { description: "Maximum number of retries before the node stops retrying.", content: DefaultValue(Number(10)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.retry_config.retry_base_millis": SerializedParam { description: "Base waiting time after a failed request. After that, the time increases exponentially.", content: DefaultValue(Number(30)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.retry_config.retry_max_delay_millis": SerializedParam { description: "Max waiting time after a failed request.", content: DefaultValue(Number(30000)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.starknet_url": SerializedParam { description: "Starknet feeder-gateway URL. It should match chain_id.", content: DefaultValue(String("https://alpha-mainnet.starknet.io/")), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.base_layer_propagation_sleep_duration": SerializedParam { description: "Time in seconds to poll the base layer to get the latest proved block.", content: DefaultValue(Number(10)), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.block_propagation_sleep_duration": SerializedParam { description: "Time in seconds before checking for a new block after the node is synchronized.", content: DefaultValue(Number(2)), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.blocks_max_stream_size": SerializedParam { description: "Max amount of blocks to download in a stream.", content: DefaultValue(Number(1000)), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.collect_pending_data": SerializedParam { description: "Whether to collect data on pending blocks.", content: DefaultValue(Bool(false)), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.recoverable_error_sleep_duration": SerializedParam { description: "Waiting time in seconds before restarting synchronization after a recoverable error.", content: DefaultValue(Number(3)), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.state_updates_max_stream_size": SerializedParam { description: "Max amount of state updates to download in a stream.", content: DefaultValue(Number(1000)), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.verify_blocks": SerializedParam { description: "Whether to verify incoming blocks.", content: DefaultValue(Bool(true)), privacy: Public }, "state_sync_config.network_config.advertised_multiaddr": SerializedParam { description: "The external address other peers see this node. If this is set, the node will not try to find out which addresses it has and will write this address as external instead", content: DefaultValue(String("")), privacy: Public }, "state_sync_config.network_config.advertised_multiaddr.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(true)), privacy: TemporaryValue }, "state_sync_config.network_config.bootstrap_peer_multiaddr": SerializedParam { description: "The multiaddress of the peer node. It should include the peer's id. For more info: https://docs.libp2p.io/concepts/fundamentals/peers/", content: DefaultValue(String("/ip4/127.0.0.1/tcp/55557/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5")), privacy: Public }, "state_sync_config.network_config.bootstrap_peer_multiaddr.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(false)), privacy: TemporaryValue }, "state_sync_config.network_config.chain_id": SerializedParam { description: "The chain to follow. For more details see https://docs.starknet.io/documentation/architecture_and_concepts/Blocks/transactions/#chain-id.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "state_sync_config.network_config.discovery_config.bootstrap_dial_retry_config.base_delay_millis": SerializedParam { description: "The base delay in milliseconds for the exponential backoff strategy.", content: DefaultValue(Number(2)), privacy: Public }, "state_sync_config.network_config.discovery_config.bootstrap_dial_retry_config.factor": SerializedParam { description: "The factor for the exponential backoff strategy.", content: DefaultValue(Number(5)), privacy: Public }, "state_sync_config.network_config.discovery_config.bootstrap_dial_retry_config.max_delay_seconds": SerializedParam { description: "The maximum delay in seconds for the exponential backoff strategy.", content: DefaultValue(Number(5)), privacy: Public }, "state_sync_config.network_config.discovery_config.heartbeat_interval": SerializedParam { description: "The interval between each discovery (Kademlia) query in milliseconds.", content: DefaultValue(Number(100)), privacy: Public }, "state_sync_config.network_config.idle_connection_timeout": SerializedParam { description: "Amount of time in seconds that a connection with no active sessions will stay alive.", content: DefaultValue(Number(120)), privacy: Public }, "state_sync_config.network_config.peer_manager_config.malicious_timeout_seconds": SerializedParam { description: "The duration in seconds a peer is blacklisted after being marked as malicious.", content: DefaultValue(Number(1)), privacy: Public }, "state_sync_config.network_config.peer_manager_config.unstable_timeout_millis": SerializedParam { description: "The duration in milliseconds a peer blacklisted after being reported as unstable.", content: DefaultValue(Number(1000)), privacy: Public }, "state_sync_config.network_config.port": SerializedParam { description: "The port that the node listens on for incoming tcp connections.", content: DefaultValue(Number(55560)), privacy: Public }, "state_sync_config.network_config.secret_key": SerializedParam { description: "The secret key used for building the peer id. If it's an empty string a random one will be used.", content: DefaultValue(String("")), privacy: Private }, "state_sync_config.network_config.session_timeout": SerializedParam { description: "Maximal time in seconds that each session can take before failing on timeout.", content: DefaultValue(Number(120)), privacy: Public }, "state_sync_config.p2p_sync_client_config.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(false)), privacy: TemporaryValue }, "state_sync_config.p2p_sync_client_config.buffer_size": SerializedParam { description: "Size of the buffer for read from the storage and for incoming responses.", content: DefaultValue(Number(100000)), privacy: Public }, "state_sync_config.p2p_sync_client_config.num_block_classes_per_query": SerializedParam { description: "The maximum amount of block's classes to ask from peers in each iteration.", content: DefaultValue(Number(100)), privacy: Public }, "state_sync_config.p2p_sync_client_config.num_block_state_diffs_per_query": SerializedParam { description: "The maximum amount of block's state diffs to ask from peers in each iteration.", content: DefaultValue(Number(100)), privacy: Public }, "state_sync_config.p2p_sync_client_config.num_block_transactions_per[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.075680Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::trace_util[0m[2m:[0m Tracing has been successfully initialized.
[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.139248Z[0m [32m INFO[0m [2mpapyrus_config::loading[0m[2m:[0m Loading custom config file: "/tmp/.tmpxkcQqq/node_integration_test_config_changes.json"
[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.148433Z[0m [32m INFO[0m [1mload[0m: [2mpapyrus_config::loading[0m[2m:[0m config_map: {
[35mNode id 4 part 0:[0m   "base_layer_config.node_url": "https://node_url/",
[35mNode id 4 part 0:[0m   "base_layer_config.starknet_contract_address": "0xc662c410C0ECf747543f5bA90660f6ABeBD9C8c4",
[35mNode id 4 part 0:[0m   "batcher_config.block_builder_config.bouncer_config.block_max_capacity.l1_gas": 2500000,
[35mNode id 4 part 0:[0m   "batcher_config.block_builder_config.bouncer_config.block_max_capacity.message_segment_length": 3700,
[35mNode id 4 part 0:[0m   "batcher_config.block_builder_config.bouncer_config.block_max_capacity.n_events": 5000,
[35mNode id 4 part 0:[0m   "batcher_config.block_builder_config.bouncer_config.block_max_capacity.sierra_gas": 17000000,
[35mNode id 4 part 0:[0m   "batcher_config.block_builder_config.bouncer_config.block_max_capacity.state_diff_size": 4000,
[35mNode id 4 part 0:[0m   "batcher_config.block_builder_config.chain_info.chain_id": "CHAIN_ID_SUBDIR",
[35mNode id 4 part 0:[0m   "batcher_config.block_builder_config.chain_info.fee_token_addresses.eth_fee_token_address": "0x1001",
[35mNode id 4 part 0:[0m   "batcher_config.block_builder_config.chain_info.fee_token_addresses.strk_fee_token_address": "0x1002",
[35mNode id 4 part 0:[0m   "batcher_config.block_builder_config.execute_config.concurrency_config.chunk_size": 64,
[35mNode id 4 part 0:[0m   "batcher_config.block_builder_config.execute_config.concurrency_config.enabled": true,
[35mNode id 4 part 0:[0m   "batcher_config.block_builder_config.execute_config.concurrency_config.n_workers": 4,
[35mNode id 4 part 0:[0m   "batcher_config.block_builder_config.execute_config.stack_size": 62914560,
[35mNode id 4 part 0:[0m   "batcher_config.block_builder_config.tx_chunk_size": 100,
[35mNode id 4 part 0:[0m   "batcher_config.block_builder_config.versioned_constants_overrides.invoke_tx_max_n_steps": 10000000,
[35mNode id 4 part 0:[0m   "batcher_config.block_builder_config.versioned_constants_overrides.max_n_events": 1000,
[35mNode id 4 part 0:[0m   "batcher_config.block_builder_config.versioned_constants_overrides.max_recursion_depth": 50,
[35mNode id 4 part 0:[0m   "batcher_config.block_builder_config.versioned_constants_overrides.validate_max_n_steps": 1000000,
[35mNode id 4 part 0:[0m   "batcher_config.contract_class_manager_config.cairo_native_run_config.channel_size": 2000,
[35mNode id 4 part 0:[0m   "batcher_config.contract_class_manager_config.cairo_native_run_config.run_cairo_native": false,
[35mNode id 4 part 0:[0m   "batcher_config.contract_class_manager_config.cairo_native_run_config.wait_on_native_compilation": false,
[35mNode id 4 part 0:[0m   "batcher_config.contract_class_manager_config.contract_cache_size": 600,
[35mNode id 4 part 0:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.max_casm_bytecode_size": 81920,
[35mNode id 4 part 0:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.max_cpu_time": 20,
[35mNode id 4 part 0:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.max_memory_usage": 5368709120,
[35mNode id 4 part 0:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.max_native_bytecode_size": 15728640,
[35mNode id 4 part 0:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.optimization_level": 2,
[35mNode id 4 part 0:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.panic_on_compilation_failure": false,
[35mNode id 4 part 0:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.sierra_to_native_compiler_path": null,
[35mNode id 4 part 0:[0m   "batcher_config.input_stream_content_buffer_size": 400,
[35mNode id 4 part 0:[0m   "batcher_config.max_l1_handler_txs_per_block_proposal": 3,
[35mNode id 4 part 0:[0m   "batcher_config.outstream_content_buffer_size": 100,
[35mNode id 4 part 0:[0m   "batcher_config.storage.db_config.chain_id": "CHAIN_ID_SUBDIR",
[35mNode id 4 part 0:[0m   "batcher_config.storage.db_config.enforce_file_exists": false,
[35mNode id 4 part 0:[0m   "batcher_config.storage.db_config.growth_step": 67108864,
[35mNode id 4 part 0:[0m   "batcher_config.storage.db_config.max_size": 34359738368,
[35mNode id 4 part 0:[0m   "batcher_config.storage.db_config.min_size": 1048576,
[35mNode id 4 part 0:[0m   "batcher_config.storage.db_config.path_prefix": "/tmp/.tmpVXeHAz",
[35mNode id 4 part 0:[0m   "batcher_config.storage.mmap_file_config.growth_step": 1048576,
[35mNode id 4 part 0:[0m   "batcher_config.storage.mmap_file_config.max_object_size": 65536,
[35mNode id 4 part 0:[0m   "batcher_config.storage.mmap_file_config.max_size": 16777216,
[35mNode id 4 part 0:[0m   "batcher_config.storage.scope": "StateOnly",
[35mNode id 4 part 0:[0m   "chain_id": "CHAIN_ID_SUBDIR",
[35mNode id 4 part 0:[0m   "class_manager_config.class_manager_config.cached_class_storage_config.class_cache_size": 100,
[35mNode id 4 part 0:[0m   "class_manager_config.class_manager_config.cached_class_storage_config.deprecated_class_cache_size": 100,
[35mNode id 4 part 0:[0m   "class_manager_config.class_storage_config.class_hash_storage_config.enforce_file_exists": false,
[35mNode id 4 part 0:[0m   "class_manager_config.class_storage_config.class_hash_storage_config.max_size": 1048576,
[35mNode id 4 part 0:[0m   "class_manager_config.class_storage_config.class_hash_storage_config.path_prefix": "/tmp/.tmpMclo1l",
[35mNode id 4 part 0:[0m   "class_manager_config.class_storage_config.persistent_root": "/tmp/.tmpmO3ZYn",
[35mNode id 4 part 0:[0m   "compiler_config.max_casm_bytecode_size": 81920,
[35mNode id 4 part 0:[0m   "compiler_config.max_cpu_time": 20,
[35mNode id 4 part 0:[0m   "compiler_config.max_memory_usage": 5368709120,
[35mNode id 4 part 0:[0m   "compiler_config.max_native_bytecode_size": 15728640,
[35mNode id 4 part 0:[0m   "compiler_config.optimization_level": 2,
[35mNode id 4 part 0:[0m   "compiler_config.panic_on_compilation_failure": false,
[35mNode id 4 part 0:[0m   "compiler_config.sierra_to_native_compiler_path": null,
[35mNode id 4 part 0:[0m   "components.batcher.execution_mode": "Disabled",
[35mNode id 4 part 0:[0m   "components.batcher.ip": "0.0.0.0",
[35mNode id 4 part 0:[0m   "components.batcher.local_server_config.channel_buffer_size": 32,
[35mNode id 4 part 0:[0m   "components.batcher.max_concurrency": 10,
[35mNode id 4 part 0:[0m   "components.batcher.port": 0,
[35mNode id 4 part 0:[0m   "components.batcher.remote_client_config.idle_connections": 18446744073709551615,
[35mNode id 4 part 0:[0m   "components.batcher.remote_client_config.idle_timeout": 90,
[35mNode id 4 part 0:[0m   "components.batcher.remote_client_config.retries": 3,
[35mNode id 4 part 0:[0m   "components.batcher.url": "localhost",
[35mNode id 4 part 0:[0m   "components.class_manager.execution_mode": "LocalExecutionWithRemoteEnabled",
[35mNode id 4 part 0:[0m   "components.class_manager.ip": "127.0.0.1",
[35mNode id 4 part 0:[0m   "components.class_manager.local_server_config.channel_buffer_size": 32,
[35mNode id 4 part 0:[0m   "components.class_manager.max_concurrency": 10,
[35mNode id 4 part 0:[0m   "components.class_manager.port": 55549,
[35mNode id 4 part 0:[0m   "components.class_manager.remote_client_config.idle_connections": 18446744073709551615,
[35mNode id 4 part 0:[0m   "components.class_manager.remote_client_config.idle_timeout": 90,
[35mNode id 4 part 0:[0m   "components.class_manager.remote_client_config.retries": 3,
[35mNode id 4 part 0:[0m   "components.class_manager.url": "127.0.0.1",
[35mNode id 4 part 0:[0m   "components.consensus_manager.execution_mode": "Disabled",
[35mNode id 4 part 0:[0m   "components.gateway.execution_mode": "LocalExecutionWithRemoteEnabled",
[35mNode id 4 part 0:[0m   "components.gateway.ip": "127.0.0.1",
[35mNode id 4 part 0:[0m   "components.gateway.local_server_config.channel_buffer_size": 32,
[35mNode id 4 part 0:[0m   "components.gateway.max_concurrency": 10,
[35mNode id 4 part 0:[0m   "components.gateway.port": 55545,
[35mNode id 4 part 0:[0m   "components.gateway.remote_client_config.idle_connections": 18446744073709551615,
[35mNode id 4 part 0:[0m   "components.gateway.remote_client_config.idle_timeout": 90,
[35mNode id 4 part 0:[0m   "components.gateway.remote_client_config.retries": 3,
[35mNode id 4 part 0:[0m   "components.gateway.url": "127.0.0.1",
[35mNode id 4 part 0:[0m   "components.http_server.execution_mode": "Enabled",
[35mNode id 4 part 0:[0m   "components.l1_provider.execution_mode": "Disabled",
[35mNode id 4 part 0:[0m   "components.l1_provider.ip": "0.0.0.0",
[35mNode id 4 part 0:[0m   "components.l1_provider.local_server_config.channel_buffer_size": 32,
[35mNode id 4 part 0:[0m   "components.l1_provider.max_concurrency": 10,
[35mNode id 4 part 0:[0m   "components.l1_provider.port": 0,
[35mNode id 4 part 0:[0m   "components.l1_provider.remote_client_config.idle_connections": 18446744073709551615,
[35mNode id 4 part 0:[0m   "components.l1_provider.remote_client_config.idle_timeout": 90,
[35mNode id 4 part 0:[0m   "components.l1_provider.remote_client_config.retries": 3,
[35mNode id 4 part 0:[0m   "components.l1_provider.url": "localhost",
[35mNode id 4 part 0:[0m   "components.l1_scraper.execution_mode": "Disabled",
[35mNode id 4 part 0:[0m   "components.mempool.execution_mode": "LocalExecutionWithRemoteEnabled",
[35mNode id 4 part 0:[0m   "components.mempool.ip": "127.0.0.1",
[35mNode id 4 part 0:[0m   "components.mempool.local_server_config.channel_buffer_size": 32,
[35mNode id 4 part 0:[0m   "components.mempool.max_concurrency": 10,
[35mNode id 4 part 0:[0m   "components.mempool.port": 55546,
[35mNode id 4 part 0:[0m   "components.mempool.remote_client_config.idle_connections": 18446744073709551615,
[35mNode id 4 part 0:[0m   "components.mempool.remote_client_config.idle_timeout": 90,
[35mNode id 4 part 0:[0m   "components.mempool.remote_client_config.retries": 3,
[35mNode id 4 part 0:[0m   "components.mempool.url": "127.0.0.1",
[35mNode id 4 part 0:[0m   "components.mempool_p2p.execution_mode": "LocalExecutionWithRemoteEnabled",
[35mNode id 4 part 0:[0m   "components.mempool_p2p.ip": "127.0.0.1",
[35mNode id 4 part 0:[0m   "components.mempool_p2p.local_server_config.channel_buffer_size": 32,
[35mNode id 4 part 0:[0m   "components.mempool_p2p.max_concurrency": 10,
[35mNode id 4 part 0:[0m   "components.mempool_p2p.port": 55547,
[35mNode id 4 part 0:[0m   "components.mempool_p2p.remote_client_config.idle_connections": 18446744073709551615,
[35mNode id 4 part 0:[0m   "components.mempool_p2p.remote_client_config.idle_timeout": 90,
[35mNode id 4 part 0:[0m   "components.mempool_p2p.remote_client_config.retries": 3,
[35mNode id 4 part 0:[0m   "components.mempool_p2p.url": "127.0.0.1",
[35mNode id 4 part 0:[0m   "components.monitoring_endpoint.execution_mode": "Enabled",
[35mNode id 4 part 0:[0m   "components.sierra_compiler.execution_mode": "LocalExecutionWithRemoteDisabled",
[35mNode id 4 part 0:[0m   "components.sierra_compiler.ip": "0.0.0.0",
[35mNode id 4 part 0:[0m   "components.sierra_compiler.local_server_config.channel_buffer_size": 32,
[35mNode id 4 part 0:[0m   "components.sierra_compiler.max_concurrency": 10,
[35mNode id 4 part 0:[0m   "components.sierra_compiler.port": 0,
[35mNode id 4 part 0:[0m   "components.sierra_compiler.remote_client_config.idle_connections": 18446744073709551615,
[35mNode id 4 part 0:[0m   "components.sierra_compiler.remote_client_config.idle_timeout": 90,
[35mNode id 4 part 0:[0m   "components.sierra_compiler.remote_client_config.retries": 3,
[35mNode id 4 part 0:[0m   "components.sierra_compiler.url": "localhost",
[35mNode id 4 part 0:[0m   "components.state_sync.execution_mode": "Remote",
[35mNode id 4 part 0:[0m   "components.state_sync.ip": "127.0.0.1",
[35mNode id 4 part 0:[0m   "components.state_sync.local_server_config.channel_buffer_size": 32,
[35mNode id 4 part 0:[0m   "components.state_sync.max_concurrency": 10,
[35mNode id 4 part 0:[0m   "components.state_sync.port": 55548,
[35mNode id 4 part 0:[0m   "components.state_sync.remote_client_config.idle_connections": 18446744073709551615,
[35mNode id 4 part 0:[0m   "components.state_sync.remote_client_config.idle_timeout": 90,
[35mNode id 4 part 0:[0m   "components.state_sync.remote_client_config.retries": 3,
[35mNode id 4 part 0:[0m   "components.state_sync.url": "127.0.0.1",
[35mNode id 4 part 0:[0m   "consensus_manager_config.broadcast_buffer_size": 10000,
[35mNode id 4 part 0:[0m   "consensus_manager_config.cende_config.recorder_url": "http://127.0.0.1:55300/",
[35mNode id 4 part 0:[0m   "consensus_manager_config.cende_config.skip_write_height": 1,
[35mNode id 4 part 0:[0m   "consensus_manager_config.consensus_config.future_height_limit": 10,
[35mNode id 4 part 0:[0m   "consensus_manager_config.consensus_config.future_height_round_limit": 1,
[35mNode id 4 part 0:[0m   "consensus_manager_config.consensus_config.future_round_limit": 10,
[35mNode id 4 part 0:[0m   "consensus_manager_config.consensus_config.startup_delay": 15,
[35mNode id 4 part 0:[0m   "consensus_manager_config.consensus_config.sync_retry_interval": 1.0,
[35mNode id 4 part 0:[0m   "consensus_manager_config.consensus_config.timeouts.precommit_timeout": 3.0,
[35mNode id 4 part 0:[0m   "consensus_manager_config.consensus_config.timeouts.prevote_timeout": 3.0,
[35mNode id 4 part 0:[0m   "consensus_manager_config.consensus_config.timeouts.proposal_timeout": 9.0,
[35mNode id 4 part 0:[0m   "consensus_manager_config.consensus_config.validator_id": "0x68",
[35mNode id 4 part 0:[0m   "consensus_manager_config.context_config.block_timestamp_window": 1,
[35mNode id 4 part 0:[0m   "consensus_manager_config.context_config.chain_id": "CHAIN_ID_SUBDIR",
[35mNode id 4 part 0:[0m   "consensus_manager_config.context_config.l1_da_mode": true,
[35mNode id 4 part 0:[0m   "consensus_manager_config.context_config.num_validators": 5,
[35mNode id 4 part 0:[0m   "consensus_manager_config.context_config.proposal_buffer_size": 100,
[35mNode id 4 part 0:[0m   "consensus_manager_config.immediate_active_height": 1,
[35mNode id 4 part 0:[0m   "consensus_manager_config.network_config.advertised_multiaddr": null,
[35mNode id 4 part 0:[0m   "consensus_manager_config.network_config.bootstrap_peer_multiaddr": "/ip4/127.0.0.1/tcp/55550/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5",
[35mNode id 4 part 0:[0m   "consensus_manager_config.network_config.chain_id": "CHAIN_ID_SUBDIR",
[35mNode id 4 part 0:[0m   "consensus_manager_config.network_config.discovery_config.bootstrap_dial_retry_config.base_delay_millis": 2,
[35mNode id 4 part 0:[0m   "consensus_manager_config.network_config.discovery_config.bootstrap_dial_retry_config.factor": 5,
[35mNode id 4 part 0:[0m   "consensus_manager_config.network_config.discovery_config.bootstrap_dial_retry_config.max_delay_seconds": 5,
[35mNode id 4 part 0:[0m   "consensus_manager_config.network_config.discovery_config.heartbeat_interval": 100,
[35mNode id 4 part 0:[0m   "consensus_manager_config.network_config.idle_connection_timeout": 120,
[35mNode id 4 part 0:[0m   "consensus_manager_config.network_config.peer_manager_config.malicious_timeout_seconds": 1,
[35mNode id 4 part 0:[0m   "consensus_manager_config.network_config.peer_manager_config.unstable_timeout_millis": 1000,
[35mNode id 4 part 0:[0m   "consensus_manager_config.network_config.port": 55555,
[35mNode id 4 part 0:[0m   "consensus_manager_config.network_config.secret_key": "",
[35mNode id 4 part 0:[0m   "consensus_manager_config.network_config.session_timeout": 120,
[35mNode id 4 part 0:[0m   "consensus_manager_config.proposals_topic": "consensus_proposals",
[35mNode id 4 part 0:[0m   "consensus_manager_config.revert_config.revert_up_to_and_including": 18446744073709551615,
[35mNode id 4 part 0:[0m   "consensus_manager_config.revert_config.should_revert": false,
[35mNode id 4 part 0:[0m   "consensus_manager_config.votes_topic": "consensus_votes",
[35mNode id 4 part 0:[0m   "eth_fee_token_address": "0x1001",
[35mNode id 4 part 0:[0m   "gateway_config.chain_info.chain_id": "CHAIN_ID_SUBDIR",
[35mNode id 4 part 0:[0m   "gateway_config.chain_info.fee_token_addresses.eth_fee_token_address": "0x1001",
[35mNode id 4 part 0:[0m   "gateway_config.chain_info.fee_token_addresses.strk_fee_token_address": "0x1002",
[35mNode id 4 part 0:[0m   "gateway_config.stateful_tx_validator_config.max_nonce_for_validation_skip": "0x1",
[35mNode id 4 part 0:[0m   "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.invoke_tx_max_n_steps": 10000000,
[35mNode id 4 part 0:[0m   "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.max_n_events": 1000,
[35mNode id 4 part 0:[0m   "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.max_recursion_depth": 50,
[35mNode id 4 part 0:[0m   "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.validate_max_n_steps": 1000000,
[35mNode id 4 part 0:[0m   "gateway_config.stateless_tx_validator_config.max_calldata_length": 10,
[35mNode id 4 part 0:[0m   "gateway_config.stateless_tx_validator_config.max_contract_class_object_size": 4089446,
[35mNode id 4 part 0:[0m   "gateway_config.stateless_tx_validator_config.max_sierra_version.major": 1,
[35mNode id 4 part 0:[0m   "gateway_config.stateless_tx_validator_config.max_sierra_version.minor": 5,
[35mNode id 4 part 0:[0m   "gateway_config.stateless_tx_validator_config.max_sierra_version.patch": 18446744073709551615,
[35mNode id 4 part 0:[0m   "gateway_config.stateless_tx_validator_config.max_signature_length": 2,
[35mNode id 4 part 0:[0m   "gateway_config.stateless_tx_validator_config.min_sierra_version.major": 1,
[35mNode id 4 part 0:[0m   "gateway_config.stateless_tx_validator_config.min_sierra_version.minor": 1,
[35mNode id 4 part 0:[0m   "gateway_config.stateless_tx_validator_config.min_sierra_version.patch": 0,
[35mNode id 4 part 0:[0m   "gateway_config.stateless_tx_validator_config.validate_non_zero_l1_data_gas_fee": false,
[35mNode id 4 part 0:[0m   "gateway_config.stateless_tx_validator_config.validate_non_zero_l1_gas_fee": true,
[35mNode id 4 part 0:[0m   "gateway_config.stateless_tx_validator_config.validate_non_zero_l2_gas_fee": false,
[35mNode id 4 part 0:[0m   "http_server_config.ip": "127.0.0.1",
[35mNode id 4 part 0:[0m   "http_server_config.port": 55302,
[35mNode id 4 part 0:[0m   "l1_provider_config.bootstrap_catch_up_height": 0,
[35mNode id 4 part 0:[0m   "l1_provider_config.provider_startup_height": 1,
[35mNode id 4 part 0:[0m   "l1_provider_config.startup_sync_sleep_retry_interval": 0.0,
[35mNode id 4 part 0:[0m   "l1_scraper_config.chain_id": "CHAIN_ID_SUBDIR",
[35mNode id 4 part 0:[0m   "l1_scraper_config.finality": 0,
[35mNode id 4 part 0:[0m   "l1_scraper_config.polling_interval": 1,
[35mNode id 4 part 0:[0m   "l1_scraper_config.startup_rewind_time": 0,
[35mNode id 4 part 0:[0m   "mempool_config.enable_fee_escalation": true,
[35mNode id 4 part 0:[0m   "mempool_config.fee_escalation_percentage": 10,
[35mNode id 4 part 0:[0m   "mempool_config.transaction_ttl": 300,
[35mNode id 4 part 0:[0m   "mempool_p2p_config.network_buffer_size": 10000,
[35mNode id 4 part 0:[0m   "mempool_p2p_config.network_config.advertised_multiaddr": null,
[35mNode id 4 part 0:[0m   "mempool_p2p_config.network_config.bootstrap_peer_multiaddr": "/ip4/127.0.0.1/tcp/55564/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5",
[35mNode id 4 part 0:[0m   "mempool_p2p_config.network_config.chain_id": "CHAIN_ID_SUBDIR",
[35mNode id 4 part 0:[0m   "mempool_p2p_config.network_config.discovery_config.bootstrap_dial_retry_config.base_delay_millis": 2,
[35mNode id 4 part 0:[0m   "mempool_p2p_config.network_config.discovery_config.bootstrap_dial_retry_config.factor": 5,
[35mNode id 4 part 0:[0m   "mempool_p2p_config.network_config.discovery_config.bootstrap_dial_retry_config.max_delay_seconds": 5,
[35mNode id 4 part 0:[0m   "mempool_p2p_config.network_config.discovery_config.heartbeat_interval": 100,
[35mNode id 4 part 0:[0m   "mempool_p2p_config.network_config.idle_connection_timeout": 120,
[35mNode id 4 part 0:[0m   "mempool_p2p_config.network_config.peer_manager_config.malicious_timeout_seconds": 1,
[35mNode id 4 part 0:[0m   "mempool_p2p_config.network_config.peer_manager_config.unstable_timeout_millis": 1000,
[35mNode id 4 part 0:[0m   "mempool_p2p_config.network_config.port": 55569,
[35mNode id 4 part 0:[0m   "mempool_p2p_config.network_config.secret_key": "",
[35mNode id 4 part 0:[0m   "mempool_p2p_config.network_config.session_timeout": 120,
[35mNode id 4 part 0:[0m   "monitoring_endpoint_config.collect_metrics": true,
[35mNode id 4 part 0:[0m   "monitoring_endpoint_config.ip": "0.0.0.0",
[35mNode id 4 part 0:[0m   "monitoring_endpoint_config.port": 55301,
[35mNode id 4 part 0:[0m   "recorder_url": "http://127.0.0.1:55300/",
[35mNode id 4 part 0:[0m   "revert_config.revert_up_to_and_including": 18446744073709551615,
[35mNode id 4 part 0:[0m   "revert_config.should_revert": false,
[35mNode id 4 part 0:[0m   "state_sync_config.central_sync_client_config": null,
[35mNode id 4 part 0:[0m   "state_sync_config.network_config.advertised_multiaddr": null,
[35mNode id 4 part 0:[0m   "state_sync_config.network_config.bootstrap_peer_multiaddr": "/ip4/127.0.0.1/tcp/55557/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5",
[35mNode id 4 part 0:[0m   "state_sync_config.network_config.chain_id": "CHAIN_ID_SUBDIR",
[35mNode id 4 part 0:[0m   "state_sync_config.network_config.discovery_config.bootstrap_dial_retry_config.base_delay_millis": 2,
[35mNode id 4 part 0:[0m   "state_sync_config.network_config.discovery_config.bootstrap_dial_retry_config.factor": 5,
[35mNode id 4 part 0:[0m   "state_sync_config.network_config.discovery_config.bootstrap_dial_retry_config.max_delay_seconds": 5,
[35mNode id 4 part 0:[0m   "state_sync_config.network_config.discovery_config.heartbeat_interval": 100,
[35mNode id 4 part 0:[0m   "state_sync_config.network_config.idle_connection_timeout": 120,
[35mNode id 4 part 0:[0m   "state_sync_config.network_config.peer_manager_config.malicious_timeout_seconds": 1,
[35mNode id 4 part 0:[0m   "state_sync_config.network_config.peer_manager_config.unstable_timeout_millis": 1000,
[35mNode id 4 part 0:[0m   "state_sync_config.network_config.port": 55562,
[35mNode id 4 part 0:[0m   "state_sync_config.network_config.secret_key": "",
[35mNode id 4 part 0:[0m   "state_sync_config.network_config.session_timeout": 120,
[35mNode id 4 part 0:[0m   "state_sync_config.p2p_sync_client_config.buffer_size": 100000,
[35mNode id 4 part 0:[0m   "state_sync_config.p2p_sync_client_config.num_block_classes_per_query": 100,
[35mNode id 4 part 0:[0m   "state_sync_config.p2p_sync_client_config.num_block_state_diffs_per_query": 100,
[35mNode id 4 part 0:[0m   "state_sync_config.p2p_sync_client_config.num_block_transactions_per_query": 100,
[35mNode id 4 part 0:[0m   "state_sync_config.p2p_sync_client_config.num_headers_per_query": 10000,
[35mNode id 4 part 0:[0m   "state_sync_config.p2p_sync_client_config.wait_period_for_new_data": 50,
[35mNode id 4 part 0:[0m   "state_sync_config.p2p_sync_client_config.wait_period_for_other_protocol": 50,
[35mNode id 4 part 0:[0m   "state_sync_config.revert_config.revert_up_to_and_including": 18446744073709551615,
[35mNode id 4 part 0:[0m   "state_sync_config.revert_config.should_revert": false,
[35mNode id 4 part 0:[0m   "state_sync_config.storage_config.db_config.chain_id": "CHAIN_ID_SUBDIR",
[35mNode id 4 part 0:[0m   "state_sync_config.storage_config.db_config.enforce_file_exists": false,
[35mNode id 4 part 0:[0m   "state_sync_config.storage_config.db_config.growth_step": 67108864,
[35mNode id 4 part 0:[0m   "state_sync_config.storage_config.db_config.max_size": 34359738368,
[35mNode id 4 part 0:[0m   "state_sync_config.storage_config.db_config.min_size": 1048576,
[35mNode id 4 part 0:[0m   "state_sync_config.storage_config.db_config.path_prefix": "/tmp/.tmpnRGosp",
[35mNode id 4 part 0:[0m   "state_sync_config.storage_config.mmap_file_config.growth_step": 1048576,
[35mNode id 4 part 0:[0m   "state_sync_config.storage_config.mmap_file_config.max_object_size": 65536,
[35mNode id 4 part 0:[0m   "state_sync_config.storage_config.mmap_file_config.max_size": 16777216,
[35mNode id 4 part 0:[0m   "state_sync_config.storage_config.scope": "FullArchive",
[35mNode id 4 part 0:[0m   "strk_fee_token_address": "0x1002",
[35mNode id 4 part 0:[0m   "validator_id": "0x68",
[35mNode id 4 part 0:[0m   "versioned_constants_overrides.invoke_tx_max_n_steps": 10000000,
[35mNode id 4 part 0:[0m   "versioned_constants_overrides.max_n_events": 1000,
[35mNode id 4 part 0:[0m   "versioned_constants_overrides.max_recursion_depth": 50,
[35mNode id 4 part 0:[0m   "versioned_constants_overrides.validate_max_n_steps": 1000000
[35mNode id 4 part 0:[0m }
[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.149774Z[0m [32m INFO[0m [2mstarknet_sequencer_node::utils[0m[2m:[0m Finished loading configuration.
[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.149882Z[0m [32m INFO[0m [2mstarknet_sequencer_node::utils[0m[2m:[0m Finished validating configuration.
[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.149891Z[0m [32m INFO[0m [2mstarknet_sequencer_node[0m[2m:[0m Config dump:
[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.151764Z[0m [32m INFO[0m [2mstarknet_sequencer_node[0m[2m:[0m {"base_layer_config.node_url": SerializedParam { description: "A required param! Ethereum node URL. A schema to match to Infura node: https://mainnet.infura.io/v3/<your_api_key>, but any other node can be used.", content: ParamType(String), privacy: Private }, "base_layer_config.starknet_contract_address": SerializedParam { description: "Starknet contract address in ethereum.", content: DefaultValue(String("0xc662c410C0ECf747543f5bA90660f6ABeBD9C8c4")), privacy: Public }, "batcher_config.block_builder_config.bouncer_config.block_max_capacity.l1_gas": SerializedParam { description: "An upper bound on the total l1_gas used in a block.", content: DefaultValue(Number(2500000)), privacy: Public }, "batcher_config.block_builder_config.bouncer_config.block_max_capacity.message_segment_length": SerializedParam { description: "An upper bound on the message segment length in a block.", content: DefaultValue(Number(3700)), privacy: Public }, "batcher_config.block_builder_config.bouncer_config.block_max_capacity.n_events": SerializedParam { description: "An upper bound on the total number of events generated in a block.", content: DefaultValue(Number(5000)), privacy: Public }, "batcher_config.block_builder_config.bouncer_config.block_max_capacity.sierra_gas": SerializedParam { description: "An upper bound on the total sierra_gas used in a block.", content: DefaultValue(Number(17000000)), privacy: Public }, "batcher_config.block_builder_config.bouncer_config.block_max_capacity.state_diff_size": SerializedParam { description: "An upper bound on the total state diff size in a block.", content: DefaultValue(Number(4000)), privacy: Public }, "batcher_config.block_builder_config.chain_info.chain_id": SerializedParam { description: "The chain ID of the StarkNet chain.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "batcher_config.block_builder_config.chain_info.fee_token_addresses.eth_fee_token_address": SerializedParam { description: "Address of the ETH fee token.", content: DefaultValue(String("0x1001")), privacy: Public }, "batcher_config.block_builder_config.chain_info.fee_token_addresses.strk_fee_token_address": SerializedParam { description: "Address of the STRK fee token.", content: DefaultValue(String("0x1002")), privacy: Public }, "batcher_config.block_builder_config.execute_config.concurrency_config.chunk_size": SerializedParam { description: "The size of the transaction chunk executed in parallel.", content: DefaultValue(Number(64)), privacy: Public }, "batcher_config.block_builder_config.execute_config.concurrency_config.enabled": SerializedParam { description: "Enables concurrency of transaction execution.", content: DefaultValue(Bool(true)), privacy: Public }, "batcher_config.block_builder_config.execute_config.concurrency_config.n_workers": SerializedParam { description: "Number of parallel transaction execution workers.", content: DefaultValue(Number(4)), privacy: Public }, "batcher_config.block_builder_config.execute_config.stack_size": SerializedParam { description: "The thread stack size (proportional to the maximal gas of a transaction).", content: DefaultValue(Number(62914560)), privacy: Public }, "batcher_config.block_builder_config.tx_chunk_size": SerializedParam { description: "The size of the transaction chunk.", content: DefaultValue(Number(100)), privacy: Public }, "batcher_config.block_builder_config.versioned_constants_overrides.invoke_tx_max_n_steps": SerializedParam { description: "Maximum number of steps the invoke function is allowed to run.", content: DefaultValue(Number(10000000)), privacy: Public }, "batcher_config.block_builder_config.versioned_constants_overrides.max_n_events": SerializedParam { description: "Maximum number of events that can be emitted from the transation.", content: DefaultValue(Number(1000)), privacy: Public }, "batcher_config.block_builder_config.versioned_constants_overrides.max_recursion_depth": SerializedParam { description: "Maximum recursion depth for nested calls during blockifier validation.", content: DefaultValue(Number(50)), privacy: Public }, "batcher_config.block_builder_config.versioned_constants_overrides.validate_max_n_steps": SerializedParam { description: "Maximum number of steps the validation function is allowed to run.", content: DefaultValue(Number(1000000)), privacy: Public }, "batcher_config.contract_class_manager_config.cairo_native_run_config.channel_size": SerializedParam { description: "The size of the compilation request channel.", content: DefaultValue(Number(2000)), privacy: Public }, "batcher_config.contract_class_manager_config.cairo_native_run_config.run_cairo_native": SerializedParam { description: "Enables Cairo native execution.", content: DefaultValue(Bool(false)), privacy: Public }, "batcher_config.contract_class_manager_config.cairo_native_run_config.wait_on_native_compilation": SerializedParam { description: "Block Sequencer main program while compiling sierra, for testing.", content: DefaultValue(Bool(false)), privacy: Public }, "batcher_config.contract_class_manager_config.contract_cache_size": SerializedParam { description: "The size of the global contract cache.", content: DefaultValue(Number(600)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.max_casm_bytecode_size": SerializedParam { description: "Limitation of compiled casm bytecode size.", content: DefaultValue(Number(81920)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.max_cpu_time": SerializedParam { description: "Limitation of compilation cpu time (seconds).", content: DefaultValue(Number(20)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.max_memory_usage": SerializedParam { description: "Limitation of compilation process's virtual memory (bytes).", content: DefaultValue(Number(5368709120)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.max_native_bytecode_size": SerializedParam { description: "Limitation of compiled native bytecode size.", content: DefaultValue(Number(15728640)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.optimization_level": SerializedParam { description: "The level of optimization to apply during compilation.", content: DefaultValue(Number(2)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.panic_on_compilation_failure": SerializedParam { description: "Whether to panic on compilation failure.", content: DefaultValue(Bool(false)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.sierra_to_native_compiler_path": SerializedParam { description: "The path to the Sierra-to-Native compiler binary.", content: DefaultValue(String("")), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.sierra_to_native_compiler_path.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(true)), privacy: TemporaryValue }, "batcher_config.input_stream_content_buffer_size": SerializedParam { description: "Sets the buffer size for the input transaction channel. Adding more transactions beyond this limit will block until space is available.", content: DefaultValue(Number(400)), privacy: Public }, "batcher_config.max_l1_handler_txs_per_block_proposal": SerializedParam { description: "The maximum number of L1 handler transactions to include in a block proposal.", content: DefaultValue(Number(3)), privacy: Public }, "batcher_config.outstream_content_buffer_size": SerializedParam { description: "The maximum number of items to include in a single get_proposal_content response.", content: DefaultValue(Number(100)), privacy: Public }, "batcher_config.storage.db_config.chain_id": SerializedParam { description: "The chain to follow. For more details see https://docs.starknet.io/documentation/architecture_and_concepts/Blocks/transactions/#chain-id.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "batcher_config.storage.db_config.enforce_file_exists": SerializedParam { description: "Whether to enforce that the path exists. If true, `open_env` fails when the mdbx.dat file does not exist.", content: DefaultValue(Bool(false)), privacy: Public }, "batcher_config.storage.db_config.growth_step": SerializedParam { description: "The growth step in bytes, must be greater than zero to allow the database to grow.", content: DefaultValue(Number(67108864)), privacy: Public }, "batcher_config.storage.db_config.max_size": SerializedParam { description: "The maximum size of the node's storage in bytes.", content: DefaultValue(Number(34359738368)), privacy: Public }, "batcher_config.storage.db_config.min_size": SerializedParam { description: "The minimum size of the node's storage in bytes.", content: DefaultValue(Number(1048576)), privacy: Public }, "batcher_config.storage.db_config.path_prefix": SerializedParam { description: "Prefix of the path of the node's storage directory, the storage file path will be <path_prefix>/<chain_id>. The path is not created automatically.", content: DefaultValue(String("/tmp/.tmpVXeHAz")), privacy: Public }, "batcher_config.storage.mmap_file_config.growth_step": SerializedParam { description: "The growth step in bytes, must be greater than max_object_size.", content: DefaultValue(Number(1048576)), privacy: Public }, "batcher_config.storage.mmap_file_config.max_object_size": SerializedParam { description: "The maximum size of a single object in the file in bytes", content: DefaultValue(Number(65536)), privacy: Public }, "batcher_config.storage.mmap_file_config.max_size": SerializedParam { description: "The maximum size of a memory mapped file in bytes. Must be greater than growth_step.", content: DefaultValue(Number(16777216)), privacy: Public }, "batcher_config.storage.scope": SerializedParam { description: "The categories of data saved in storage.", content: DefaultValue(String("StateOnly")), privacy: Public }, "class_manager_config.class_manager_config.cached_class_storage_config.class_cache_size": SerializedParam { description: "Contract classes cache size.", content: DefaultValue(Number(100)), privacy: Public }, "class_manager_config.class_manager_config.cached_class_storage_config.deprecated_class_cache_size": SerializedParam { description: "Deprecated contract classes cache size.", content: DefaultValue(Number(100)), privacy: Public }, "class_manager_config.class_storage_config.class_hash_storage_config.enforce_file_exists": SerializedParam { description: "Whether to enforce that the above path exists.", content: DefaultValue(Bool(false)), privacy: Public }, "class_manager_config.class_storage_config.class_hash_storage_config.max_size": SerializedParam { description: "The maximum size of the class hash storage in bytes.", content: DefaultValue(Number(1048576)), privacy: Public }, "class_manager_config.class_storage_config.class_hash_storage_config.path_prefix": SerializedParam { description: "Prefix of the path of class hash storage directory.", content: DefaultValue(String("/tmp/.tmpMclo1l")), privacy: Public }, "class_manager_config.class_storage_config.persistent_root": SerializedParam { description: "Path to the node's class storage directory.", content: DefaultValue(String("/tmp/.tmpmO3ZYn")), privacy: Public }, "compiler_config.max_casm_bytecode_size": SerializedParam { description: "Limitation of compiled casm bytecode size.", content: DefaultValue(Number(81920)), privacy: Public }, "compiler_config.max_cpu_time": SerializedParam { description: "Limitation of compilation cpu time (seconds).", content: DefaultValue(Number(20)), privacy: Public }, "compiler_config.max_memory_usage": SerializedParam { description: "Limitation of compilation process's virtual memory (bytes).", content: DefaultValue(Number(5368709120)), privacy: Public }, "compiler_config.max_native_bytecode_size": SerializedParam { description: "Limitation of compiled native bytecode size.", content: DefaultValue(Number(15728640)), privacy: Public }, "compiler_config.optimization_level": SerializedParam { description: "The level of optimization to apply during compilation.", content: DefaultValue(Number(2)), privacy: Public }, "compiler_config.panic_on_compilation_failure": SerializedParam { description: "Whether to panic on compilation failure.", content: DefaultValue(Bool(false)), privacy: Public }, "compiler_config.sierra_to_native_compiler_path": SerializedParam { description: "The path to the Sierra-to-Native compiler binary.", content: DefaultValue(String("")), privacy: Public }, "compiler_config.sierra_to_native_compiler_path.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(true)), privacy: TemporaryValue }, "components.batcher.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("Disabled")), privacy: Public }, "components.batcher.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("0.0.0.0")), privacy: Public }, "components.batcher.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.batcher.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.batcher.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(0)), privacy: Public }, "components.batcher.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.batcher.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.batcher.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.batcher.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("localhost")), privacy: Public }, "components.class_manager.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("LocalExecutionWithRemoteEnabled")), privacy: Public }, "components.class_manager.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("127.0.0.1")), privacy: Public }, "components.class_manager.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.class_manager.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.class_manager.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(55549)), privacy: Public }, "components.class_manager.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.class_manager.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.class_manager.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.class_manager.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("127.0.0.1")), privacy: Public }, "components.consensus_manager.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("Disabled")), privacy: Public }, "components.gateway.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("LocalExecutionWithRemoteEnabled")), privacy: Public }, "components.gateway.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("127.0.0.1")), privacy: Public }, "components.gateway.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.gateway.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.gateway.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(55545)), privacy: Public }, "components.gateway.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.gateway.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.gateway.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.gateway.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("127.0.0.1")), privacy: Public }, "components.http_server.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("Enabled")), privacy: Public }, "components.l1_provider.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("Disabled")), privacy: Public }, "components.l1_provider.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("0.0.0.0")), privacy: Public }, "components.l1_provider.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.l1_provider.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.l1_provider.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(0)), privacy: Public }, "components.l1_provider.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.l1_provider.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.l1_provider.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.l1_provider.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("localhost")), privacy: Public }, "components.l1_scraper.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("Disabled")), privacy: Public }, "components.mempool.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("LocalExecutionWithRemoteEnabled")), privacy: Public }, "components.mempool.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("127.0.0.1")), privacy: Public }, "components.mempool.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.mempool.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.mempool.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(55546)), privacy: Public }, "components.mempool.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.mempool.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.mempool.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.mempool.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("127.0.0.1")), privacy: Public }, "components.mempool_p2p.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("LocalExecutionWithRemoteEnabled")), privacy: Public }, "components.mempool_p2p.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("127.0.0.1")), privacy: Public }, "components.mempool_p2p.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.mempool_p2p.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.mempool_p2p.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(55547)), privacy: Public }, "components.mempool_p2p.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.mempool_p2p.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.mempool_p2p.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.mempool_p2p.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("127.0.0.1")), privacy: Public }, "components.monitoring_endpoint.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("Enabled")), privacy: Public }, "components.sierra_compiler.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("LocalExecutionWithRemoteDisabled")), privacy: Public }, "components.sierra_compiler.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("0.0.0.0")), privacy: Public }, "components.sierra_compiler.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.sierra_compiler.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.sierra_compiler.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(0)), privacy: Public }, "components.sierra_compiler.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.sierra_compiler.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.sierra_compiler.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.sierra_compiler.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("localhost")), privacy: Public }, "components.state_sync.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("Remote")), privacy: Public }, "components.state_sync.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("127.0.0.1")), privacy: Public }, "components.state_sync.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.state_sync.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.state_sync.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(55548)), privacy: Public }, "components.state_sync.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.state_sync.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.state_sync.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.state_sync.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("127.0.0.1")), privacy: Public }, "consensus_manager_config.broadcast_buffer_size": SerializedParam { description: "The buffer size for the broadcast channel.", content: DefaultValue(Number(10000)), privacy: Public }, "consensus_manager_config.cende_config.recorder_url": SerializedParam { description: "The URL of the Pythonic cende_recorder", content: DefaultValue(String("http://127.0.0.1:55300/")), privacy: Private }, "consensus_manager_config.cende_config.skip_write_height": SerializedParam { description: "A height that the consensus can skip writing to Aerospike. Needed for booting up (no previous height blob to write) or to handle extreme cases (all the nodes failed).", content: DefaultValue(Number(1)), privacy: Private }, "consensus_manager_config.cende_config.skip_write_height.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(false)), privacy: TemporaryValue }, "consensus_manager_config.consensus_config.future_height_limit": SerializedParam { description: "How many heights in the future should we cache.", content: DefaultValue(Number(10)), privacy: Public }, "consensus_manager_config.consensus_config.future_height_round_limit": SerializedParam { description: "How many rounds should we cache for future heights.", content: DefaultValue(Number(1)), privacy: Public }, "consensus_manager_config.consensus_config.future_round_limit": SerializedParam { description: "How many rounds in the future (for current height) should we cache.", content: DefaultValue(Number(10)), privacy: Public }, "consensus_manager_config.consensus_config.startup_delay": SerializedParam { description: "Delay (seconds) before starting consensus to give time for network peering.", content: DefaultValue(Number(15)), privacy: Public }, "consensus_manager_config.consensus_config.sync_retry_interval": SerializedParam { description: "The duration (seconds) between sync attempts.", content: DefaultValue(Number(1.0)), privacy: Public }, "consensus_manager_config.consensus_config.timeouts.precommit_timeout": SerializedParam { description: "The timeout (seconds) for a precommit.", content: DefaultValue(Number(3.0)), privacy: Public }, "consensus_manager_config.consensus_config.timeouts.prevote_timeout": SerializedParam { description: "The timeout (seconds) for a prevote.", content: DefaultValue(Number(3.0)), privacy: Public }, "consensus_manager_config.consensus_config.timeouts.proposal_timeout": SerializedParam { description: "The timeout (seconds) for a proposal.", content: DefaultValue(Number(9.0)), privacy: Public }, "consensus_manager_config.consensus_config.validator_id": SerializedParam { description: "The validator id of the node.", content: DefaultValue(String("0x68")), privacy: Public }, "consensus_manager_config.context_config.block_timestamp_window": SerializedParam { description: "Maximum allowed deviation (seconds) of a proposed block's timestamp from the current time.", content: DefaultValue(Number(1)), privacy: Public }, "consensus_manager_config.context_config.chain_id": SerializedParam { description: "The chain id of the Starknet chain.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "consensus_manager_config.context_config.l1_da_mode": SerializedParam { description: "The data availability mode, true: Blob, false: Calldata.", content: DefaultValue(Bool(true)), privacy: Public }, "consensus_manager_config.context_config.num_validators": SerializedParam { description: "The number of validators.", content: DefaultValue(Number(5)), privacy: Public }, "consensus_manager_config.context_config.proposal_buffer_size": SerializedParam { description: "The buffer size for streaming outbound proposals.", content: DefaultValue(Number(100)), privacy: Public }, "consensus_manager_config.immediate_active_height": SerializedParam { description: "The height at which the node may actively participate in consensus.", content: DefaultValue(Number(1)), privacy: Public }, "consensus_manager_config.network_config.advertised_multiaddr": SerializedParam { description: "The external address other peers see this node. If this is set, the node will not try to find out which addresses it has and will write this address as external instead", content: DefaultValue(String("")), privacy: Public }, "consensus_manager_config.network_config.advertised_multiaddr.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(true)), privacy: TemporaryValue }, "consensus_manager_config.network_config.bootstrap_peer_multiaddr": SerializedParam { description: "The multiaddress of the peer node. It should include the peer's id. For more info: https://docs.libp2p.io/concepts/fundamentals/peers/", content: DefaultValue(String("/ip4/127.0.0.1/tcp/55550/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5")), privacy: Public }, "consensus_manager_config.network_config.bootstrap_peer_multiaddr.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(false)), privacy: TemporaryValue }, "consensus_manager_config.network_config.chain_id": SerializedParam { description: "The chain to follow. For more details see https://docs.starknet.io/documentation/architecture_and_concepts/Blocks/transactions/#chain-id.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "consensus_manager_config.network_config.discovery_config.bootstrap_dial_retry_config.base_delay_millis": SerializedParam { description: "The base delay in milliseconds for the exponential backoff strategy.", content: DefaultValue(Number(2)), privacy: Public }, "consensus_manager_config.network_config.discovery_config.bootstrap_dial_retry_config.factor": SerializedParam { description: "The factor for the exponential backoff strategy.", content: DefaultValue(Number(5)), privacy: Public }, "consensus_manager_config.network_config.discovery_config.bootstrap_dial_retry_config.max_delay_seconds": SerializedParam { description: "The maximum delay in seconds for the exponential backoff strategy.", content: DefaultValue(Number(5)), privacy: Public }, "consensus_manager_config.network_config.discovery_config.heartbeat_interval": SerializedParam { description: "The interval between each discovery (Kademlia) query in milliseconds.", content: DefaultValue(Number(100)), privacy: Public }, "consensus_manager_config.network_config.idle_connection_timeout": SerializedParam { description: "Amount of time in seconds that a connection with no active sessions will stay alive.", content: DefaultValue(Number(120)), privacy: Public }, "consensus_manager_config.network_config.peer_manager_config.malicious_timeout_seconds": SerializedParam { description: "The duration in seconds a peer is blacklisted after being marked as malicious.", content: DefaultValue(Number(1)), privacy: Public }, "consensus_manager_config.network_config.peer_manager_config.unstable_timeout_millis": SerializedParam { description: "The duration in milliseconds a peer blacklisted after being reported as unstable.", content: DefaultValue(Number(1000)), privacy: Public }, "consensus_manager_config.network_config.port": SerializedParam { description: "The port that the node listens on for incoming tcp connections.", content: DefaultValue(Number(55555)), privacy: Public }, "consensus_manager_config.network_config.secret_key": SerializedParam { description: "The secret key used for building the peer id. If it's an empty string a random one will be used.", content: DefaultValue(String("")), privacy: Private }, "consensus_manager_config.network_config.session_timeout": SerializedParam { description: "Maximal time in seconds that each session can take before failing on timeout.", content: DefaultValue(Number(120)), privacy: Public }, "consensus_manager_config.proposals_topic": SerializedParam { description: "The topic for consensus proposals.", content: DefaultValue(String("consensus_proposals")), privacy: Public }, "consensus_manager_config.revert_config.revert_up_to_and_including": SerializedParam { description: "The component will revert blocks up to this block number (including).", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "consensus_manager_config.revert_config.should_revert": SerializedParam { description: "If set true, the component would revert blocks and do nothing else.", content: DefaultValue(Bool(false)), privacy: Public }, "consensus_manager_config.votes_topic": SerializedParam { description: "The topic for consensus votes.", content: DefaultValue(String("consensus_votes")), privacy: Public }, "gateway_config.chain_info.chain_id": SerializedParam { description: "The chain ID of the StarkNet chain.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "gateway_config.chain_info.fee_token_addresses.eth_fee_token_address": SerializedParam { description: "Address of the ETH fee token.", content: DefaultValue(String("0x1001")), privacy: Public }, "gateway_config.chain_info.fee_token_addresses.strk_fee_token_address": SerializedParam { description: "Address of the STRK fee token.", content: DefaultValue(String("0x1002")), privacy: Public }, "gateway_config.stateful_tx_validator_config.max_nonce_for_validation_skip": SerializedParam { description: "Maximum nonce for which the validation is skipped.", content: DefaultValue(String("0x1")), privacy: Public }, "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.invoke_tx_max_n_steps": SerializedParam { description: "Maximum number of steps the invoke function is allowed to run.", content: DefaultValue(Number(10000000)), privacy: Public }, "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.max_n_events": SerializedParam { description: "Maximum number of events that can be emitted from the transation.", content: DefaultValue(Number(1000)), privacy: Public }, "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.max_recursion_depth": SerializedParam { description: "Maximum recursion depth for nested calls during blockifier validation.", content: DefaultValue(Number(50)), privacy: Public }, "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.validate_max_n_steps": SerializedParam { description: "Maximum number of steps the validation function is allowed to run.", content: DefaultValue(Number(1000000)), privacy: Public }, "gateway_config.stateless_tx_validator_config.max_calldata_length": SerializedParam { description: "Limitation of calldata length.", content: DefaultValue(Number(10)), privacy: Public }, "gateway_config.stateless_tx_validator_config.max_contract_class_object_size": SerializedParam { description: "Limitation of contract class object size.", content: DefaultValue(Number(4089446)), privacy: Public }, "gateway_config.stateless_tx_validator_config.max_sierra_version.major": SerializedParam { description: "The major version of the configuration.", content: DefaultValue(Number(1)), privacy: Public }, "gateway_config.stateless_tx_validator_config.max_sierra_version.minor": SerializedParam { description: "The minor version of the configuration.", content: DefaultValue(Number(5)), privacy: Public }, "gateway_config.stateless_tx_validator_config.max_sierra_version.patch": SerializedParam { description: "The patch version of the configuration.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "gateway_config.stateless_tx_validator_config.max_signature_length": SerializedParam { description: "Limitation of signature length.", content: DefaultValue(Number(2)), privacy: Public }, "gateway_config.stateless_tx_validator_config.min_sierra_version.major": SerializedParam { description: "The major version of the configuration.", content: DefaultValue(Number(1)), privacy: Public }, "gateway_config.stateless_tx_validator_config.min_sierra_version.minor": SerializedParam { description: "The minor version of the configuration.", content: DefaultValue(Number(1)), privacy: Public }, "gateway_config.stateless_tx_validator_config.min_sierra_version.patch": SerializedParam { description: "The patch version of the configuration.", content: DefaultValue(Number(0)), privacy: Public }, "gateway_config.stateless_tx_validator_config.validate_non_zero_l1_data_gas_fee": SerializedParam { description: "If true, validates that a transaction has non-zero L1 Data (Blob) resource bounds.", content: DefaultValue(Bool(false)), privacy: Public }, "gateway_config.stateless_tx_validator_config.validate_non_zero_l1_gas_fee": SerializedParam { description: "If true, validates that a transaction has non-zero L1 resource bounds.", content: DefaultValue(Bool(true)), privacy: Public }, "gateway_config.stateless_tx_validator_config.validate_non_zero_l2_gas_fee": SerializedParam { description: "If true, validates that a transaction has non-zero L2 resource bounds.", content: DefaultValue(Bool(false)), privacy: Public }, "http_server_config.ip": SerializedParam { description: "The http server ip.", content: DefaultValue(String("127.0.0.1")), privacy: Public }, "http_server_config.port": SerializedParam { description: "The http server port.", content: DefaultValue(Number(55302)), privacy: Public }, "l1_provider_config.bootstrap_catch_up_height": SerializedParam { description: "Height at which the provider should catch up to the bootstrapper.", content: DefaultValue(Number(0)), privacy: Public }, "l1_provider_config.provider_startup_height": SerializedParam { description: "Height at which the provider should start.", content: DefaultValue(Number(1)), privacy: Public }, "l1_provider_config.startup_sync_sleep_retry_interval": SerializedParam { description: "Interval in seconds between each retry of syncing with L2 during startup.", content: DefaultValue(Number(0.0)), privacy: Public }, "l1_scraper_config.chain_id": SerializedParam { description: "The chain to follow. For more details see https://docs.starknet.io/documentation/architecture_and_concepts/Blocks/transactions/#chain-id.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "l1_scraper_config.finality": SerializedParam { description: "Number of blocks to wait for finality", content: DefaultValue(Number(0)), privacy: Public }, "l1_scraper_config.polling_interval": SerializedParam { description: "Interval in Seconds between each scraping attempt of L1.", content: DefaultValue(Number(1)), privacy: Public }, "l1_scraper_config.startup_rewind_time": SerializedParam { description: "Duration to rewind from latest L1 block when starting scraping.", content: DefaultValue(Number(0)), privacy: Public }, "mempool_config.enable_fee_escalation": SerializedParam { description: "If true, transactions can be replaced with higher fee transactions.", content: DefaultValue(Bool(true)), privacy: Public }, "mempool_config.fee_escalation_percentage": SerializedParam { description: "Percentage increase for tip and max gas price to enable transaction replacement.", content: DefaultValue(Number(10)), privacy: Public }, "mempool_config.transaction_ttl": SerializedParam { description: "Time-to-live for transactions in the mempool, in seconds.", content: DefaultValue(Number(300)), privacy: Public }, "mempool_p2p_config.network_buffer_size": SerializedParam { description: "Network buffer size.", content: DefaultValue(Number(10000)), privacy: Public }, "mempool_p2p_config.network_config.advertised_multiaddr": SerializedParam { description: "The external address other peers see this node. If this is set, the node will not try to find out which addresses it has and will write this address as external instead", content: DefaultValue(String("")), privacy: Public }, "mempool_p2p_config.network_config.advertised_multiaddr.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(true)), privacy: TemporaryValue }, "mempool_p2p_config.network_config.bootstrap_peer_multiaddr": SerializedParam { description: "The multiaddress of the peer node. It should include the peer's id. For more info: https://docs.libp2p.io/concepts/fundamentals/peers/", content: DefaultValue(String("/ip4/127.0.0.1/tcp/55564/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5")), privacy: Public }, "mempool_p2p_config.network_config.bootstrap_peer_multiaddr.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(false)), privacy: TemporaryValue }, "mempool_p2p_config.network_config.chain_id": SerializedParam { description: "The chain to follow. For more details see https://docs.starknet.io/documentation/architecture_and_concepts/Blocks/transactions/#chain-id.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "mempool_p2p_config.network_config.discovery_config.bootstrap_dial_retry_config.base_delay_millis": SerializedParam { description: "The base delay in milliseconds for the exponential backoff strategy.", content: DefaultValue(Number(2)), privacy: Public }, "mempool_p2p_config.network_config.discovery_config.bootstrap_dial_retry_config.factor": SerializedParam { description: "The factor for the exponential backoff strategy.", content: DefaultValue(Number(5)), privacy: Public }, "mempool_p2p_config.network_config.discovery_config.bootstrap_dial_retry_config.max_delay_seconds": SerializedParam { description: "The maximum delay in seconds for the exponential backoff strategy.", content: DefaultValue(Number(5)), privacy: Public }, "mempool_p2p_config.network_config.discovery_config.heartbeat_interval": SerializedParam { description: "The interval between each discovery (Kademlia) query in milliseconds.", content: DefaultValue(Number(100)), privacy: Public }, "mempool_p2p_config.network_config.idle_connection_timeout": SerializedParam { description: "Amount of time in seconds that a connection with no active sessions will stay alive.", content: DefaultValue(Number(120)), privacy: Public }, "mempool_p2p_config.network_config.peer_manager_config.malicious_timeout_seconds": SerializedParam { description: "The duration in seconds a peer is blacklisted after being marked as malicious.", content: DefaultValue(Number(1)), privacy: Public }, "mempool_p2p_config.network_config.peer_manager_config.unstable_timeout_millis": SerializedParam { description: "The duration in milliseconds a peer blacklisted after being reported as unstable.", content: DefaultValue(Number(1000)), privacy: Public }, "mempool_p2p_config.network_config.port": SerializedParam { description: "The port that the node listens on for incoming tcp connections.", content: DefaultValue(Number(55569)), privacy: Public }, "mempool_p2p_config.network_config.secret_key": SerializedParam { description: "The secret key used for building the peer id. If it's an empty string a random one will be used.", content: DefaultValue(String("")), privacy: Private }, "mempool_p2p_config.network_config.session_timeout": SerializedParam { description: "Maximal time in seconds that each session can take before failing on timeout.", content: DefaultValue(Number(120)), privacy: Public }, "monitoring_endpoint_config.collect_metrics": SerializedParam { description: "If true, collect and return metrics in the monitoring endpoint.", content: DefaultValue(Bool(true)), privacy: Public }, "monitoring_endpoint_config.ip": SerializedParam { description: "The monitoring endpoint ip address.", content: DefaultValue(String("0.0.0.0")), privacy: Public }, "monitoring_endpoint_config.port": SerializedParam { description: "The monitoring endpoint port.", content: DefaultValue(Number(55301)), privacy: Public }, "state_sync_config.central_sync_client_config.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(true)), privacy: TemporaryValue }, "state_sync_config.central_sync_client_config.central_source_config.class_cache_size": SerializedParam { description: "Size of class cache, must be a positive integer.", content: DefaultValue(Number(100)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.concurrent_requests": SerializedParam { description: "Maximum number of concurrent requests to Starknet feeder-gateway for getting a type of data (for example, blocks).", content: DefaultValue(Number(10)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.http_headers": SerializedParam { description: "'k1:v1 k2:v2 ...' headers for SN-client.", content: DefaultValue(String("")), privacy: Private }, "state_sync_config.central_sync_client_config.central_source_config.max_classes_to_download": SerializedParam { description: "Maximum number of classes to download at a given time.", content: DefaultValue(Number(20)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.max_state_updates_to_download": SerializedParam { description: "Maximum number of state updates to download at a given time.", content: DefaultValue(Number(20)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.max_state_updates_to_store_in_memory": SerializedParam { description: "Maximum number of state updates to store in memory at a given time.", content: DefaultValue(Number(20)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.retry_config.max_retries": SerializedParam { description: "Maximum number of retries before the node stops retrying.", content: DefaultValue(Number(10)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.retry_config.retry_base_millis": SerializedParam { description: "Base waiting time after a failed request. After that, the time increases exponentially.", content: DefaultValue(Number(30)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.retry_config.retry_max_delay_millis": SerializedParam { description: "Max waiting time after a failed request.", content: DefaultValue(Number(30000)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.starknet_url": SerializedParam { description: "Starknet feeder-gateway URL. It should match chain_id.", content: DefaultValue(String("https://alpha-mainnet.starknet.io/")), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.base_layer_propagation_sleep_duration": SerializedParam { description: "Time in seconds to poll the base layer to get the latest proved block.", content: DefaultValue(Number(10)), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.block_propagation_sleep_duration": SerializedParam { description: "Time in seconds before checking for a new block after the node is synchronized.", content: DefaultValue(Number(2)), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.blocks_max_stream_size": SerializedParam { description: "Max amount of blocks to download in a stream.", content: DefaultValue(Number(1000)), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.collect_pending_data": SerializedParam { description: "Whether to collect data on pending blocks.", content: DefaultValue(Bool(false)), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.recoverable_error_sleep_duration": SerializedParam { description: "Waiting time in seconds before restarting synchronization after a recoverable error.", content: DefaultValue(Number(3)), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.state_updates_max_stream_size": SerializedParam { description: "Max amount of state updates to download in a stream.", content: DefaultValue(Number(1000)), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.verify_blocks": SerializedParam { description: "Whether to verify incoming blocks.", content: DefaultValue(Bool(true)), privacy: Public }, "state_sync_config.network_config.advertised_multiaddr": SerializedParam { description: "The external address other peers see this node. If this is set, the node will not try to find out which addresses it has and will write this address as external instead", content: DefaultValue(String("")), privacy: Public }, "state_sync_config.network_config.advertised_multiaddr.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(true)), privacy: TemporaryValue }, "state_sync_config.network_config.bootstrap_peer_multiaddr": SerializedParam { description: "The multiaddress of the peer node. It should include the peer's id. For more info: https://docs.libp2p.io/concepts/fundamentals/peers/", content: DefaultValue(String("/ip4/127.0.0.1/tcp/55557/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5")), privacy: Public }, "state_sync_config.network_config.bootstrap_peer_multiaddr.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(false)), privacy: TemporaryValue }, "state_sync_config.network_config.chain_id": SerializedParam { description: "The chain to follow. For more details see https://docs.starknet.io/documentation/architecture_and_concepts/Blocks/transactions/#chain-id.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "state_sync_config.network_config.discovery_config.bootstrap_dial_retry_config.base_delay_millis": SerializedParam { description: "The base delay in milliseconds for the exponential backoff strategy.", content: DefaultValue(Number(2)), privacy: Public }, "state_sync_config.network_config.discovery_config.bootstrap_dial_retry_config.factor": SerializedParam { description: "The factor for the exponential backoff strategy.", content: DefaultValue(Number(5)), privacy: Public }, "state_sync_config.network_config.discovery_config.bootstrap_dial_retry_config.max_delay_seconds": SerializedParam { description: "The maximum delay in seconds for the exponential backoff strategy.", content: DefaultValue(Number(5)), privacy: Public }, "state_sync_config.network_config.discovery_config.heartbeat_interval": SerializedParam { description: "The interval between each discovery (Kademlia) query in milliseconds.", content: DefaultValue(Number(100)), privacy: Public }, "state_sync_config.network_config.idle_connection_timeout": SerializedParam { description: "Amount of time in seconds that a connection with no active sessions will stay alive.", content: DefaultValue(Number(120)), privacy: Public }, "state_sync_config.network_config.peer_manager_config.malicious_timeout_seconds": SerializedParam { description: "The duration in seconds a peer is blacklisted after being marked as malicious.", content: DefaultValue(Number(1)), privacy: Public }, "state_sync_config.network_config.peer_manager_config.unstable_timeout_millis": SerializedParam { description: "The duration in milliseconds a peer blacklisted after being reported as unstable.", content: DefaultValue(Number(1000)), privacy: Public }, "state_sync_config.network_config.port": SerializedParam { description: "The port that the node listens on for incoming tcp connections.", content: DefaultValue(Number(55562)), privacy: Public }, "state_sync_config.network_config.secret_key": SerializedParam { description: "The secret key used for building the peer id. If it's an empty string a random one will be used.", content: DefaultValue(String("")), privacy: Private }, "state_sync_config.network_config.session_timeout": SerializedParam { description: "Maximal time in seconds that each session can take before failing on timeout.", content: DefaultValue(Number(120)), privacy: Public }, "state_sync_config.p2p_sync_client_config.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(false)), privacy: TemporaryValue }, "state_sync_config.p2p_sync_client_config.buffer_size": SerializedParam { description: "Size of the buffer for read from the storage and for incoming responses.", content: DefaultValue(Number(100000)), privacy: Public }, "state_sync_config.p2p_sync_client_config.num_block_classes_per_query": SerializedParam { description: "The maximum amount of block's classes to ask from peers in each iteration.", content: DefaultValue(Number(100)), privacy: Public }, "state_sync_config.p2p_sync_client_config.num_block_state_diffs_per_query": SerializedParam { description: "The maximum amount of block's state diffs to ask from peers in each iteration.", content: DefaultValue(Number(100)), privacy: Public }, "state_sync_config.p2p_sync_client_config.num_block_transactions_per_query": SerializedParam { description: "The maximum amount of blocks to ask their transactions from peers in each iteration.", content: DefaultValue(Number(100)), privacy: Public }, "state_sync_config.p2p_sync_client_config.num_headers_per_query": SerializedParam { description: "The maximum amount of headers to ask from peers in each iteration.", content: DefaultValue(Number(10000)), privacy: Public }, "state_sync_config.p2p_sync_client_config.wait_period_for_new_data": SerializedParam { description: "Time in millisseconds to wait when a query returned with partial data before sending a new query", content: DefaultValue(Number(50)), privacy: Public }, "state_sync_config.p2p_sync_client_config.wait_period_for_other_protocol": SerializedParam { description: "Time in millisseconds to wait for a dependency protocol to advance (e.g.state diff sync depends on header sync)", content: DefaultValue(Number(50)), privacy: Public }, "state_sync_config.revert_config.revert_up_to_and_including": SerializedParam { description: "The component will revert blocks up to this block number (including).", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "state_sync_config.revert_config.should_revert": SerializedParam { description: "If set true, the component would revert blocks and do nothing else.", content: DefaultValue(Bool(false)), privacy: Public }, "state_sync_config.storage_config.db_config.chain_id": SerializedParam { description: "The chain to follow. For more details see https://docs.starknet.io/documentation/architecture_and_concepts/Blocks/transactions/#chain-id.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "state_sync_config.storage_config.db_config.enforce_file_exists": SerializedParam { description: "Whether to enforce that the path exists. If true, `open_env` fails when the mdbx.dat file does not exist.", content: DefaultValue(Bool(false)), privacy: Public }, "state_sync_config.storage_config.db_config.growth_step": SerializedParam { description: "The growth step in bytes, must be greater than zero to allow the database to grow.", content: DefaultValue(Number(67108864)), privacy: Public }, "state_sync_config.storage_config.db_config.max_size": SerializedParam { description: "The maximum size of the node's storage in bytes.", content: DefaultValue(Number(34359738368)), privacy: Public }, "state_sync_config.storage_config.db_config.min_size": SerializedParam { description: "The minimum size of the node's storage in bytes.", content: DefaultValue(Number(1048576)), privacy: Public }, "state_sync_config.storage_config.db_config.path_prefix": SerializedParam { description: "Prefix of the path of the node's storage directory, the storage file path will be <path_prefix>/<chain_id>. The path is not created automatically.", content: DefaultValue(String("/tmp/.tmpphy677")), privacy: Public }, "state_sync_config.storage_config.mmap_file_config.growth_step": SerializedParam { description: "The growth step in bytes, must be greater than max_object_size.", content: DefaultValue(Number(1048576)), privacy: Public }, "state_sync_config.storage_config.mmap_file_config.max_object_size": SerializedParam { description: "The maximum size of a single object in the file in bytes", content: DefaultValue(Number(65536)), privacy: Public }, "state_sync_config.storage_config.mmap_file_config.max_size": SerializedParam { description: "The maximum size of a memory mapped file in bytes. Must be greater than growth_step.", content: DefaultValue(Number(16777216)), privacy: Public }, "state_sync_config.storage_config.scope": SerializedParam { description: "The categories of data saved in storage.", content: DefaultValue(String("FullArchive")), privacy: Public }}
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.141186Z[0m [32m INFO[0m [2mpapyrus_storage[0m[2m:[0m Opening storage: /tmp/.tmpo2fbuc
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.150826Z[0m [32m INFO[0m [2mstarknet_http_server::metrics[0m[2m:[0m Initializing HTTP Server metrics
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.153s_per_query": SerializedParam { description: "The maximum amount of blocks to ask their transactions from peers in each iteration.", content: DefaultValue(Number(100)), privacy: Public }, "state_sync_config.p2p_sync_client_config.num_headers_per_query": SerializedParam { description: "The maximum amount of headers to ask from peers in each iteration.", content: DefaultValue(Number(10000)), privacy: Public }, "state_sync_config.p2p_sync_client_config.wait_period_for_new_data": SerializedParam { description: "Time in millisseconds to wait when a query returned with partial data before sending a new query", content: DefaultValue(Number(50)), privacy: Public }, "state_sync_config.p2p_sync_client_config.wait_period_for_other_protocol": SerializedParam { description: "Time in millisseconds to wait for a dependency protocol to advance (e.g.state diff sync depends on header sync)", content: DefaultValue(Number(50)), privacy: Public }, "state_sync_config.revert_config.revert_up_to_and_including": SerializedParam { description: "The component will revert blocks up to this block number (including).", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "state_sync_config.revert_config.should_revert": SerializedParam { description: "If set true, the component would revert blocks and do nothing else.", content: DefaultValue(Bool(false)), privacy: Public }, "state_sync_config.storage_config.db_config.chain_id": SerializedParam { description: "The chain to follow. For more details see https://docs.starknet.io/documentation/architecture_and_concepts/Blocks/transactions/#chain-id.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "state_sync_config.storage_config.db_config.enforce_file_exists": SerializedParam { description: "Whether to enforce that the path exists. If true, `open_env` fails when the mdbx.dat file does not exist.", content: DefaultValue(Bool(false)), privacy: Public }, "state_sync_config.storage_config.db_config.growth_step": SerializedParam { description: "The growth step in bytes, must be greater than zero to allow the database to grow.", content: DefaultValue(Number(67108864)), privacy: Public }, "state_sync_config.storage_config.db_config.max_size": SerializedParam { description: "The maximum size of the node's storage in bytes.", content: DefaultValue(Number(34359738368)), privacy: Public }, "state_sync_config.storage_config.db_config.min_size": SerializedParam { description: "The minimum size of the node's storage in bytes.", content: DefaultValue(Number(1048576)), privacy: Public }, "state_sync_config.storage_config.db_config.path_prefix": SerializedParam { description: "Prefix of the path of the node's storage directory, the storage file path will be <path_prefix>/<chain_id>. The path is not created automatically.", content: DefaultValue(String("/tmp/.tmpSJyNou")), privacy: Public }, "state_sync_config.storage_config.mmap_file_config.growth_step": SerializedParam { description: "The growth step in bytes, must be greater than max_object_size.", content: DefaultValue(Number(1048576)), privacy: Public }, "state_sync_config.storage_config.mmap_file_config.max_object_size": SerializedParam { description: "The maximum size of a single object in the file in bytes", content: DefaultValue(Number(65536)), privacy: Public }, "state_sync_config.storage_config.mmap_file_config.max_size": SerializedParam { description: "The maximum size of a memory mapped file in bytes. Must be greater than growth_step.", content: DefaultValue(Number(16777216)), privacy: Public }, "state_sync_config.storage_config.scope": SerializedParam { description: "The categories of data saved in storage.", content: DefaultValue(String("FullArchive")), privacy: Public }}
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.135986Z[0m [32m INFO[0m [2mpapyrus_storage[0m[2m:[0m Opening storage: /tmp/.tmpGYQTay
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.149619Z[0m [32m INFO[0m [2mpapyrus_storage[0m[2m:[0m Opening storage: /tmp/.tmpVDY545
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.154554Z[0m 335Z[0m [32m INFO[0m [2mlibp2p_swarm[0m[2m:[0m [3mlocal_peer_id[0m[2m=[0m12D3KooWKi6qUxsnmMqTgYX894brLNKV3m7PfTDGiZt7qmb85HVJ
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.154927Z[0m [32m INFO[0m [2mstarknet_sequencer_node[0m[2m:[0m Starting components!
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.155002Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting ConcurrentLocalComponentServer for SierraCompiler.
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.155013Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_definitions[0m[2m:[0m Starting component SierraCompiler with the default starter.
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.155025Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting concurrent server for component SierraCompiler
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.155046Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting LocalComponentServer for MempoolP2pPropagator.
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.155053Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_definitions[0m[2m:[0m Starting component MempoolP2pPropagator with the default starter.
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.155062Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting server for component MempoolP2pPropagator
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.155073Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting LocalComponentServer for MempoolCommunicationWrapper.
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.155132Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting server for component MempoolCommunicationWrapper
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.155145Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting LocalComponentServer for Gateway.
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.155217Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting server for component Gateway
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.155227Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting LocalComponentServer for FsClassManager.
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.155234Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_definitions[0m[2m:[0m Starting component FsClassManager with the default starter.
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.155240Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting server for component FsClassManager
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.155350Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::empty_component_server[0m[2m:[0m Starting WrapperServer for MempoolP2pRunner.
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.155995Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::empty_component_server[0m[2m:[0m Starting WrapperServer for MonitoringEndpoint.
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.156026Z[0m [32m INFO[0m [2mstarknet_monitoring_endpoint::monitoring_endpoint[0m[2m:[0m Starting component MonitoringEndpoint.
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.156204Z[0m [32m INFO[0m [2mstarknet_monitoring_endpoint::monitoring_endpoint[0m[2m:[0m MonitoringEndpoint running using socket: 0.0.0.0:55181
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.156255Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::empty_component_server[0m[2m:[0m Starting WrapperServer for HttpServer.
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.156269Z[0m _query": SerializedParam { description: "The maximum amount of blocks to ask their transactions from peers in each iteration.", content: DefaultValue(Number(100)), privacy: Public }, "state_sync_config.p2p_sync_client_config.num_headers_per_query": SerializedParam { description: "The maximum amount of headers to ask from peers in each iteration.", content: DefaultValue(Number(10000)), privacy: Public }, "state_sync_config.p2p_sync_client_config.wait_period_for_new_data": SerializedParam { description: "Time in millisseconds to wait when a query returned with partial data before sending a new query", content: DefaultValue(Number(50)), privacy: Public }, "state_sync_config.p2p_sync_client_config.wait_period_for_other_protocol": SerializedParam { description: "Time in millisseconds to wait for a dependency protocol to advance (e.g.state diff sync depends on header sync)", content: DefaultValue(Number(50)), privacy: Public }, "state_sync_config.revert_config.revert_up_to_and_including": SerializedParam { description: "The component will revert blocks up to this block number (including).", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "state_sync_config.revert_config.should_revert": SerializedParam { description: "If set true, the component would revert blocks and do nothing else.", content: DefaultValue(Bool(false)), privacy: Public }, "state_sync_config.storage_config.db_config.chain_id": SerializedParam { description: "The chain to follow. For more details see https://docs.starknet.io/documentation/architecture_and_concepts/Blocks/transactions/#chain-id.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "state_sync_config.storage_config.db_config.enforce_file_exists": SerializedParam { description: "Whether to enforce that the path exists. If true, `open_env` fails when the mdbx.dat file does not exist.", content: DefaultValue(Bool(false)), privacy: Public }, "state_sync_config.storage_config.db_config.growth_step": SerializedParam { description: "The growth step in bytes, must be greater than zero to allow the database to grow.", content: DefaultValue(Number(67108864)), privacy: Public }, "state_sync_config.storage_config.db_config.max_size": SerializedParam { description: "The maximum size of the node's storage in bytes.", content: DefaultValue(Number(34359738368)), privacy: Public }, "state_sync_config.storage_config.db_config.min_size": SerializedParam { description: "The minimum size of the node's storage in bytes.", content: DefaultValue(Number(1048576)), privacy: Public }, "state_sync_config.storage_config.db_config.path_prefix": SerializedParam { description: "Prefix of the path of the node's storage directory, the storage file path will be <path_prefix>/<chain_id>. The path is not created automatically.", content: DefaultValue(String("/tmp/.tmpnRGosp")), privacy: Public }, "state_sync_config.storage_config.mmap_file_config.growth_step": SerializedParam { description: "The growth step in bytes, must be greater than max_object_size.", content: DefaultValue(Number(1048576)), privacy: Public }, "state_sync_config.storage_config.mmap_file_config.max_object_size": SerializedParam { description: "The maximum size of a single object in the file in bytes", content: DefaultValue(Number(65536)), privacy: Public }, "state_sync_config.storage_config.mmap_file_config.max_size": SerializedParam { description: "The maximum size of a memory mapped file in bytes. Must be greater than growth_step.", content: DefaultValue(Number(16777216)), privacy: Public }, "state_sync_config.storage_config.scope": SerializedParam { description: "The categories of data saved in storage.", content: DefaultValue(String("FullArchive")), privacy: Public }}
[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.152169Z[0m [32m INFO[0m [2mpapyrus_storage[0m[2m:[0m Opening storage: /tmp/.tmpMclo1l
[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.155067Z[0m [32m INFO[0m [2mstarknet_http_server::metrics[0m[2m:[0m Initializing HTTP Server metrics
[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.157328Z[0m [32m INFO[0m [2mlibp2p_swarm[0m[2m:[0m [3mlocal_peer_id[0m[2m=[0m12D3KooWFG5TdpnNR7xke7jRWfxhTgFAwPtYheaHWAZGKWvzTzU1
[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.158640Z[0m [32m INFO[0m [2mstarknet_sequencer_node[0m[2m:[0m Starting components!
[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.158703Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting ConcurrentLocalComponentServer for SierraCompiler.
[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.158712Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_definitions[0m[2m:[0m Starting component SierraCompiler with the default starter.
[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.158722Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting concurrent server for component SierraCompiler
[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.158741Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting LocalComponentServer for MempoolP2pPropagator.
[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.158747Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_definitions[0m[2m:[0m Starting component MempoolP2pPropagator with the default starter.
[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.158755Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting server for component MempoolP2pPropagator
[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.158765Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting LocalComponentServer for MempoolCommunicationWrapper.
[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.158815Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting server for component MempoolCommunicationWrapper
[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.158825Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting LocalComponentServer for Gateway.
[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.158898Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting server for component Gateway
[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.158908Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting LocalComponentServer for FsClassManager.
[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.158914Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_definitions[0m[2m:[0m Starting component FsClassManager with the default starter.
[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.158920Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting server for component FsClassManager
[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.159000Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::empty_component_server[0m[2m:[0m Starting WrapperServer for MempoolP2pRunner.
[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.159555Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::empty_component_server[0m[2m:[0m Starting WrapperServer for MonitoringEndpoint.
[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.159575Z[0m [32m INFO[0m [2mstarknet_monitoring_endpoint::monitoring_endpoint[0m[2m:[0m Starting component MonitoringEndpoint.
[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.159734Z[0m [32m INFO[0m [2mstarknet_monitoring_endpoint::monitoring_endpoint[0m[2m:[0m MonitoringEndpoint running using socket: 0.0.0.0:55301
[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.159788Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::empty_component_server[0m[2m:[0m Starting WrapperServer for HttpServer.
[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.159804Z[0m [33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.074321Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::trace_util[0m[2m:[0m Tracing has been successfully initialized.
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.168820Z[0m [32m INFO[0m [2mpapyrus_config::loading[0m[2m:[0m Loading custom config file: "/tmp/.tmplClyjq/node_integration_test_config_changes.json"
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.177795Z[0m [32m INFO[0m [1mload[0m: [2mpapyrus_config::loading[0m[2m:[0m config_map: {
[33mNode id 2 part 0:[0m   "base_layer_config.node_url": "https://node_url/",
[33mNode id 2 part 0:[0m   "base_layer_config.starknet_contract_address": "0xc662c410C0ECf747543f5bA90660f6ABeBD9C8c4",
[33mNode id 2 part 0:[0m   "batcher_config.block_builder_config.bouncer_config.block_max_capacity.l1_gas": 2500000,
[33mNode id 2 part 0:[0m   "batcher_config.block_builder_config.bouncer_config.block_max_capacity.message_segment_length": 3700,
[33mNode id 2 part 0:[0m   "batcher_config.block_builder_config.bouncer_config.block_max_capacity.n_events": 5000,
[33mNode id 2 part 0:[0m   "batcher_config.block_builder_config.bouncer_config.block_max_capacity.sierra_gas": 17000000,
[33mNode id 2 part 0:[0m   "batcher_config.block_builder_config.bouncer_config.block_max_capacity.state_diff_size": 4000,
[33mNode id 2 part 0:[0m   "batcher_config.block_builder_config.chain_info.chain_id": "CHAIN_ID_SUBDIR",
[33mNode id 2 part 0:[0m   "batcher_config.block_builder_config.chain_info.fee_token_addresses.eth_fee_token_address": "0x1001",
[33mNode id 2 part 0:[0m   "batcher_config.block_builder_config.chain_info.fee_token_addresses.strk_fee_token_address": "0x1002",
[33mNode id 2 part 0:[0m   "batcher_config.block_builder_config.execute_config.concurrency_config.chunk_size": 64,
[33mNode id 2 part 0:[0m   "batcher_config.block_builder_config.execute_config.concurrency_config.enabled": true,
[33mNode id 2 part 0:[0m   "batcher_config.block_builder_config.execute_config.concurrency_config.n_workers": 4,
[33mNode id 2 part 0:[0m   "batcher_config.block_builder_config.execute_config.stack_size": 62914560,
[33mNode id 2 part 0:[0m   "batcher_config.block_builder_config.tx_chunk_size": 100,
[33mNode id 2 part 0:[0m   "batcher_config.block_builder_config.versioned_constants_overrides.invoke_tx_max_n_steps": 10000000,
[33mNode id 2 part 0:[0m   "batcher_config.block_builder_config.versioned_constants_overrides.max_n_events": 1000,
[33mNode id 2 part 0:[0m   "batcher_config.block_builder_config.versioned_constants_overrides.max_recursion_depth": 50,
[33mNode id 2 part 0:[0m   "batcher_config.block_builder_config.versioned_constants_overrides.validate_max_n_steps": 1000000,
[33mNode id 2 part 0:[0m   "batcher_config.contract_class_manager_config.cairo_native_run_config.channel_size": 2000,
[33mNode id 2 part 0:[0m   "batcher_config.contract_class_manager_config.cairo_native_run_config.run_cairo_native": false,
[33mNode id 2 part 0:[0m   "batcher_config.contract_class_manager_config.cairo_native_run_config.wait_on_native_compilation": false,
[33mNode id 2 part 0:[0m   "batcher_config.contract_class_manager_config.contract_cache_size": 600,
[33mNode id 2 part 0:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.max_casm_bytecode_size": 81920,
[33mNode id 2 part 0:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.max_cpu_time": 20,
[33mNode id 2 part 0:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.max_memory_usage": 5368709120,
[33mNode id 2 part 0:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.max_native_bytecode_size": 15728640,
[33mNode id 2 part 0:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.optimization_level": 2,
[33mNode id 2 part 0:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.panic_on_compilation_failure": false,
[33mNode id 2 part 0:[0m   "batcher_config.contract_class_manager_config.native_compiler_conf[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.074325Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::trace_util[0m[2m:[0m Tracing has been successfully initialized.
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.169238Z[0m [32m INFO[0m [2mpapyrus_config::loading[0m[2m:[0m Loading custom config file: "/tmp/.tmpGOih8x/node_integration_test_config_changes.json"
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.177877Z[0m [32m INFO[0m [1mload[0m: [2mpapyrus_config::loading[0m[2m:[0m config_map: {
[34mNode id 3 part 1:[0m   "base_layer_config.node_url": "https://node_url/",
[34mNode id 3 part 1:[0m   "base_layer_config.starknet_contract_address": "0xc662c410C0ECf747543f5bA90660f6ABeBD9C8c4",
[34mNode id 3 part 1:[0m   "batcher_config.block_builder_config.bouncer_config.block_max_capacity.l1_gas": 2500000,
[34mNode id 3 part 1:[0m   "batcher_config.block_builder_config.bouncer_config.block_max_capacity.message_segment_length": 3700,
[34mNode id 3 part 1:[0m   "batcher_config.block_builder_config.bouncer_config.block_max_capacity.n_events": 5000,
[34mNode id 3 part 1:[0m   "batcher_config.block_builder_config.bouncer_config.block_max_capacity.sierra_gas": 17000000,
[34mNode id 3 part 1:[0m   "batcher_config.block_builder_config.bouncer_config.block_max_capacity.state_diff_size": 4000,
[34mNode id 3 part 1:[0m   "batcher_config.block_builder_config.chain_info.chain_id": "CHAIN_ID_SUBDIR",
[34mNode id 3 part 1:[0m   "batcher_config.block_builder_config.chain_info.fee_token_addresses.eth_fee_token_address": "0x1001",
[34mNode id 3 part 1:[0m   "batcher_config.block_builder_config.chain_info.fee_token_addresses.strk_fee_token_address": "0x1002",
[34mNode id 3 part 1:[0m   "batcher_config.block_builder_config.execute_config.concurrency_config.chunk_size": 64,
[34mNode id 3 part 1:[0m   "batcher_config.block_builder_config.execute_config.concurrency_config.enabled": true,
[34mNode id 3 part 1:[0m   "batcher_config.block_builder_config.execute_config.concurrency_config.n_workers": 4,
[34mNode id 3 part 1:[0m   "batcher_config.block_builder_config.execute_config.stack_size": 62914560,
[34mNode id 3 part 1:[0m   "batcher_config.block_builder_config.tx_chunk_size": 100,
[34mNode id 3 part 1:[0m   "batcher_config.block_builder_config.versioned_constants_overrides.invoke_tx_max_n_steps": 10000000,
[34mNode id 3 part 1:[0m   "batcher_config.block_builder_config.versioned_constants_overrides.max_n_events": 1000,
[34mNode id 3 part 1:[0m   "batcher_config.block_builder_config.versioned_constants_overrides.max_recursion_depth": 50,
[34mNode id 3 part 1:[0m   "batcher_config.block_builder_config.versioned_constants_overrides.validate_max_n_steps": 1000000,
[34mNode id 3 part 1:[0m   "batcher_config.contract_class_manager_config.cairo_native_run_config.channel_size": 2000,
[34mNode id 3 part 1:[0m   "batcher_config.contract_class_manager_config.cairo_native_run_config.run_cairo_native": false,
[34mNode id 3 part 1:[0m   "batcher_config.contract_class_manager_config.cairo_native_run_config.wait_on_native_compilation": false,
[34mNode id 3 part 1:[0m   "batcher_config.contract_class_manager_config.contract_cache_size": 600,
[34mNode id 3 part 1:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.max_casm_bytecode_size": 81920,
[34mNode id 3 part 1:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.max_cpu_time": 20,
[34mNode id 3 part 1:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.max_memory_usage": 5368709120,
[34mNode id 3 part 1:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.max_native_bytecode_size": 15728640,
[34mNode id 3 part 1:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.optimization_level": 2,
[34mNode id 3 part 1:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.panic_on_compilation_failure": false,
[34mNode id 3 part 1:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.sierra_to_native_compiler_path": null,
[33mNode id 2 part 0:[0m   "batcher_config.input_stream_content_buffer_size": 400,
[33mNode id 2 part 0:[0m   "batcher_config.max_l1_handler_txs_per_block_proposal": 3,
[33mNode id 2 part 0:[0m   "batcher_config.outstream_content_buffer_size": 100,
[33mNode id 2 part 0:[0m   "batcher_config.storage.db_config.chain_id": "CHAIN_ID_SUBDIR",
[33mNode id 2 part 0:[0m   "batcher_config.storage.db_config.enforce_file_exists": false,
[33mNode id 2 part 0:[0m   "batcher_config.storage.db_config.growth_step": 67108864,
[33mNode id 2 part 0:[0m   "batcher_config.storage.db_config.max_size": 34359738368,
[33mNode id 2 part 0:[0m   "batcher_config.storage.db_config.min_size": 1048576,
[33mNode id 2 part 0:[0m   "batcher_config.storage.db_config.path_prefix": "/tmp/.tmpCcrqF1",
[33mNode id 2 part 0:[0m   "batcher_config.storage.mmap_file_config.growth_step": 1048576,
[33mNode id 2 part 0:[0m   "batcher_config.storage.mmap_file_config.max_object_size": 65536,
[33mNode id 2 part 0:[0m   "batcher_config.storage.mmap_file_config.max_size": 16777216,
[33mNode id 2 part 0:[0m   "batcher_config.storage.scope": "StateOnly",
[33mNode id 2 part 0:[0m   "chain_id": "CHAIN_ID_SUBDIR",
[33mNode id 2 part 0:[0m   "class_manager_config.class_manager_config.cached_class_storage_config.class_cache_size": 100,
[33mNode id 2 part 0:[0m   "class_manager_config.class_manager_config.cached_class_storage_config.deprecated_class_cache_size": 100,
[33mNode id 2 part 0:[0m   "class_manager_config.class_storage_config.class_hash_storage_config.enforce_file_exists": false,
[33mNode id 2 part 0:[0m   "class_manager_config.class_storage_config.class_hash_storage_config.max_size": 1048576,
[33mNode id 2 part 0:[0m   "class_manager_config.class_storage_config.class_hash_storage_config.path_prefix": "/tmp/.tmpUO1mgV",
[33mNode id 2 part 0:[0m   "class_manager_config.class_storage_config.persistent_root": "/tmp/.tmprEKa1e",
[33mNode id 2 part 0:[0m   "compiler_config.max_casm_bytecode_size": 81920,
[33mNode id 2 part 0:[0m   "compiler_config.max_cpu_time": 20,
[33mNode id 2 part 0:[0m   "compiler_config.max_memory_usage": 5368709120,
[33mNode id 2 part 0:[0m   "compiler_config.max_native_bytecode_size": 15728640,
[33mNode id 2 part 0:[0m   "compiler_config.optimization_level": 2,
[33mNode id 2 part 0:[0m   "compiler_config.panic_on_compilation_failure": false,
[33mNode id 2 part 0:[0m   "compiler_config.sierra_to_native_compiler_path": null,
[33mNode id 2 part 0:[0m   "components.batcher.execution_mode": "LocalExecutionWithRemoteDisabled",
[33mNode id 2 part 0:[0m   "components.batcher.ip": "0.0.0.0",
[33mNode id 2 part 0:[0m   "components.batcher.local_server_config.channel_buffer_size": 32,
[33mNode id 2 part 0:[0m   "components.batcher.max_concurrency": 10,
[33mNode id 2 part 0:[0m   "components.batcher.port": 0,
[33mNode id 2 part 0:[0m   "components.batcher.remote_client_config.idle_connections": 18446744073709551615,
[33mNode id 2 part 0:[0m   "components.batcher.remote_client_config.idle_timeout": 90,
[33mNode id 2 part 0:[0m   "components.batcher.remote_client_config.retries": 3,
[33mNode id 2 part 0:[0m   "components.batcher.url": "localhost",
[33mNode id 2 part 0:[0m   "components.class_manager.execution_mode": "LocalExecutionWithRemoteDisabled",
[33mNode id 2 part 0:[0m   "components.class_manager.ip": "0.0.0.0",
[33mNode id 2 part 0:[0m   "components.class_manager.local_server_config.channel_buffer_size": 32,
[33mNode id 2 part 0:[0m   "components.class_manager.max_concurrency": 10,
[33mNode id 2 part 0:[0m   "components.class_manager.port": 0,
[33mNode id 2 part 0:[0m   "components.class_manager.remote_client_config.idle_connections": 18446744073709551615,
[33mNode id 2 part 0:[0m   "components.class_manager.remote_client_config.idle_timeout": 90,
[33mNode id 2 part 0:[0m   "components.class_manager.remote_client_config.retries": 3,
[33mNode id 2 part 0:[0m   "components.class_manager.url": "localhost",
[33mNode id 2 part 0:ig.sierra_to_native_compiler_path": null,
[34mNode id 3 part 1:[0m   "batcher_config.input_stream_content_buffer_size": 400,
[34mNode id 3 part 1:[0m   "batcher_config.max_l1_handler_txs_per_block_proposal": 3,
[34mNode id 3 part 1:[0m   "batcher_config.outstream_content_buffer_size": 100,
[34mNode id 3 part 1:[0m   "batcher_config.storage.db_config.chain_id": "CHAIN_ID_SUBDIR",
[34mNode id 3 part 1:[0m   "batcher_config.storage.db_config.enforce_file_exists": false,
[34mNode id 3 part 1:[0m   "batcher_config.storage.db_config.growth_step": 67108864,
[34mNode id 3 part 1:[0m   "batcher_config.storage.db_config.max_size": 34359738368,
[34mNode id 3 part 1:[0m   "batcher_config.storage.db_config.min_size": 1048576,
[34mNode id 3 part 1:[0m   "batcher_config.storage.db_config.path_prefix": "/tmp/.tmpUbQi81",
[34mNode id 3 part 1:[0m   "batcher_config.storage.mmap_file_config.growth_step": 1048576,
[34mNode id 3 part 1:[0m   "batcher_config.storage.mmap_file_config.max_object_size": 65536,
[34mNode id 3 part 1:[0m   "batcher_config.storage.mmap_file_config.max_size": 16777216,
[34mNode id 3 part 1:[0m   "batcher_config.storage.scope": "StateOnly",
[34mNode id 3 part 1:[0m   "chain_id": "CHAIN_ID_SUBDIR",
[34mNode id 3 part 1:[0m   "class_manager_config.class_manager_config.cached_class_storage_config.class_cache_size": 100,
[34mNode id 3 part 1:[0m   "class_manager_config.class_manager_config.cached_class_storage_config.deprecated_class_cache_size": 100,
[34mNode id 3 part 1:[0m   "class_manager_config.class_storage_config.class_hash_storage_config.enforce_file_exists": false,
[34mNode id 3 part 1:[0m   "class_manager_config.class_storage_config.class_hash_storage_config.max_size": 1048576,
[34mNode id 3 part 1:[0m   "class_manager_config.class_storage_config.class_hash_storage_config.path_prefix": "/tmp/.tmpMtMEz2",
[34mNode id 3 part 1:[0m   "class_manager_config.class_storage_config.persistent_root": "/tmp/.tmpICrUev",
[34mNode id 3 part 1:[0m   "compiler_config.max_casm_bytecode_size": 81920,
[34mNode id 3 part 1:[0m   "compiler_config.max_cpu_time": 20,
[34mNode id 3 part 1:[0m   "compiler_config.max_memory_usage": 5368709120,
[34mNode id 3 part 1:[0m   "compiler_config.max_native_bytecode_size": 15728640,
[34mNode id 3 part 1:[0m   "compiler_config.optimization_level": 2,
[34mNode id 3 part 1:[0m   "compiler_config.panic_on_compilation_failure": false,
[34mNode id 3 part 1:[0m   "compiler_config.sierra_to_native_compiler_path": null,
[34mNode id 3 part 1:[0m   "components.batcher.execution_mode": "LocalExecutionWithRemoteDisabled",
[34mNode id 3 part 1:[0m   "components.batcher.ip": "0.0.0.0",
[34mNode id 3 part 1:[0m   "components.batcher.local_server_config.channel_buffer_size": 32,
[34mNode id 3 part 1:[0m   "components.batcher.max_concurrency": 10,
[34mNode id 3 part 1:[0m   "components.batcher.port": 0,
[34mNode id 3 part 1:[0m   "components.batcher.remote_client_config.idle_connections": 18446744073709551615,
[34mNode id 3 part 1:[0m   "components.batcher.remote_client_config.idle_timeout": 90,
[34mNode id 3 part 1:[0m   "components.batcher.remote_client_config.retries": 3,
[34mNode id 3 part 1:[0m   "components.batcher.url": "localhost",
[34mNode id 3 part 1:[0m   "components.class_manager.execution_mode": "Remote",
[34mNode id 3 part 1:[0m   "components.class_manager.ip": "127.0.0.1",
[34mNode id 3 part 1:[0m   "components.class_manager.local_server_config.channel_buffer_size": 32,
[34mNode id 3 part 1:[0m   "components.class_manager.max_concurrency": 10,
[34mNode id 3 part 1:[0m   "components.class_manager.port": 55544,
[34mNode id 3 part 1:[0m   "components.class_manager.remote_client_config.idle_connections": 18446744073709551615,
[34mNode id 3 part 1:[0m   "components.class_manager.remote_client_config.idle_timeout": 90,
[34mNode id 3 part 1:[0m   "components.class_manager.remote_client_config.retries": 3,
[34mNode id 3 part 1:[0m   "components.class_manager.url": "127.0.0.1",
[34mNode id 3 part 1:[0m   "components.c[0m   "components.consensus_manager.execution_mode": "Enabled",
[33mNode id 2 part 0:[0m   "components.gateway.execution_mode": "LocalExecutionWithRemoteDisabled",
[33mNode id 2 part 0:[0m   "components.gateway.ip": "0.0.0.0",
[33mNode id 2 part 0:[0m   "components.gateway.local_server_config.channel_buffer_size": 32,
[33mNode id 2 part 0:[0m   "components.gateway.max_concurrency": 10,
[33mNode id 2 part 0:[0m   "components.gateway.port": 0,
[33mNode id 2 part 0:[0m   "components.gateway.remote_client_config.idle_connections": 18446744073709551615,
[33mNode id 2 part 0:[0m   "components.gateway.remote_client_config.idle_timeout": 90,
[33mNode id 2 part 0:[0m   "components.gateway.remote_client_config.retries": 3,
[33mNode id 2 part 0:[0m   "components.gateway.url": "localhost",
[33mNode id 2 part 0:[0m   "components.http_server.execution_mode": "Enabled",
[33mNode id 2 part 0:[0m   "components.l1_provider.execution_mode": "LocalExecutionWithRemoteDisabled",
[33mNode id 2 part 0:[0m   "components.l1_provider.ip": "0.0.0.0",
[33mNode id 2 part 0:[0m   "components.l1_provider.local_server_config.channel_buffer_size": 32,
[33mNode id 2 part 0:[0m   "components.l1_provider.max_concurrency": 10,
[33mNode id 2 part 0:[0m   "components.l1_provider.port": 0,
[33mNode id 2 part 0:[0m   "components.l1_provider.remote_client_config.idle_connections": 18446744073709551615,
[33mNode id 2 part 0:[0m   "components.l1_provider.remote_client_config.idle_timeout": 90,
[33mNode id 2 part 0:[0m   "components.l1_provider.remote_client_config.retries": 3,
[33mNode id 2 part 0:[0m   "components.l1_provider.url": "localhost",
[33mNode id 2 part 0:[0m   "components.l1_scraper.execution_mode": "Enabled",
[33mNode id 2 part 0:[0m   "components.mempool.execution_mode": "LocalExecutionWithRemoteDisabled",
[33mNode id 2 part 0:[0m   "components.mempool.ip": "0.0.0.0",
[33mNode id 2 part 0:[0m   "components.mempool.local_server_config.channel_buffer_size": 32,
[33mNode id 2 part 0:[0m   "components.mempool.max_concurrency": 10,
[33mNode id 2 part 0:[0m   "components.mempool.port": 0,
[33mNode id 2 part 0:[0m   "components.mempool.remote_client_config.idle_connections": 18446744073709551615,
[33mNode id 2 part 0:[0m   "components.mempool.remote_client_config.idle_timeout": 90,
[33mNode id 2 part 0:[0m   "components.mempool.remote_client_config.retries": 3,
[33mNode id 2 part 0:[0m   "components.mempool.url": "localhost",
[33mNode id 2 part 0:[0m   "components.mempool_p2p.execution_mode": "LocalExecutionWithRemoteDisabled",
[33mNode id 2 part 0:[0m   "components.mempool_p2p.ip": "0.0.0.0",
[33mNode id 2 part 0:[0m   "components.mempool_p2p.local_server_config.channel_buffer_size": 32,
[33mNode id 2 part 0:[0m   "components.mempool_p2p.max_concurrency": 10,
[33mNode id 2 part 0:[0m   "components.mempool_p2p.port": 0,
[33mNode id 2 part 0:[0m   "components.mempool_p2p.remote_client_config.idle_connections": 18446744073709551615,
[33mNode id 2 part 0:[0m   "components.mempool_p2p.remote_client_config.idle_timeout": 90,
[33mNode id 2 part 0:[0m   "components.mempool_p2p.remote_client_config.retries": 3,
[33mNode id 2 part 0:[0m   "components.mempool_p2p.url": "localhost",
[33mNode id 2 part 0:[0m   "components.monitoring_endpoint.execution_mode": "Enabled",
[33mNode id 2 part 0:[0m   "components.sierra_compiler.execution_mode": "LocalExecutionWithRemoteDisabled",
[33mNode id 2 part 0:[0m   "components.sierra_compiler.ip": "0.0.0.0",
[33mNode id 2 part 0:[0m   "components.sierra_compiler.local_server_config.channel_buffer_size": 32,
[33mNode id 2 part 0:[0m   "components.sierra_compiler.max_concurrency": 10,
[33mNode id 2 part 0:[0m   "components.sierra_compiler.port": 0,
[33mNode id 2 part 0:[0m   "components.sierra_compiler.remote_client_config.idle_connections": 18446744073709551615,
[33mNode id 2 part 0:[0m   "components.sierra_compiler.remote_client_config.idle_timeout": 90,
[33mNode id 2 part 0:[0m   "components.sierra_compiler.remote_client_config.retries": 3onsensus_manager.execution_mode": "Enabled",
[34mNode id 3 part 1:[0m   "components.gateway.execution_mode": "Remote",
[34mNode id 3 part 1:[0m   "components.gateway.ip": "127.0.0.1",
[34mNode id 3 part 1:[0m   "components.gateway.local_server_config.channel_buffer_size": 32,
[34mNode id 3 part 1:[0m   "components.gateway.max_concurrency": 10,
[34mNode id 3 part 1:[0m   "components.gateway.port": 55540,
[34mNode id 3 part 1:[0m   "components.gateway.remote_client_config.idle_connections": 18446744073709551615,
[34mNode id 3 part 1:[0m   "components.gateway.remote_client_config.idle_timeout": 90,
[34mNode id 3 part 1:[0m   "components.gateway.remote_client_config.retries": 3,
[34mNode id 3 part 1:[0m   "components.gateway.url": "127.0.0.1",
[34mNode id 3 part 1:[0m   "components.http_server.execution_mode": "Disabled",
[34mNode id 3 part 1:[0m   "components.l1_provider.execution_mode": "LocalExecutionWithRemoteDisabled",
[34mNode id 3 part 1:[0m   "components.l1_provider.ip": "0.0.0.0",
[34mNode id 3 part 1:[0m   "components.l1_provider.local_server_config.channel_buffer_size": 32,
[34mNode id 3 part 1:[0m   "components.l1_provider.max_concurrency": 10,
[34mNode id 3 part 1:[0m   "components.l1_provider.port": 0,
[34mNode id 3 part 1:[0m   "components.l1_provider.remote_client_config.idle_connections": 18446744073709551615,
[34mNode id 3 part 1:[0m   "components.l1_provider.remote_client_config.idle_timeout": 90,
[34mNode id 3 part 1:[0m   "components.l1_provider.remote_client_config.retries": 3,
[34mNode id 3 part 1:[0m   "components.l1_provider.url": "localhost",
[34mNode id 3 part 1:[0m   "components.l1_scraper.execution_mode": "Enabled",
[34mNode id 3 part 1:[0m   "components.mempool.execution_mode": "Remote",
[34mNode id 3 part 1:[0m   "components.mempool.ip": "127.0.0.1",
[34mNode id 3 part 1:[0m   "components.mempool.local_server_config.channel_buffer_size": 32,
[34mNode id 3 part 1:[0m   "components.mempool.max_concurrency": 10,
[34mNode id 3 part 1:[0m   "components.mempool.port": 55541,
[34mNode id 3 part 1:[0m   "components.mempool.remote_client_config.idle_connections": 18446744073709551615,
[34mNode id 3 part 1:[0m   "components.mempool.remote_client_config.idle_timeout": 90,
[34mNode id 3 part 1:[0m   "components.mempool.remote_client_config.retries": 3,
[34mNode id 3 part 1:[0m   "components.mempool.url": "127.0.0.1",
[34mNode id 3 part 1:[0m   "components.mempool_p2p.execution_mode": "Remote",
[34mNode id 3 part 1:[0m   "components.mempool_p2p.ip": "127.0.0.1",
[34mNode id 3 part 1:[0m   "components.mempool_p2p.local_server_config.channel_buffer_size": 32,
[34mNode id 3 part 1:[0m   "components.mempool_p2p.max_concurrency": 10,
[34mNode id 3 part 1:[0m   "components.mempool_p2p.port": 55542,
[34mNode id 3 part 1:[0m   "components.mempool_p2p.remote_client_config.idle_connections": 18446744073709551615,
[34mNode id 3 part 1:[0m   "components.mempool_p2p.remote_client_config.idle_timeout": 90,
[34mNode id 3 part 1:[0m   "components.mempool_p2p.remote_client_config.retries": 3,
[34mNode id 3 part 1:[0m   "components.mempool_p2p.url": "127.0.0.1",
[34mNode id 3 part 1:[0m   "components.monitoring_endpoint.execution_mode": "Enabled",
[34mNode id 3 part 1:[0m   "components.sierra_compiler.execution_mode": "LocalExecutionWithRemoteDisabled",
[34mNode id 3 part 1:[0m   "components.sierra_compiler.ip": "0.0.0.0",
[34mNode id 3 part 1:[0m   "components.sierra_compiler.local_server_config.channel_buffer_size": 32,
[34mNode id 3 part 1:[0m   "components.sierra_compiler.max_concurrency": 10,
[34mNode id 3 part 1:[0m   "components.sierra_compiler.port": 0,
[34mNode id 3 part 1:[0m   "components.sierra_compiler.remote_client_config.idle_connections": 18446744073709551615,
[34mNode id 3 part 1:[0m   "components.sierra_compiler.remote_client_config.idle_timeout": 90,
[34mNode id 3 part 1:[0m   "components.sierra_compiler.remote_client_config.retries": 3,
[34mNode id 3 part 1:[0m   "components.sierra_compiler.url": "localhost",
,
[33mNode id 2 part 0:[0m   "components.sierra_compiler.url": "localhost",
[33mNode id 2 part 0:[0m   "components.state_sync.execution_mode": "LocalExecutionWithRemoteDisabled",
[33mNode id 2 part 0:[0m   "components.state_sync.ip": "0.0.0.0",
[33mNode id 2 part 0:[0m   "components.state_sync.local_server_config.channel_buffer_size": 32,
[33mNode id 2 part 0:[0m   "components.state_sync.max_concurrency": 10,
[33mNode id 2 part 0:[0m   "components.state_sync.port": 0,
[33mNode id 2 part 0:[0m   "components.state_sync.remote_client_config.idle_connections": 18446744073709551615,
[33mNode id 2 part 0:[0m   "components.state_sync.remote_client_config.idle_timeout": 90,
[33mNode id 2 part 0:[0m   "components.state_sync.remote_client_config.retries": 3,
[33mNode id 2 part 0:[0m   "components.state_sync.url": "localhost",
[33mNode id 2 part 0:[0m   "consensus_manager_config.broadcast_buffer_size": 10000,
[33mNode id 2 part 0:[0m   "consensus_manager_config.cende_config.recorder_url": "http://127.0.0.1:55120/",
[33mNode id 2 part 0:[0m   "consensus_manager_config.cende_config.skip_write_height": 1,
[33mNode id 2 part 0:[0m   "consensus_manager_config.consensus_config.future_height_limit": 10,
[33mNode id 2 part 0:[0m   "consensus_manager_config.consensus_config.future_height_round_limit": 1,
[33mNode id 2 part 0:[0m   "consensus_manager_config.consensus_config.future_round_limit": 10,
[33mNode id 2 part 0:[0m   "consensus_manager_config.consensus_config.startup_delay": 15,
[33mNode id 2 part 0:[0m   "consensus_manager_config.consensus_config.sync_retry_interval": 1.0,
[33mNode id 2 part 0:[0m   "consensus_manager_config.consensus_config.timeouts.precommit_timeout": 3.0,
[33mNode id 2 part 0:[0m   "consensus_manager_config.consensus_config.timeouts.prevote_timeout": 3.0,
[33mNode id 2 part 0:[0m   "consensus_manager_config.consensus_config.timeouts.proposal_timeout": 9.0,
[33mNode id 2 part 0:[0m   "consensus_manager_config.consensus_config.validator_id": "0x66",
[33mNode id 2 part 0:[0m   "consensus_manager_config.context_config.block_timestamp_window": 1,
[33mNode id 2 part 0:[0m   "consensus_manager_config.context_config.chain_id": "CHAIN_ID_SUBDIR",
[33mNode id 2 part 0:[0m   "consensus_manager_config.context_config.l1_da_mode": true,
[33mNode id 2 part 0:[0m   "consensus_manager_config.context_config.num_validators": 5,
[33mNode id 2 part 0:[0m   "consensus_manager_config.context_config.proposal_buffer_size": 100,
[33mNode id 2 part 0:[0m   "consensus_manager_config.immediate_active_height": 1,
[33mNode id 2 part 0:[0m   "consensus_manager_config.network_config.advertised_multiaddr": null,
[33mNode id 2 part 0:[0m   "consensus_manager_config.network_config.bootstrap_peer_multiaddr": "/ip4/127.0.0.1/tcp/55550/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5",
[33mNode id 2 part 0:[0m   "consensus_manager_config.network_config.chain_id": "CHAIN_ID_SUBDIR",
[33mNode id 2 part 0:[0m   "consensus_manager_config.network_config.discovery_config.bootstrap_dial_retry_config.base_delay_millis": 2,
[33mNode id 2 part 0:[0m   "consensus_manager_config.network_config.discovery_config.bootstrap_dial_retry_config.factor": 5,
[33mNode id 2 part 0:[0m   "consensus_manager_config.network_config.discovery_config.bootstrap_dial_retry_config.max_delay_seconds": 5,
[33mNode id 2 part 0:[0m   "consensus_manager_config.network_config.discovery_config.heartbeat_interval": 100,
[33mNode id 2 part 0:[0m   "consensus_manager_config.network_config.idle_connection_timeout": 120,
[33mNode id 2 part 0:[0m   "consensus_manager_config.network_config.peer_manager_config.malicious_timeout_seconds": 1,
[33mNode id 2 part 0:[0m   "consensus_manager_config.network_config.peer_manager_config.unstable_timeout_millis": 1000,
[33mNode id 2 part 0:[0m   "consensus_manager_config.network_config.port": 55552,
[33mNode id 2 part 0:[0m   "consensus_manager_config.network_config.secret_key": "",
[33mNode id 2 part 0:[0m   "consensus_manager_config.network_config.session_timeout": 120[34mNode id 3 part 1:[0m   "components.state_sync.execution_mode": "LocalExecutionWithRemoteEnabled",
[34mNode id 3 part 1:[0m   "components.state_sync.ip": "127.0.0.1",
[34mNode id 3 part 1:[0m   "components.state_sync.local_server_config.channel_buffer_size": 32,
[34mNode id 3 part 1:[0m   "components.state_sync.max_concurrency": 10,
[34mNode id 3 part 1:[0m   "components.state_sync.port": 55543,
[34mNode id 3 part 1:[0m   "components.state_sync.remote_client_config.idle_connections": 18446744073709551615,
[34mNode id 3 part 1:[0m   "components.state_sync.remote_client_config.idle_timeout": 90,
[34mNode id 3 part 1:[0m   "components.state_sync.remote_client_config.retries": 3,
[34mNode id 3 part 1:[0m   "components.state_sync.url": "127.0.0.1",
[34mNode id 3 part 1:[0m   "consensus_manager_config.broadcast_buffer_size": 10000,
[34mNode id 3 part 1:[0m   "consensus_manager_config.cende_config.recorder_url": "http://127.0.0.1:55240/",
[34mNode id 3 part 1:[0m   "consensus_manager_config.cende_config.skip_write_height": 1,
[34mNode id 3 part 1:[0m   "consensus_manager_config.consensus_config.future_height_limit": 10,
[34mNode id 3 part 1:[0m   "consensus_manager_config.consensus_config.future_height_round_limit": 1,
[34mNode id 3 part 1:[0m   "consensus_manager_config.consensus_config.future_round_limit": 10,
[34mNode id 3 part 1:[0m   "consensus_manager_config.consensus_config.startup_delay": 15,
[34mNode id 3 part 1:[0m   "consensus_manager_config.consensus_config.sync_retry_interval": 1.0,
[34mNode id 3 part 1:[0m   "consensus_manager_config.consensus_config.timeouts.precommit_timeout": 3.0,
[34mNode id 3 part 1:[0m   "consensus_manager_config.consensus_config.timeouts.prevote_timeout": 3.0,
[34mNode id 3 part 1:[0m   "consensus_manager_config.consensus_config.timeouts.proposal_timeout": 9.0,
[34mNode id 3 part 1:[0m   "consensus_manager_config.consensus_config.validator_id": "0x67",
[34mNode id 3 part 1:[0m   "consensus_manager_config.context_config.block_timestamp_window": 1,
[34mNode id 3 part 1:[0m   "consensus_manager_config.context_config.chain_id": "CHAIN_ID_SUBDIR",
[34mNode id 3 part 1:[0m   "consensus_manager_config.context_config.l1_da_mode": true,
[34mNode id 3 part 1:[0m   "consensus_manager_config.context_config.num_validators": 5,
[34mNode id 3 part 1:[0m   "consensus_manager_config.context_config.proposal_buffer_size": 100,
[34mNode id 3 part 1:[0m   "consensus_manager_config.immediate_active_height": 1,
[34mNode id 3 part 1:[0m   "consensus_manager_config.network_config.advertised_multiaddr": null,
[34mNode id 3 part 1:[0m   "consensus_manager_config.network_config.bootstrap_peer_multiaddr": "/ip4/127.0.0.1/tcp/55550/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5",
[34mNode id 3 part 1:[0m   "consensus_manager_config.network_config.chain_id": "CHAIN_ID_SUBDIR",
[34mNode id 3 part 1:[0m   "consensus_manager_config.network_config.discovery_config.bootstrap_dial_retry_config.base_delay_millis": 2,
[34mNode id 3 part 1:[0m   "consensus_manager_config.network_config.discovery_config.bootstrap_dial_retry_config.factor": 5,
[34mNode id 3 part 1:[0m   "consensus_manager_config.network_config.discovery_config.bootstrap_dial_retry_config.max_delay_seconds": 5,
[34mNode id 3 part 1:[0m   "consensus_manager_config.network_config.discovery_config.heartbeat_interval": 100,
[34mNode id 3 part 1:[0m   "consensus_manager_config.network_config.idle_connection_timeout": 120,
[34mNode id 3 part 1:[0m   "consensus_manager_config.network_config.peer_manager_config.malicious_timeout_seconds": 1,
[34mNode id 3 part 1:[0m   "consensus_manager_config.network_config.peer_manager_config.unstable_timeout_millis": 1000,
[34mNode id 3 part 1:[0m   "consensus_manager_config.network_config.port": 55554,
[34mNode id 3 part 1:[0m   "consensus_manager_config.network_config.secret_key": "",
[34mNode id 3 part 1:[0m   "consensus_manager_config.network_config.session_timeout": 120,
[34mNode id 3 part 1:[0m   "consensus_manager_config.proposals_topic":,
[33mNode id 2 part 0:[0m   "consensus_manager_config.proposals_topic": "consensus_proposals",
[33mNode id 2 part 0:[0m   "consensus_manager_config.revert_config.revert_up_to_and_including": 18446744073709551615,
[33mNode id 2 part 0:[0m   "consensus_manager_config.revert_config.should_revert": false,
[33mNode id 2 part 0:[0m   "consensus_manager_config.votes_topic": "consensus_votes",
[33mNode id 2 part 0:[0m   "eth_fee_token_address": "0x1001",
[33mNode id 2 part 0:[0m   "gateway_config.chain_info.chain_id": "CHAIN_ID_SUBDIR",
[33mNode id 2 part 0:[0m   "gateway_config.chain_info.fee_token_addresses.eth_fee_token_address": "0x1001",
[33mNode id 2 part 0:[0m   "gateway_config.chain_info.fee_token_addresses.strk_fee_token_address": "0x1002",
[33mNode id 2 part 0:[0m   "gateway_config.stateful_tx_validator_config.max_nonce_for_validation_skip": "0x1",
[33mNode id 2 part 0:[0m   "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.invoke_tx_max_n_steps": 10000000,
[33mNode id 2 part 0:[0m   "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.max_n_events": 1000,
[33mNode id 2 part 0:[0m   "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.max_recursion_depth": 50,
[33mNode id 2 part 0:[0m   "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.validate_max_n_steps": 1000000,
[33mNode id 2 part 0:[0m   "gateway_config.stateless_tx_validator_config.max_calldata_length": 10,
[33mNode id 2 part 0:[0m   "gateway_config.stateless_tx_validator_config.max_contract_class_object_size": 4089446,
[33mNode id 2 part 0:[0m   "gateway_config.stateless_tx_validator_config.max_sierra_version.major": 1,
[33mNode id 2 part 0:[0m   "gateway_config.stateless_tx_validator_config.max_sierra_version.minor": 5,
[33mNode id 2 part 0:[0m   "gateway_config.stateless_tx_validator_config.max_sierra_version.patch": 18446744073709551615,
[33mNode id 2 part 0:[0m   "gateway_config.stateless_tx_validator_config.max_signature_length": 2,
[33mNode id 2 part 0:[0m   "gateway_config.stateless_tx_validator_config.min_sierra_version.major": 1,
[33mNode id 2 part 0:[0m   "gateway_config.stateless_tx_validator_config.min_sierra_version.minor": 1,
[33mNode id 2 part 0:[0m   "gateway_config.stateless_tx_validator_config.min_sierra_version.patch": 0,
[33mNode id 2 part 0:[0m   "gateway_config.stateless_tx_validator_config.validate_non_zero_l1_data_gas_fee": false,
[33mNode id 2 part 0:[0m   "gateway_config.stateless_tx_validator_config.validate_non_zero_l1_gas_fee": true,
[33mNode id 2 part 0:[0m   "gateway_config.stateless_tx_validator_config.validate_non_zero_l2_gas_fee": false,
[33mNode id 2 part 0:[0m   "http_server_config.ip": "127.0.0.1",
[33mNode id 2 part 0:[0m   "http_server_config.port": 55122,
[33mNode id 2 part 0:[0m   "l1_provider_config.bootstrap_catch_up_height": 0,
[33mNode id 2 part 0:[0m   "l1_provider_config.provider_startup_height": 1,
[33mNode id 2 part 0:[0m   "l1_provider_config.startup_sync_sleep_retry_interval": 0.0,
[33mNode id 2 part 0:[0m   "l1_scraper_config.chain_id": "CHAIN_ID_SUBDIR",
[33mNode id 2 part 0:[0m   "l1_scraper_config.finality": 0,
[33mNode id 2 part 0:[0m   "l1_scraper_config.polling_interval": 1,
[33mNode id 2 part 0:[0m   "l1_scraper_config.startup_rewind_time": 0,
[33mNode id 2 part 0:[0m   "mempool_config.enable_fee_escalation": true,
[33mNode id 2 part 0:[0m   "mempool_config.fee_escalation_percentage": 10,
[33mNode id 2 part 0:[0m   "mempool_config.transaction_ttl": 300,
[33mNode id 2 part 0:[0m   "mempool_p2p_config.network_buffer_size": 10000,
[33mNode id 2 part 0:[0m   "mempool_p2p_config.network_config.advertised_multiaddr": null,
[33mNode id 2 part 0:[0m   "mempool_p2p_config.network_config.bootstrap_peer_multiaddr": "/ip4/127.0.0.1/tcp/55564/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5",
[33mNode id 2 part 0:[0m   "mempool_p2p_config.network_config.chain_id": "CHAIN_ID_SUBDIR",
[33mNode id 2 part 0:[0m   "mempool_p2p_config.net "consensus_proposals",
[34mNode id 3 part 1:[0m   "consensus_manager_config.revert_config.revert_up_to_and_including": 18446744073709551615,
[34mNode id 3 part 1:[0m   "consensus_manager_config.revert_config.should_revert": false,
[34mNode id 3 part 1:[0m   "consensus_manager_config.votes_topic": "consensus_votes",
[34mNode id 3 part 1:[0m   "eth_fee_token_address": "0x1001",
[34mNode id 3 part 1:[0m   "gateway_config.chain_info.chain_id": "CHAIN_ID_SUBDIR",
[34mNode id 3 part 1:[0m   "gateway_config.chain_info.fee_token_addresses.eth_fee_token_address": "0x1001",
[34mNode id 3 part 1:[0m   "gateway_config.chain_info.fee_token_addresses.strk_fee_token_address": "0x1002",
[34mNode id 3 part 1:[0m   "gateway_config.stateful_tx_validator_config.max_nonce_for_validation_skip": "0x1",
[34mNode id 3 part 1:[0m   "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.invoke_tx_max_n_steps": 10000000,
[34mNode id 3 part 1:[0m   "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.max_n_events": 1000,
[34mNode id 3 part 1:[0m   "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.max_recursion_depth": 50,
[34mNode id 3 part 1:[0m   "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.validate_max_n_steps": 1000000,
[34mNode id 3 part 1:[0m   "gateway_config.stateless_tx_validator_config.max_calldata_length": 10,
[34mNode id 3 part 1:[0m   "gateway_config.stateless_tx_validator_config.max_contract_class_object_size": 4089446,
[34mNode id 3 part 1:[0m   "gateway_config.stateless_tx_validator_config.max_sierra_version.major": 1,
[34mNode id 3 part 1:[0m   "gateway_config.stateless_tx_validator_config.max_sierra_version.minor": 5,
[34mNode id 3 part 1:[0m   "gateway_config.stateless_tx_validator_config.max_sierra_version.patch": 18446744073709551615,
[34mNode id 3 part 1:[0m   "gateway_config.stateless_tx_validator_config.max_signature_length": 2,
[34mNode id 3 part 1:[0m   "gateway_config.stateless_tx_validator_config.min_sierra_version.major": 1,
[34mNode id 3 part 1:[0m   "gateway_config.stateless_tx_validator_config.min_sierra_version.minor": 1,
[34mNode id 3 part 1:[0m   "gateway_config.stateless_tx_validator_config.min_sierra_version.patch": 0,
[34mNode id 3 part 1:[0m   "gateway_config.stateless_tx_validator_config.validate_non_zero_l1_data_gas_fee": false,
[34mNode id 3 part 1:[0m   "gateway_config.stateless_tx_validator_config.validate_non_zero_l1_gas_fee": true,
[34mNode id 3 part 1:[0m   "gateway_config.stateless_tx_validator_config.validate_non_zero_l2_gas_fee": false,
[34mNode id 3 part 1:[0m   "http_server_config.ip": "127.0.0.1",
[34mNode id 3 part 1:[0m   "http_server_config.port": 55242,
[34mNode id 3 part 1:[0m   "l1_provider_config.bootstrap_catch_up_height": 0,
[34mNode id 3 part 1:[0m   "l1_provider_config.provider_startup_height": 1,
[34mNode id 3 part 1:[0m   "l1_provider_config.startup_sync_sleep_retry_interval": 0.0,
[34mNode id 3 part 1:[0m   "l1_scraper_config.chain_id": "CHAIN_ID_SUBDIR",
[34mNode id 3 part 1:[0m   "l1_scraper_config.finality": 0,
[34mNode id 3 part 1:[0m   "l1_scraper_config.polling_interval": 1,
[34mNode id 3 part 1:[0m   "l1_scraper_config.startup_rewind_time": 0,
[34mNode id 3 part 1:[0m   "mempool_config.enable_fee_escalation": true,
[34mNode id 3 part 1:[0m   "mempool_config.fee_escalation_percentage": 10,
[34mNode id 3 part 1:[0m   "mempool_config.transaction_ttl": 300,
[34mNode id 3 part 1:[0m   "mempool_p2p_config.network_buffer_size": 10000,
[34mNode id 3 part 1:[0m   "mempool_p2p_config.network_config.advertised_multiaddr": null,
[34mNode id 3 part 1:[0m   "mempool_p2p_config.network_config.bootstrap_peer_multiaddr": "/ip4/127.0.0.1/tcp/55564/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5",
[34mNode id 3 part 1:[0m   "mempool_p2p_config.network_config.chain_id": "CHAIN_ID_SUBDIR",
[34mNode id 3 part 1:[0m   "mempool_p2p_config.network_config.discovery_config.bootstrap_dial_retry_config.base_delay_milliswork_config.discovery_config.bootstrap_dial_retry_config.base_delay_millis": 2,
[33mNode id 2 part 0:[0m   "mempool_p2p_config.network_config.discovery_config.bootstrap_dial_retry_config.factor": 5,
[33mNode id 2 part 0:[0m   "mempool_p2p_config.network_config.discovery_config.bootstrap_dial_retry_config.max_delay_seconds": 5,
[33mNode id 2 part 0:[0m   "mempool_p2p_config.network_config.discovery_config.heartbeat_interval": 100,
[33mNode id 2 part 0:[0m   "mempool_p2p_config.network_config.idle_connection_timeout": 120,
[33mNode id 2 part 0:[0m   "mempool_p2p_config.network_config.peer_manager_config.malicious_timeout_seconds": 1,
[33mNode id 2 part 0:[0m   "mempool_p2p_config.network_config.peer_manager_config.unstable_timeout_millis": 1000,
[33mNode id 2 part 0:[0m   "mempool_p2p_config.network_config.port": 55566,
[33mNode id 2 part 0:[0m   "mempool_p2p_config.network_config.secret_key": "",
[33mNode id 2 part 0:[0m   "mempool_p2p_config.network_config.session_timeout": 120,
[33mNode id 2 part 0:[0m   "monitoring_endpoint_config.collect_metrics": true,
[33mNode id 2 part 0:[0m   "monitoring_endpoint_config.ip": "0.0.0.0",
[33mNode id 2 part 0:[0m   "monitoring_endpoint_config.port": 55121,
[33mNode id 2 part 0:[0m   "recorder_url": "http://127.0.0.1:55120/",
[33mNode id 2 part 0:[0m   "revert_config.revert_up_to_and_including": 18446744073709551615,
[33mNode id 2 part 0:[0m   "revert_config.should_revert": false,
[33mNode id 2 part 0:[0m   "state_sync_config.central_sync_client_config": null,
[33mNode id 2 part 0:[0m   "state_sync_config.network_config.advertised_multiaddr": null,
[33mNode id 2 part 0:[0m   "state_sync_config.network_config.bootstrap_peer_multiaddr": "/ip4/127.0.0.1/tcp/55557/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5",
[33mNode id 2 part 0:[0m   "state_sync_config.network_config.chain_id": "CHAIN_ID_SUBDIR",
[33mNode id 2 part 0:[0m   "state_sync_config.network_config.discovery_config.bootstrap_dial_retry_config.base_delay_millis": 2,
[33mNode id 2 part 0:[0m   "state_sync_config.network_config.discovery_config.bootstrap_dial_retry_config.factor": 5,
[33mNode id 2 part 0:[0m   "state_sync_config.network_config.discovery_config.bootstrap_dial_retry_config.max_delay_seconds": 5,
[33mNode id 2 part 0:[0m   "state_sync_config.network_config.discovery_config.heartbeat_interval": 100,
[33mNode id 2 part 0:[0m   "state_sync_config.network_config.idle_connection_timeout": 120,
[33mNode id 2 part 0:[0m   "state_sync_config.network_config.peer_manager_config.malicious_timeout_seconds": 1,
[33mNode id 2 part 0:[0m   "state_sync_config.network_config.peer_manager_config.unstable_timeout_millis": 1000,
[33mNode id 2 part 0:[0m   "state_sync_config.network_config.port": 55559,
[33mNode id 2 part 0:[0m   "state_sync_config.network_config.secret_key": "",
[33mNode id 2 part 0:[0m   "state_sync_config.network_config.session_timeout": 120,
[33mNode id 2 part 0:[0m   "state_sync_config.p2p_sync_client_config.buffer_size": 100000,
[33mNode id 2 part 0:[0m   "state_sync_config.p2p_sync_client_config.num_block_classes_per_query": 100,
[33mNode id 2 part 0:[0m   "state_sync_config.p2p_sync_client_config.num_block_state_diffs_per_query": 100,
[33mNode id 2 part 0:[0m   "state_sync_config.p2p_sync_client_config.num_block_transactions_per_query": 100,
[33mNode id 2 part 0:[0m   "state_sync_config.p2p_sync_client_config.num_headers_per_query": 10000,
[33mNode id 2 part 0:[0m   "state_sync_config.p2p_sync_client_config.wait_period_for_new_data": 50,
[33mNode id 2 part 0:[0m   "state_sync_config.p2p_sync_client_config.wait_period_for_other_protocol": 50,
[33mNode id 2 part 0:[0m   "state_sync_config.revert_config.revert_up_to_and_including": 18446744073709551615,
[33mNode id 2 part 0:[0m   "state_sync_config.revert_config.should_revert": false,
[33mNode id 2 part 0:[0m   "state_sync_config.storage_config.db_config.chain_id": "CHAIN_ID_SUBDIR",
[33mNode id 2 part 0:[0m   "state_sync_config.storage_config.db_config.enforce_file_exists": ": 2,
[34mNode id 3 part 1:[0m   "mempool_p2p_config.network_config.discovery_config.bootstrap_dial_retry_config.factor": 5,
[34mNode id 3 part 1:[0m   "mempool_p2p_config.network_config.discovery_config.bootstrap_dial_retry_config.max_delay_seconds": 5,
[34mNode id 3 part 1:[0m   "mempool_p2p_config.network_config.discovery_config.heartbeat_interval": 100,
[34mNode id 3 part 1:[0m   "mempool_p2p_config.network_config.idle_connection_timeout": 120,
[34mNode id 3 part 1:[0m   "mempool_p2p_config.network_config.peer_manager_config.malicious_timeout_seconds": 1,
[34mNode id 3 part 1:[0m   "mempool_p2p_config.network_config.peer_manager_config.unstable_timeout_millis": 1000,
[34mNode id 3 part 1:[0m   "mempool_p2p_config.network_config.port": 55568,
[34mNode id 3 part 1:[0m   "mempool_p2p_config.network_config.secret_key": "",
[34mNode id 3 part 1:[0m   "mempool_p2p_config.network_config.session_timeout": 120,
[34mNode id 3 part 1:[0m   "monitoring_endpoint_config.collect_metrics": true,
[34mNode id 3 part 1:[0m   "monitoring_endpoint_config.ip": "0.0.0.0",
[34mNode id 3 part 1:[0m   "monitoring_endpoint_config.port": 55241,
[34mNode id 3 part 1:[0m   "recorder_url": "http://127.0.0.1:55240/",
[34mNode id 3 part 1:[0m   "revert_config.revert_up_to_and_including": 18446744073709551615,
[34mNode id 3 part 1:[0m   "revert_config.should_revert": false,
[34mNode id 3 part 1:[0m   "state_sync_config.central_sync_client_config": null,
[34mNode id 3 part 1:[0m   "state_sync_config.network_config.advertised_multiaddr": null,
[34mNode id 3 part 1:[0m   "state_sync_config.network_config.bootstrap_peer_multiaddr": "/ip4/127.0.0.1/tcp/55557/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5",
[34mNode id 3 part 1:[0m   "state_sync_config.network_config.chain_id": "CHAIN_ID_SUBDIR",
[34mNode id 3 part 1:[0m   "state_sync_config.network_config.discovery_config.bootstrap_dial_retry_config.base_delay_millis": 2,
[34mNode id 3 part 1:[0m   "state_sync_config.network_config.discovery_config.bootstrap_dial_retry_config.factor": 5,
[34mNode id 3 part 1:[0m   "state_sync_config.network_config.discovery_config.bootstrap_dial_retry_config.max_delay_seconds": 5,
[34mNode id 3 part 1:[0m   "state_sync_config.network_config.discovery_config.heartbeat_interval": 100,
[34mNode id 3 part 1:[0m   "state_sync_config.network_config.idle_connection_timeout": 120,
[34mNode id 3 part 1:[0m   "state_sync_config.network_config.peer_manager_config.malicious_timeout_seconds": 1,
[34mNode id 3 part 1:[0m   "state_sync_config.network_config.peer_manager_config.unstable_timeout_millis": 1000,
[34mNode id 3 part 1:[0m   "state_sync_config.network_config.port": 55561,
[34mNode id 3 part 1:[0m   "state_sync_config.network_config.secret_key": "",
[34mNode id 3 part 1:[0m   "state_sync_config.network_config.session_timeout": 120,
[34mNode id 3 part 1:[0m   "state_sync_config.p2p_sync_client_config.buffer_size": 100000,
[34mNode id 3 part 1:[0m   "state_sync_config.p2p_sync_client_config.num_block_classes_per_query": 100,
[34mNode id 3 part 1:[0m   "state_sync_config.p2p_sync_client_config.num_block_state_diffs_per_query": 100,
[34mNode id 3 part 1:[0m   "state_sync_config.p2p_sync_client_config.num_block_transactions_per_query": 100,
[34mNode id 3 part 1:[0m   "state_sync_config.p2p_sync_client_config.num_headers_per_query": 10000,
[34mNode id 3 part 1:[0m   "state_sync_config.p2p_sync_client_config.wait_period_for_new_data": 50,
[34mNode id 3 part 1:[0m   "state_sync_config.p2p_sync_client_config.wait_period_for_other_protocol": 50,
[34mNode id 3 part 1:[0m   "state_sync_config.revert_config.revert_up_to_and_including": 18446744073709551615,
[34mNode id 3 part 1:[0m   "state_sync_config.revert_config.should_revert": false,
[34mNode id 3 part 1:[0m   "state_sync_config.storage_config.db_config.chain_id": "CHAIN_ID_SUBDIR",
[34mNode id 3 part 1:[0m   "state_sync_config.storage_config.db_config.enforce_file_exists": false,
[34mNode id 3 part 1:[0m   "state_sync_config.storage_config.db_c[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.076309Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::trace_util[0m[2m:[0m Tracing has been successfully initialized.
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.170279Z[0m [32m INFO[0m [2mpapyrus_config::loading[0m[2m:[0m Loading custom config file: "/tmp/.tmpJJwqCl/node_integration_test_config_changes.json"
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.179105Z[0m [32m INFO[0m [1mload[0m: [2mpapyrus_config::loading[0m[2m:[0m config_map: {
[32mNode id 1 part 0:[0m   "base_layer_config.node_url": "https://node_url/",
[32mNode id 1 part 0:[0m   "base_layer_config.starknet_contract_address": "0xc662c410C0ECf747543f5bA90660f6ABeBD9C8c4",
[32mNode id 1 part 0:[0m   "batcher_config.block_builder_config.bouncer_config.block_max_capacity.l1_gas": 2500000,
[32mNode id 1 part 0:[0m   "batcher_config.block_builder_config.bouncer_config.block_max_capacity.message_segment_length": 3700,
[32mNode id 1 part 0:[0m   "batcher_config.block_builder_config.bouncer_config.block_max_capacity.n_events": 5000,
[32mNode id 1 part 0:[0m   "batcher_config.block_builder_config.bouncer_config.block_max_capacity.sierra_gas": 17000000,
[32mNode id 1 part 0:[0m   "batcher_config.block_builder_config.bouncer_config.block_max_capacity.state_diff_size": 4000,
[32mNode id 1 part 0:[0m   "batcher_config.block_builder_config.chain_info.chain_id": "CHAIN_ID_SUBDIR",
[32mNode id 1 part 0:[0m   "batcher_config.block_builder_config.chain_info.fee_token_addresses.eth_fee_token_address": "0x1001",
[32mNode id 1 part 0:[0m   "batcher_config.block_builder_config.chain_info.fee_token_addresses.strk_fee_token_address": "0x1002",
[32mNode id 1 part 0:[0m   "batcher_config.block_builder_config.execute_config.concurrency_config.chunk_size": 64,
[32mNode id 1 part 0:[0m   "batcher_config.block_builder_config.execute_config.concurrency_config.enabled": true,
[32mNode id 1 part 0:[0m   "batcher_config.block_builder_config.execute_config.concurrency_config.n_workers": 4,
[32mNode id 1 part 0:[0m   "batcher_config.block_builder_config.execute_config.stack_size": 62914560,
[32mNode id 1 part 0:[0m   "batcher_config.block_builder_config.tx_chunk_size": 100,
[32mNode id 1 part 0:[0m   "batcher_config.block_builder_config.versioned_constants_overrides.invoke_tx_max_n_steps": 10000000,
[32mNode id 1 part 0:[0m   "batcher_config.block_builder_config.versioned_constants_overrides.max_n_events": 1000,
[32mNode id 1 part 0:[0m   "batcher_config.block_builder_config.versioned_constants_overrides.max_recursion_depth": 50,
[32mNode id 1 part 0:[0m   "batcher_config.block_builder_config.versioned_constants_overrides.validate_max_n_steps": 1000000,
[32mNode id 1 part 0:[0m   "batcher_config.contract_class_manager_config.cairo_native_run_config.channel_size": 2000,
[32mNode id 1 part 0:[0m   "batcher_config.contract_class_manager_config.cairo_native_run_config.run_cairo_native": false,
[32mNode id 1 part 0:[0m   "batcher_config.contract_class_manager_config.cairo_native_run_config.wait_on_native_compilation": false,
[32mNode id 1 part 0:[0m   "batcher_config.contract_class_manager_config.contract_cache_size": 600,
[32mNode id 1 part 0:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.max_casm_bytecode_size": 81920,
[32mNode id 1 part 0:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.max_cpu_time": 20,
[32mNode id 1 part 0:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.max_memory_usage": 5368709120,
[32mNode id 1 part 0:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.max_native_bytecode_size": 15728640,
[32mNode id 1 part 0:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.optimization_level": 2,
[32mNode id 1 part 0:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.panic_on_compilation_failure": false,
[32mNode id 1 part 0:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.sierra_to_native_compiler_path": null,
[32mNode id 1 part 0:[0m   "batcher_config.input_stream_content_buffer_size": 400,
[32mNode id 1 part 0:[0m   "batcher_config.max_l1_handler_txs_per_block_proposal": 3,
[32mNode id 1 part 0:[0m   "batcher_config.outstream_content_buffer_size": 100,
[32mNode id 1 part 0:[0m   "batcher_config.storage.db_config.chain_id": "CHAIN_ID_SUBDIR",
[32mNode id 1 part 0:[0m   "batcher_config.storage.db_config.enforce_file_exists": false,
[32mNode id 1 part 0:[0m   "batcher_config.storage.db_config.growth_step": 67108864,
[32mNode id 1 part 0:[0m   "batcher_config.storage.db_config.max_size": 34359738368,
[32mNode id 1 part 0:[0m   "batcher_config.storage.db_config.min_size": 1048576,
[32mNode id 1 part 0:[0m   "batcher_config.storage.db_config.path_prefix": "/tmp/.tmp5SUm56",
[32mNode id 1 part 0:[0m   "batcher_config.storage.mmap_file_config.growth_step": 1048576,
[32mNode id 1 part 0:[0m   "batcher_config.storage.mmap_file_config.max_object_size": 65536,
[32mNode id 1 part 0:[0m   "batcher_config.storage.mmap_file_config.max_size": 16777216,
[32mNode id 1 part 0:[0m   "batcher_config.storage.scope": "StateOnly",
[32mNode id 1 part 0:[0m   "chain_id": "CHAIN_ID_SUBDIR",
[32mNode id 1 part 0:[0m   "class_manager_config.class_manager_config.cached_class_storage_config.class_cache_size": 100,
[32mNode id 1 part 0:[0m   "class_manager_config.class_manager_config.cached_class_storage_config.deprecated_class_cache_size": 100,
[32mNode id 1 part 0:[0m   "class_manager_config.class_storage_config.class_hash_storage_config.enforce_file_exists": false,
[32mNode id 1 part 0:[0m   "class_manager_config.class_storage_config.class_hash_storage_config.max_size": 1048576,
[32mNode id 1 part 0:[0m   "class_manager_config.class_storage_config.class_hash_storage_config.path_prefix": "/tmp/.tmpAqwCgl",
[32mNode id 1 part 0:[0m   "class_manager_config.class_storage_config.persistent_root": "/tmp/.tmpc2EWO4",
[32mNode id 1 part 0:[0m   "compiler_config.max_casm_bytecode_size": 81920,
[32mNode id 1 part 0:[0m   "compiler_config.max_cpu_time": 20,
[32mNode id 1 part 0:[0m   "compiler_config.max_memory_usage": 5368709120,
[32mNode id 1 part 0:[0m   "compiler_config.max_native_bytecode_size": 15728640,
[32mNode id 1 part 0:[0m   "compiler_config.optimization_level": 2,
[32mNode id 1 part 0:[0m   "compiler_config.panic_on_compilation_failure": false,
[32mNode id 1 part 0:[0m   "compiler_config.sierra_to_native_compiler_path": null,
[32mNode id 1 part 0:[0m   "components.batcher.execution_mode": "LocalExecutionWithRemoteDisabled",
[32mNode id 1 part 0:[0m   "components.batcher.ip": "0.0.0.0",
[32mNode id 1 part 0:[0m   "components.batcher.local_server_config.channel_buffer_size": 32,
[32mNode id 1 part 0:[0m   "components.batcher.max_concurrency": 10,
[32mNode id 1 part 0:[0m   "components.batcher.port": 0,
[32mNode id 1 part 0:[0m   "components.batcher.remote_client_config.idle_connections": 18446744073709551615,
[32mNode id 1 part 0:[0m   "components.batcher.remote_client_config.idle_timeout": 90,
[32mNode id 1 part 0:[0m   "components.batcher.remote_client_config.retries": 3,
[32mNode id 1 part 0:[0m   "components.batcher.url": "localhost",
[32mNode id 1 part 0:[0m   "components.class_manager.execution_mode": "LocalExecutionWithRemoteDisabled",
[32mNode id 1 part 0:[0m   "components.class_manager.ip": "0.0.0.0",
[32mNode id 1 part 0:[0m   "components.class_manager.local_server_config.channel_buffer_size": 32,
[32mNode id 1 part 0:[0m   "components.class_manager.max_concurrency": 10,
[32mNode id 1 part 0:[0m   "components.class_manager.port": 0,
[32mNode id 1 part 0:[0m   "components.class_manager.remote_client_config.idle_connections": 18446744073709551615,
[32mNode id 1 part 0:[0m   "components.class_manager.remote_client_config.idle_timeout": 90,
[32mNode id 1 part 0:[0m   "components.class_manager.remote_client_config.retries": 3,
[32mNode id 1 part 0:[0m   "components.class_manager.url": "localhost",
[32mNode id 1 part 0:[0m   "components.consensus_manager.execution_mode": "Enabled",
[32mNode id 1 part 0:[0m   "components.gateway.execution_mode": "LocalExecutionWithRemoteDisabled",
[32mNode id 1 part 0:[0m   "components.gateway.ip": "0.0.0.0",
[32mNode id 1 part 0:[0m   "components.gateway.local_server_config.channel_buffer_size": 32,
[32mNode id 1 part 0:[0m   "components.gateway.max_concurrency": 10,
[32mNode id 1 part 0:[0m   "components.gateway.port": 0,
[32mNode id 1 part 0:[0m   "components.gateway.remote_client_config.idle_connections": 18446744073709551615,
[32mNode id 1 part 0:[0m   "components.gateway.remote_client_config.idle_timeout": 90,
[32mNode id 1 part 0:[0m   "components.gateway.remote_client_config.retries": 3,
[32mNode id 1 part 0:[0m   "components.gateway.url": "localhost",
[32mNode id 1 part 0:[0m   "components.http_server.execution_mode": "Enabled",
[32mNode id 1 part 0:[0m   "components.l1_provider.execution_mode": "LocalExecutionWithRemoteDisabled",
[32mNode id 1 part 0:[0m   "components.l1_provider.ip": "0.0.0.0",
[32mNode id 1 part 0:[0m   "components.l1_provider.local_server_config.channel_buffer_size": 32,
[32mNode id 1 part 0:[0m   "components.l1_provider.max_concurrency": 10,
[32mNode id 1 part 0:[0m   "components.l1_provider.port": 0,
[32mNode id 1 part 0:[0m   "components.l1_provider.remote_client_config.idle_connections": 18446744073709551615,
[32mNode id 1 part 0:[0m   "components.l1_provider.remote_client_config.idle_timeout": 90,
[32mNode id 1 part 0:[0m   "components.l1_provider.remote_client_config.retries": 3,
[32mNode id 1 part 0:[0m   "components.l1_provider.url": "localhost",
[32mNode id 1 part 0:[0m   "components.l1_scraper.execution_mode": "Enabled",
[32mNode id 1 part 0:[0m   "components.mempool.execution_mode": "LocalExecutionWithRemoteDisabled",
[32mNode id 1 part 0:[0m   "components.mempool.ip": "0.0.0.0",
[32mNode id 1 part 0:[0m   "components.mempool.local_server_config.channel_buffer_size": 32,
[32mNode id 1 part 0:[0m   "components.mempool.max_concurrency": 10,
[32mNode id 1 part 0:[0m   "components.mempool.port": 0,
[32mNode id 1 part 0:[0m   "components.mempool.remote_client_config.idle_connections": 18446744073709551615,
[32mNode id 1 part 0:[0m   "components.mempool.remote_client_config.idle_timeout": 90,
[32mNode id 1 part 0:[0m   "components.mempool.remote_client_config.retries": 3,
[32mNode id 1 part 0:[0m   "components.mempool.url": "localhost",
[32mNode id 1 part 0:[0m   "components.mempool_p2p.execution_mode": "LocalExecutionWithRemoteDisabled",
[32mNode id 1 part 0:[0m   "components.mempool_p2p.ip": "0.0.0.0",
[32mNode id 1 part 0:[0m   "components.mempool_p2p.local_server_config.channel_buffer_size": 32,
[32mNode id 1 part 0:[0m   "components.mempool_p2p.max_concurrency": 10,
[32mNode id 1 part 0:[0m   "components.mempool_p2p.port": 0,
[32mNode id 1 part 0:[0m   "components.mempool_p2p.remote_client_config.idle_connections": 18446744073709551615,
[32mNode id 1 part 0:[0m   "components.mempool_p2p.remote_client_config.idle_timeout": 90,
[32mNode id 1 part 0:[0m   "components.mempool_p2p.remote_client_config.retries": 3,
[32mNode id 1 part 0:[0m   "components.mempool_p2p.url": "localhost",
[32mNode id 1 part 0:[0m   "components.monitoring_endpoint.execution_mode": "Enabled",
[32mNode id 1 part 0:[0m   "components.sierra_compiler.execution_mode": "LocalExecutionWithRemoteDisabled",
[32mNode id 1 part 0:[0m   "components.sierra_compiler.ip": "0.0.0.0",
[32mNode id 1 part 0:[0m   "components.sierra_compiler.local_server_config.channel_buffer_size": 32,
[32mNode id 1 part 0:[0m   "components.sierra_compiler.max_concurrency": 10,
[32mNode id 1 part 0:[0m   "components.sierra_compiler.port": 0,
[32mNode id 1 part 0:[0m   "components.sierra_compiler.remote_client_config.idle_connections": 18446744073709551615,
[32mNode id 1 part 0:[0m   "components.sierra_compiler.remote_client_config.idle_timeout": 90,
[32mNode id 1 part 0:[0m   "components.sierra_compiler.remote_client_config.retries": 3,
[32mNode id 1 part 0:[0m   "components.sierra_compiler.url": "localhost",
[32mNode id 1 part 0:[0m   "components.state_sync.execution_mode": "LocalExecutionWithRemoteDisabled",
[32mNode id 1 part 0:[0m   "components.state_sync.ip": "0.0.0.0",
[32mNode id 1 part 0:[0m   "components.state_sync.local_server_config.channel_buffer_size": 32,
[32mNode id 1 part 0:[0m   "components.state_sync.max_concurrency": 10,
[32mNode id 1 part 0:[0m   "components.state_sync.port": 0,
[32mNode id 1 part 0:[0m   "components.state_sync.remote_client_config.idle_connections": 18446744073709551615,
[32mNode id 1 part 0:[0m   "components.state_sync.remote_client_config.idle_timeout": 90,
[32mNode id 1 part 0:[0m   "components.state_sync.remote_client_config.retries": 3,
[32mNode id 1 part 0:[0m   "components.state_sync.url": "localhost",
[32mNode id 1 part 0:[0m   "consensus_manager_config.broadcast_buffer_size": 10000,
[32mNode id 1 part 0:[0m   "consensus_manager_config.cende_config.recorder_url": "http://127.0.0.1:55060/",
[32mNode id 1 part 0:[0m   "consensus_manager_config.cende_config.skip_write_height": 1,
[32mNode id 1 part 0:[0m   "consensus_manager_config.consensus_config.future_height_limit": 10,
[32mNode id 1 part 0:[0m   "consensus_manager_config.consensus_config.future_height_round_limit": 1,
[32mNode id 1 part 0:[0m   "consensus_manager_config.consensus_config.future_round_limit": 10,
[32mNode id 1 part 0:[0m   "consensus_manager_config.consensus_config.startup_delay": 15,
[32mNode id 1 part 0:[0m   "consensus_manager_config.consensus_config.sync_retry_interval": 1.0,
[32mNode id 1 part 0:[0m   "consensus_manager_config.consensus_config.timeouts.precommit_timeout": 3.0,
[32mNode id 1 part 0:[0m   "consensus_manager_config.consensus_config.timeouts.prevote_timeout": 3.0,
[32mNode id 1 part 0:[0m   "consensus_manager_config.consensus_config.timeouts.proposal_timeout": 9.0,
[32mNode id 1 part 0:[0m   "consensus_manager_config.consensus_config.validator_id": "0x65",
[32mNode id 1 part 0:[0m   "consensus_manager_config.context_config.block_timestamp_window": 1,
[32mNode id 1 part 0:[0m   "consensus_manager_config.context_config.chain_id": "CHAIN_ID_SUBDIR",
[32mNode id 1 part 0:[0m   "consensus_manager_config.context_config.l1_da_mode": true,
[32mNode id 1 part 0:[0m   "consensus_manager_config.context_config.num_validators": 5,
[32mNode id 1 part 0:[0m   "consensus_manager_config.context_config.proposal_buffer_size": 100,
[32mNode id 1 part 0:[0m   "consensus_manager_config.immediate_active_height": 1,
[32mNode id 1 part 0:[0m   "consensus_manager_config.network_config.advertised_multiaddr": null,
[32mNode id 1 part 0:[0m   "consensus_manager_config.network_config.bootstrap_peer_multiaddr": "/ip4/127.0.0.1/tcp/55550/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5",
[32mNode id 1 part 0:[0m   "consensus_manager_config.network_config.chain_id": "CHAIN_ID_SUBDIR",
[32mNode id 1 part 0:[0m   "consensus_manager_config.network_config.discovery_config.bootstrap_dial_retry_config.base_delay_millis": 2,
[32mNode id 1 part 0:[0m   "consensus_manager_config.network_config.discovery_config.bootstrap_dial_retry_config.factor": 5,
[32mNode id 1 part 0:[0m   "consensus_manager_config.network_config.discovery_config.bootstrap_dial_retry_config.max_delay_seconds": 5,
[32mNode id 1 part 0:[0m   "consensus_manager_config.network_config.discovery_config.heartbeat_interval": 100,
[32mNode id 1 part 0:[0m   "consensus_manager_config.network_config.idle_connection_timeout": 120,
[32mNode id 1 part 0:[0m   "consensus_manager_config.network_config.peer_manager_config.malicious_timeout_seconds": 1,
[32mNode id 1 part 0:[0m   "consensus_manager_config.network_config.peer_manager_config.unstable_timeout_millis": 1000,
[32mNode id 1 part 0:[0m   "consensus_manager_config.network_config.port": 55551,
[32mNode id 1 part 0:[0m   "consensus_manager_config.network_config.secret_key": "",
[32mNode id 1 part 0:[0m   "consensus_manager_config.network_config.session_timeout": 120,
[32mNode id 1 part 0:[0m   "consensus_manager_config.proposals_topic": "consensus_proposals",
[32mNode id 1 part 0:[0m   "consensus_manager_config.revert_config.revert_up_to_and_including": 18446744073709551615,
[32mNode id 1 part 0:[0m   "consensus_manager_config.revert_config.should_revert": false,
[32mNode id 1 part 0:[0m   "consensus_manager_config.votes_topic": "consensus_votes",
[32mNode id 1 part 0:[0m   "eth_fee_token_address": "0x1001",
[32mNode id 1 part 0:[0m   "gateway_config.chain_info.chain_id": "CHAIN_ID_SUBDIR",
[32mNode id 1 part 0:[0m   "gateway_config.chain_info.fee_token_addresses.eth_fee_token_address": "0x1001",
[32mNode id 1 part 0:[0m   "gateway_config.chain_info.fee_token_addresses.strk_fee_token_address": "0x1002",
[32mNode id 1 part 0:[0m   "gateway_config.stateful_tx_validator_config.max_nonce_for_validation_skip": "0x1",
[32mNode id 1 part 0:[0m   "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.invoke_tx_max_n_steps": 10000000,
[32mNode id 1 part 0:[0m   "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.max_n_events": 1000,
[32mNode id 1 part 0:[0m   "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.max_recursion_depth": 50,
[32mNode id 1 part 0:[0m   "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.validate_max_n_steps": 1000000,
[32mNode id 1 part 0:[0m   "gateway_config.stateless_tx_validator_config.max_calldata_length": 10,
[32mNode id 1 part 0:[0m   "gateway_config.stateless_tx_validator_config.max_contract_class_object_size": 4089446,
[32mNode id 1 part 0:[0m   "gateway_config.stateless_tx_validator_config.max_sierra_version.major": 1,
[32mNode id 1 part 0:[0m   "gateway_config.stateless_tx_validator_config.max_sierra_version.minor": 5,
[32mNode id 1 part 0:[0m   "gateway_config.stateless_tx_validator_config.max_sierra_version.patch": 18446744073709551615,
[32mNode id 1 part 0:[0m   "gateway_config.stateless_tx_validator_config.max_signature_length": 2,
[32mNode id 1 part 0:[0m   "gateway_config.stateless_tx_validator_config.min_sierra_version.major": 1,
[32mNode id 1 part 0:[0m   "gateway_config.stateless_tx_validator_config.min_sierra_version.minor": 1,
[32mNode id 1 part 0:[0m   "gateway_config.stateless_tx_validator_config.min_sierra_version.patch": 0,
[32mNode id 1 part 0:[0m   "gateway_config.stateless_tx_validator_config.validate_non_zero_l1_data_gas_fee": false,
[32mNode id 1 part 0:[0m   "gateway_config.stateless_tx_validator_config.validate_non_zero_l1_gas_fee": true,
[32mNode id 1 part 0:[0m   "gateway_config.stateless_tx_validator_config.validate_non_zero_l2_gas_fee": false,
[32mNode id 1 part 0:[0m   "http_server_config.ip": "127.0.0.1",
[32mNode id 1 part 0:[0m   "http_server_config.port": 55062,
[32mNode id 1 part 0:[0m   "l1_provider_config.bootstrap_catch_up_height": 0,
[32mNode id 1 part 0:[0m   "l1_provider_config.provider_startup_height": 1,
[32mNode id 1 part 0:[0m   "l1_provider_config.startup_sync_sleep_retry_interval": 0.0,
[32mNode id 1 part 0:[0m   "l1_scraper_config.chain_id": "CHAIN_ID_SUBDIR",
[32mNode id 1 part 0:[0m   "l1_scraper_config.finality": 0,
[32mNode id 1 part 0:[0m   "l1_scraper_config.polling_interval": 1,
[32mNode id 1 part 0:[0m   "l1_scraper_config.startup_rewind_time": 0,
[32mNode id 1 part 0:[0m   "mempool_config.enable_fee_escalation": true,
[32mNode id 1 part 0:[0m   "mempool_config.fee_escalation_percentage": 10,
[32mNode id 1 part 0:[0m   "mempool_config.transaction_ttl": 300,
[32mNode id 1 part 0:[0m   "mempool_p2p_config.network_buffer_size": 10000,
[32mNode id 1 part 0:[0m   "mempool_p2p_config.network_config.advertised_multiaddr": null,
[32mNode id 1 part 0:[0m   "mempool_p2p_config.network_config.bootstrap_peer_multiaddr": "/ip4/127.0.0.1/tcp/55564/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5",
[32mNode id 1 part 0:[0m   "mempool_p2p_config.network_config.chain_id": "CHAIN_ID_SUBDIR",
[32mNode id 1 part 0:[0m   "mempool_p2p_config.network_config.discovery_config.bootstrap_dial_retry_config.base_delay_millis": 2,
[32mNode id 1 part 0:[0m   "mempool_p2p_config.network_config.discovery_config.bootstrap_dial_retry_config.factor": 5,
[32mNode id 1 part 0:[0m   "mempool_p2p_config.network_config.discovery_config.bootstrap_dial_retry_config.max_delay_seconds": 5,
[32mNode id 1 part 0:[0m   "mempool_p2p_config.network_config.discovery_config.heartbeat_interval": 100,
[32mNode id 1 part 0:[0m   "mempool_p2p_config.network_config.idle_connection_timeout": 120,
[32mNode id 1 part 0:[0m   "mempool_p2p_config.network_config.peer_manager_config.malicious_timeout_seconds": 1,
[32mNode id 1 part 0:[0m   "mempool_p2p_config.network_config.peer_manager_config.unstable_timeout_millis": 1000,
[32mNode id 1 part 0:[0m   "mempool_p2p_config.network_config.port": 55565,
[32mNode id 1 part 0:[0m   "mempool_p2p_config.network_config.secret_key": "",
[32mNode id 1 part 0:[0m   "mempool_p2p_config.network_config.session_timeout": 120,
[32mNode id 1 part 0:[0m   "monitoring_endpoint_config.collect_metrics": true,
[32mNode id 1 part 0:[0m   "monitoring_endpoint_config.ip": "0.0.0.0",
[32mNode id 1 part 0:[0m   "monitoring_endpoint_config.port": 55061,
[32mNode id 1 part 0:[0m   "recorder_url": "http://127.0.0.1:55060/",
[32mNode id 1 part 0:[0m   "revert_config.revert_up_to_and_including": 18446744073709551615,
[32mNode id 1 part 0:[0m   "revert_config.should_revert": false,
[32mNode id 1 part 0:[0m   "state_sync_config.central_sync_client_config": null,
[32mNode id 1 part 0:[0m   "state_sync_config.network_config.advertised_multiaddr": null,
[32mNode id 1 part 0:[0m   "state_sync_config.network_config.bootstrap_peer_multiaddr": "/ip4/127.0.0.1/tcp/55557/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5",
[32mNode id 1 part 0:[0m   "state_sync_config.network_config.chain_id": "CHAIN_ID_SUBDIR",
[32mNode id 1 part 0:[0m   "state_sync_config.network_config.discovery_config.bootstrap_dial_retry_config.base_delay_millis": 2,
[32mNode id 1 part 0:[0m   "state_sync_config.network_config.discovery_config.bootstrap_dial_retry_config.factor": 5,
[32mNode id 1 part 0:[0m   "state_sync_config.network_config.discovery_config.bootstrap_dial_retry_config.max_delay_seconds": 5,
[32mNode id 1 part 0:[0m   "state_sync_config.network_config.discovery_config.heartbeat_interval": 100,
[32mNode id 1 part 0:[0m   "state_sync_config.network_config.idle_connection_timeout": 120,
[32mNode id 1 part 0:[0m   "state_sync_config.network_config.peer_manager_config.malicious_timeout_seconds": 1,
[32mNode id 1 part 0:[0m   "state_sync_config.network_config.peer_manager_config.unstable_timeout_millis": 1000,
[32mNode id 1 part 0:[0m   "state_sync_config.network_config.port": 55558,
[32mNode id 1 part 0:[0m   "state_sync_config.network_config.secret_key": "",
[32mNode id 1 part 0:[0m   "state_sync_config.network_config.session_timeout": 120,
[32mNode id 1 part 0:[0m   "state_sync_config.p2p_sync_client_config.buffer_size": 100000,
[32mNode id 1 part 0:[0m   "state_sync_config.p2p_sync_client_config.num_block_classes_per_query": 100,
[32mNode id 1 part 0:[0m   "state_sync_config.p2p_sync_client_config.num_block_state_diffs_per_query": 100,
[32mNode id 1 part 0:[0m   "state_sync_config.p2p_sync_client_config.num_block_transactions_per_query": 100,
[32mNode id 1 part 0:[0m   "state_sync_config.p2p_sync_client_config.num_headers_per_query": 10000,
[32mNode id 1 part 0:[0m   "state_sync_config.p2p_sync_client_config.wait_period_for_new_data": 50,
[32mNode id 1 part 0:[0m   "state_sync_config.p2p_sync_client_config.wait_period_for_other_protocol": 50,
[32mNode id 1 part 0:[0m   "state_sync_config.revert_config.revert_up_to_and_including": 18446744073709551615,
[32mNode id 1 part 0:[0m   "state_sync_config.revert_config.should_revert": false,
[32mNode id 1 part 0:[0m   "state_sync_config.storage_config.db_config.chain_id": "CHAIN_ID_SUBDIR",
[32mNode id 1 part 0:[0m   "state_sync_config.storage_config.db_config.enforce_file_exists": [35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.076265Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::trace_util[0m[2m:[0m Tracing has been successfully initialized.
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.170280Z[0m [32m INFO[0m [2mpapyrus_config::loading[0m[2m:[0m Loading custom config file: "/tmp/.tmpubK9EH/node_integration_test_config_changes.json"
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.179273Z[0m [32m INFO[0m [1mload[0m: [2mpapyrus_config::loading[0m[2m:[0m config_map: {
[35mNode id 4 part 1:[0m   "base_layer_config.node_url": "https://node_url/",
[35mNode id 4 part 1:[0m   "base_layer_config.starknet_contract_address": "0xc662c410C0ECf747543f5bA90660f6ABeBD9C8c4",
[35mNode id 4 part 1:[0m   "batcher_config.block_builder_config.bouncer_config.block_max_capacity.l1_gas": 2500000,
[35mNode id 4 part 1:[0m   "batcher_config.block_builder_config.bouncer_config.block_max_capacity.message_segment_length": 3700,
[35mNode id 4 part 1:[0m   "batcher_config.block_builder_config.bouncer_config.block_max_capacity.n_events": 5000,
[35mNode id 4 part 1:[0m   "batcher_config.block_builder_config.bouncer_config.block_max_capacity.sierra_gas": 17000000,
[35mNode id 4 part 1:[0m   "batcher_config.block_builder_config.bouncer_config.block_max_capacity.state_diff_size": 4000,
[35mNode id 4 part 1:[0m   "batcher_config.block_builder_config.chain_info.chain_id": "CHAIN_ID_SUBDIR",
[35mNode id 4 part 1:[0m   "batcher_config.block_builder_config.chain_info.fee_token_addresses.eth_fee_token_address": "0x1001",
[35mNode id 4 part 1:[0m   "batcher_config.block_builder_config.chain_info.fee_token_addresses.strk_fee_token_address": "0x1002",
[35mNode id 4 part 1:[0m   "batcher_config.block_builder_config.execute_config.concurrency_config.chunk_size": 64,
[35mNode id 4 part 1:[0m   "batcher_config.block_builder_config.execute_config.concurrency_config.enabled": true,
[35mNode id 4 part 1:[0m   "batcher_config.block_builder_config.execute_config.concurrency_config.n_workers": 4,
[35mNode id 4 part 1:[0m   "batcher_config.block_builder_config.execute_config.stack_size": 62914560,
[35mNode id 4 part 1:[0m   "batcher_config.block_builder_config.tx_chunk_size": 100,
[35mNode id 4 part 1:[0m   "batcher_config.block_builder_config.versioned_constants_overrides.invoke_tx_max_n_steps": 10000000,
[35mNode id 4 part 1:[0m   "batcher_config.block_builder_config.versioned_constants_overrides.max_n_events": 1000,
[35mNode id 4 part 1:[0m   "batcher_config.block_builder_config.versioned_constants_overrides.max_recursion_depth": 50,
[35mNode id 4 part 1:[0m   "batcher_config.block_builder_config.versioned_constants_overrides.validate_max_n_steps": 1000000,
[35mNode id 4 part 1:[0m   "batcher_config.contract_class_manager_config.cairo_native_run_config.channel_size": 2000,
[35mNode id 4 part 1:[0m   "batcher_config.contract_class_manager_config.cairo_native_run_config.run_cairo_native": false,
[35mNode id 4 part 1:[0m   "batcher_config.contract_class_manager_config.cairo_native_run_config.wait_on_native_compilation": false,
[35mNode id 4 part 1:[0m   "batcher_config.contract_class_manager_config.contract_cache_size": 600,
[35mNode id 4 part 1:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.max_casm_bytecode_size": 81920,
[35mNode id 4 part 1:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.max_cpu_time": 20,
[35mNode id 4 part 1:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.max_memory_usage": 5368709120,
[35mNode id 4 part 1:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.max_native_bytecode_size": 15728640,
[35mNode id 4 part 1:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.optimization_level": 2,
[35mNode id 4 part 1:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.panic_on_compilation_failure": false,
[35mNode id 4 part 1:[0m   "batcher_config.contract_class_manager_config.native_compiler_config.sierra_to_native_compiler_path": null,
[35mNode id 4 part 1:[0m   "batcher_config.input_stream_content_buffer_size": 400,
[35mNode id 4 part 1:[0m   "batcher_config.max_l1_handler_txs_per_block_proposal": 3,
[35mNode id 4 part 1:[0m   "batcher_config.outstream_content_buffer_size": 100,
[35mNode id 4 part 1:[0m   "batcher_config.storage.db_config.chain_id": "CHAIN_ID_SUBDIR",
[35mNode id 4 part 1:[0m   "batcher_config.storage.db_config.enforce_file_exists": false,
[35mNode id 4 part 1:[0m   "batcher_config.storage.db_config.growth_step": 67108864,
[35mNode id 4 part 1:[0m   "batcher_config.storage.db_config.max_size": 34359738368,
[35mNode id 4 part 1:[0m   "batcher_config.storage.db_config.min_size": 1048576,
[35mNode id 4 part 1:[0m   "batcher_config.storage.db_config.path_prefix": "/tmp/.tmpnKRux4",
[35mNode id 4 part 1:[0m   "batcher_config.storage.mmap_file_config.growth_step": 1048576,
[35mNode id 4 part 1:[0m   "batcher_config.storage.mmap_file_config.max_object_size": 65536,
[35mNode id 4 part 1:[0m   "batcher_config.storage.mmap_file_config.max_size": 16777216,
[35mNode id 4 part 1:[0m   "batcher_config.storage.scope": "StateOnly",
[35mNode id 4 part 1:[0m   "chain_id": "CHAIN_ID_SUBDIR",
[35mNode id 4 part 1:[0m   "class_manager_config.class_manager_config.cached_class_storage_config.class_cache_size": 100,
[35mNode id 4 part 1:[0m   "class_manager_config.class_manager_config.cached_class_storage_config.deprecated_class_cache_size": 100,
[35mNode id 4 part 1:[0m   "class_manager_config.class_storage_config.class_hash_storage_config.enforce_file_exists": false,
[35mNode id 4 part 1:[0m   "class_manager_config.class_storage_config.class_hash_storage_config.max_size": 1048576,
[35mNode id 4 part 1:[0m   "class_manager_config.class_storage_config.class_hash_storage_config.path_prefix": "/tmp/.tmp40RFP4",
[35mNode id 4 part 1:[0m   "class_manager_config.class_storage_config.persistent_root": "/tmp/.tmpFQXW26",
[35mNode id 4 part 1:[0m   "compiler_config.max_casm_bytecode_size": 81920,
[35mNode id 4 part 1:[0m   "compiler_config.max_cpu_time": 20,
[35mNode id 4 part 1:[0m   "compiler_config.max_memory_usage": 5368709120,
[35mNode id 4 part 1:[0m   "compiler_config.max_native_bytecode_size": 15728640,
[35mNode id 4 part 1:[0m   "compiler_config.optimization_level": 2,
[35mNode id 4 part 1:[0m   "compiler_config.panic_on_compilation_failure": false,
[35mNode id 4 part 1:[0m   "compiler_config.sierra_to_native_compiler_path": null,
[35mNode id 4 part 1:[0m   "components.batcher.execution_mode": "LocalExecutionWithRemoteDisabled",
[35mNode id 4 part 1:[0m   "components.batcher.ip": "0.0.0.0",
[35mNode id 4 part 1:[0m   "components.batcher.local_server_config.channel_buffer_size": 32,
[35mNode id 4 part 1:[0m   "components.batcher.max_concurrency": 10,
[35mNode id 4 part 1:[0m   "components.batcher.port": 0,
[35mNode id 4 part 1:[0m   "components.batcher.remote_client_config.idle_connections": 18446744073709551615,
[35mNode id 4 part 1:[0m   "components.batcher.remote_client_config.idle_timeout": 90,
[35mNode id 4 part 1:[0m   "components.batcher.remote_client_config.retries": 3,
[35mNode id 4 part 1:[0m   "components.batcher.url": "localhost",
[35mNode id 4 part 1:[0m   "components.class_manager.execution_mode": "Remote",
[35mNode id 4 part 1:[0m   "components.class_manager.ip": "127.0.0.1",
[35mNode id 4 part 1:[0m   "components.class_manager.local_server_config.channel_buffer_size": 32,
[35mNode id 4 part 1:[0m   "components.class_manager.max_concurrency": 10,
[35mNode id 4 part 1:[0m   "components.class_manager.port": 55549,
[35mNode id 4 part 1:[0m   "components.class_manager.remote_client_config.idle_connections": 18446744073709551615,
[35mNode id 4 part 1:[0m   "components.class_manager.remote_client_config.idle_timeout": 90,
[35mNode id 4 part 1:[0m   "components.class_manager.remote_client_config.retries": 3,
[35mNode id 4 part 1:[0m   "components.class_manager.url": "127.0.0.1",
[35mNode id 4 part 1:[0m   "components.consensus_manager.execution_mode": "Enabled",
[35mNode id 4 part 1:[0m   "components.gateway.execution_mode": "Remote",
[35mNode id 4 part 1:[0m   "components.gateway.ip": "127.0.0.1",
[35mNode id 4 part 1:[0m   "components.gateway.local_server_config.channel_buffer_size": 32,
[35mNode id 4 part 1:[0m   "components.gateway.max_concurrency": 10,
[35mNode id 4 part 1:[0m   "components.gateway.port": 55545,
[35mNode id 4 part 1:[0m   "components.gateway.remote_client_config.idle_connections": 18446744073709551615,
[35mNode id 4 part 1:[0m   "components.gateway.remote_client_config.idle_timeout": 90,
[35mNode id 4 part 1:[0m   "components.gateway.remote_client_config.retries": 3,
[35mNode id 4 part 1:[0m   "components.gateway.url": "127.0.0.1",
[35mNode id 4 part 1:[0m   "components.http_server.execution_mode": "Disabled",
[35mNode id 4 part 1:[0m   "components.l1_provider.execution_mode": "LocalExecutionWithRemoteDisabled",
[35mNode id 4 part 1:[0m   "components.l1_provider.ip": "0.0.0.0",
[35mNode id 4 part 1:[0m   "components.l1_provider.local_server_config.channel_buffer_size": 32,
[35mNode id 4 part 1:[0m   "components.l1_provider.max_concurrency": 10,
[35mNode id 4 part 1:[0m   "components.l1_provider.port": 0,
[35mNode id 4 part 1:[0m   "components.l1_provider.remote_client_config.idle_connections": 18446744073709551615,
[35mNode id 4 part 1:[0m   "components.l1_provider.remote_client_config.idle_timeout": 90,
[35mNode id 4 part 1:[0m   "components.l1_provider.remote_client_config.retries": 3,
[35mNode id 4 part 1:[0m   "components.l1_provider.url": "localhost",
[35mNode id 4 part 1:[0m   "components.l1_scraper.execution_mode": "Enabled",
[35mNode id 4 part 1:[0m   "components.mempool.execution_mode": "Remote",
[35mNode id 4 part 1:[0m   "components.mempool.ip": "127.0.0.1",
[35mNode id 4 part 1:[0m   "components.mempool.local_server_config.channel_buffer_size": 32,
[35mNode id 4 part 1:[0m   "components.mempool.max_concurrency": 10,
[35mNode id 4 part 1:[0m   "components.mempool.port": 55546,
[35mNode id 4 part 1:[0m   "components.mempool.remote_client_config.idle_connections": 18446744073709551615,
[35mNode id 4 part 1:[0m   "components.mempool.remote_client_config.idle_timeout": 90,
[35mNode id 4 part 1:[0m   "components.mempool.remote_client_config.retries": 3,
[35mNode id 4 part 1:[0m   "components.mempool.url": "127.0.0.1",
[35mNode id 4 part 1:[0m   "components.mempool_p2p.execution_mode": "Remote",
[35mNode id 4 part 1:[0m   "components.mempool_p2p.ip": "127.0.0.1",
[35mNode id 4 part 1:[0m   "components.mempool_p2p.local_server_config.channel_buffer_size": 32,
[35mNode id 4 part 1:[0m   "components.mempool_p2p.max_concurrency": 10,
[35mNode id 4 part 1:[0m   "components.mempool_p2p.port": 55547,
[35mNode id 4 part 1:[0m   "components.mempool_p2p.remote_client_config.idle_connections": 18446744073709551615,
[35mNode id 4 part 1:[0m   "components.mempool_p2p.remote_client_config.idle_timeout": 90,
[35mNode id 4 part 1:[0m   "components.mempool_p2p.remote_client_config.retries": 3,
[35mNode id 4 part 1:[0m   "components.mempool_p2p.url": "127.0.0.1",
[35mNode id 4 part 1:[0m   "components.monitoring_endpoint.execution_mode": "Enabled",
[35mNode id 4 part 1:[0m   "components.sierra_compiler.execution_mode": "LocalExecutionWithRemoteDisabled",
[35mNode id 4 part 1:[0m   "components.sierra_compiler.ip": "0.0.0.0",
[35mNode id 4 part 1:[0m   "components.sierra_compiler.local_server_config.channel_buffer_size": 32,
[35mNode id 4 part 1:[0m   "components.sierra_compiler.max_concurrency": 10,
[35mNode id 4 part 1:[0m   "components.sierra_compiler.port": 0,
[35mNode id 4 part 1:[0m   "components.sierra_compiler.remote_client_config.idle_connections": 18446744073709551615,
[35mNode id 4 part 1:[0m   "components.sierra_compiler.remote_client_config.idle_timeout": 90,
[35mNode id 4 part 1:[0m   "components.sierra_compiler.remote_client_config.retries": 3,
[35mNode id 4 part 1:[0m   "components.sierra_compiler.url": "localhost",
[35mNode id 4 part 1:[0m   "components.state_sync.execution_mode": "LocalExecutionWithRemoteEnabled",
[35mNode id 4 part 1:[0m   "components.state_sync.ip": "127.0.0.1",
[35mNode id 4 part 1:[0m   "components.state_sync.local_server_config.channel_buffer_size": 32,
[35mNode id 4 part 1:[0m   "components.state_sync.max_concurrency": 10,
[35mNode id 4 part 1:[0m   "components.state_sync.port": 55548,
[35mNode id 4 part 1:[0m   "components.state_sync.remote_client_config.idle_connections": 18446744073709551615,
[35mNode id 4 part 1:[0m   "components.state_sync.remote_client_config.idle_timeout": 90,
[35mNode id 4 part 1:[0m   "components.state_sync.remote_client_config.retries": 3,
[35mNode id 4 part 1:[0m   "components.state_sync.url": "127.0.0.1",
[35mNode id 4 part 1:[0m   "consensus_manager_config.broadcast_buffer_size": 10000,
[35mNode id 4 part 1:[0m   "consensus_manager_config.cende_config.recorder_url": "http://127.0.0.1:55360/",
[35mNode id 4 part 1:[0m   "consensus_manager_config.cende_config.skip_write_height": 1,
[35mNode id 4 part 1:[0m   "consensus_manager_config.consensus_config.future_height_limit": 10,
[35mNode id 4 part 1:[0m   "consensus_manager_config.consensus_config.future_height_round_limit": 1,
[35mNode id 4 part 1:[0m   "consensus_manager_config.consensus_config.future_round_limit": 10,
[35mNode id 4 part 1:[0m   "consensus_manager_config.consensus_config.startup_delay": 15,
[35mNode id 4 part 1:[0m   "consensus_manager_config.consensus_config.sync_retry_interval": 1.0,
[35mNode id 4 part 1:[0m   "consensus_manager_config.consensus_config.timeouts.precommit_timeout": 3.0,
[35mNode id 4 part 1:[0m   "consensus_manager_config.consensus_config.timeouts.prevote_timeout": 3.0,
[35mNode id 4 part 1:[0m   "consensus_manager_config.consensus_config.timeouts.proposal_timeout": 9.0,
[35mNode id 4 part 1:[0m   "consensus_manager_config.consensus_config.validator_id": "0x68",
[35mNode id 4 part 1:[0m   "consensus_manager_config.context_config.block_timestamp_window": 1,
[35mNode id 4 part 1:[0m   "consensus_manager_config.context_config.chain_id": "CHAIN_ID_SUBDIR",
[35mNode id 4 part 1:[0m   "consensus_manager_config.context_config.l1_da_mode": true,
[35mNode id 4 part 1:[0m   "consensus_manager_config.context_config.num_validators": 5,
[35mNode id 4 part 1:[0m   "consensus_manager_config.context_config.proposal_buffer_size": 100,
[35mNode id 4 part 1:[0m   "consensus_manager_config.immediate_active_height": 1,
[35mNode id 4 part 1:[0m   "consensus_manager_config.network_config.advertised_multiaddr": null,
[35mNode id 4 part 1:[0m   "consensus_manager_config.network_config.bootstrap_peer_multiaddr": "/ip4/127.0.0.1/tcp/55550/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5",
[35mNode id 4 part 1:[0m   "consensus_manager_config.network_config.chain_id": "CHAIN_ID_SUBDIR",
[35mNode id 4 part 1:[0m   "consensus_manager_config.network_config.discovery_config.bootstrap_dial_retry_config.base_delay_millis": 2,
[35mNode id 4 part 1:[0m   "consensus_manager_config.network_config.discovery_config.bootstrap_dial_retry_config.factor": 5,
[35mNode id 4 part 1:[0m   "consensus_manager_config.network_config.discovery_config.bootstrap_dial_retry_config.max_delay_seconds": 5,
[35mNode id 4 part 1:[0m   "consensus_manager_config.network_config.discovery_config.heartbeat_interval": 100,
[35mNode id 4 part 1:[0m   "consensus_manager_config.network_config.idle_connection_timeout": 120,
[35mNode id 4 part 1:[0m   "consensus_manager_config.network_config.peer_manager_config.malicious_timeout_seconds": 1,
[35mNode id 4 part 1:[0m   "consensus_manager_config.network_config.peer_manager_config.unstable_timeout_millis": 1000,
[35mNode id 4 part 1:[0m   "consensus_manager_config.network_config.port": 55556,
[35mNode id 4 part 1:[0m   "consensus_manager_config.network_config.secret_key": "",
[35mNode id 4 part 1:[0m   "consensus_manager_config.network_config.session_timeout": 120,
[35mNode id 4 part 1:[0m   "consensus_manager_config.proposals_topic": "consensus_proposals",
[35mNode id 4 part 1:[0m   "consensus_manager_config.revert_config.revert_up_to_and_including": 18446744073709551615,
[35mNode id 4 part 1:[0m   "consensus_manager_config.revert_config.should_revert": false,
[35mNode id 4 part 1:[0m   "consensus_manager_config.votes_topic": "consensus_votes",
[35mNode id 4 part 1:[0m   "eth_fee_token_address": "0x1001",
[35mNode id 4 part 1:[0m   "gateway_config.chain_info.chain_id": "CHAIN_ID_SUBDIR",
[35mNode id 4 part 1:[0m   "gateway_config.chain_info.fee_token_addresses.eth_fee_token_address": "0x1001",
[35mNode id 4 part 1:[0m   "gateway_config.chain_info.fee_token_addresses.strk_fee_token_address": "0x1002",
[35mNode id 4 part 1:[0m   "gateway_config.stateful_tx_validator_config.max_nonce_for_validation_skip": "0x1",
[35mNode id 4 part 1:[0m   "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.invoke_tx_max_n_steps": 10000000,
[35mNode id 4 part 1:[0m   "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.max_n_events": 1000,
[35mNode id 4 part 1:[0m   "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.max_recursion_depth": 50,
[35mNode id 4 part 1:[0m   "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.validate_max_n_steps": 1000000,
[35mNode id 4 part 1:[0m   "gateway_config.stateless_tx_validator_config.max_calldata_length": 10,
[35mNode id 4 part 1:[0m   "gateway_config.stateless_tx_validator_config.max_contract_class_object_size": 4089446,
[35mNode id 4 part 1:[0m   "gateway_config.stateless_tx_validator_config.max_sierra_version.major": 1,
[35mNode id 4 part 1:[0m   "gateway_config.stateless_tx_validator_config.max_sierra_version.minor": 5,
[35mNode id 4 part 1:[0m   "gateway_config.stateless_tx_validator_config.max_sierra_version.patch": 18446744073709551615,
[35mNode id 4 part 1:[0m   "gateway_config.stateless_tx_validator_config.max_signature_length": 2,
[35mNode id 4 part 1:[0m   "gateway_config.stateless_tx_validator_config.min_sierra_version.major": 1,
[35mNode id 4 part 1:[0m   "gateway_config.stateless_tx_validator_config.min_sierra_version.minor": 1,
[35mNode id 4 part 1:[0m   "gateway_config.stateless_tx_validator_config.min_sierra_version.patch": 0,
[35mNode id 4 part 1:[0m   "gateway_config.stateless_tx_validator_config.validate_non_zero_l1_data_gas_fee": false,
[35mNode id 4 part 1:[0m   "gateway_config.stateless_tx_validator_config.validate_non_zero_l1_gas_fee": true,
[35mNode id 4 part 1:[0m   "gateway_config.stateless_tx_validator_config.validate_non_zero_l2_gas_fee": false,
[35mNode id 4 part 1:[0m   "http_server_config.ip": "127.0.0.1",
[35mNode id 4 part 1:[0m   "http_server_config.port": 55362,
[35mNode id 4 part 1:[0m   "l1_provider_config.bootstrap_catch_up_height": 0,
[35mNode id 4 part 1:[0m   "l1_provider_config.provider_startup_height": 1,
[35mNode id 4 part 1:[0m   "l1_provider_config.startup_sync_sleep_retry_interval": 0.0,
[35mNode id 4 part 1:[0m   "l1_scraper_config.chain_id": "CHAIN_ID_SUBDIR",
[35mNode id 4 part 1:[0m   "l1_scraper_config.finality": 0,
[35mNode id 4 part 1:[0m   "l1_scraper_config.polling_interval": 1,
[35mNode id 4 part 1:[0m   "l1_scraper_config.startup_rewind_time": 0,
[35mNode id 4 part 1:[0m   "mempool_config.enable_fee_escalation": true,
[35mNode id 4 part 1:[0m   "mempool_config.fee_escalation_percentage": 10,
[35mNode id 4 part 1:[0m   "mempool_config.transaction_ttl": 300,
[35mNode id 4 part 1:[0m   "mempool_p2p_config.network_buffer_size": 10000,
[35mNode id 4 part 1:[0m   "mempool_p2p_config.network_config.advertised_multiaddr": null,
[35mNode id 4 part 1:[0m   "mempool_p2p_config.network_config.bootstrap_peer_multiaddr": "/ip4/127.0.0.1/tcp/55564/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5",
[35mNode id 4 part 1:[0m   "mempool_p2p_config.network_config.chain_id": "CHAIN_ID_SUBDIR",
[35mNode id 4 part 1:[0m   "mempool_p2p_config.network_config.discovery_config.bootstrap_dial_retry_config.base_delay_millis": 2,
[35mNode id 4 part 1:[0m   "mempool_p2p_config.network_config.discovery_config.bootstrap_dial_retry_config.factor": 5,
[35mNode id 4 part 1:[0m   "mempool_p2p_config.network_config.discovery_config.bootstrap_dial_retry_config.max_delay_seconds": 5,
[35mNode id 4 part 1:[0m   "mempool_p2p_config.network_config.discovery_config.heartbeat_interval": 100,
[35mNode id 4 part 1:[0m   "mempool_p2p_config.network_config.idle_connection_timeout": 120,
[35mNode id 4 part 1:[0m   "mempool_p2p_config.network_config.peer_manager_config.malicious_timeout_seconds": 1,
[35mNode id 4 part 1:[0m   "mempool_p2p_config.network_config.peer_manager_config.unstable_timeout_millis": 1000,
[35mNode id 4 part 1:[0m   "mempool_p2p_config.network_config.port": 55570,
[35mNode id 4 part 1:[0m   "mempool_p2p_config.network_config.secret_key": "",
[35mNode id 4 part 1:[0m   "mempool_p2p_config.network_config.session_timeout": 120,
[35mNode id 4 part 1:[0m   "monitoring_endpoint_config.collect_metrics": true,
[35mNode id 4 part 1:[0m   "monitoring_endpoint_config.ip": "0.0.0.0",
[35mNode id 4 part 1:[0m   "monitoring_endpoint_config.port": 55361,
[35mNode id 4 part 1:[0m   "recorder_url": "http://127.0.0.1:55360/",
[35mNode id 4 part 1:[0m   "revert_config.revert_up_to_and_including": 18446744073709551615,
[35mNode id 4 part 1:[0m   "revert_config.should_revert": false,
[35mNode id 4 part 1:[0m   "state_sync_config.central_sync_client_config": null,
[35mNode id 4 part 1:[0m   "state_sync_config.network_config.advertised_multiaddr": null,
[35mNode id 4 part 1:[0m   "state_sync_config.network_config.bootstrap_peer_multiaddr": "/ip4/127.0.0.1/tcp/55557/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5",
[35mNode id 4 part 1:[0m   "state_sync_config.network_config.chain_id": "CHAIN_ID_SUBDIR",
[35mNode id 4 part 1:[0m   "state_sync_config.network_config.discovery_config.bootstrap_dial_retry_config.base_delay_millis": 2,
[35mNode id 4 part 1:[0m   "state_sync_config.network_config.discovery_config.bootstrap_dial_retry_config.factor": 5,
[35mNode id 4 part 1:[0m   "state_sync_config.network_config.discovery_config.bootstrap_dial_retry_config.max_delay_seconds": 5,
[35mNode id 4 part 1:[0m   "state_sync_config.network_config.discovery_config.heartbeat_interval": 100,
[35mNode id 4 part 1:[0m   "state_sync_config.network_config.idle_connection_timeout": 120,
[35mNode id 4 part 1:[0m   "state_sync_config.network_config.peer_manager_config.malicious_timeout_seconds": 1,
[35mNode id 4 part 1:[0m   "state_sync_config.network_config.peer_manager_config.unstable_timeout_millis": 1000,
[35mNode id 4 part 1:[0m   "state_sync_config.network_config.port": 55563,
[35mNode id 4 part 1:[0m   "state_sync_config.network_config.secret_key": "",
[35mNode id 4 part 1:[0m   "state_sync_config.network_config.session_timeout": 120,
[35mNode id 4 part 1:[0m   "state_sync_config.p2p_sync_client_config.buffer_size": 100000,
[35mNode id 4 part 1:[0m   "state_sync_config.p2p_sync_client_config.num_block_classes_per_query": 100,
[35mNode id 4 part 1:[0m   "state_sync_config.p2p_sync_client_config.num_block_state_diffs_per_query": 100,
[35mNode id 4 part 1:[0m   "state_sync_config.p2p_sync_client_config.num_block_transactions_per_query": 100,
[35mNode id 4 part 1:[0m   "state_sync_config.p2p_sync_client_config.num_headers_per_query": 10000,
[35mNode id 4 part 1:[0m   "state_sync_config.p2p_sync_client_config.wait_period_for_new_data": 50,
[35mNode id 4 part 1:[0m   "state_sync_config.p2p_sync_client_config.wait_period_for_other_protocol": 50,
[35mNode id 4 part 1:[0m   "state_sync_config.revert_config.revert_up_to_and_including": 18446744073709551615,
[35mNode id 4 part 1:[0m   "state_sync_config.revert_config.should_revert": false,
[35mNode id 4 part 1:[0m   "state_sync_config.storage_config.db_config.chain_id": "CHAIN_ID_SUBDIR",
[35mNode id 4 part 1:[0m   "state_sync_config.storage_config.db_config.enforce_file_exists": false,
[35mNode id 4 part 1:[0m   "state_sync_config.storage_config.db_cfalse,
[33mNode id 2 part 0:[0m   "state_sync_config.storage_config.db_config.growth_step": 67108864,
[33mNode id 2 part 0:[0m   "state_sync_config.storage_config.db_config.max_size": 34359738368,
[33mNode id 2 part 0:[0m   "state_sync_config.storage_config.db_config.min_size": 1048576,
[33mNode id 2 part 0:[0m   "state_sync_config.storage_config.db_config.path_prefix": "/tmp/.tmpTCrQie",
[33mNode id 2 part 0:[0m   "state_sync_config.storage_config.mmap_file_config.growth_step": 1048576,
[33mNode id 2 part 0:[0m   "state_sync_config.storage_config.mmap_file_config.max_object_size": 65536,
[33mNode id 2 part 0:[0m   "state_sync_config.storage_config.mmap_file_config.max_size": 16777216,
[33mNode id 2 part 0:[0m   "state_sync_config.storage_config.scope": "FullArchive",
[33mNode id 2 part 0:[0m   "strk_fee_token_address": "0x1002",
[33mNode id 2 part 0:[0m   "validator_id": "0x66",
[33mNode id 2 part 0:[0m   "versioned_constants_overrides.invoke_tx_max_n_steps": 10000000,
[33mNode id 2 part 0:[0m   "versioned_constants_overrides.max_n_events": 1000,
[33mNode id 2 part 0:[0m   "versioned_constants_overrides.max_recursion_depth": 50,
[33mNode id 2 part 0:[0m   "versioned_constants_overrides.validate_max_n_steps": 1000000
[33mNode id 2 part 0:[0m }
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.180428Z[0m [32m INFO[0m [2mstarknet_sequencer_node::utils[0m[2m:[0m Finished loading configuration.
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.180647Z[0m [32m INFO[0m [2mstarknet_sequencer_node::utils[0m[2m:[0m Finished validating configuration.
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.180663Z[0m [32m INFO[0m [2mstarknet_sequencer_node[0m[2m:[0m Config dump:
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.183741Z[0m [32m INFO[0m [2mstarknet_sequencer_node[0m[2m:[0m {"base_layer_config.node_url": SerializedParam { description: "A required param! Ethereum node URL. A schema to match to Infura node: https://mainnet.infura.io/v3/<your_api_key>, but any other node can be used.", content: ParamType(String), privacy: Private }, "base_layer_config.starknet_contract_address": SerializedParam { description: "Starknet contract address in ethereum.", content: DefaultValue(String("0xc662c410C0ECf747543f5bA90660f6ABeBD9C8c4")), privacy: Public }, "batcher_config.block_builder_config.bouncer_config.block_max_capacity.l1_gas": SerializedParam { description: "An upper bound on the total l1_gas used in a block.", content: DefaultValue(Number(2500000)), privacy: Public }, "batcher_config.block_builder_config.bouncer_config.block_max_capacity.message_segment_length": SerializedParam { description: "An upper bound on the message segment length in a block.", content: DefaultValue(Number(3700)), privacy: Public }, "batcher_config.block_builder_config.bouncer_config.block_max_capacity.n_events": SerializedParam { description: "An upper bound on the total number of events generated in a block.", content: DefaultValue(Number(5000)), privacy: Public }, "batcher_config.block_builder_config.bouncer_config.block_max_capacity.sierra_gas": SerializedParam { description: "An upper bound on the total sierra_gas used in a block.", content: DefaultValue(Number(17000000)), privacy: Public }, "batcher_config.block_builder_config.bouncer_config.block_max_capacity.state_diff_size": SerializedParam { description: "An upper bound on the total state diff size in a block.", content: DefaultValue(Number(4000)), privacy: Public }, "batcher_config.block_builder_config.chain_info.chain_id": SerializedParam { description: "The chain ID of the StarkNet chain.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "batcher_config.block_builder_config.chain_info.fee_token_addresses.eth_fee_token_address": SerializedParam { description: "Address of the ETH fee token.", content: DefaultValue(String("0x1001")), privacy: Public }, "batcher_config.block_builder_config.chain_info.fee_token_addresses.strk_fee_token_address": SerializedParam { description: "Address of the STRK fee token.", content: DefaultValue(String("0x1002")), privacy: Public }, "batcher_config.block_builder_config.execute_config.concurrency_config.chunk_size": SerializedParam { description: "The size of the transaction chunk executed in parallel.", content: DefaultValue(Number(64)), privacy: Public }, "batcher_config.block_builder_config.execute_config.concurrency_config.enabled": SerializedParam { description: "Enables concurrency of transaction execution.", content: DefaultValue(Bool(true)), privacy: Public }, "batcher_config.block_builder_config.execute_config.concurrency_config.n_workers": SerializedParam { description: "Number of parallel transaction execution workers.", content: DefaultValue(Number(4)), privacy: Public }, "batcher_config.block_builder_config.execute_config.stack_size": SerializedParam { description: "The thread stack size (proportional to the maximal gas of a transaction).", content: DefaultValue(Number(62914560)), privacy: Public }, "batcher_config.block_builder_config.tx_chunk_size": SerializedParam { description: "The size of the transaction chunk.", content: DefaultValue(Number(100)), privacy: Public }, "batcher_config.block_builder_config.versioned_constants_overrides.invoke_tx_max_n_steps": SerializedParam { description: "Maximum number of steps the invoke function is allowed to run.", content: DefaultValue(Number(10000000)), privacy: Public }, "batcher_config.block_builder_config.versioned_constants_overrides.max_n_events": SerializedParam { description: "Maximum number of events that can be emitted from the transation.", content: DefaultValue(Number(1000)), privacy: Public }, "batcher_config.block_builder_config.versioned_constants_overrides.max_recursion_depth": SerializedParam { description: "Maximum recursion depth for nested calls during blockifier validation.", content: DefaultValue(Number(50)), privacy: Public }, "batcher_config.block_builder_config.versioned_constants_overrides.validate_max_n_steps": SerializedParam { description: "Maximum number of steps the validation function is allowed to run.", content: DefaultValue(Number(1000000)), privacy: Public }, "batcher_config.contract_class_manager_config.cairo_native_run_config.channel_size": SerializedParam { description: "The size of the compilation request channel.", content: DefaultValue(Number(2000)), privacy: Public }, "batcher_config.contract_class_manager_config.cairo_native_run_config.run_cairo_native": SerializedParam { description: "Enables Cairo native execution.", content: DefaultValue(Bool(false)), privacy: Public }, "batcher_config.contract_class_manager_config.cairo_native_run_config.wait_on_native_compilation": SerializedParam { description: "Block Sequencer main program while compiling sierra, for testing.", content: DefaultValue(Bool(false)), privacy: Public }, "batcher_config.contract_class_manager_config.contract_cache_size": SerializedParam { description: "The size of the global contract cache.", content: DefaultValue(Number(600)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.max_casm_bytecode_size": SerializedParam { description: "Limitation of compiled casm bytecode size.", content: DefaultValue(Number(81920)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.max_cpu_time": SerializedParam { description: "Limitation of compilation cpu time (seconds).", content: DefaultValue(Number(20)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.max_memory_usage": SerializedParam { description: "Limitation of compilation process's virtual memory (bytes).", content: DefaultValue(Number(5368709120)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.max_native_bytecode_size": SerializedParam { description: "Limitation of compiled native bytecode size.", content: DefaultValue(Number(15728640)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.optimization_level": SerializedParam { description: "The level of optimization to apply during compilation.", content: DefaultValue(Number(2)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.panic_on_compilation_failure": SerializedParam { description: "Whether to panic on compilation failure.", content: DefaultValue(Bool(false)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.sierra_to_native_compiler_path": SerializedParam { description: "The path to the Sierra-to-Native compiler binary.", content: DefaultValue(String("")), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.sierra_to_native_compiler_path.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(true)), privacy: TemporaryValue }, "batcher_config.input_stream_content_buffer_size": SerializedParam { description: "Sets the buffer size for the input transaction channel. Adding more transactions beyond this limit will block until space is available.", content: DefaultValue(Number(400)), privacy: Public }, "batcher_config.max_l1_handler_txs_per_block_proposal": SerializedParam { description: "The maximum number of L1 handler transactions to include in a block proposal.", content: DefaultValue(Number(3)), privacy: Public }, "batcher_config.outstream_content_buffer_size": SerializedParam { description: "The maximum number of items to include in a single get_proposal_content response.", content: DefaultValue(Number(100)), privacy: Public }, "batcher_config.storage.db_config.chain_id": SerializedParam { description: "The chain to follow. For more details see https://docs.starknet.io/documentation/architecture_and_concepts/Blocks/transactions/#chain-id.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "batcher_config.storage.db_config.enforce_file_exists": SerializedParam { description: "Whether to enforce that the path exists. If true, `open_env` fails when the mdbx.dat file does not exist.", content: DefaultValue(Bool(false)), privacy: Public }, "batcher_config.storage.db_config.growth_step": SerializedParam { description: "The growth step in bytes, must be greater than zero to allow the database to grow.", content: DefaultValue(Number(67108864)), privacy: Public }, "batcher_config.storage.db_config.max_size": SerializedParam { description: "The maximum size of the node's storage in bytes.", content: DefaultValue(Number(34359738368)), privacy: Public }, "batcher_config.storage.db_config.min_size": SerializedParam { description: "The minimum size of the node's storage in bytes.", content: DefaultValue(Number(1048576)), privacy: Public }, "batcher_config.storage.db_config.path_prefix": SerializedParam { description: "Prefix of the path of the node's storage directory, the storage file path will be <path_prefix>/<chain_id>. The path is not created automatically.", content: DefaultValue(String("/tmp/.tmpCcrqF1")), privacy: Public }, "batcher_config.storage.mmap_file_config.growth_step": SerializedParam { description: "The growth step in bytes, must be greater than max_object_size.", content: DefaultValue(Number(1048576)), privacy: Public }, "batcher_config.storage.mmap_file_config.max_object_size": SerializedParam { description: "The maximum size of a single object in the file in bytes", content: DefaultValue(Number(65536)), privacy: Public }, "batcher_config.storage.mmap_file_config.max_size": SerializedParam { description: "The maximum size of a memory mapped file in bytes. Must be greater than growth_step.", content: DefaultValue(Number(16777216)), privacy: Public }, "batcher_config.storage.scope": SerializedParam { description: "The categories of data saved in storage.", content: DefaultValue(String("StateOnly")), privacy: Public }, "class_manager_config.class_manager_config.cached_class_storage_config.class_cache_size": SerializedParam { description: "Contract classes cache size.", content: DefaultValue(Number(100)), privacy: Public }, "class_manager_config.class_manager_config.cached_class_storage_config.deprecated_class_cache_size": SerializedParam { description: "Deprecated contract classes cache size.", content: DefaultValue(Number(100)), privacy: Public }, "class_manager_config.class_storage_config.class_hash_storage_config.enforce_file_exists": SerializedParam { description: "Whether to enforce that the above path exists.", content: DefaultValue(Bool(false)), privacy: Public }, "class_manager_config.class_storage_config.class_hash_storage_config.max_size": SerializedParam { description: "The maximum size of the class hash storage in bytes.", content: DefaultValue(Number(1048576)), privacy: Public }, "class_manager_config.class_storage_config.class_hash_storage_config.path_prefix": SerializedParam { description: "Prefix of the path of class hash storage directory.", content: DefaultValue(String("/tmp/.tmpUO1mgV")), privacy: Public }, "class_manager_config.class_storage_config.persistent_root": SerializedParam { description: "Path to the node's class storage directory.", content: DefaultValue(String("/tmp/.tmprEKa1e")), privacy: Public }, "compiler_config.max_casm_bytecode_size": SerializedParam { description: "Limitation of compiled casm bytecode size.", content: DefaultValue(Number(81920)), privacy: Public }, "compiler_config.max_cpu_time": SerializedParam { description: "Limitation of compilation cpu time (seconds).", content: DefaultValue(Number(20)), privacy: Public }, "compiler_config.max_memory_usage": SerializedParam { description: "Limitation of compilation process's virtual memory (bytes).", content: DefaultValue(Number(5368709120)), privacy: Public }, "compiler_config.max_native_bytecode_size": SerializedParam { description: "Limitation of compiled native bytecode size.", content: DefaultValue(Number(15728640)), privacy: Public }, "compiler_config.optimization_level": SerializedParam { description: "The level of optimization to apply during compilation.", content: DefaultValue(Number(2)), privacy: Public }, "compiler_config.panic_on_compilation_failure": SerializedParam { description: "Whether to panic on compilation failure.", content: DefaultValue(Bool(false)), privacy: Public }, "compiler_config.sierra_to_native_compiler_path": SerializedParam { description: "The path to the Sierra-to-Native compiler binary.", content: DefaultValue(String("")), privacy: Public }, "compiler_config.sierra_to_native_compiler_path.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(true)), privacy: TemporaryValue }, "components.batcher.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("LocalExecutionWithRemoteDisabled")), privacy: Public }, "components.batcher.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("0.0.0.0")), privacy: Public }, "components.batcher.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.batcher.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.batcher.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(0)), privacy: Public }, "components.batcher.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.batcher.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.batcher.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.batcher.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("localhost")), privacy: Public }, "components.class_manager.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("LocalExecutionWithRemoteDisabled")), privacy: Public }, "components.class_manager.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("0.0.0.0")), privacy: Public }, "components.class_manager.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.class_manager.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.class_manager.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(0)), privacy: Public }, "components.class_manager.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.class_manager.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.class_manager.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.class_manager.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("localhost")), privacy: Public }, "components.consensus_manager.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("Enabled")), privacy: Public }, "components.gateway.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("LocalExecutionWithRemoteDisabled")), privacy: Public }, "components.gateway.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("0.0.0.0")), privacy: Public }, "components.gateway.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.gateway.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.gateway.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(0)), privacy: Public }, "components.gateway.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.gateway.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.gateway.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.gateway.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("localhost")), privacy: Public }, "components.http_server.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("Enabled")), privacy: Public }, "components.l1_provider.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("LocalExecutionWithRemoteDisabled")), privacy: Public }, "components.l1_provider.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("0.0.0.0")), privacy: Public }, "components.l1_provider.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.l1_provider.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.l1_provider.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(0)), privacy: Public }, "components.l1_provider.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.l1_provider.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.l1_provider.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.l1_provider.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("localhost")), privacy: Public }, "components.l1_scraper.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("Enabled")), privacy: Public }, "components.mempool.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("LocalExecutionWithRemoteDisabled")), privacy: Public }, "components.mempool.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("0.0.0.0")), privacy: Public }, "components.mempool.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.mempool.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.mempool.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(0)), privacy: Public }, "components.mempool.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.mempool.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.mempool.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.mempool.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("localhost")), privacy: Public }, "components.mempool_p2p.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("LocalExecutionWithRemoteDisabled")), privacy: Public }, "components.mempool_p2p.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("0.0.0.0")), privacy: Public }, "components.mempool_p2p.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.mempool_p2p.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.mempool_p2p.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(0)), privacy: Public }, "components.mempool_p2p.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.mempool_p2p.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.mempool_p2p.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.mempool_p2p.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("localhost")), privacy: Public }, "components.monitoring_endpoint.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("Enabled")), privacy: Public }, "components.sierra_compiler.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("LocalExecutionWithRemoteDisabled")), privacy: Public }, "components.sierra_compiler.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("0.0.0.0")), privacy: Public }, "components.sierra_compiler.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.sierra_compiler.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.sierra_compiler.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(0)), privacy: Public }, "components.sierra_compiler.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.sierra_compiler.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.sierra_compiler.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.sierra_compiler.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("localhost")), privacy: Public }, "components.state_sync.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("LocalExecutionWithRemoteDisabled")), privacy: Public }, "components.state_sync.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("0.0.0.0")), privacy: Public }, "components.state_sync.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.state_sync.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.state_sync.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(0)), privacy: Public }, "components.state_sync.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.state_sync.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.state_sync.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.state_sync.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("localhost")), privacy: Public }, "consensus_manager_config.broadcast_buffer_size": SerializedParam { description: "The buffer size for the broadcast channel.", content: DefaultValue(Number(10000)), privacy: Public }, "consensus_manager_config.cende_config.recorder_url": SerializedParam { description: "The URL of the Pythonic cende_recorder", content: DefaultValue(String("http://127.0.0.1:55120/")), privacy: Private }, "consensus_manager_config.cende_config.skip_write_height": SerializedParam { description: "A height that the consensus can skip writing to Aerospike. Needed for booting up (no previous height blob to write) or to handle extreme cases (all the nodes failed).", content: DefaultValue(Number(1)), privacy: Private }, "consensus_manager_config.cende_config.skip_write_height.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(false)), privacy: TemporaryValue }, "consensus_manager_config.consensus_config.future_height_limit": SerializedParam { description: "How many heights in the future should we cache.", content: DefaultValue(Number(10)), privacy: Public }, "consensus_manager_config.consensus_config.future_height_round_limit": SerializedParam { description: "How many rounds should we cache for future heights.", content: DefaultValue(Number(1)), privacy: Public }, "consensus_manager_config.consensus_config.future_round_limit": SerializedParam { description: "How many rounds in the future (for current height) should we cache.", content: DefaultValue(Number(10)), privacy: Public }, "consensus_manager_config.consensus_config.startup_delay": SerializedParam { description: "Delay (seconds) before starting consensus to give time for network peering.", content: DefaultValue(Number(15)), privacy: Public }, "consensus_manager_config.consensus_config.sync_retry_interval": SerializedParam { description: "The duration (seconds) between sync attempts.", content: DefaultValue(Number(1.0)), privacy: Public }, "consensus_manager_config.consensus_config.timeouts.precommit_timeout": SerializedParam { description: "The timeout (seconds) for a precommit.", content: DefaultValue(Number(3.0)), privacy: Public }, "consensus_manager_config.consensus_config.timeouts.prevote_timeout": SerializedParam { description: "The timeout (seconds) for a prevote.", content: DefaultValue(Number(3.0)), privacy: Public }, "consensus_manager_config.consensus_config.timeouts.proposal_timeout": SerializedParam { description: "The timeout (seconds) for a proposal.", content: DefaultValue(Number(9.0)), privacy: Public }, "consensus_manager_config.consensus_config.validator_id": SerializedParam { description: "The validator id of the node.", content: DefaultValue(String("0x66")), privacy: Public }, "consensus_manager_config.context_config.block_timestamp_window": SerializedParam { description: "Maximum allowed deviation (seconds) of a proposed block's timestamp from the current time.", content: DefaultValue(Number(1)), privacy: Public }, "consensus_manager_config.context_config.chain_id": SerializedParam { description: "The chain id of the Starknet chain.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "consensus_manager_config.context_config.l1_da_mode": SerializedParam { description: "The data availability mode, true: Blob, false: Calldata.", content: DefaultValue(Bool(true)), privacy: Public }, "consensus_manager_config.context_config.num_validators": SerializedParam { description: "The number of validators.", content: DefaultValue(Number(5)), privacy: Public }, "consensus_manager_config.context_config.proposal_buffer_size": SerializedParam { description: "The buffer size for streaming outbound proposals.", content: DefaultValue(Number(100)), privacy: Public }, "consensus_manager_config.immediate_active_height": SerializedParam { description: "The height at which the node may actively participate in consensus.", content: DefaultValue(Number(1)), privacy: Public }, "consensus_manager_config.network_config.advertised_multiaddr": SerializedParam { description: "The external address other peers see this node. If this is set, the node will not try to find out which addresses it has and will write this address as external instead", content: DefaultValue(String("")), privacy: Public }, "consensus_manager_config.network_config.advertised_multiaddr.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(true)), privacy: TemporaryValue }, "consensus_manager_config.network_config.bootstrap_peer_multiaddr": SerializedParam { description: "The multiaddress of the peer node. It should include the peer's id. For more info: https://docs.libp2p.io/concepts/fundamentals/peers/", content: DefaultValue(String("/ip4/127.0.0.1/tcp/55550/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5")), privacy: Public }, "consensus_manager_config.network_config.bootstrap_peer_multiaddr.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(false)), privacy: TemporaryValue }, "consensus_manager_config.network_config.chain_id": SerializedParam { description: "The chain to follow. For more details see https://docs.starknet.io/documentation/architecture_and_concepts/Blocks/transactions/#chain-id.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "consensus_manager_config.network_config.discovery_config.bootstrap_dial_retry_config.base_delay_millis": SerializedParam { description: "The base delay in milliseconds for the exponential backoff strategy.", content: DefaultValue(Number(2)), privacy: Public }, "consensus_manager_config.network_config.discovery_config.bootstrap_dial_retry_config.factor": SerializedParam { description: "The factor for the exponential backoff strategy.", content: DefaultValue(Number(5)), privacy: Public }, "consensus_manager_config.network_config.discovery_config.bootstrap_dial_retry_config.max_delay_seconds": SerializedParam { description: "The maximum delay in seconds for the exponential backoff strategy.", content: DefaultValue(Number(5)), privacy: Public }, "consensus_manager_config.network_config.discovery_config.heartbeat_interval": SerializedParam { description: "The interval between each discovery (Kademlia) query in milliseconds.", content: DefaultValue(Number(100)), privacy: Public }, "consensus_manager_config.network_config.idle_connection_timeout": SerializedParam { description: "Amount of time in seconds that a connection with no active sessions will stay alive.", content: DefaultValue(Number(120)), privacy: Public }, "consensus_manager_config.network_config.peer_manager_config.malicious_timeout_seconds": SerializedParam { description: "The duration in seconds a peer is blacklisted after being marked as malicious.", content: DefaultValue(Number(1)), privacy: Public }, "consensus_manager_config.network_config.peer_manager_config.unstable_timeout_millis": SerializedParam { description: "The duration in milliseconds a peer blacklisted after being reported as unstable.", content: DefaultValue(Number(1000)), privacy: Public }, "consensus_manager_config.network_config.port": SerializedParam { description: "The port that the node listens on for incoming tcp connections.", content: DefaultValue(Number(55552)), privacy: Public }, "consensus_manager_config.network_config.secret_key": SerializedParam { description: "The secret key used for building the peer id. If it's an empty string a random one will be used.", content: DefaultValue(String("")), privacy: Private }, "consensus_manager_config.network_config.session_timeout": SerializedParam { description: "Maximal time in seconds that each session can take before failing on timeout.", content: DefaultValue(Number(120)), privacy: Public }, "consensus_manager_config.proposals_topic": SerializedParam { description: "The topic for consensus proposals.", content: DefaultValue(String("consensus_proposals")), privacy: Public }, "consensus_manager_config.revert_config.revert_up_to_and_including": SerializedParam { description: "The component will revert blocks up to this block number (including).", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "consensus_manager_config.revert_config.should_revert": SerializedParam { description: "If set true, the component would revert blocks and do nothing else.", content: DefaultValue(Bool(false)), privacy: Public }, "consensus_manager_config.votes_topic": SerializedParam { description: "The topic for consensus votes.", content: DefaultValue(String("consensus_votes")), privacy: Public }, "gateway_config.chain_info.chain_id": SerializedParam { description: "The chain ID of the StarkNet chain.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "gateway_config.chain_info.fee_token_addresses.eth_fee_token_address": SerializedParam { description: "Address of the ETH fee token.", content: DefaultValue(String("0x1001")), privacy: Public }, "gateway_config.chain_info.fee_token_addresses.strk_fee_token_address": SerializedParam { description: "Address of the STRK fee token.", content: DefaultValue(String("0x1002")), privacy: Public }, "gateway_config.stateful_tx_validator_config.max_nonce_for_validation_skip": SerializedParam { description: "Maximum nonce for which the validation is skipped.", content: DefaultValue(String("0x1")), privacy: Public }, "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.invoke_tx_max_n_steps": SerializedParam { description: "Maximum number of steps the invoke function is allowed to run.", content: DefaultValue(Number(10000000)), privacy: Public }, "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.max_n_events": SerializedParam { description: "Maximum number of events that can be emitted from the transation.", content: DefaultValue(Number(1000)), privacy: Public }, "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.max_recursion_depth": SerializedParam { description: "Maximum recursion depth for nested calls during blockifier validation.", content: DefaultValue(Number(50)), privacy: Public }, "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.validate_max_n_steps": SerializedParam { description: "Maximum number of steps the validation function is allowed to run.", content: DefaultValue(Number(1000000)), privacy: Public }, "gateway_config.stateless_tx_validator_config.max_calldata_length": SerializedParam { description: "Limitation of calldata length.", content: DefaultValue(Number(10)), privacy: Public }, "gateway_config.stateless_tx_validator_config.max_contract_class_object_size": SerializedParam { description: "Limitation of contract class object size.", content: DefaultValue(Number(4089446)), privacy: Public }, "gateway_config.stateless_tx_validator_config.max_sierra_version.major": SerializedParam { description: "The major version of the configuration.", content: DefaultValue(Number(1)), privacy: Public }, "gateway_config.stateless_tx_validator_config.max_sierra_version.minor": SerializedParam { description: "The minor version of the configuration.", content: DefaultValue(Number(5)), privacy: Public }, "gateway_config.stateless_tx_validator_config.max_sierra_version.patch": SerializedParam { description: "The patch version of the configuration.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "gateway_config.stateless_tx_validator_config.max_signature_length": SerializedParam { description: "Limitation of signature length.", content: DefaultValue(Number(2)), privacy: Public }, "gateway_config.stateless_tx_validator_config.min_sierra_version.major": SerializedParam { description: "The major version of the configuration.", content: DefaultValue(Number(1)), privacy: Public }, "gateway_config.stateless_tx_validator_config.min_sierra_version.minor": SerializedParam { description: "The minor version of the configuration.", content: DefaultValue(Number(1)), privacy: Public }, "gateway_config.stateless_tx_validator_config.min_sierra_version.patch": SerializedParam { description: "The patch version of the configuration.", content: DefaultValue(Number(0)), privacy: Public }, "gateway_config.stateless_tx_validator_config.validate_non_zero_l1_data_gas_fee": SerializedParam { description: "If true, validates that a transaction has non-zero L1 Data (Blob) resource bounds.", content: DefaultValue(Bool(false)), privacy: Public }, "gateway_config.stateless_tx_validator_config.validate_non_zero_l1_gas_fee": SerializedParam { description: "If true, validates that a transaction has non-zero L1 resource bounds.", content: DefaultValue(Bool(true)), privacy: Public }, "gateway_config.stateless_tx_validator_config.validate_non_zero_l2_gas_fee": SerializedParam { description: "If true, validates that a transaction has non-zero L2 resource bounds.", content: DefaultValue(Bool(false)), privacy: Public }, "http_server_config.ip": SerializedParam { description: "The http server ip.", content: DefaultValue(String("127.0.0.1")), privacy: Public }, "http_server_config.port": SerializedParam { description: "The http server port.", content: DefaultValue(Number(55122)), privacy: Public }, "l1_provider_config.bootstrap_catch_up_height": SerializedParam { description: "Height at which the provider should catch up to the bootstrapper.", content: DefaultValue(Number(0)), privacy: Public }, "l1_provider_config.provider_startup_height": SerializedParam { description: "Height at which the provider should start.", content: DefaultValue(Number(1)), privacy: Public }, "l1_provider_config.startup_sync_sleep_retry_interval": SerializedParam { description: "Interval in seconds between each retry of syncing with L2 during startup.", content: DefaultValue(Number(0.0)), privacy: Public }, "l1_scraper_config.chain_id": SerializedParam { description: "The chain to follow. For more details see https://docs.starknet.io/documentation/architecture_and_concepts/Blocks/transactions/#chain-id.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "l1_scraper_config.finality": SerializedParam { description: "Number of blocks to wait for finality", content: DefaultValue(Number(0)), privacy: Public }, "l1_scraper_config.polling_interval": SerializedParam { description: "Interval in Seconds between each scraping attempt of L1.", content: DefaultValue(Number(1)), privacy: Public }, "l1_scraper_config.startup_rewind_time": SerializedParam { description: "Duration to rewind from latest L1 block when starting scraping.", content: DefaultValue(Number(0)), privacy: Public }, "mempool_config.enable_fee_escalation": SerializedParam { description: "If true, transactions can be replaced with higher fee transactions.", content: DefaultValue(Bool(true)), privacy: Public }, "mempool_config.fee_escalation_percentage": SerializedParam { description: "Percentage increase for tip and max gas price to enable transaction replacement.", content: DefaultValue(Number(10)), privacy: Public }, "mempool_config.transaction_ttl": SerializedParam { description: "Time-to-live for transactions in the mempool, in seconds.", content: DefaultValue(Number(300)), privacy: Public }, "mempool_p2p_config.network_buffer_size": SerializedParam { description: "Network buffer size.", content: DefaultValue(Number(10000)), privacy: Public }, "mempool_p2p_config.network_config.advertised_multiaddr": SerializedParam { description: "The external address other peers see this node. If this is set, the node will not try to find out which addresses it has and will write this address as external instead", content: DefaultValue(String("")), privacy: Public }, "mempool_p2p_config.network_config.advertised_multiaddr.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(true)), privacy: TemporaryValue }, "mempool_p2p_config.network_config.bootstrap_peer_multiaddr": SerializedParam { description: "The multiaddress of the peer node. It should include the peer's id. For more info: https://docs.libp2p.io/concepts/fundamentals/peers/", content: DefaultValue(String("/ip4/127.0.0.1/tcp/55564/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5")), privacy: Public }, "mempool_p2p_config.network_config.bootstrap_peer_multiaddr.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(false)), privacy: TemporaryValue }, "mempool_p2p_config.network_config.chain_id": SerializedParam { description: "The chain to follow. For more details see https://docs.starknet.io/documentation/architecture_and_concepts/Blocks/transactions/#chain-id.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "mempool_p2p_config.network_config.discovery_config.bootstrap_dial_retry_config.base_delay_millis": SerializedParam { description: "The base delay in milliseconds for the exponential backoff strategy.", content: DefaultValue(Number(2)), privacy: Public }, "mempool_p2p_config.network_config.discovery_config.bootstrap_dial_retry_config.factor": SerializedParam { description: "The factor for the exponential backoff strategy.", content: DefaultValue(Number(5)), privacy: Public }, "mempool_p2p_config.network_config.discovery_config.bootstrap_dial_retry_config.max_delay_seconds": SerializedParam { description: "The maximum delay in seconds for the exponential backoff strategy.", content: DefaultValue(Number(5)), privacy: Public }, "mempool_p2p_config.network_config.discovery_config.heartbeat_interval": SerializedParam { description: "The interval between each discovery (Kademlia) query in milliseconds.", content: DefaultValue(Number(100)), privacy: Public }, "mempool_p2p_config.network_config.idle_connection_timeout": SerializedParam { description: "Amount of time in seconds that a connection with no active sessions will stay alive.", content: DefaultValue(Number(120)), privacy: Public }, "mempool_p2p_config.network_config.peer_manager_config.malicious_timeout_seconds": SerializedParam { description: "The duration in seconds a peer is blacklisted after being marked as malicious.", content: DefaultValue(Number(1)), privacy: Public }, "mempool_p2p_config.network_config.peer_manager_config.unstable_timeout_millis": SerializedParam { description: "The duration in milliseconds a peer blacklisted after being reported as unstable.", content: DefaultValue(Number(1000)), privacy: Public }, "mempool_p2p_config.network_config.port": SerializedParam { description: "The port that the node listens on for incoming tcp connections.", content: DefaultValue(Number(55566)), privacy: Public }, "mempool_p2p_config.network_config.secret_key": SerializedParam { description: "The secret key used for building the peer id. If it's an empty string a random one will be used.", content: DefaultValue(String("")), privacy: Private }, "mempool_p2p_config.network_config.session_timeout": SerializedParam { description: "Maximal time in seconds that each session can take before failing on timeout.", content: DefaultValue(Number(120)), privacy: Public }, "monitoring_endpoint_config.collect_metrics": SerializedParam { description: "If true, collect and return metrics in the monitoring endpoint.", content: DefaultValue(Bool(true)), privacy: Public }, "monitoring_endpoint_config.ip": SerializedParam { description: "The monitoring endpoint ip address.", content: DefaultValue(String("0.0.0.0")), privacy: Public }, "monitoring_endpoint_config.port": SerializedParam { description: "The monitoring endpoint port.", content: DefaultValue(Number(55121)), privacy: Public }, "state_sync_config.central_sync_client_config.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(true)), privacy: TemporaryValue }, "state_sync_config.central_sync_client_config.central_source_config.class_cache_size": SerializedParam { description: "Size of class cache, must be a positive integer.", content: DefaultValue(Number(100)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.concurrent_requests": SerializedParam { description: "Maximum number of concurrent requests to Starknet feeder-gateway for getting a type of data (for example, blocks).", content: DefaultValue(Number(10)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.http_headers": SerializedParam { description: "'k1:v1 k2:v2 ...' headers for SN-client.", content: DefaultValue(String("")), privacy: Private }, "state_sync_config.central_sync_client_config.central_source_config.max_classes_to_download": SerializedParam { description: "Maximum number of classes to download at a given time.", content: DefaultValue(Number(20)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.max_state_updates_to_download": SerializedParam { description: "Maximum number of state updates to download at a given time.", content: DefaultValue(Number(20)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.max_state_updates_to_store_in_memory": SerializedParam { description: "Maximum number of state updates to store in memory at a given time.", content: DefaultValue(Number(20)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.retry_config.max_retries": SerializedParam { description: "Maximum number of retries before the node stops retrying.", content: DefaultValue(Number(10)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.retry_config.retry_base_millis": SerializedParam { description: "Base waiting time after a failed request. After that, the time increases exponentially.", content: DefaultValue(Number(30)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.retry_config.retry_max_delay_millis": SerializedParam { description: "Max waiting time after a failed request.", content: DefaultValue(Number(30000)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.starknet_url": SerializedParam { description: "Starknet feeder-gateway URL. It should match chain_id.", content: DefaultValue(String("https://alpha-mainnet.starknet.io/")), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.base_layer_propagation_sleep_duration": SerializedParam { description: "Time in seconds to poll the base layer to get the latest proved block.", content: DefaultValue(Number(10)), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.block_propagation_sleep_duration": SerializedParam { description: "Time in seconds before checking for a new block after the node is synchronized.", content: DefaultValue(Number(2)), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.blocks_max_stream_size": SerializedParam { description: "Max amount of blocks to download in a stream.", content: DefaultValue(Number(1000)), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.collect_pending_data": SerializedParam { description: "Whether to collect data on pending blocks.", content: DefaultValue(Bool(false)), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.recoverable_error_sleep_duration": SerializedParam { description: "Waiting time in seconds before restarting synchronization after a recoverable error.", content: DefaultValue(Number(3)), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.state_updates_max_stream_size": SerializedParam { description: "Max amount of state updates to download in a stream.", content: DefaultValue(Number(1000)), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.verify_blocks": SerializedParam { description: "Whether to verify incoming blocks.", content: DefaultValue(Bool(true)), privacy: Public }, "state_sync_config.network_config.advertised_multiaddr": SerializedParam { description: "The external address other peers see this node. If this is set, the node will not try to find out which addresses it has and will write this address as external instead", content: DefaultValue(String("")), privacy: Public }, "state_sync_config.network_config.advertised_multiaddr.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(true)), privacy: TemporaryValue }, "state_sync_config.network_config.bootstrap_peer_multiaddr": SerializedParam { description: "The multiaddress of the peer node. It should include the peer's id. For more info: https://docs.libp2p.io/concepts/fundamentals/peers/", content: DefaultValue(String("/ip4/127.0.0.1/tcp/55557/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5")), privacy: Public }, "state_sync_config.network_config.bootstrap_peer_multiaddr.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(false)), privacy: TemporaryValue }, "state_sync_config.network_config.chain_id": SerializedParam { description: "The chain to follow. For more details see https://docs.starknet.io/documentation/architecture_and_concepts/Blocks/transactions/#chain-id.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "state_sync_config.network_config.discovery_config.bootstrap_dial_retry_config.base_delay_millis": SerializedParam { description: "The base delay in milliseconds for the exponential backoff strategy.", content: DefaultValue(Number(2)), privacy: Public }, "state_sync_config.network_config.discovery_config.bootstrap_dial_retry_config.factor": SerializedParam { description: "The factor for the exponential backoff strategy.", content: DefaultValue(Number(5)), privacy: Public }, "state_sync_config.network_config.discovery_config.bootstrap_dial_retry_config.max_delay_seconds": SerializedParam { description: "The maximum delay in seconds for the exponential backoff strategy.", content: DefaultValue(Number(5)), privacy: Public }, "state_sync_config.network_config.discovery_config.heartbeat_interval": SerializedParam { description: "The interval between each discovery (Kademlia) query in milliseconds.", content: DefaultValue(Number(100)), privacy: Public }, "state_sync_config.network_config.idle_connection_timeout": SerializedParam { description: "Amount of time in seconds that a connection with no active sessions will stay alive.", content: DefaultValue(Number(120)), privacy: Public }, "state_sync_config.network_config.peer_manager_config.malicious_timeout_seconds": SerializedParam { description: "The duration in seconds a peer is blacklisted after being marked as malicious.", content: DefaultValue(Number(1)), privacy: Public }, "state_sync_config.network_config.peer_manager_config.unstable_timeout_millis": SerializedParam { description: "The duration in milliseconds a peer blacklisted after being reported as unstable.", content: DefaultValue(Number(1000)), privacy: Public }, "state_sync_config.network_config.port": SerializedParam { description: "The port that the node listens on for incoming tcp connections.", content: DefaultValue(Number(55559)), privacy: Public }, "state_sync_config.network_config.secret_key": SerializedParam { description: "The secret key used for building the peer id. If it's an empty string a random one will be used.", content: DefaultValue(String("")), privacy: Private }, "state_sync_config.network_config.session_timeout": SerializedParam { description: "Maximal time in seconds that each session can take before failing on timeout.", content: DefaultValue(Number(120)), privacy: Public }, "state_sync_config.p2p_sync_client_config.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(false)), privacy: TemporaryValue }, "state_sync_config.p2p_sync_client_config.buffer_size": SerializedParam { description: "Size of the buffer for read from the storage and for incoming responses.", content: DefaultValue(Number(100000)), privacy: Public }, "state_sync_config.p2p_sync_client_config.num_block_classes_per_query": SerializedParam { description: "The maximum amount of block's classes to ask from peers in each iteration.", content: DefaultValue(Number(100)), privacy: Public }, "state_sync_config.p2p_sync_client_config.num_block_state_diffs_per_query": SerializedParam { description: "The maximum amount of block's state diffs to ask from peers in each iteration.", content: DefaultValue(Number(10onfig.growth_step": 67108864,
[34mNode id 3 part 1:[0m   "state_sync_config.storage_config.db_config.max_size": 34359738368,
[34mNode id 3 part 1:[0m   "state_sync_config.storage_config.db_config.min_size": 1048576,
[34mNode id 3 part 1:[0m   "state_sync_config.storage_config.db_config.path_prefix": "/tmp/.tmpLkBlZ4",
[34mNode id 3 part 1:[0m   "state_sync_config.storage_config.mmap_file_config.growth_step": 1048576,
[34mNode id 3 part 1:[0m   "state_sync_config.storage_config.mmap_file_config.max_object_size": 65536,
[34mNode id 3 part 1:[0m   "state_sync_config.storage_config.mmap_file_config.max_size": 16777216,
[34mNode id 3 part 1:[0m   "state_sync_config.storage_config.scope": "FullArchive",
[34mNode id 3 part 1:[0m   "strk_fee_token_address": "0x1002",
[34mNode id 3 part 1:[0m   "validator_id": "0x67",
[34mNode id 3 part 1:[0m   "versioned_constants_overrides.invoke_tx_max_n_steps": 10000000,
[34mNode id 3 part 1:[0m   "versioned_constants_overrides.max_n_events": 1000,
[34mNode id 3 part 1:[0m   "versioned_constants_overrides.max_recursion_depth": 50,
[34mNode id 3 part 1:[0m   "versioned_constants_overrides.validate_max_n_steps": 1000000
[34mNode id 3 part 1:[0m }
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.180429Z[0m [32m INFO[0m [2mstarknet_sequencer_node::utils[0m[2m:[0m Finished loading configuration.
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.180644Z[0m [32m INFO[0m [2mstarknet_sequencer_node::utils[0m[2m:[0m Finished validating configuration.
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.180661Z[0m [32m INFO[0m [2mstarknet_sequencer_node[0m[2m:[0m Config dump:
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.183740Z[0m [32m INFO[0m [2mstarknet_sequencer_node[0m[2m:[0m {"base_layer_config.node_url": SerializedParam { description: "A required param! Ethereum node URL. A schema to match to Infura node: https://mainnet.infura.io/v3/<your_api_key>, but any other node can be used.", content: ParamType(String), privacy: Private }, "base_layer_config.starknet_contract_address": SerializedParam { description: "Starknet contract address in ethereum.", content: DefaultValue(String("0xc662c410C0ECf747543f5bA90660f6ABeBD9C8c4")), privacy: Public }, "batcher_config.block_builder_config.bouncer_config.block_max_capacity.l1_gas": SerializedParam { description: "An upper bound on the total l1_gas used in a block.", content: DefaultValue(Number(2500000)), privacy: Public }, "batcher_config.block_builder_config.bouncer_config.block_max_capacity.message_segment_length": SerializedParam { description: "An upper bound on the message segment length in a block.", content: DefaultValue(Number(3700)), privacy: Public }, "batcher_config.block_builder_config.bouncer_config.block_max_capacity.n_events": SerializedParam { description: "An upper bound on the total number of events generated in a block.", content: DefaultValue(Number(5000)), privacy: Public }, "batcher_config.block_builder_config.bouncer_config.block_max_capacity.sierra_gas": SerializedParam { description: "An upper bound on the total sierra_gas used in a block.", content: DefaultValue(Number(17000000)), privacy: Public }, "batcher_config.block_builder_config.bouncer_config.block_max_capacity.state_diff_size": SerializedParam { description: "An upper bound on the total state diff size in a block.", content: DefaultValue(Number(4000)), privacy: Public }, "batcher_config.block_builder_config.chain_info.chain_id": SerializedParam { description: "The chain ID of the StarkNet chain.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "batcher_config.block_builder_config.chain_info.fee_token_addresses.eth_fee_token_address": SerializedParam { description: "Address of the ETH fee token.", content: DefaultValue(String("0x1001")), privacy: Public }, "batcher_config.block_builder_config.chain_info.fee_token_addresses.strk_fee_token_address": SerializedParam { description: "Address of the STRK fee token.", content: DefaultValue(String("0x1002")), privacy: Public }, "batcher_config.block_builder_config.execute_config.concurrency_config.chunk_size": SerializedParam { description: "The size of the transaction chunk executed in parallel.", content: DefaultValue(Number(64)), privacy: Public }, "batcher_config.block_builder_config.execute_config.concurrency_config.enabled": SerializedParam { description: "Enables concurrency of transaction execution.", content: DefaultValue(Bool(true)), privacy: Public }, "batcher_config.block_builder_config.execute_config.concurrency_config.n_workers": SerializedParam { description: "Number of parallel transaction execution workers.", content: DefaultValue(Number(4)), privacy: Public }, "batcher_config.block_builder_config.execute_config.stack_size": SerializedParam { description: "The thread stack size (proportional to the maximal gas of a transaction).", content: DefaultValue(Number(62914560)), privacy: Public }, "batcher_config.block_builder_config.tx_chunk_size": SerializedParam { description: "The size of the transaction chunk.", content: DefaultValue(Number(100)), privacy: Public }, "batcher_config.block_builder_config.versioned_constants_overrides.invoke_tx_max_n_steps": SerializedParam { description: "Maximum number of steps the invoke function is allowed to run.", content: DefaultValue(Number(10000000)), privacy: Public }, "batcher_config.block_builder_config.versioned_constants_overrides.max_n_events": SerializedParam { description: "Maximum number of events that can be emitted from the transation.", content: DefaultValue(Number(1000)), privacy: Public }, "batcher_config.block_builder_config.versioned_constants_overrides.max_recursion_depth": SerializedParam { description: "Maximum recursion depth for nested calls during blockifier validation.", content: DefaultValue(Number(50)), privacy: Public }, "batcher_config.block_builder_config.versioned_constants_overrides.validate_max_n_steps": SerializedParam { description: "Maximum number of steps the validation function is allowed to run.", content: DefaultValue(Number(1000000)), privacy: Public }, "batcher_config.contract_class_manager_config.cairo_native_run_config.channel_size": SerializedParam { description: "The size of the compilation request channel.", content: DefaultValue(Number(2000)), privacy: Public }, "batcher_config.contract_class_manager_config.cairo_native_run_config.run_cairo_native": SerializedParam { description: "Enables Cairo native execution.", content: DefaultValue(Bool(false)), privacy: Public }, "batcher_config.contract_class_manager_config.cairo_native_run_config.wait_on_native_compilation": SerializedParam { description: "Block Sequencer main program while compiling sierra, for testing.", content: DefaultValue(Bool(false)), privacy: Public }, "batcher_config.contract_class_manager_config.contract_cache_size": SerializedParam { description: "The size of the global contract cache.", content: DefaultValue(Number(600)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.max_casm_bytecode_size": SerializedParam { description: "Limitation of compiled casm bytecode size.", content: DefaultValue(Number(81920)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.max_cpu_time": SerializedParam { description: "Limitation of compilation cpu time (seconds).", content: DefaultValue(Number(20)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.max_memory_usage": SerializedParam { description: "Limitation of compilation process's virtual memory (bytes).", content: DefaultValue(Number(5368709120)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.max_native_bytecode_size": SerializedParam { description: "Limitation of compiled native bytecode size.", content: DefaultValue(Number(15728640)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.optimization_level": SerializedParam { description: "The level of optimization to apply during compilation.", content: DefaultValue(Number(2)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.panic_on_compilation_failure": SerializedParam { description: "Whether to panic on compilation failure.", content: DefaultValue(Bool(false)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.sierra_to_native_compiler_path": SerializedParam { description: "The path to the Sierra-to-Native compiler binary.", content: DefaultValue(String("")), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.sierra_to_native_compiler_path.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(true)), privacy: TemporaryValue }, "batcher_config.input_stream_content_buffer_size": SerializedParam { description: "Sets the buffer size for the input transaction channel. Adding more transactions beyond this limit will block until space is available.", content: DefaultValue(Number(400)), privacy: Public }, "batcher_config.max_l1_handler_txs_per_block_proposal": SerializedParam { description: "The maximum number of L1 handler transactions to include in a block proposal.", content: DefaultValue(Number(3)), privacy: Public }, "batcher_config.outstream_content_buffer_size": SerializedParam { description: "The maximum number of items to include in a single get_proposal_content response.", content: DefaultValue(Number(100)), privacy: Public }, "batcher_config.storage.db_config.chain_id": SerializedParam { description: "The chain to follow. For more details see https://docs.starknet.io/documentation/architecture_and_concepts/Blocks/transactions/#chain-id.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "batcher_config.storage.db_config.enforce_file_exists": SerializedParam { description: "Whether to enforce that the path exists. If true, `open_env` fails when the mdbx.dat file does not exist.", content: DefaultValue(Bool(false)), privacy: Public }, "batcher_config.storage.db_config.growth_step": SerializedParam { description: "The growth step in bytes, must be greater than zero to allow the database to grow.", content: DefaultValue(Number(67108864)), privacy: Public }, "batcher_config.storage.db_config.max_size": SerializedParam { description: "The maximum size of the node's storage in bytes.", content: DefaultValue(Number(34359738368)), privacy: Public }, "batcher_config.storage.db_config.min_size": SerializedParam { description: "The minimum size of the node's storage in bytes.", content: DefaultValue(Number(1048576)), privacy: Public }, "batcher_config.storage.db_config.path_prefix": SerializedParam { description: "Prefix of the path of the node's storage directory, the storage file path will be <path_prefix>/<chain_id>. The path is not created automatically.", content: DefaultValue(String("/tmp/.tmpUbQi81")), privacy: Public }, "batcher_config.storage.mmap_file_config.growth_step": SerializedParam { description: "The growth step in bytes, must be greater than max_object_size.", content: DefaultValue(Number(1048576)), privacy: Public }, "batcher_config.storage.mmap_file_config.max_object_size": SerializedParam { description: "The maximum size of a single object in the file in bytes", content: DefaultValue(Number(65536)), privacy: Public }, "batcher_config.storage.mmap_file_config.max_size": SerializedParam { description: "The maximum size of a memory mapped file in bytes. Must be greater than growth_step.", content: DefaultValue(Number(16777216)), privacy: Public }, "batcher_config.storage.scope": SerializedParam { description: "The categories of data saved in storage.", content: DefaultValue(String("StateOnly")), privacy: Public }, "class_manager_config.class_manager_config.cached_class_storage_config.class_cache_size": SerializedParam { description: "Contract classes cache size.", content: DefaultValue(Number(100)), privacy: Public }, "class_manager_config.class_manager_config.cached_class_storage_config.deprecated_class_cache_size": SerializedParam { description: "Deprecated contract classes cache size.", content: DefaultValue(Number(100)), privacy: Public }, "class_manager_config.class_storage_config.class_hash_storage_config.enforce_file_exists": SerializedParam { description: "Whether to enforce that the above path exists.", content: DefaultValue(Bool(false)), privacy: Public }, "class_manager_config.class_storage_config.class_hash_storage_config.max_size": SerializedParam { description: "The maximum size of the class hash storage in bytes.", content: DefaultValue(Number(1048576)), privacy: Public }, "class_manager_config.class_storage_config.class_hash_storage_config.path_prefix": SerializedParam { description: "Prefix of the path of class hash storage directory.", content: DefaultValue(String("/tmp/.tmpMtMEz2")), privacy: Public }, "class_manager_config.class_storage_config.persistent_root": SerializedParam { description: "Path to the node's class storage directory.", content: DefaultValue(String("/tmp/.tmpICrUev")), privacy: Public }, "compiler_config.max_casm_bytecode_size": SerializedParam { description: "Limitation of compiled casm bytecode size.", content: DefaultValue(Number(81920)), privacy: Public }, "compiler_config.max_cpu_time": SerializedParam { description: "Limitation of compilation cpu time (seconds).", content: DefaultValue(Number(20)), privacy: Public }, "compiler_config.max_memory_usage": SerializedParam { description: "Limitation of compilation process's virtual memory (bytes).", content: DefaultValue(Number(5368709120)), privacy: Public }, "compiler_config.max_native_bytecode_size": SerializedParam { description: "Limitation of compiled native bytecode size.", content: DefaultValue(Number(15728640)), privacy: Public }, "compiler_config.optimization_level": SerializedParam { description: "The level of optimization to apply during compilation.", content: DefaultValue(Number(2)), privacy: Public }, "compiler_config.panic_on_compilation_failure": SerializedParam { description: "Whether to panic on compilation failure.", content: DefaultValue(Bool(false)), privacy: Public }, "compiler_config.sierra_to_native_compiler_path": SerializedParam { description: "The path to the Sierra-to-Native compiler binary.", content: DefaultValue(String("")), privacy: Public }, "compiler_config.sierra_to_native_compiler_path.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(true)), privacy: TemporaryValue }, "components.batcher.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("LocalExecutionWithRemoteDisabled")), privacy: Public }, "components.batcher.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("0.0.0.0")), privacy: Public }, "components.batcher.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.batcher.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.batcher.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(0)), privacy: Public }, "components.batcher.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.batcher.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.batcher.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.batcher.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("localhost")), privacy: Public }, "components.class_manager.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("Remote")), privacy: Public }, "components.class_manager.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("127.0.0.1")), privacy: Public }, "components.class_manager.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.class_manager.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.class_manager.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(55544)), privacy: Public }, "components.class_manager.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.class_manager.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.class_manager.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.class_manager.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("127.0.0.1")), privacy: Public }, "components.consensus_manager.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("Enabled")), privacy: Public }, "components.gateway.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("Remote")), privacy: Public }, "components.gateway.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("127.0.0.1")), privacy: Public }, "components.gateway.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.gateway.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.gateway.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(55540)), privacy: Public }, "components.gateway.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.gateway.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.gateway.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.gateway.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("127.0.0.1")), privacy: Public }, "components.http_server.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("Disabled")), privacy: Public }, "components.l1_provider.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("LocalExecutionWithRemoteDisabled")), privacy: Public }, "components.l1_provider.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("0.0.0.0")), privacy: Public }, "components.l1_provider.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.l1_provider.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.l1_provider.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(0)), privacy: Public }, "components.l1_provider.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.l1_provider.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.l1_provider.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.l1_provider.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("localhost")), privacy: Public }, "components.l1_scraper.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("Enabled")), privacy: Public }, "components.mempool.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("Remote")), privacy: Public }, "components.mempool.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("127.0.0.1")), privacy: Public }, "components.mempool.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.mempool.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.mempool.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(55541)), privacy: Public }, "components.mempool.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.mempool.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.mempool.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.mempool.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("127.0.0.1")), privacy: Public }, "components.mempool_p2p.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("Remote")), privacy: Public }, "components.mempool_p2p.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("127.0.0.1")), privacy: Public }, "components.mempool_p2p.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.mempool_p2p.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.mempool_p2p.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(55542)), privacy: Public }, "components.mempool_p2p.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.mempool_p2p.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.mempool_p2p.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.mempool_p2p.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("127.0.0.1")), privacy: Public }, "components.monitoring_endpoint.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("Enabled")), privacy: Public }, "components.sierra_compiler.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("LocalExecutionWithRemoteDisabled")), privacy: Public }, "components.sierra_compiler.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("0.0.0.0")), privacy: Public }, "components.sierra_compiler.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.sierra_compiler.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.sierra_compiler.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(0)), privacy: Public }, "components.sierra_compiler.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.sierra_compiler.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.sierra_compiler.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.sierra_compiler.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("localhost")), privacy: Public }, "components.state_sync.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("LocalExecutionWithRemoteEnabled")), privacy: Public }, "components.state_sync.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("127.0.0.1")), privacy: Public }, "components.state_sync.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.state_sync.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.state_sync.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(55543)), privacy: Public }, "components.state_sync.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.state_sync.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.state_sync.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.state_sync.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("127.0.0.1")), privacy: Public }, "consensus_manager_config.broadcast_buffer_size": SerializedParam { description: "The buffer size for the broadcast channel.", content: DefaultValue(Number(10000)), privacy: Public }, "consensus_manager_config.cende_config.recorder_url": SerializedParam { description: "The URL of the Pythonic cende_recorder", content: DefaultValue(String("http://127.0.0.1:55240/")), privacy: Private }, "consensus_manager_config.cende_config.skip_write_height": SerializedParam { description: "A height that the consensus can skip writing to Aerospike. Needed for booting up (no previous height blob to write) or to handle extreme cases (all the nodes failed).", content: DefaultValue(Number(1)), privacy: Private }, "consensus_manager_config.cende_config.skip_write_height.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(false)), privacy: TemporaryValue }, "consensus_manager_config.consensus_config.future_height_limit": SerializedParam { description: "How many heights in the future should we cache.", content: DefaultValue(Number(10)), privacy: Public }, "consensus_manager_config.consensus_config.future_height_round_limit": SerializedParam { description: "How many rounds should we cache for future heights.", content: DefaultValue(Number(1)), privacy: Public }, "consensus_manager_config.consensus_config.future_round_limit": SerializedParam { description: "How many rounds in the future (for current height) should we cache.", content: DefaultValue(Number(10)), privacy: Public }, "consensus_manager_config.consensus_config.startup_delay": SerializedParam { description: "Delay (seconds) before starting consensus to give time for network peering.", content: DefaultValue(Number(15)), privacy: Public }, "consensus_manager_config.consensus_config.sync_retry_interval": SerializedParam { description: "The duration (seconds) between sync attempts.", content: DefaultValue(Number(1.0)), privacy: Public }, "consensus_manager_config.consensus_config.timeouts.precommit_timeout": SerializedParam { description: "The timeout (seconds) for a precommit.", content: DefaultValue(Number(3.0)), privacy: Public }, "consensus_manager_config.consensus_config.timeouts.prevote_timeout": SerializedParam { description: "The timeout (seconds) for a prevote.", content: DefaultValue(Number(3.0)), privacy: Public }, "consensus_manager_config.consensus_config.timeouts.proposal_timeout": SerializedParam { description: "The timeout (seconds) for a proposal.", content: DefaultValue(Number(9.0)), privacy: Public }, "consensus_manager_config.consensus_config.validator_id": SerializedParam { description: "The validator id of the node.", content: DefaultValue(String("0x67")), privacy: Public }, "consensus_manager_config.context_config.block_timestamp_window": SerializedParam { description: "Maximum allowed deviation (seconds) of a proposed block's timestamp from the current time.", content: DefaultValue(Number(1)), privacy: Public }, "consensus_manager_config.context_config.chain_id": SerializedParam { description: "The chain id of the Starknet chain.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "consensus_manager_config.context_config.l1_da_mode": SerializedParam { description: "The data availability mode, true: Blob, false: Calldata.", content: DefaultValue(Bool(true)), privacy: Public }, "consensus_manager_config.context_config.num_validators": SerializedParam { description: "The number of validators.", content: DefaultValue(Number(5)), privacy: Public }, "consensus_manager_config.context_config.proposal_buffer_size": SerializedParam { description: "The buffer size for streaming outbound proposals.", content: DefaultValue(Number(100)), privacy: Public }, "consensus_manager_config.immediate_active_height": SerializedParam { description: "The height at which the node may actively participate in consensus.", content: DefaultValue(Number(1)), privacy: Public }, "consensus_manager_config.network_config.advertised_multiaddr": SerializedParam { description: "The external address other peers see this node. If this is set, the node will not try to find out which addresses it has and will write this address as external instead", content: DefaultValue(String("")), privacy: Public }, "consensus_manager_config.network_config.advertised_multiaddr.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(true)), privacy: TemporaryValue }, "consensus_manager_config.network_config.bootstrap_peer_multiaddr": SerializedParam { description: "The multiaddress of the peer node. It should include the peer's id. For more info: https://docs.libp2p.io/concepts/fundamentals/peers/", content: DefaultValue(String("/ip4/127.0.0.1/tcp/55550/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5")), privacy: Public }, "consensus_manager_config.network_config.bootstrap_peer_multiaddr.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(false)), privacy: TemporaryValue }, "consensus_manager_config.network_config.chain_id": SerializedParam { description: "The chain to follow. For more details see https://docs.starknet.io/documentation/architecture_and_concepts/Blocks/transactions/#chain-id.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "consensus_manager_config.network_config.discovery_config.bootstrap_dial_retry_config.base_delay_millis": SerializedParam { description: "The base delay in milliseconds for the exponential backoff strategy.", content: DefaultValue(Number(2)), privacy: Public }, "consensus_manager_config.network_config.discovery_config.bootstrap_dial_retry_config.factor": SerializedParam { description: "The factor for the exponential backoff strategy.", content: DefaultValue(Number(5)), privacy: Public }, "consensus_manager_config.network_config.discovery_config.bootstrap_dial_retry_config.max_delay_seconds": SerializedParam { description: "The maximum delay in seconds for the exponential backoff strategy.", content: DefaultValue(Number(5)), privacy: Public }, "consensus_manager_config.network_config.discovery_config.heartbeat_interval": SerializedParam { description: "The interval between each discovery (Kademlia) query in milliseconds.", content: DefaultValue(Number(100)), privacy: Public }, "consensus_manager_config.network_config.idle_connection_timeout": SerializedParam { description: "Amount of time in seconds that a connection with no active sessions will stay alive.", content: DefaultValue(Number(120)), privacy: Public }, "consensus_manager_config.network_config.peer_manager_config.malicious_timeout_seconds": SerializedParam { description: "The duration in seconds a peer is blacklisted after being marked as malicious.", content: DefaultValue(Number(1)), privacy: Public }, "consensus_manager_config.network_config.peer_manager_config.unstable_timeout_millis": SerializedParam { description: "The duration in milliseconds a peer blacklisted after being reported as unstable.", content: DefaultValue(Number(1000)), privacy: Public }, "consensus_manager_config.network_config.port": SerializedParam { description: "The port that the node listens on for incoming tcp connections.", content: DefaultValue(Number(55554)), privacy: Public }, "consensus_manager_config.network_config.secret_key": SerializedParam { description: "The secret key used for building the peer id. If it's an empty string a random one will be used.", content: DefaultValue(String("")), privacy: Private }, "consensus_manager_config.network_config.session_timeout": SerializedParam { description: "Maximal time in seconds that each session can take before failing on timeout.", content: DefaultValue(Number(120)), privacy: Public }, "consensus_manager_config.proposals_topic": SerializedParam { description: "The topic for consensus proposals.", content: DefaultValue(String("consensus_proposals")), privacy: Public }, "consensus_manager_config.revert_config.revert_up_to_and_including": SerializedParam { description: "The component will revert blocks up to this block number (including).", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "consensus_manager_config.revert_config.should_revert": SerializedParam { description: "If set true, the component would revert blocks and do nothing else.", content: DefaultValue(Bool(false)), privacy: Public }, "consensus_manager_config.votes_topic": SerializedParam { description: "The topic for consensus votes.", content: DefaultValue(String("consensus_votes")), privacy: Public }, "gateway_config.chain_info.chain_id": SerializedParam { description: "The chain ID of the StarkNet chain.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "gateway_config.chain_info.fee_token_addresses.eth_fee_token_address": SerializedParam { description: "Address of the ETH fee token.", content: DefaultValue(String("0x1001")), privacy: Public }, "gateway_config.chain_info.fee_token_addresses.strk_fee_token_address": SerializedParam { description: "Address of the STRK fee token.", content: DefaultValue(String("0x1002")), privacy: Public }, "gateway_config.stateful_tx_validator_config.max_nonce_for_validation_skip": SerializedParam { description: "Maximum nonce for which the validation is skipped.", content: DefaultValue(String("0x1")), privacy: Public }, "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.invoke_tx_max_n_steps": SerializedParam { description: "Maximum number of steps the invoke function is allowed to run.", content: DefaultValue(Number(10000000)), privacy: Public }, "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.max_n_events": SerializedParam { description: "Maximum number of events that can be emitted from the transation.", content: DefaultValue(Number(1000)), privacy: Public }, "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.max_recursion_depth": SerializedParam { description: "Maximum recursion depth for nested calls during blockifier validation.", content: DefaultValue(Number(50)), privacy: Public }, "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.validate_max_n_steps": SerializedParam { description: "Maximum number of steps the validation function is allowed to run.", content: DefaultValue(Number(1000000)), privacy: Public }, "gateway_config.stateless_tx_validator_config.max_calldata_length": SerializedParam { description: "Limitation of calldata length.", content: DefaultValue(Number(10)), privacy: Public }, "gateway_config.stateless_tx_validator_config.max_contract_class_object_size": SerializedParam { description: "Limitation of contract class object size.", content: DefaultValue(Number(4089446)), privacy: Public }, "gateway_config.stateless_tx_validator_config.max_sierra_version.major": SerializedParam { description: "The major version of the configuration.", content: DefaultValue(Number(1)), privacy: Public }, "gateway_config.stateless_tx_validator_config.max_sierra_version.minor": SerializedParam { description: "The minor version of the configuration.", content: DefaultValue(Number(5)), privacy: Public }, "gateway_config.stateless_tx_validator_config.max_sierra_version.patch": SerializedParam { description: "The patch version of the configuration.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "gateway_config.stateless_tx_validator_config.max_signature_length": SerializedParam { description: "Limitation of signature length.", content: DefaultValue(Number(2)), privacy: Public }, "gateway_config.stateless_tx_validator_config.min_sierra_version.major": SerializedParam { description: "The major version of the configuration.", content: DefaultValue(Number(1)), privacy: Public }, "gateway_config.stateless_tx_validator_config.min_sierra_version.minor": SerializedParam { description: "The minor version of the configuration.", content: DefaultValue(Number(1)), privacy: Public }, "gateway_config.stateless_tx_validator_config.min_sierra_version.patch": SerializedParam { description: "The patch version of the configuration.", content: DefaultValue(Number(0)), privacy: Public }, "gateway_config.stateless_tx_validator_config.validate_non_zero_l1_data_gas_fee": SerializedParam { description: "If true, validates that a transaction has non-zero L1 Data (Blob) resource bounds.", content: DefaultValue(Bool(false)), privacy: Public }, "gateway_config.stateless_tx_validator_config.validate_non_zero_l1_gas_fee": SerializedParam { description: "If true, validates that a transaction has non-zero L1 resource bounds.", content: DefaultValue(Bool(true)), privacy: Public }, "gateway_config.stateless_tx_validator_config.validate_non_zero_l2_gas_fee": SerializedParam { description: "If true, validates that a transaction has non-zero L2 resource bounds.", content: DefaultValue(Bool(false)), privacy: Public }, "http_server_config.ip": SerializedParam { description: "The http server ip.", content: DefaultValue(String("127.0.0.1")), privacy: Public }, "http_server_config.port": SerializedParam { description: "The http server port.", content: DefaultValue(Number(55242)), privacy: Public }, "l1_provider_config.bootstrap_catch_up_height": SerializedParam { description: "Height at which the provider should catch up to the bootstrapper.", content: DefaultValue(Number(0)), privacy: Public }, "l1_provider_config.provider_startup_height": SerializedParam { description: "Height at which the provider should start.", content: DefaultValue(Number(1)), privacy: Public }, "l1_provider_config.startup_sync_sleep_retry_interval": SerializedParam { description: "Interval in seconds between each retry of syncing with L2 during startup.", content: DefaultValue(Number(0.0)), privacy: Public }, "l1_scraper_config.chain_id": SerializedParam { description: "The chain to follow. For more details see https://docs.starknet.io/documentation/architecture_and_concepts/Blocks/transactions/#chain-id.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "l1_scraper_config.finality": SerializedParam { description: "Number of blocks to wait for finality", content: DefaultValue(Number(0)), privacy: Public }, "l1_scraper_config.polling_interval": SerializedParam { description: "Interval in Seconds between each scraping attempt of L1.", content: DefaultValue(Number(1)), privacy: Public }, "l1_scraper_config.startup_rewind_time": SerializedParam { description: "Duration to rewind from latest L1 block when starting scraping.", content: DefaultValue(Number(0)), privacy: Public }, "mempool_config.enable_fee_escalation": SerializedParam { description: "If true, transactions can be replaced with higher fee transactions.", content: DefaultValue(Bool(true)), privacy: Public }, "mempool_config.fee_escalation_percentage": SerializedParam { description: "Percentage increase for tip and max gas price to enable transaction replacement.", content: DefaultValue(Number(10)), privacy: Public }, "mempool_config.transaction_ttl": SerializedParam { description: "Time-to-live for transactions in the mempool, in seconds.", content: DefaultValue(Number(300)), privacy: Public }, "mempool_p2p_config.network_buffer_size": SerializedParam { description: "Network buffer size.", content: DefaultValue(Number(10000)), privacy: Public }, "mempool_p2p_config.network_config.advertised_multiaddr": SerializedParam { description: "The external address other peers see this node. If this is set, the node will not try to find out which addresses it has and will write this address as external instead", content: DefaultValue(String("")), privacy: Public }, "mempool_p2p_config.network_config.advertised_multiaddr.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(true)), privacy: TemporaryValue }, "mempool_p2p_config.network_config.bootstrap_peer_multiaddr": SerializedParam { description: "The multiaddress of the peer node. It should include the peer's id. For more info: https://docs.libp2p.io/concepts/fundamentals/peers/", content: DefaultValue(String("/ip4/127.0.0.1/tcp/55564/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5")), privacy: Public }, "mempool_p2p_config.network_config.bootstrap_peer_multiaddr.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(false)), privacy: TemporaryValue }, "mempool_p2p_config.network_config.chain_id": SerializedParam { description: "The chain to follow. For more details see https://docs.starknet.io/documentation/architecture_and_concepts/Blocks/transactions/#chain-id.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "mempool_p2p_config.network_config.discovery_config.bootstrap_dial_retry_config.base_delay_millis": SerializedParam { description: "The base delay in milliseconds for the exponential backoff strategy.", content: DefaultValue(Number(2)), privacy: Public }, "mempool_p2p_config.network_config.discovery_config.bootstrap_dial_retry_config.factor": SerializedParam { description: "The factor for the exponential backoff strategy.", content: DefaultValue(Number(5)), privacy: Public }, "mempool_p2p_config.network_config.discovery_config.bootstrap_dial_retry_config.max_delay_seconds": SerializedParam { description: "The maximum delay in seconds for the exponential backoff strategy.", content: DefaultValue(Number(5)), privacy: Public }, "mempool_p2p_config.network_config.discovery_config.heartbeat_interval": SerializedParam { description: "The interval between each discovery (Kademlia) query in milliseconds.", content: DefaultValue(Number(100)), privacy: Public }, "mempool_p2p_config.network_config.idle_connection_timeout": SerializedParam { description: "Amount of time in seconds that a connection with no active sessions will stay alive.", content: DefaultValue(Number(120)), privacy: Public }, "mempool_p2p_config.network_config.peer_manager_config.malicious_timeout_seconds": SerializedParam { description: "The duration in seconds a peer is blacklisted after being marked as malicious.", content: DefaultValue(Number(1)), privacy: Public }, "mempool_p2p_config.network_config.peer_manager_config.unstable_timeout_millis": SerializedParam { description: "The duration in milliseconds a peer blacklisted after being reported as unstable.", content: DefaultValue(Number(1000)), privacy: Public }, "mempool_p2p_config.network_config.port": SerializedParam { description: "The port that the node listens on for incoming tcp connections.", content: DefaultValue(Number(55568)), privacy: Public }, "mempool_p2p_config.network_config.secret_key": SerializedParam { description: "The secret key used for building the peer id. If it's an empty string a random one will be used.", content: DefaultValue(String("")), privacy: Private }, "mempool_p2p_config.network_config.session_timeout": SerializedParam { description: "Maximal time in seconds that each session can take before failing on timeout.", content: DefaultValue(Number(120)), privacy: Public }, "monitoring_endpoint_config.collect_metrics": SerializedParam { description: "If true, collect and return metrics in the monitoring endpoint.", content: DefaultValue(Bool(true)), privacy: Public }, "monitoring_endpoint_config.ip": SerializedParam { description: "The monitoring endpoint ip address.", content: DefaultValue(String("0.0.0.0")), privacy: Public }, "monitoring_endpoint_config.port": SerializedParam { description: "The monitoring endpoint port.", content: DefaultValue(Number(55241)), privacy: Public }, "state_sync_config.central_sync_client_config.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(true)), privacy: TemporaryValue }, "state_sync_config.central_sync_client_config.central_source_config.class_cache_size": SerializedParam { description: "Size of class cache, must be a positive integer.", content: DefaultValue(Number(100)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.concurrent_requests": SerializedParam { description: "Maximum number of concurrent requests to Starknet feeder-gateway for getting a type of data (for example, blocks).", content: DefaultValue(Number(10)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.http_headers": SerializedParam { description: "'k1:v1 k2:v2 ...' headers for SN-client.", content: DefaultValue(String("")), privacy: Private }, "state_sync_config.central_sync_client_config.central_source_config.max_classes_to_download": SerializedParam { description: "Maximum number of classes to download at a given time.", content: DefaultValue(Number(20)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.max_state_updates_to_download": SerializedParam { description: "Maximum number of state updates to download at a given time.", content: DefaultValue(Number(20)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.max_state_updates_to_store_in_memory": SerializedParam { description: "Maximum number of state updates to store in memory at a given time.", content: DefaultValue(Number(20)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.retry_config.max_retries": SerializedParam { description: "Maximum number of retries before the node stops retrying.", content: DefaultValue(Number(10)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.retry_config.retry_base_millis": SerializedParam { description: "Base waiting time after a failed request. After that, the time increases exponentially.", content: DefaultValue(Number(30)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.retry_config.retry_max_delay_millis": SerializedParam { description: "Max waiting time after a failed request.", content: DefaultValue(Number(30000)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.starknet_url": SerializedParam { description: "Starknet feeder-gateway URL. It should match chain_id.", content: DefaultValue(String("https://alpha-mainnet.starknet.io/")), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.base_layer_propagation_sleep_duration": SerializedParam { description: "Time in seconds to poll the base layer to get the latest proved block.", content: DefaultValue(Number(10)), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.block_propagation_sleep_duration": SerializedParam { description: "Time in seconds before checking for a new block after the node is synchronized.", content: DefaultValue(Number(2)), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.blocks_max_stream_size": SerializedParam { description: "Max amount of blocks to download in a stream.", content: DefaultValue(Number(1000)), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.collect_pending_data": SerializedParam { description: "Whether to collect data on pending blocks.", content: DefaultValue(Bool(false)), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.recoverable_error_sleep_duration": SerializedParam { description: "Waiting time in seconds before restarting synchronization after a recoverable error.", content: DefaultValue(Number(3)), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.state_updates_max_stream_size": SerializedParam { description: "Max amount of state updates to download in a stream.", content: DefaultValue(Number(1000)), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.verify_blocks": SerializedParam { description: "Whether to verify incoming blocks.", content: DefaultValue(Bool(true)), privacy: Public }, "state_sync_config.network_config.advertised_multiaddr": SerializedParam { description: "The external address other peers see this node. If this is set, the node will not try to find out which addresses it has and will write this address as external instead", content: DefaultValue(String("")), privacy: Public }, "state_sync_config.network_config.advertised_multiaddr.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(true)), privacy: TemporaryValue }, "state_sync_config.network_config.bootstrap_peer_multiaddr": SerializedParam { description: "The multiaddress of the peer node. It should include the peer's id. For more info: https://docs.libp2p.io/concepts/fundamentals/peers/", content: DefaultValue(String("/ip4/127.0.0.1/tcp/55557/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5")), privacy: Public }, "state_sync_config.network_config.bootstrap_peer_multiaddr.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(false)), privacy: TemporaryValue }, "state_sync_config.network_config.chain_id": SerializedParam { description: "The chain to follow. For more details see https://docs.starknet.io/documentation/architecture_and_concepts/Blocks/transactions/#chain-id.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "state_sync_config.network_config.discovery_config.bootstrap_dial_retry_config.base_delay_millis": SerializedParam { description: "The base delay in milliseconds for the exponential backoff strategy.", content: DefaultValue(Number(2)), privacy: Public }, "state_sync_config.network_config.discovery_config.bootstrap_dial_retry_config.factor": SerializedParam { description: "The factor for the exponential backoff strategy.", content: DefaultValue(Number(5)), privacy: Public }, "state_sync_config.network_config.discovery_config.bootstrap_dial_retry_config.max_delay_seconds": SerializedParam { description: "The maximum delay in seconds for the exponential backoff strategy.", content: DefaultValue(Number(5)), privacy: Public }, "state_sync_config.network_config.discovery_config.heartbeat_interval": SerializedParam { description: "The interval between each discovery (Kademlia) query in milliseconds.", content: DefaultValue(Number(100)), privacy: Public }, "state_sync_config.network_config.idle_connection_timeout": SerializedParam { description: "Amount of time in seconds that a connection with no active sessions will stay alive.", content: DefaultValue(Number(120)), privacy: Public }, "state_sync_config.network_config.peer_manager_config.malicious_timeout_seconds": SerializedParam { description: "The duration in seconds a peer is blacklisted after being marked as malicious.", content: DefaultValue(Number(1)), privacy: Public }, "state_sync_config.network_config.peer_manager_config.unstable_timeout_millis": SerializedParam { description: "The duration in milliseconds a peer blacklisted after being reported as unstable.", content: DefaultValue(Number(1000)), privacy: Public }, "state_sync_config.network_config.port": SerializedParam { description: "The port that the node listens on for incoming tcp connections.", content: DefaultValue(Number(55561)), privacy: Public }, "state_sync_config.network_config.secret_key": SerializedParam { description: "The secret key used for building the peer id. If it's an empty string a random one will be used.", content: DefaultValue(String("")), privacy: Private }, "state_sync_config.network_config.session_timeout": SerializedParam { description: "Maximal time in seconds that each session can take before failing on timeout.", content: DefaultValue(Number(120)), privacy: Public }, "state_sync_config.p2p_sync_client_config.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(false)), privacy: TemporaryValue }, "state_sync_config.p2p_sync_client_config.buffer_size": SerializedParam { description: "Size of the buffer for read from the storage and for incoming responses.", content: DefaultValue(Number(100000)), privacy: Public }, "state_sync_config.p2p_sync_client_config.num_block_classes_per_query": SerializedParam { description: "The maximum amount of block's classes to ask from peers in each iteration.", content: DefaultValue(Number(100)), privacy: Public }, "state_sync_config.p2p_sync_client_config.num_block_state_diffs_per_query": SerializedParam { description: "The maximum amount of block's state diffs to ask from peers in each iteration.", content: DefaultValue(Number(100)), privacy: Public }, "state_sync_config.p2p_sync_client_config.num_block_transactions_per_query": SerializedParam { description: "The maximum amoonfig.growth_step": 67108864,
[35mNode id 4 part 1:[0m   "state_sync_config.storage_config.db_config.max_size": 34359738368,
[35mNode id 4 part 1:[0m   "state_sync_config.storage_config.db_config.min_size": 1048576,
[35mNode id 4 part 1:[0m   "state_sync_config.storage_config.db_config.path_prefix": "/tmp/.tmpontX6C",
[35mNode id 4 part 1:[0m   "state_sync_config.storage_config.mmap_file_config.growth_step": 1048576,
[35mNode id 4 part 1:[0m   "state_sync_config.storage_config.mmap_file_config.max_object_size": 65536,
[35mNode id 4 part 1:[0m   "state_sync_config.storage_config.mmap_file_config.max_size": 16777216,
[35mNode id 4 part 1:[0m   "state_sync_config.storage_config.scope": "FullArchive",
[35mNode id 4 part 1:[0m   "strk_fee_token_address": "0x1002",
[35mNode id 4 part 1:[0m   "validator_id": "0x68",
[35mNode id 4 part 1:[0m   "versioned_constants_overrides.invoke_tx_max_n_steps": 10000000,
[35mNode id 4 part 1:[0m   "versioned_constants_overrides.max_n_events": 1000,
[35mNode id 4 part 1:[0m   "versioned_constants_overrides.max_recursion_depth": 50,
[35mNode id 4 part 1:[0m   "versioned_constants_overrides.validate_max_n_steps": 1000000
[35mNode id 4 part 1:[0m }
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.181286Z[0m [32m INFO[0m [2mstarknet_sequencer_node::utils[0m[2m:[0m Finished loading configuration.
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.181405Z[0m [32m INFO[0m [2mstarknet_sequencer_node::utils[0m[2m:[0m Finished validating configuration.
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.181419Z[0m [32m INFO[0m [2mstarknet_sequencer_node[0m[2m:[0m Config dump:
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.184100Z[0m [32m INFO[0m [2mstarknet_sequencer_node[0m[2m:[0m {"base_layer_config.node_url": SerializedParam { description: "A required param! Ethereum node URL. A schema to match to Infura node: https://mainnet.infura.io/v3/<your_api_key>, but any other node can be used.", content: ParamType(String), privacy: Private }, "base_layer_config.starknet_contract_address": SerializedParam { description: "Starknet contract address in ethereum.", content: DefaultValue(String("0xc662c410C0ECf747543f5bA90660f6ABeBD9C8c4")), privacy: Public }, "batcher_config.block_builder_config.bouncer_config.block_max_capacity.l1_gas": SerializedParam { description: "An upper bound on the total l1_gas used in a block.", content: DefaultValue(Number(2500000)), privacy: Public }, "batcher_config.block_builder_config.bouncer_config.block_max_capacity.message_segment_length": SerializedParam { description: "An upper bound on the message segment length in a block.", content: DefaultValue(Number(3700)), privacy: Public }, "batcher_config.block_builder_config.bouncer_config.block_max_capacity.n_events": SerializedParam { description: "An upper bound on the total number of events generated in a block.", content: DefaultValue(Number(5000)), privacy: Public }, "batcher_config.block_builder_config.bouncer_config.block_max_capacity.sierra_gas": SerializedParam { description: "An upper bound on the total sierra_gas used in a block.", content: DefaultValue(Number(17000000)), privacy: Public }, "batcher_config.block_builder_config.bouncer_config.block_max_capacity.state_diff_size": SerializedParam { description: "An upper bound on the total state diff size in a block.", content: DefaultValue(Number(4000)), privacy: Public }, "batcher_config.block_builder_config.chain_info.chain_id": SerializedParam { description: "The chain ID of the StarkNet chain.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "batcher_config.block_builder_config.chain_info.fee_token_addresses.eth_fee_token_address": SerializedParam { description: "Address of the ETH fee token.", content: DefaultValue(String("0x1001")), privacy: Public }, "batcher_config.block_builder_config.chain_info.fee_token_addresses.strk_fee_token_address": SerializedParam { description: "Address of the STRK fee token.", content: DefaultValue(String("0x1002")), privacy: Public }, "batcher_config.block_builder_config.execute_config.concurrency_config.chunk_size": SerializedParam { description: "The size of the transaction chunk executed in parallel.", content: DefaultValue(Number(64)), privacy: Public }, "batcher_config.block_builder_config.execute_config.concurrency_config.enabled": SerializedParam { description: "Enables concurrency of transaction execution.", content: DefaultValue(Bool(true)), privacy: Public }, "batcher_config.block_builder_config.execute_config.concurrency_config.n_workers": SerializedParam { description: "Number of parallel transaction execution workers.", content: DefaultValue(Number(4)), privacy: Public }, "batcher_config.block_builder_config.execute_config.stack_size": SerializedParam { description: "The thread stack size (proportional to the maximal gas of a transaction).", content: DefaultValue(Number(62914560)), privacy: Public }, "batcher_config.block_builder_config.tx_chunk_size": SerializedParam { description: "The size of the transaction chunk.", content: DefaultValue(Number(100)), privacy: Public }, "batcher_config.block_builder_config.versioned_constants_overrides.invoke_tx_max_n_steps": SerializedParam { description: "Maximum number of steps the invoke function is allowed to run.", content: DefaultValue(Number(10000000)), privacy: Public }, "batcher_config.block_builder_config.versioned_constants_overrides.max_n_events": SerializedParam { description: "Maximum number of events that can be emitted from the transation.", content: DefaultValue(Number(1000)), privacy: Public }, "batcher_config.block_builder_config.versioned_constants_overrides.max_recursion_depth": SerializedParam { description: "Maximum recursion depth for nested calls during blockifier validation.", content: DefaultValue(Number(50)), privacy: Public }, "batcher_config.block_builder_config.versioned_constants_overrides.validate_max_n_steps": SerializedParam { description: "Maximum number of steps the validation function is allowed to run.", content: DefaultValue(Number(1000000)), privacy: Public }, "batcher_config.contract_class_manager_config.cairo_native_run_config.channel_size": SerializedParam { description: "The size of the compilation request channel.", content: DefaultValue(Number(2000)), privacy: Public }, "batcher_config.contract_class_manager_config.cairo_native_run_config.run_cairo_native": SerializedParam { description: "Enables Cairo native execution.", content: DefaultValue(Bool(false)), privacy: Public }, "batcher_config.contract_class_manager_config.cairo_native_run_config.wait_on_native_compilation": SerializedParam { description: "Block Sequencer main program while compiling sierra, for testing.", content: DefaultValue(Bool(false)), privacy: Public }, "batcher_config.contract_class_manager_config.contract_cache_size": SerializedParam { description: "The size of the global contract cache.", content: DefaultValue(Number(600)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.max_casm_bytecode_size": SerializedParam { description: "Limitation of compiled casm bytecode size.", content: DefaultValue(Number(81920)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.max_cpu_time": SerializedParam { description: "Limitation of compilation cpu time (seconds).", content: DefaultValue(Number(20)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.max_memory_usage": SerializedParam { description: "Limitation of compilation process's virtual memory (bytes).", content: DefaultValue(Number(5368709120)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.max_native_bytecode_size": SerializedParam { description: "Limitation of compiled native bytecode size.", content: DefaultValue(Number(15728640)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.optimization_level": SerializedParam { description: "The level of optimization to apply during compilation.", content: DefaultValue(Number(2)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.panic_on_compilation_failure": SerializedParam { description: "Whether to panic on compilation failure.", content: DefaultValue(Bool(false)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.sierra_to_native_compiler_path": SerializedParam { description: "The path to the Sierra-to-Native compiler binary.", content: DefaultValue(String("")), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.sierra_to_native_compiler_path.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(true)), privacy: TemporaryValue }, "batcher_config.input_stream_content_buffer_size": SerializedParam { description: "Sets the buffer size for the input transaction channel. Adding more transactions beyond this limit will block until space is available.", content: DefaultValue(Number(400)), privacy: Public }, "batcher_config.max_l1_handler_txs_per_block_proposal": SerializedParam { description: "The maximum number of L1 handler transactions to include in a block proposal.", content: DefaultValue(Number(3)), privacy: Public }, "batcher_config.outstream_content_buffer_size": SerializedParam { description: "The maximum number of items to include in a single get_proposal_content response.", content: DefaultValue(Number(100)), privacy: Public }, "batcher_config.storage.db_config.chain_id": SerializedParam { description: "The chain to follow. For more details see https://docs.starknet.io/documentation/architecture_and_concepts/Blocks/transactions/#chain-id.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "batcher_config.storage.db_config.enforce_file_exists": SerializedParam { description: "Whether to enforce that the path exists. If true, `open_env` fails when the mdbx.dat file does not exist.", content: DefaultValue(Bool(false)), privacy: Public }, "batcher_config.storage.db_config.growth_step": SerializedParam { description: "The growth step in bytes, must be greater than zero to allow the database to grow.", content: DefaultValue(Number(67108864)), privacy: Public }, "batcher_config.storage.db_config.max_size": SerializedParam { description: "The maximum size of the node's storage in bytes.", content: DefaultValue(Number(34359738368)), privacy: Public }, "batcher_config.storage.db_config.min_size": SerializedParam { description: "The minimum size of the node's storage in bytes.", content: DefaultValue(Number(1048576)), privacy: Public }, "batcher_config.storage.db_config.path_prefix": SerializedParam { description: "Prefix of the path of the node's storage directory, the storage file path will be <path_prefix>/<chain_id>. The path is not created automatically.", content: DefaultValue(String("/tmp/.tmpnKRux4")), privacy: Public }, "batcher_config.storage.mmap_file_config.growth_step": SerializedParam { description: "The growth step in bytes, must be greater than max_object_size.", content: DefaultValue(Number(1048576)), privacy: Public }, "batcher_config.storage.mmap_file_config.max_object_size": SerializedParam { description: "The maximum size of a single object in the file in bytes", content: DefaultValue(Number(65536)), privacy: Public }, "batcher_config.storage.mmap_file_config.max_size": SerializedParam { description: "The maximum size of a memory mapped file in bytes. Must be greater than growth_step.", content: DefaultValue(Number(16777216)), privacy: Public }, "batcher_config.storage.scope": SerializedParam { description: "The categories of data saved in storage.", content: DefaultValue(String("StateOnly")), privacy: Public }, "class_manager_config.class_manager_config.cached_class_storage_config.class_cache_size": SerializedParam { description: "Contract classes cache size.", content: DefaultValue(Number(100)), privacy: Public }, "class_manager_config.class_manager_config.cached_class_storage_config.deprecated_class_cache_size": SerializedParam { description: "Deprecated contract classes cache size.", content: DefaultValue(Number(100)), privacy: Public }, "class_manager_config.class_storage_config.class_hash_storage_config.enforce_file_exists": SerializedParam { description: "Whether to enforce that the above path exists.", content: DefaultValue(Bool(false)), privacy: Public }, "class_manager_config.class_storage_config.class_hash_storage_config.max_size": SerializedParam { description: "The maximum size of the class hash storage in bytes.", content: DefaultValue(Number(1048576)), privacy: Public }, "class_manager_config.class_storage_config.class_hash_storage_config.path_prefix": SerializedParam { description: "Prefix of the path of class hash storage directory.", content: DefaultValue(String("/tmp/.tmp40RFP4")), privacy: Public }, "class_manager_config.class_storage_config.persistent_root": SerializedParam { description: "Path to the node's class storage directory.", content: DefaultValue(String("/tmp/.tmpFQXW26")), privacy: Public }, "compiler_config.max_casm_bytecode_size": SerializedParam { description: "Limitation of compiled casm bytecode size.", content: DefaultValue(Number(81920)), privacy: Public }, "compiler_config.max_cpu_time": SerializedParam { description: "Limitation of compilation cpu time (seconds).", content: DefaultValue(Number(20)), privacy: Public }, "compiler_config.max_memory_usage": SerializedParam { description: "Limitation of compilation process's virtual memory (bytes).", content: DefaultValue(Number(5368709120)), privacy: Public }, "compiler_config.max_native_bytecode_size": SerializedParam { description: "Limitation of compiled native bytecode size.", content: DefaultValue(Number(15728640)), privacy: Public }, "compiler_config.optimization_level": SerializedParam { description: "The level of optimization to apply during compilation.", content: DefaultValue(Number(2)), privacy: Public }, "compiler_config.panic_on_compilation_failure": SerializedParam { description: "Whether to panic on compilation failure.", content: DefaultValue(Bool(false)), privacy: Public }, "compiler_config.sierra_to_native_compiler_path": SerializedParam { description: "The path to the Sierra-to-Native compiler binary.", content: DefaultValue(String("")), privacy: Public }, "compiler_config.sierra_to_native_compiler_path.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(true)), privacy: TemporaryValue }, "components.batcher.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("LocalExecutionWithRemoteDisabled")), privacy: Public }, "components.batcher.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("0.0.0.0")), privacy: Public }, "components.batcher.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.batcher.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.batcher.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(0)), privacy: Public }, "components.batcher.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.batcher.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.batcher.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.batcher.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("localhost")), privacy: Public }, "components.class_manager.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("Remote")), privacy: Public }, "components.class_manager.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("127.0.0.1")), privacy: Public }, "components.class_manager.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.class_manager.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.class_manager.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(55549)), privacy: Public }, "components.class_manager.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.class_manager.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.class_manager.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.class_manager.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("127.0.0.1")), privacy: Public }, "components.consensus_manager.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("Enabled")), privacy: Public }, "components.gateway.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("Remote")), privacy: Public }, "components.gateway.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("127.0.0.1")), privacy: Public }, "components.gateway.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.gateway.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.gateway.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(55545)), privacy: Public }, "components.gateway.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.gateway.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.gateway.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.gateway.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("127.0.0.1")), privacy: Public }, "components.http_server.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("Disabled")), privacy: Public }, "components.l1_provider.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("LocalExecutionWithRemoteDisabled")), privacy: Public }, "components.l1_provider.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("0.0.0.0")), privacy: Public }, "components.l1_provider.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.l1_provider.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.l1_provider.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(0)), privacy: Public }, "components.l1_provider.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.l1_provider.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.l1_provider.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.l1_provider.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("localhost")), privacy: Public }, "components.l1_scraper.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("Enabled")), privacy: Public }, "components.mempool.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("Remote")), privacy: Public }, "components.mempool.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("127.0.0.1")), privacy: Public }, "components.mempool.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.mempool.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.mempool.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(55546)), privacy: Public }, "components.mempool.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.mempool.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.mempool.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.mempool.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("127.0.0.1")), privacy: Public }, "components.mempool_p2p.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("Remote")), privacy: Public }, "components.mempool_p2p.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("127.0.0.1")), privacy: Public }, "components.mempool_p2p.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.mempool_p2p.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.mempool_p2p.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(55547)), privacy: Public }, "components.mempool_p2p.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.mempool_p2p.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.mempool_p2p.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.mempool_p2p.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("127.0.0.1")), privacy: Public }, "components.monitoring_endpoint.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("Enabled")), privacy: Public }, "components.sierra_compiler.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("LocalExecutionWithRemoteDisabled")), privacy: Public }, "components.sierra_compiler.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("0.0.0.0")), privacy: Public }, "components.sierra_compiler.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.sierra_compiler.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.sierra_compiler.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(0)), privacy: Public }, "components.sierra_compiler.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.sierra_compiler.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.sierra_compiler.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.sierra_compiler.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("localhost")), privacy: Public }, "components.state_sync.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("LocalExecutionWithRemoteEnabled")), privacy: Public }, "components.state_sync.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("127.0.0.1")), privacy: Public }, "components.state_sync.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.state_sync.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.state_sync.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(55548)), privacy: Public }, "components.state_sync.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.state_sync.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.state_sync.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.state_sync.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("127.0.0.1")), privacy: Public }, "consensus_manager_config.broadcast_buffer_size": SerializedParam { description: "The buffer size for the broadcast channel.", content: DefaultValue(Number(10000)), privacy: Public }, "consensus_manager_config.cende_config.recorder_url": SerializedParam { description: "The URL of the Pythonic cende_recorder", content: DefaultValue(String("http://127.0.0.1:55360/")), privacy: Private }, "consensus_manager_config.cende_config.skip_write_height": SerializedParam { description: "A height that the consensus can skip writing to Aerospike. Needed for booting up (no previous height blob to write) or to handle extreme cases (all the nodes failed).", content: DefaultValue(Number(1)), privacy: Private }, "consensus_manager_config.cende_config.skip_write_height.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(false)), privacy: TemporaryValue }, "consensus_manager_config.consensus_config.future_height_limit": SerializedParam { description: "How many heights in the future should we cache.", content: DefaultValue(Number(10)), privacy: Public }, "consensus_manager_config.consensus_config.future_height_round_limit": SerializedParam { description: "How many rounds should we cache for future heights.", content: DefaultValue(Number(1)), privacy: Public }, "consensus_manager_config.consensus_config.future_round_limit": SerializedParam { description: "How many rounds in the future (for current height) should we cache.", content: DefaultValue(Number(10)), privacy: Public }, "consensus_manager_config.consensus_config.startup_delay": SerializedParam { description: "Delay (seconds) before starting consensus to give time for network peering.", content: DefaultValue(Number(15)), privacy: Public }, "consensus_manager_config.consensus_config.sync_retry_interval": SerializedParam { description: "The duration (seconds) between sync attempts.", content: DefaultValue(Number(1.0)), privacy: Public }, "consensus_manager_config.consensus_config.timeouts.precommit_timeout": SerializedParam { description: "The timeout (seconds) for a precommit.", content: DefaultValue(Number(3.0)), privacy: Public }, "consensus_manager_config.consensus_config.timeouts.prevote_timeout": SerializedParam { description: "The timeout (seconds) for a prevote.", content: DefaultValue(Number(3.0)), privacy: Public }, "consensus_manager_config.consensus_config.timeouts.proposal_timeout": SerializedParam { description: "The timeout (seconds) for a proposal.", content: DefaultValue(Number(9.0)), privacy: Public }, "consensus_manager_config.consensus_config.validator_id": SerializedParam { description: "The validator id of the node.", content: DefaultValue(String("0x68")), privacy: Public }, "consensus_manager_config.context_config.block_timestamp_window": SerializedParam { description: "Maximum allowed deviation (seconds) of a proposed block's timestamp from the current time.", content: DefaultValue(Number(1)), privacy: Public }, "consensus_manager_config.context_config.chain_id": SerializedParam { description: "The chain id of the Starknet chain.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "consensus_manager_config.context_config.l1_da_mode": SerializedParam { description: "The data availability mode, true: Blob, false: Calldata.", content: DefaultValue(Bool(true)), privacy: Public }, "consensus_manager_config.context_config.num_validators": SerializedParam { description: "The number of validators.", content: DefaultValue(Number(5)), privacy: Public }, "consensus_manager_config.context_config.proposal_buffer_size": SerializedParam { description: "The buffer size for streaming outbound proposals.", content: DefaultValue(Number(100)), privacy: Public }, "consensus_manager_config.immediate_active_height": SerializedParam { description: "The height at which the node may actively participate in consensus.", content: DefaultValue(Number(1)), privacy: Public }, "consensus_manager_config.network_config.advertised_multiaddr": SerializedParam { description: "The external address other peers see this node. If this is set, the node will not try to find out which addresses it has and will write this address as external instead", content: DefaultValue(String("")), privacy: Public }, "consensus_manager_config.network_config.advertised_multiaddr.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(true)), privacy: TemporaryValue }, "consensus_manager_config.network_config.bootstrap_peer_multiaddr": SerializedParam { description: "The multiaddress of the peer node. It should include the peer's id. For more info: https://docs.libp2p.io/concepts/fundamentals/peers/", content: DefaultValue(String("/ip4/127.0.0.1/tcp/55550/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5")), privacy: Public }, "consensus_manager_config.network_config.bootstrap_peer_multiaddr.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(false)), privacy: TemporaryValue }, "consensus_manager_config.network_config.chain_id": SerializedParam { description: "The chain to follow. For more details see https://docs.starknet.io/documentation/architecture_and_concepts/Blocks/transactions/#chain-id.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "consensus_manager_config.network_config.discovery_config.bootstrap_dial_retry_config.base_delay_millis": SerializedParam { description: "The base delay in milliseconds for the exponential backoff strategy.", content: DefaultValue(Number(2)), privacy: Public }, "consensus_manager_config.network_config.discovery_config.bootstrap_dial_retry_config.factor": SerializedParam { description: "The factor for the exponential backoff strategy.", content: DefaultValue(Number(5)), privacy: Public }, "consensus_manager_config.network_config.discovery_config.bootstrap_dial_retry_config.max_delay_seconds": SerializedParam { description: "The maximum delay in seconds for the exponential backoff strategy.", content: DefaultValue(Number(5)), privacy: Public }, "consensus_manager_config.network_config.discovery_config.heartbeat_interval": SerializedParam { description: "The interval between each discovery (Kademlia) query in milliseconds.", content: DefaultValue(Number(100)), privacy: Public }, "consensus_manager_config.network_config.idle_connection_timeout": SerializedParam { description: "Amount of time in seconds that a connection with no active sessions will stay alive.", content: DefaultValue(Number(120)), privacy: Public }, "consensus_manager_config.network_config.peer_manager_config.malicious_timeout_seconds": SerializedParam { description: "The duration in seconds a peer is blacklisted after being marked as malicious.", content: DefaultValue(Number(1)), privacy: Public }, "consensus_manager_config.network_config.peer_manager_config.unstable_timeout_millis": SerializedParam { description: "The duration in milliseconds a peer blacklisted after being reported as unstable.", content: DefaultValue(Number(1000)), privacy: Public }, "consensus_manager_config.network_config.port": SerializedParam { description: "The port that the node listens on for incoming tcp connections.", content: DefaultValue(Number(55556)), privacy: Public }, "consensus_manager_config.network_config.secret_key": SerializedParam { description: "The secret key used for building the peer id. If it's an empty string a random one will be used.", content: DefaultValue(String("")), privacy: Private }, "consensus_manager_config.network_config.session_timeout": SerializedParam { description: "Maximal time in seconds that each session can take before failing on timeout.", content: DefaultValue(Number(120)), privacy: Public }, "consensus_manager_config.proposals_topic": SerializedParam { description: "The topic for consensus proposals.", content: DefaultValue(String("consensus_proposals")), privacy: Public }, "consensus_manager_config.revert_config.revert_up_to_and_including": SerializedParam { description: "The component will revert blocks up to this block number (including).", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "consensus_manager_config.revert_config.should_revert": SerializedParam { description: "If set true, the component would revert blocks and do nothing else.", content: DefaultValue(Bool(false)), privacy: Public }, "consensus_manager_config.votes_topic": SerializedParam { description: "The topic for consensus votes.", content: DefaultValue(String("consensus_votes")), privacy: Public }, "gateway_config.chain_info.chain_id": SerializedParam { description: "The chain ID of the StarkNet chain.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "gateway_config.chain_info.fee_token_addresses.eth_fee_token_address": SerializedParam { description: "Address of the ETH fee token.", content: DefaultValue(String("0x1001")), privacy: Public }, "gateway_config.chain_info.fee_token_addresses.strk_fee_token_address": SerializedParam { description: "Address of the STRK fee token.", content: DefaultValue(String("0x1002")), privacy: Public }, "gateway_config.stateful_tx_validator_config.max_nonce_for_validation_skip": SerializedParam { description: "Maximum nonce for which the validation is skipped.", content: DefaultValue(String("0x1")), privacy: Public }, "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.invoke_tx_max_n_steps": SerializedParam { description: "Maximum number of steps the invoke function is allowed to run.", content: DefaultValue(Number(10000000)), privacy: Public }, "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.max_n_events": SerializedParam { description: "Maximum number of events that can be emitted from the transation.", content: DefaultValue(Number(1000)), privacy: Public }, "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.max_recursion_depth": SerializedParam { description: "Maximum recursion depth for nested calls during blockifier validation.", content: DefaultValue(Number(50)), privacy: Public }, "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.validate_max_n_steps": SerializedParam { description: "Maximum number of steps the validation function is allowed to run.", content: DefaultValue(Number(1000000)), privacy: Public }, "gateway_config.stateless_tx_validator_config.max_calldata_length": SerializedParam { description: "Limitation of calldata length.", content: DefaultValue(Number(10)), privacy: Public }, "gateway_config.stateless_tx_validator_config.max_contract_class_object_size": SerializedParam { description: "Limitation of contract class object size.", content: DefaultValue(Number(4089446)), privacy: Public }, "gateway_config.stateless_tx_validator_config.max_sierra_version.major": SerializedParam { description: "The major version of the configuration.", content: DefaultValue(Number(1)), privacy: Public }, "gateway_config.stateless_tx_validator_config.max_sierra_version.minor": SerializedParam { description: "The minor version of the configuration.", content: DefaultValue(Number(5)), privacy: Public }, "gateway_config.stateless_tx_validator_config.max_sierra_version.patch": SerializedParam { description: "The patch version of the configuration.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "gateway_config.stateless_tx_validator_config.max_signature_length": SerializedParam { description: "Limitation of signature length.", content: DefaultValue(Number(2)), privacy: Public }, "gateway_config.stateless_tx_validator_config.min_sierra_version.major": SerializedParam { description: "The major version of the configuration.", content: DefaultValue(Number(1)), privacy: Public }, "gateway_config.stateless_tx_validator_config.min_sierra_version.minor": SerializedParam { description: "The minor version of the configuration.", content: DefaultValue(Number(1)), privacy: Public }, "gateway_config.stateless_tx_validator_config.min_sierra_version.patch": SerializedParam { description: "The patch version of the configuration.", content: DefaultValue(Number(0)), privacy: Public }, "gateway_config.stateless_tx_validator_config.validate_non_zero_l1_data_gas_fee": SerializedParam { description: "If true, validates that a transaction has non-zero L1 Data (Blob) resource bounds.", content: DefaultValue(Bool(false)), privacy: Public }, "gateway_config.stateless_tx_validator_config.validate_non_zero_l1_gas_fee": SerializedParam { description: "If true, validates that a transaction has non-zero L1 resource bounds.", content: DefaultValue(Bool(true)), privacy: Public }, "gateway_config.stateless_tx_validator_config.validate_non_zero_l2_gas_fee": SerializedParam { description: "If true, validates that a transaction has non-zero L2 resource bounds.", content: DefaultValue(Bool(false)), privacy: Public }, "http_server_config.ip": SerializedParam { description: "The http server ip.", content: DefaultValue(String("127.0.0.1")), privacy: Public }, "http_server_config.port": SerializedParam { description: "The http server port.", content: DefaultValue(Number(55362)), privacy: Public }, "l1_provider_config.bootstrap_catch_up_height": SerializedParam { description: "Height at which the provider should catch up to the bootstrapper.", content: DefaultValue(Number(0)), privacy: Public }, "l1_provider_config.provider_startup_height": SerializedParam { description: "Height at which the provider should start.", content: DefaultValue(Number(1)), privacy: Public }, "l1_provider_config.startup_sync_sleep_retry_interval": SerializedParam { description: "Interval in seconds between each retry of syncing with L2 during startup.", content: DefaultValue(Number(0.0)), privacy: Public }, "l1_scraper_config.chain_id": SerializedParam { description: "The chain to follow. For more details see https://docs.starknet.io/documentation/architecture_and_concepts/Blocks/transactions/#chain-id.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "l1_scraper_config.finality": SerializedParam { description: "Number of blocks to wait for finality", content: DefaultValue(Number(0)), privacy: Public }, "l1_scraper_config.polling_interval": SerializedParam { description: "Interval in Seconds between each scraping attempt of L1.", content: DefaultValue(Number(1)), privacy: Public }, "l1_scraper_config.startup_rewind_time": SerializedParam { description: "Duration to rewind from latest L1 block when starting scraping.", content: DefaultValue(Number(0)), privacy: Public }, "mempool_config.enable_fee_escalation": SerializedParam { description: "If true, transactions can be replaced with higher fee transactions.", content: DefaultValue(Bool(true)), privacy: Public }, "mempool_config.fee_escalation_percentage": SerializedParam { description: "Percentage increase for tip and max gas price to enable transaction replacement.", content: DefaultValue(Number(10)), privacy: Public }, "mempool_config.transaction_ttl": SerializedParam { description: "Time-to-live for transactions in the mempool, in seconds.", content: DefaultValue(Number(300)), privacy: Public }, "mempool_p2p_config.network_buffer_size": SerializedParam { description: "Network buffer size.", content: DefaultValue(Number(10000)), privacy: Public }, "mempool_p2p_config.network_config.advertised_multiaddr": SerializedParam { description: "The external address other peers see this node. If this is set, the node will not try to find out which addresses it has and will write this address as external instead", content: DefaultValue(String("")), privacy: Public }, "mempool_p2p_config.network_config.advertised_multiaddr.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(true)), privacy: TemporaryValue }, "mempool_p2p_config.network_config.bootstrap_peer_multiaddr": SerializedParam { description: "The multiaddress of the peer node. It should include the peer's id. For more info: https://docs.libp2p.io/concepts/fundamentals/peers/", content: DefaultValue(String("/ip4/127.0.0.1/tcp/55564/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5")), privacy: Public }, "mempool_p2p_config.network_config.bootstrap_peer_multiaddr.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(false)), privacy: TemporaryValue }, "mempool_p2p_config.network_config.chain_id": SerializedParam { description: "The chain to follow. For more details see https://docs.starknet.io/documentation/architecture_and_concepts/Blocks/transactions/#chain-id.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "mempool_p2p_config.network_config.discovery_config.bootstrap_dial_retry_config.base_delay_millis": SerializedParam { description: "The base delay in milliseconds for the exponential backoff strategy.", content: DefaultValue(Number(2)), privacy: Public }, "mempool_p2p_config.network_config.discovery_config.bootstrap_dial_retry_config.factor": SerializedParam { description: "The factor for the exponential backoff strategy.", content: DefaultValue(Number(5)), privacy: Public }, "mempool_p2p_config.network_config.discovery_config.bootstrap_dial_retry_config.max_delay_seconds": SerializedParam { description: "The maximum delay in seconds for the exponential backoff strategy.", content: DefaultValue(Number(5)), privacy: Public }, "mempool_p2p_config.network_config.discovery_config.heartbeat_interval": SerializedParam { description: "The interval between each discovery (Kademlia) query in milliseconds.", content: DefaultValue(Number(100)), privacy: Public }, "mempool_p2p_config.network_config.idle_connection_timeout": SerializedParam { description: "Amount of time in seconds that a connection with no active sessions will stay alive.", content: DefaultValue(Number(120)), privacy: Public }, "mempool_p2p_config.network_config.peer_manager_config.malicious_timeout_seconds": SerializedParam { description: "The duration in seconds a peer is blacklisted after being marked as malicious.", content: DefaultValue(Number(1)), privacy: Public }, "mempool_p2p_config.network_config.peer_manager_config.unstable_timeout_millis": SerializedParam { description: "The duration in milliseconds a peer blacklisted after being reported as unstable.", content: DefaultValue(Number(1000)), privacy: Public }, "mempool_p2p_config.network_config.port": SerializedParam { description: "The port that the node listens on for incoming tcp connections.", content: DefaultValue(Number(55570)), privacy: Public }, "mempool_p2p_config.network_config.secret_key": SerializedParam { description: "The secret key used for building the peer id. If it's an empty string a random one will be used.", content: DefaultValue(String("")), privacy: Private }, "mempool_p2p_config.network_config.session_timeout": SerializedParam { description: "Maximal time in seconds that each session can take before failing on timeout.", content: DefaultValue(Number(120)), privacy: Public }, "monitoring_endpoint_config.collect_metrics": SerializedParam { description: "If true, collect and return metrics in the monitoring endpoint.", content: DefaultValue(Bool(true)), privacy: Public }, "monitoring_endpoint_config.ip": SerializedParam { description: "The monitoring endpoint ip address.", content: DefaultValue(String("0.0.0.0")), privacy: Public }, "monitoring_endpoint_config.port": SerializedParam { description: "The monitoring endpoint port.", content: DefaultValue(Number(55361)), privacy: Public }, "state_sync_config.central_sync_client_config.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(true)), privacy: TemporaryValue }, "state_sync_config.central_sync_client_config.central_source_config.class_cache_size": SerializedParam { description: "Size of class cache, must be a positive integer.", content: DefaultValue(Number(100)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.concurrent_requests": SerializedParam { description: "Maximum number of concurrent requests to Starknet feeder-gateway for getting a type of data (for example, blocks).", content: DefaultValue(Number(10)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.http_headers": SerializedParam { description: "'k1:v1 k2:v2 ...' headers for SN-client.", content: DefaultValue(String("")), privacy: Private }, "state_sync_config.central_sync_client_config.central_source_config.max_classes_to_download": SerializedParam { description: "Maximum number of classes to download at a given time.", content: DefaultValue(Number(20)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.max_state_updates_to_download": SerializedParam { description: "Maximum number of state updates to download at a given time.", content: DefaultValue(Number(20)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.max_state_updates_to_store_in_memory": SerializedParam { description: "Maximum number of state updates to store in memory at a given time.", content: DefaultValue(Number(20)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.retry_config.max_retries": SerializedParam { description: "Maximum number of retries before the node stops retrying.", content: DefaultValue(Number(10)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.retry_config.retry_base_millis": SerializedParam { description: "Base waiting time after a failed request. After that, the time increases exponentially.", content: DefaultValue(Number(30)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.retry_config.retry_max_delay_millis": SerializedParam { description: "Max waiting time after a failed request.", content: DefaultValue(Number(30000)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.starknet_url": SerializedParam { description: "Starknet feeder-gateway URL. It should match chain_id.", content: DefaultValue(String("https://alpha-mainnet.starknet.io/")), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.base_layer_propagation_sleep_duration": SerializedParam { description: "Time in seconds to poll the base layer to get the latest proved block.", content: DefaultValue(Number(10)), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.block_propagation_sleep_duration": SerializedParam { description: "Time in seconds before checking for a new block after the node is synchronized.", content: DefaultValue(Number(2)), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.blocks_max_stream_size": SerializedParam { description: "Max amount of blocks to download in a stream.", content: DefaultValue(Number(1000)), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.collect_pending_data": SerializedParam { description: "Whether to collect data on pending blocks.", content: DefaultValue(Bool(false)), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.recoverable_error_sleep_duration": SerializedParam { description: "Waiting time in seconds before restarting synchronization after a recoverable error.", content: DefaultValue(Number(3)), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.state_updates_max_stream_size": SerializedParam { description: "Max amount of state updates to download in a stream.", content: DefaultValue(Number(1000)), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.verify_blocks": SerializedParam { description: "Whether to verify incoming blocks.", content: DefaultValue(Bool(true)), privacy: Public }, "state_sync_config.network_config.advertised_multiaddr": SerializedParam { description: "The external address other peers see this node. If this is set, the node will not try to find out which addresses it has and will write this address as external instead", content: DefaultValue(String("")), privacy: Public }, "state_sync_config.network_config.advertised_multiaddr.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(true)), privacy: TemporaryValue }, "state_sync_config.network_config.bootstrap_peer_multiaddr": SerializedParam { description: "The multiaddress of the peer node. It should include the peer's id. For more info: https://docs.libp2p.io/concepts/fundamentals/peers/", content: DefaultValue(String("/ip4/127.0.0.1/tcp/55557/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5")), privacy: Public }, "state_sync_config.network_config.bootstrap_peer_multiaddr.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(false)), privacy: TemporaryValue }, "state_sync_config.network_config.chain_id": SerializedParam { description: "The chain to follow. For more details see https://docs.starknet.io/documentation/architecture_and_concepts/Blocks/transactions/#chain-id.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "state_sync_config.network_config.discovery_config.bootstrap_dial_retry_config.base_delay_millis": SerializedParam { description: "The base delay in milliseconds for the exponential backoff strategy.", content: DefaultValue(Number(2)), privacy: Public }, "state_sync_config.network_config.discovery_config.bootstrap_dial_retry_config.factor": SerializedParam { description: "The factor for the exponential backoff strategy.", content: DefaultValue(Number(5)), privacy: Public }, "state_sync_config.network_config.discovery_config.bootstrap_dial_retry_config.max_delay_seconds": SerializedParam { description: "The maximum delay in seconds for the exponential backoff strategy.", content: DefaultValue(Number(5)), privacy: Public }, "state_sync_config.network_config.discovery_config.heartbeat_interval": SerializedParam { description: "The interval between each discovery (Kademlia) query in milliseconds.", content: DefaultValue(Number(100)), privacy: Public }, "state_sync_config.network_config.idle_connection_timeout": SerializedParam { description: "Amount of time in seconds that a connection with no active sessions will stay alive.", content: DefaultValue(Number(120)), privacy: Public }, "state_sync_config.network_config.peer_manager_config.malicious_timeout_seconds": SerializedParam { description: "The duration in seconds a peer is blacklisted after being marked as malicious.", content: DefaultValue(Number(1)), privacy: Public }, "state_sync_config.network_config.peer_manager_config.unstable_timeout_millis": SerializedParam { description: "The duration in milliseconds a peer blacklisted after being reported as unstable.", content: DefaultValue(Number(1000)), privacy: Public }, "state_sync_config.network_config.port": SerializedParam { description: "The port that the node listens on for incoming tcp connections.", content: DefaultValue(Number(55563)), privacy: Public }, "state_sync_config.network_config.secret_key": SerializedParam { description: "The secret key used for building the peer id. If it's an empty string a random one will be used.", content: DefaultValue(String("")), privacy: Private }, "state_sync_config.network_config.session_timeout": SerializedParam { description: "Maximal time in seconds that each session can take before failing on timeout.", content: DefaultValue(Number(120)), privacy: Public }, "state_sync_config.p2p_sync_client_config.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(false)), privacy: TemporaryValue }, "state_sync_config.p2p_sync_client_config.buffer_size": SerializedParam { description: "Size of the buffer for read from the storage and for incoming responses.", content: DefaultValue(Number(100000)), privacy: Public }, "state_sync_config.p2p_sync_client_config.num_block_classes_per_query": SerializedParam { description: "The maximum amount of block's classes to ask from peers in each iteration.", content: DefaultValue(Number(100)), privacy: Public }, "state_sync_config.p2p_sync_client_config.num_block_state_diffs_per_query": SerializedParam { description: "The maximum amount of block's state diffs to ask from peers in each iteration.", content: DefaultValue(Number(100)), privacy: Public }, "state_sync_config.p2p_sync_client_config.num_block_transactions_per_query": SerializedParam { description: "The maximum amofalse,
[32mNode id 1 part 0:[0m   "state_sync_config.storage_config.db_config.growth_step": 67108864,
[32mNode id 1 part 0:[0m   "state_sync_config.storage_config.db_config.max_size": 34359738368,
[32mNode id 1 part 0:[0m   "state_sync_config.storage_config.db_config.min_size": 1048576,
[32mNode id 1 part 0:[0m   "state_sync_config.storage_config.db_config.path_prefix": "/tmp/.tmpvIYuWt",
[32mNode id 1 part 0:[0m   "state_sync_config.storage_config.mmap_file_config.growth_step": 1048576,
[32mNode id 1 part 0:[0m   "state_sync_config.storage_config.mmap_file_config.max_object_size": 65536,
[32mNode id 1 part 0:[0m   "state_sync_config.storage_config.mmap_file_config.max_size": 16777216,
[32mNode id 1 part 0:[0m   "state_sync_config.storage_config.scope": "FullArchive",
[32mNode id 1 part 0:[0m   "strk_fee_token_address": "0x1002",
[32mNode id 1 part 0:[0m   "validator_id": "0x65",
[32mNode id 1 part 0:[0m   "versioned_constants_overrides.invoke_tx_max_n_steps": 10000000,
[32mNode id 1 part 0:[0m   "versioned_constants_overrides.max_n_events": 1000,
[32mNode id 1 part 0:[0m   "versioned_constants_overrides.max_recursion_depth": 50,
[32mNode id 1 part 0:[0m   "versioned_constants_overrides.validate_max_n_steps": 1000000
[32mNode id 1 part 0:[0m }
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.181291Z[0m [32m INFO[0m [2mstarknet_sequencer_node::utils[0m[2m:[0m Finished loading configuration.
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.181405Z[0m [32m INFO[0m [2mstarknet_sequencer_node::utils[0m[2m:[0m Finished validating configuration.
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.181420Z[0m [32m INFO[0m [2mstarknet_sequencer_node[0m[2m:[0m Config dump:
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.184094Z[0m [32m INFO[0m [2mstarknet_sequencer_node[0m[2m:[0m {"base_layer_config.node_url": SerializedParam { description: "A required param! Ethereum node URL. A schema to match to Infura node: https://mainnet.infura.io/v3/<your_api_key>, but any other node can be used.", content: ParamType(String), privacy: Private }, "base_layer_config.starknet_contract_address": SerializedParam { description: "Starknet contract address in ethereum.", content: DefaultValue(String("0xc662c410C0ECf747543f5bA90660f6ABeBD9C8c4")), privacy: Public }, "batcher_config.block_builder_config.bouncer_config.block_max_capacity.l1_gas": SerializedParam { description: "An upper bound on the total l1_gas used in a block.", content: DefaultValue(Number(2500000)), privacy: Public }, "batcher_config.block_builder_config.bouncer_config.block_max_capacity.message_segment_length": SerializedParam { description: "An upper bound on the message segment length in a block.", content: DefaultValue(Number(3700)), privacy: Public }, "batcher_config.block_builder_config.bouncer_config.block_max_capacity.n_events": SerializedParam { description: "An upper bound on the total number of events generated in a block.", content: DefaultValue(Number(5000)), privacy: Public }, "batcher_config.block_builder_config.bouncer_config.block_max_capacity.sierra_gas": SerializedParam { description: "An upper bound on the total sierra_gas used in a block.", content: DefaultValue(Number(17000000)), privacy: Public }, "batcher_config.block_builder_config.bouncer_config.block_max_capacity.state_diff_size": SerializedParam { description: "An upper bound on the total state diff size in a block.", content: DefaultValue(Number(4000)), privacy: Public }, "batcher_config.block_builder_config.chain_info.chain_id": SerializedParam { description: "The chain ID of the StarkNet chain.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "batcher_config.block_builder_config.chain_info.fee_token_addresses.eth_fee_token_address": SerializedParam { description: "Address of the ETH fee token.", content: DefaultValue(String("0x1001")), privacy: Public }, "batcher_config.block_builder_config.chain_info.fee_token_addresses.strk_fee_token_address": SerializedParam { description: "Address of the STRK fee token.", content: DefaultValue(String("0x1002")), privacy: Public }, "batcher_config.block_builder_config.execute_config.concurrency_config.chunk_size": SerializedParam { description: "The size of the transaction chunk executed in parallel.", content: DefaultValue(Number(64)), privacy: Public }, "batcher_config.block_builder_config.execute_config.concurrency_config.enabled": SerializedParam { description: "Enables concurrency of transaction execution.", content: DefaultValue(Bool(true)), privacy: Public }, "batcher_config.block_builder_config.execute_config.concurrency_config.n_workers": SerializedParam { description: "Number of parallel transaction execution workers.", content: DefaultValue(Number(4)), privacy: Public }, "batcher_config.block_builder_config.execute_config.stack_size": SerializedParam { description: "The thread stack size (proportional to the maximal gas of a transaction).", content: DefaultValue(Number(62914560)), privacy: Public }, "batcher_config.block_builder_config.tx_chunk_size": SerializedParam { description: "The size of the transaction chunk.", content: DefaultValue(Number(100)), privacy: Public }, "batcher_config.block_builder_config.versioned_constants_overrides.invoke_tx_max_n_steps": SerializedParam { description: "Maximum number of steps the invoke function is allowed to run.", content: DefaultValue(Number(10000000)), privacy: Public }, "batcher_config.block_builder_config.versioned_constants_overrides.max_n_events": SerializedParam { description: "Maximum number of events that can be emitted from the transation.", content: DefaultValue(Number(1000)), privacy: Public }, "batcher_config.block_builder_config.versioned_constants_overrides.max_recursion_depth": SerializedParam { description: "Maximum recursion depth for nested calls during blockifier validation.", content: DefaultValue(Number(50)), privacy: Public }, "batcher_config.block_builder_config.versioned_constants_overrides.validate_max_n_steps": SerializedParam { description: "Maximum number of steps the validation function is allowed to run.", content: DefaultValue(Number(1000000)), privacy: Public }, "batcher_config.contract_class_manager_config.cairo_native_run_config.channel_size": SerializedParam { description: "The size of the compilation request channel.", content: DefaultValue(Number(2000)), privacy: Public }, "batcher_config.contract_class_manager_config.cairo_native_run_config.run_cairo_native": SerializedParam { description: "Enables Cairo native execution.", content: DefaultValue(Bool(false)), privacy: Public }, "batcher_config.contract_class_manager_config.cairo_native_run_config.wait_on_native_compilation": SerializedParam { description: "Block Sequencer main program while compiling sierra, for testing.", content: DefaultValue(Bool(false)), privacy: Public }, "batcher_config.contract_class_manager_config.contract_cache_size": SerializedParam { description: "The size of the global contract cache.", content: DefaultValue(Number(600)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.max_casm_bytecode_size": SerializedParam { description: "Limitation of compiled casm bytecode size.", content: DefaultValue(Number(81920)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.max_cpu_time": SerializedParam { description: "Limitation of compilation cpu time (seconds).", content: DefaultValue(Number(20)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.max_memory_usage": SerializedParam { description: "Limitation of compilation process's virtual memory (bytes).", content: DefaultValue(Number(5368709120)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.max_native_bytecode_size": SerializedParam { description: "Limitation of compiled native bytecode size.", content: DefaultValue(Number(15728640)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.optimization_level": SerializedParam { description: "The level of optimization to apply during compilation.", content: DefaultValue(Number(2)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.panic_on_compilation_failure": SerializedParam { description: "Whether to panic on compilation failure.", content: DefaultValue(Bool(false)), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.sierra_to_native_compiler_path": SerializedParam { description: "The path to the Sierra-to-Native compiler binary.", content: DefaultValue(String("")), privacy: Public }, "batcher_config.contract_class_manager_config.native_compiler_config.sierra_to_native_compiler_path.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(true)), privacy: TemporaryValue }, "batcher_config.input_stream_content_buffer_size": SerializedParam { description: "Sets the buffer size for the input transaction channel. Adding more transactions beyond this limit will block until space is available.", content: DefaultValue(Number(400)), privacy: Public }, "batcher_config.max_l1_handler_txs_per_block_proposal": SerializedParam { description: "The maximum number of L1 handler transactions to include in a block proposal.", content: DefaultValue(Number(3)), privacy: Public }, "batcher_config.outstream_content_buffer_size": SerializedParam { description: "The maximum number of items to include in a single get_proposal_content response.", content: DefaultValue(Number(100)), privacy: Public }, "batcher_config.storage.db_config.chain_id": SerializedParam { description: "The chain to follow. For more details see https://docs.starknet.io/documentation/architecture_and_concepts/Blocks/transactions/#chain-id.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "batcher_config.storage.db_config.enforce_file_exists": SerializedParam { description: "Whether to enforce that the path exists. If true, `open_env` fails when the mdbx.dat file does not exist.", content: DefaultValue(Bool(false)), privacy: Public }, "batcher_config.storage.db_config.growth_step": SerializedParam { description: "The growth step in bytes, must be greater than zero to allow the database to grow.", content: DefaultValue(Number(67108864)), privacy: Public }, "batcher_config.storage.db_config.max_size": SerializedParam { description: "The maximum size of the node's storage in bytes.", content: DefaultValue(Number(34359738368)), privacy: Public }, "batcher_config.storage.db_config.min_size": SerializedParam { description: "The minimum size of the node's storage in bytes.", content: DefaultValue(Number(1048576)), privacy: Public }, "batcher_config.storage.db_config.path_prefix": SerializedParam { description: "Prefix of the path of the node's storage directory, the storage file path will be <path_prefix>/<chain_id>. The path is not created automatically.", content: DefaultValue(String("/tmp/.tmp5SUm56")), privacy: Public }, "batcher_config.storage.mmap_file_config.growth_step": SerializedParam { description: "The growth step in bytes, must be greater than max_object_size.", content: DefaultValue(Number(1048576)), privacy: Public }, "batcher_config.storage.mmap_file_config.max_object_size": SerializedParam { description: "The maximum size of a single object in the file in bytes", content: DefaultValue(Number(65536)), privacy: Public }, "batcher_config.storage.mmap_file_config.max_size": SerializedParam { description: "The maximum size of a memory mapped file in bytes. Must be greater than growth_step.", content: DefaultValue(Number(16777216)), privacy: Public }, "batcher_config.storage.scope": SerializedParam { description: "The categories of data saved in storage.", content: DefaultValue(String("StateOnly")), privacy: Public }, "class_manager_config.class_manager_config.cached_class_storage_config.class_cache_size": SerializedParam { description: "Contract classes cache size.", content: DefaultValue(Number(100)), privacy: Public }, "class_manager_config.class_manager_config.cached_class_storage_config.deprecated_class_cache_size": SerializedParam { description: "Deprecated contract classes cache size.", content: DefaultValue(Number(100)), privacy: Public }, "class_manager_config.class_storage_config.class_hash_storage_config.enforce_file_exists": SerializedParam { description: "Whether to enforce that the above path exists.", content: DefaultValue(Bool(false)), privacy: Public }, "class_manager_config.class_storage_config.class_hash_storage_config.max_size": SerializedParam { description: "The maximum size of the class hash storage in bytes.", content: DefaultValue(Number(1048576)), privacy: Public }, "class_manager_config.class_storage_config.class_hash_storage_config.path_prefix": SerializedParam { description: "Prefix of the path of class hash storage directory.", content: DefaultValue(String("/tmp/.tmpAqwCgl")), privacy: Public }, "class_manager_config.class_storage_config.persistent_root": SerializedParam { description: "Path to the node's class storage directory.", content: DefaultValue(String("/tmp/.tmpc2EWO4")), privacy: Public }, "compiler_config.max_casm_bytecode_size": SerializedParam { description: "Limitation of compiled casm bytecode size.", content: DefaultValue(Number(81920)), privacy: Public }, "compiler_config.max_cpu_time": SerializedParam { description: "Limitation of compilation cpu time (seconds).", content: DefaultValue(Number(20)), privacy: Public }, "compiler_config.max_memory_usage": SerializedParam { description: "Limitation of compilation process's virtual memory (bytes).", content: DefaultValue(Number(5368709120)), privacy: Public }, "compiler_config.max_native_bytecode_size": SerializedParam { description: "Limitation of compiled native bytecode size.", content: DefaultValue(Number(15728640)), privacy: Public }, "compiler_config.optimization_level": SerializedParam { description: "The level of optimization to apply during compilation.", content: DefaultValue(Number(2)), privacy: Public }, "compiler_config.panic_on_compilation_failure": SerializedParam { description: "Whether to panic on compilation failure.", content: DefaultValue(Bool(false)), privacy: Public }, "compiler_config.sierra_to_native_compiler_path": SerializedParam { description: "The path to the Sierra-to-Native compiler binary.", content: DefaultValue(String("")), privacy: Public }, "compiler_config.sierra_to_native_compiler_path.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(true)), privacy: TemporaryValue }, "components.batcher.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("LocalExecutionWithRemoteDisabled")), privacy: Public }, "components.batcher.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("0.0.0.0")), privacy: Public }, "components.batcher.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.batcher.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.batcher.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(0)), privacy: Public }, "components.batcher.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.batcher.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.batcher.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.batcher.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("localhost")), privacy: Public }, "components.class_manager.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("LocalExecutionWithRemoteDisabled")), privacy: Public }, "components.class_manager.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("0.0.0.0")), privacy: Public }, "components.class_manager.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.class_manager.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.class_manager.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(0)), privacy: Public }, "components.class_manager.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.class_manager.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.class_manager.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.class_manager.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("localhost")), privacy: Public }, "components.consensus_manager.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("Enabled")), privacy: Public }, "components.gateway.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("LocalExecutionWithRemoteDisabled")), privacy: Public }, "components.gateway.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("0.0.0.0")), privacy: Public }, "components.gateway.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.gateway.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.gateway.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(0)), privacy: Public }, "components.gateway.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.gateway.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.gateway.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.gateway.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("localhost")), privacy: Public }, "components.http_server.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("Enabled")), privacy: Public }, "components.l1_provider.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("LocalExecutionWithRemoteDisabled")), privacy: Public }, "components.l1_provider.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("0.0.0.0")), privacy: Public }, "components.l1_provider.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.l1_provider.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.l1_provider.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(0)), privacy: Public }, "components.l1_provider.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.l1_provider.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.l1_provider.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.l1_provider.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("localhost")), privacy: Public }, "components.l1_scraper.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("Enabled")), privacy: Public }, "components.mempool.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("LocalExecutionWithRemoteDisabled")), privacy: Public }, "components.mempool.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("0.0.0.0")), privacy: Public }, "components.mempool.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.mempool.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.mempool.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(0)), privacy: Public }, "components.mempool.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.mempool.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.mempool.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.mempool.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("localhost")), privacy: Public }, "components.mempool_p2p.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("LocalExecutionWithRemoteDisabled")), privacy: Public }, "components.mempool_p2p.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("0.0.0.0")), privacy: Public }, "components.mempool_p2p.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.mempool_p2p.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.mempool_p2p.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(0)), privacy: Public }, "components.mempool_p2p.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.mempool_p2p.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.mempool_p2p.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.mempool_p2p.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("localhost")), privacy: Public }, "components.monitoring_endpoint.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("Enabled")), privacy: Public }, "components.sierra_compiler.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("LocalExecutionWithRemoteDisabled")), privacy: Public }, "components.sierra_compiler.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("0.0.0.0")), privacy: Public }, "components.sierra_compiler.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.sierra_compiler.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.sierra_compiler.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(0)), privacy: Public }, "components.sierra_compiler.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.sierra_compiler.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.sierra_compiler.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.sierra_compiler.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("localhost")), privacy: Public }, "components.state_sync.execution_mode": SerializedParam { description: "The component execution mode.", content: DefaultValue(String("LocalExecutionWithRemoteDisabled")), privacy: Public }, "components.state_sync.ip": SerializedParam { description: "Binding address of the remote component server.", content: DefaultValue(String("0.0.0.0")), privacy: Public }, "components.state_sync.local_server_config.channel_buffer_size": SerializedParam { description: "The communication channel buffer size.", content: DefaultValue(Number(32)), privacy: Public }, "components.state_sync.max_concurrency": SerializedParam { description: "The maximum number of concurrent requests handling.", content: DefaultValue(Number(10)), privacy: Public }, "components.state_sync.port": SerializedParam { description: "Listening port of the remote component server.", content: DefaultValue(Number(0)), privacy: Public }, "components.state_sync.remote_client_config.idle_connections": SerializedParam { description: "The maximum number of idle connections to keep alive.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "components.state_sync.remote_client_config.idle_timeout": SerializedParam { description: "The duration in seconds to keep an idle connection open before closing.", content: DefaultValue(Number(90)), privacy: Public }, "components.state_sync.remote_client_config.retries": SerializedParam { description: "The max number of retries for sending a message.", content: DefaultValue(Number(3)), privacy: Public }, "components.state_sync.url": SerializedParam { description: "URL of the remote component server.", content: DefaultValue(String("localhost")), privacy: Public }, "consensus_manager_config.broadcast_buffer_size": SerializedParam { description: "The buffer size for the broadcast channel.", content: DefaultValue(Number(10000)), privacy: Public }, "consensus_manager_config.cende_config.recorder_url": SerializedParam { description: "The URL of the Pythonic cende_recorder", content: DefaultValue(String("http://127.0.0.1:55060/")), privacy: Private }, "consensus_manager_config.cende_config.skip_write_height": SerializedParam { description: "A height that the consensus can skip writing to Aerospike. Needed for booting up (no previous height blob to write) or to handle extreme cases (all the nodes failed).", content: DefaultValue(Number(1)), privacy: Private }, "consensus_manager_config.cende_config.skip_write_height.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(false)), privacy: TemporaryValue }, "consensus_manager_config.consensus_config.future_height_limit": SerializedParam { description: "How many heights in the future should we cache.", content: DefaultValue(Number(10)), privacy: Public }, "consensus_manager_config.consensus_config.future_height_round_limit": SerializedParam { description: "How many rounds should we cache for future heights.", content: DefaultValue(Number(1)), privacy: Public }, "consensus_manager_config.consensus_config.future_round_limit": SerializedParam { description: "How many rounds in the future (for current height) should we cache.", content: DefaultValue(Number(10)), privacy: Public }, "consensus_manager_config.consensus_config.startup_delay": SerializedParam { description: "Delay (seconds) before starting consensus to give time for network peering.", content: DefaultValue(Number(15)), privacy: Public }, "consensus_manager_config.consensus_config.sync_retry_interval": SerializedParam { description: "The duration (seconds) between sync attempts.", content: DefaultValue(Number(1.0)), privacy: Public }, "consensus_manager_config.consensus_config.timeouts.precommit_timeout": SerializedParam { description: "The timeout (seconds) for a precommit.", content: DefaultValue(Number(3.0)), privacy: Public }, "consensus_manager_config.consensus_config.timeouts.prevote_timeout": SerializedParam { description: "The timeout (seconds) for a prevote.", content: DefaultValue(Number(3.0)), privacy: Public }, "consensus_manager_config.consensus_config.timeouts.proposal_timeout": SerializedParam { description: "The timeout (seconds) for a proposal.", content: DefaultValue(Number(9.0)), privacy: Public }, "consensus_manager_config.consensus_config.validator_id": SerializedParam { description: "The validator id of the node.", content: DefaultValue(String("0x65")), privacy: Public }, "consensus_manager_config.context_config.block_timestamp_window": SerializedParam { description: "Maximum allowed deviation (seconds) of a proposed block's timestamp from the current time.", content: DefaultValue(Number(1)), privacy: Public }, "consensus_manager_config.context_config.chain_id": SerializedParam { description: "The chain id of the Starknet chain.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "consensus_manager_config.context_config.l1_da_mode": SerializedParam { description: "The data availability mode, true: Blob, false: Calldata.", content: DefaultValue(Bool(true)), privacy: Public }, "consensus_manager_config.context_config.num_validators": SerializedParam { description: "The number of validators.", content: DefaultValue(Number(5)), privacy: Public }, "consensus_manager_config.context_config.proposal_buffer_size": SerializedParam { description: "The buffer size for streaming outbound proposals.", content: DefaultValue(Number(100)), privacy: Public }, "consensus_manager_config.immediate_active_height": SerializedParam { description: "The height at which the node may actively participate in consensus.", content: DefaultValue(Number(1)), privacy: Public }, "consensus_manager_config.network_config.advertised_multiaddr": SerializedParam { description: "The external address other peers see this node. If this is set, the node will not try to find out which addresses it has and will write this address as external instead", content: DefaultValue(String("")), privacy: Public }, "consensus_manager_config.network_config.advertised_multiaddr.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(true)), privacy: TemporaryValue }, "consensus_manager_config.network_config.bootstrap_peer_multiaddr": SerializedParam { description: "The multiaddress of the peer node. It should include the peer's id. For more info: https://docs.libp2p.io/concepts/fundamentals/peers/", content: DefaultValue(String("/ip4/127.0.0.1/tcp/55550/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5")), privacy: Public }, "consensus_manager_config.network_config.bootstrap_peer_multiaddr.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(false)), privacy: TemporaryValue }, "consensus_manager_config.network_config.chain_id": SerializedParam { description: "The chain to follow. For more details see https://docs.starknet.io/documentation/architecture_and_concepts/Blocks/transactions/#chain-id.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "consensus_manager_config.network_config.discovery_config.bootstrap_dial_retry_config.base_delay_millis": SerializedParam { description: "The base delay in milliseconds for the exponential backoff strategy.", content: DefaultValue(Number(2)), privacy: Public }, "consensus_manager_config.network_config.discovery_config.bootstrap_dial_retry_config.factor": SerializedParam { description: "The factor for the exponential backoff strategy.", content: DefaultValue(Number(5)), privacy: Public }, "consensus_manager_config.network_config.discovery_config.bootstrap_dial_retry_config.max_delay_seconds": SerializedParam { description: "The maximum delay in seconds for the exponential backoff strategy.", content: DefaultValue(Number(5)), privacy: Public }, "consensus_manager_config.network_config.discovery_config.heartbeat_interval": SerializedParam { description: "The interval between each discovery (Kademlia) query in milliseconds.", content: DefaultValue(Number(100)), privacy: Public }, "consensus_manager_config.network_config.idle_connection_timeout": SerializedParam { description: "Amount of time in seconds that a connection with no active sessions will stay alive.", content: DefaultValue(Number(120)), privacy: Public }, "consensus_manager_config.network_config.peer_manager_config.malicious_timeout_seconds": SerializedParam { description: "The duration in seconds a peer is blacklisted after being marked as malicious.", content: DefaultValue(Number(1)), privacy: Public }, "consensus_manager_config.network_config.peer_manager_config.unstable_timeout_millis": SerializedParam { description: "The duration in milliseconds a peer blacklisted after being reported as unstable.", content: DefaultValue(Number(1000)), privacy: Public }, "consensus_manager_config.network_config.port": SerializedParam { description: "The port that the node listens on for incoming tcp connections.", content: DefaultValue(Number(55551)), privacy: Public }, "consensus_manager_config.network_config.secret_key": SerializedParam { description: "The secret key used for building the peer id. If it's an empty string a random one will be used.", content: DefaultValue(String("")), privacy: Private }, "consensus_manager_config.network_config.session_timeout": SerializedParam { description: "Maximal time in seconds that each session can take before failing on timeout.", content: DefaultValue(Number(120)), privacy: Public }, "consensus_manager_config.proposals_topic": SerializedParam { description: "The topic for consensus proposals.", content: DefaultValue(String("consensus_proposals")), privacy: Public }, "consensus_manager_config.revert_config.revert_up_to_and_including": SerializedParam { description: "The component will revert blocks up to this block number (including).", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "consensus_manager_config.revert_config.should_revert": SerializedParam { description: "If set true, the component would revert blocks and do nothing else.", content: DefaultValue(Bool(false)), privacy: Public }, "consensus_manager_config.votes_topic": SerializedParam { description: "The topic for consensus votes.", content: DefaultValue(String("consensus_votes")), privacy: Public }, "gateway_config.chain_info.chain_id": SerializedParam { description: "The chain ID of the StarkNet chain.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "gateway_config.chain_info.fee_token_addresses.eth_fee_token_address": SerializedParam { description: "Address of the ETH fee token.", content: DefaultValue(String("0x1001")), privacy: Public }, "gateway_config.chain_info.fee_token_addresses.strk_fee_token_address": SerializedParam { description: "Address of the STRK fee token.", content: DefaultValue(String("0x1002")), privacy: Public }, "gateway_config.stateful_tx_validator_config.max_nonce_for_validation_skip": SerializedParam { description: "Maximum nonce for which the validation is skipped.", content: DefaultValue(String("0x1")), privacy: Public }, "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.invoke_tx_max_n_steps": SerializedParam { description: "Maximum number of steps the invoke function is allowed to run.", content: DefaultValue(Number(10000000)), privacy: Public }, "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.max_n_events": SerializedParam { description: "Maximum number of events that can be emitted from the transation.", content: DefaultValue(Number(1000)), privacy: Public }, "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.max_recursion_depth": SerializedParam { description: "Maximum recursion depth for nested calls during blockifier validation.", content: DefaultValue(Number(50)), privacy: Public }, "gateway_config.stateful_tx_validator_config.versioned_constants_overrides.validate_max_n_steps": SerializedParam { description: "Maximum number of steps the validation function is allowed to run.", content: DefaultValue(Number(1000000)), privacy: Public }, "gateway_config.stateless_tx_validator_config.max_calldata_length": SerializedParam { description: "Limitation of calldata length.", content: DefaultValue(Number(10)), privacy: Public }, "gateway_config.stateless_tx_validator_config.max_contract_class_object_size": SerializedParam { description: "Limitation of contract class object size.", content: DefaultValue(Number(4089446)), privacy: Public }, "gateway_config.stateless_tx_validator_config.max_sierra_version.major": SerializedParam { description: "The major version of the configuration.", content: DefaultValue(Number(1)), privacy: Public }, "gateway_config.stateless_tx_validator_config.max_sierra_version.minor": SerializedParam { description: "The minor version of the configuration.", content: DefaultValue(Number(5)), privacy: Public }, "gateway_config.stateless_tx_validator_config.max_sierra_version.patch": SerializedParam { description: "The patch version of the configuration.", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "gateway_config.stateless_tx_validator_config.max_signature_length": SerializedParam { description: "Limitation of signature length.", content: DefaultValue(Number(2)), privacy: Public }, "gateway_config.stateless_tx_validator_config.min_sierra_version.major": SerializedParam { description: "The major version of the configuration.", content: DefaultValue(Number(1)), privacy: Public }, "gateway_config.stateless_tx_validator_config.min_sierra_version.minor": SerializedParam { description: "The minor version of the configuration.", content: DefaultValue(Number(1)), privacy: Public }, "gateway_config.stateless_tx_validator_config.min_sierra_version.patch": SerializedParam { description: "The patch version of the configuration.", content: DefaultValue(Number(0)), privacy: Public }, "gateway_config.stateless_tx_validator_config.validate_non_zero_l1_data_gas_fee": SerializedParam { description: "If true, validates that a transaction has non-zero L1 Data (Blob) resource bounds.", content: DefaultValue(Bool(false)), privacy: Public }, "gateway_config.stateless_tx_validator_config.validate_non_zero_l1_gas_fee": SerializedParam { description: "If true, validates that a transaction has non-zero L1 resource bounds.", content: DefaultValue(Bool(true)), privacy: Public }, "gateway_config.stateless_tx_validator_config.validate_non_zero_l2_gas_fee": SerializedParam { description: "If true, validates that a transaction has non-zero L2 resource bounds.", content: DefaultValue(Bool(false)), privacy: Public }, "http_server_config.ip": SerializedParam { description: "The http server ip.", content: DefaultValue(String("127.0.0.1")), privacy: Public }, "http_server_config.port": SerializedParam { description: "The http server port.", content: DefaultValue(Number(55062)), privacy: Public }, "l1_provider_config.bootstrap_catch_up_height": SerializedParam { description: "Height at which the provider should catch up to the bootstrapper.", content: DefaultValue(Number(0)), privacy: Public }, "l1_provider_config.provider_startup_height": SerializedParam { description: "Height at which the provider should start.", content: DefaultValue(Number(1)), privacy: Public }, "l1_provider_config.startup_sync_sleep_retry_interval": SerializedParam { description: "Interval in seconds between each retry of syncing with L2 during startup.", content: DefaultValue(Number(0.0)), privacy: Public }, "l1_scraper_config.chain_id": SerializedParam { description: "The chain to follow. For more details see https://docs.starknet.io/documentation/architecture_and_concepts/Blocks/transactions/#chain-id.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "l1_scraper_config.finality": SerializedParam { description: "Number of blocks to wait for finality", content: DefaultValue(Number(0)), privacy: Public }, "l1_scraper_config.polling_interval": SerializedParam { description: "Interval in Seconds between each scraping attempt of L1.", content: DefaultValue(Number(1)), privacy: Public }, "l1_scraper_config.startup_rewind_time": SerializedParam { description: "Duration to rewind from latest L1 block when starting scraping.", content: DefaultValue(Number(0)), privacy: Public }, "mempool_config.enable_fee_escalation": SerializedParam { description: "If true, transactions can be replaced with higher fee transactions.", content: DefaultValue(Bool(true)), privacy: Public }, "mempool_config.fee_escalation_percentage": SerializedParam { description: "Percentage increase for tip and max gas price to enable transaction replacement.", content: DefaultValue(Number(10)), privacy: Public }, "mempool_config.transaction_ttl": SerializedParam { description: "Time-to-live for transactions in the mempool, in seconds.", content: DefaultValue(Number(300)), privacy: Public }, "mempool_p2p_config.network_buffer_size": SerializedParam { description: "Network buffer size.", content: DefaultValue(Number(10000)), privacy: Public }, "mempool_p2p_config.network_config.advertised_multiaddr": SerializedParam { description: "The external address other peers see this node. If this is set, the node will not try to find out which addresses it has and will write this address as external instead", content: DefaultValue(String("")), privacy: Public }, "mempool_p2p_config.network_config.advertised_multiaddr.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(true)), privacy: TemporaryValue }, "mempool_p2p_config.network_config.bootstrap_peer_multiaddr": SerializedParam { description: "The multiaddress of the peer node. It should include the peer's id. For more info: https://docs.libp2p.io/concepts/fundamentals/peers/", content: DefaultValue(String("/ip4/127.0.0.1/tcp/55564/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5")), privacy: Public }, "mempool_p2p_config.network_config.bootstrap_peer_multiaddr.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(false)), privacy: TemporaryValue }, "mempool_p2p_config.network_config.chain_id": SerializedParam { description: "The chain to follow. For more details see https://docs.starknet.io/documentation/architecture_and_concepts/Blocks/transactions/#chain-id.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "mempool_p2p_config.network_config.discovery_config.bootstrap_dial_retry_config.base_delay_millis": SerializedParam { description: "The base delay in milliseconds for the exponential backoff strategy.", content: DefaultValue(Number(2)), privacy: Public }, "mempool_p2p_config.network_config.discovery_config.bootstrap_dial_retry_config.factor": SerializedParam { description: "The factor for the exponential backoff strategy.", content: DefaultValue(Number(5)), privacy: Public }, "mempool_p2p_config.network_config.discovery_config.bootstrap_dial_retry_config.max_delay_seconds": SerializedParam { description: "The maximum delay in seconds for the exponential backoff strategy.", content: DefaultValue(Number(5)), privacy: Public }, "mempool_p2p_config.network_config.discovery_config.heartbeat_interval": SerializedParam { description: "The interval between each discovery (Kademlia) query in milliseconds.", content: DefaultValue(Number(100)), privacy: Public }, "mempool_p2p_config.network_config.idle_connection_timeout": SerializedParam { description: "Amount of time in seconds that a connection with no active sessions will stay alive.", content: DefaultValue(Number(120)), privacy: Public }, "mempool_p2p_config.network_config.peer_manager_config.malicious_timeout_seconds": SerializedParam { description: "The duration in seconds a peer is blacklisted after being marked as malicious.", content: DefaultValue(Number(1)), privacy: Public }, "mempool_p2p_config.network_config.peer_manager_config.unstable_timeout_millis": SerializedParam { description: "The duration in milliseconds a peer blacklisted after being reported as unstable.", content: DefaultValue(Number(1000)), privacy: Public }, "mempool_p2p_config.network_config.port": SerializedParam { description: "The port that the node listens on for incoming tcp connections.", content: DefaultValue(Number(55565)), privacy: Public }, "mempool_p2p_config.network_config.secret_key": SerializedParam { description: "The secret key used for building the peer id. If it's an empty string a random one will be used.", content: DefaultValue(String("")), privacy: Private }, "mempool_p2p_config.network_config.session_timeout": SerializedParam { description: "Maximal time in seconds that each session can take before failing on timeout.", content: DefaultValue(Number(120)), privacy: Public }, "monitoring_endpoint_config.collect_metrics": SerializedParam { description: "If true, collect and return metrics in the monitoring endpoint.", content: DefaultValue(Bool(true)), privacy: Public }, "monitoring_endpoint_config.ip": SerializedParam { description: "The monitoring endpoint ip address.", content: DefaultValue(String("0.0.0.0")), privacy: Public }, "monitoring_endpoint_config.port": SerializedParam { description: "The monitoring endpoint port.", content: DefaultValue(Number(55061)), privacy: Public }, "state_sync_config.central_sync_client_config.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(true)), privacy: TemporaryValue }, "state_sync_config.central_sync_client_config.central_source_config.class_cache_size": SerializedParam { description: "Size of class cache, must be a positive integer.", content: DefaultValue(Number(100)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.concurrent_requests": SerializedParam { description: "Maximum number of concurrent requests to Starknet feeder-gateway for getting a type of data (for example, blocks).", content: DefaultValue(Number(10)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.http_headers": SerializedParam { description: "'k1:v1 k2:v2 ...' headers for SN-client.", content: DefaultValue(String("")), privacy: Private }, "state_sync_config.central_sync_client_config.central_source_config.max_classes_to_download": SerializedParam { description: "Maximum number of classes to download at a given time.", content: DefaultValue(Number(20)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.max_state_updates_to_download": SerializedParam { description: "Maximum number of state updates to download at a given time.", content: DefaultValue(Number(20)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.max_state_updates_to_store_in_memory": SerializedParam { description: "Maximum number of state updates to store in memory at a given time.", content: DefaultValue(Number(20)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.retry_config.max_retries": SerializedParam { description: "Maximum number of retries before the node stops retrying.", content: DefaultValue(Number(10)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.retry_config.retry_base_millis": SerializedParam { description: "Base waiting time after a failed request. After that, the time increases exponentially.", content: DefaultValue(Number(30)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.retry_config.retry_max_delay_millis": SerializedParam { description: "Max waiting time after a failed request.", content: DefaultValue(Number(30000)), privacy: Public }, "state_sync_config.central_sync_client_config.central_source_config.starknet_url": SerializedParam { description: "Starknet feeder-gateway URL. It should match chain_id.", content: DefaultValue(String("https://alpha-mainnet.starknet.io/")), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.base_layer_propagation_sleep_duration": SerializedParam { description: "Time in seconds to poll the base layer to get the latest proved block.", content: DefaultValue(Number(10)), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.block_propagation_sleep_duration": SerializedParam { description: "Time in seconds before checking for a new block after the node is synchronized.", content: DefaultValue(Number(2)), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.blocks_max_stream_size": SerializedParam { description: "Max amount of blocks to download in a stream.", content: DefaultValue(Number(1000)), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.collect_pending_data": SerializedParam { description: "Whether to collect data on pending blocks.", content: DefaultValue(Bool(false)), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.recoverable_error_sleep_duration": SerializedParam { description: "Waiting time in seconds before restarting synchronization after a recoverable error.", content: DefaultValue(Number(3)), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.state_updates_max_stream_size": SerializedParam { description: "Max amount of state updates to download in a stream.", content: DefaultValue(Number(1000)), privacy: Public }, "state_sync_config.central_sync_client_config.sync_config.verify_blocks": SerializedParam { description: "Whether to verify incoming blocks.", content: DefaultValue(Bool(true)), privacy: Public }, "state_sync_config.network_config.advertised_multiaddr": SerializedParam { description: "The external address other peers see this node. If this is set, the node will not try to find out which addresses it has and will write this address as external instead", content: DefaultValue(String("")), privacy: Public }, "state_sync_config.network_config.advertised_multiaddr.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(true)), privacy: TemporaryValue }, "state_sync_config.network_config.bootstrap_peer_multiaddr": SerializedParam { description: "The multiaddress of the peer node. It should include the peer's id. For more info: https://docs.libp2p.io/concepts/fundamentals/peers/", content: DefaultValue(String("/ip4/127.0.0.1/tcp/55557/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5")), privacy: Public }, "state_sync_config.network_config.bootstrap_peer_multiaddr.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(false)), privacy: TemporaryValue }, "state_sync_config.network_config.chain_id": SerializedParam { description: "The chain to follow. For more details see https://docs.starknet.io/documentation/architecture_and_concepts/Blocks/transactions/#chain-id.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "state_sync_config.network_config.discovery_config.bootstrap_dial_retry_config.base_delay_millis": SerializedParam { description: "The base delay in milliseconds for the exponential backoff strategy.", content: DefaultValue(Number(2)), privacy: Public }, "state_sync_config.network_config.discovery_config.bootstrap_dial_retry_config.factor": SerializedParam { description: "The factor for the exponential backoff strategy.", content: DefaultValue(Number(5)), privacy: Public }, "state_sync_config.network_config.discovery_config.bootstrap_dial_retry_config.max_delay_seconds": SerializedParam { description: "The maximum delay in seconds for the exponential backoff strategy.", content: DefaultValue(Number(5)), privacy: Public }, "state_sync_config.network_config.discovery_config.heartbeat_interval": SerializedParam { description: "The interval between each discovery (Kademlia) query in milliseconds.", content: DefaultValue(Number(100)), privacy: Public }, "state_sync_config.network_config.idle_connection_timeout": SerializedParam { description: "Amount of time in seconds that a connection with no active sessions will stay alive.", content: DefaultValue(Number(120)), privacy: Public }, "state_sync_config.network_config.peer_manager_config.malicious_timeout_seconds": SerializedParam { description: "The duration in seconds a peer is blacklisted after being marked as malicious.", content: DefaultValue(Number(1)), privacy: Public }, "state_sync_config.network_config.peer_manager_config.unstable_timeout_millis": SerializedParam { description: "The duration in milliseconds a peer blacklisted after being reported as unstable.", content: DefaultValue(Number(1000)), privacy: Public }, "state_sync_config.network_config.port": SerializedParam { description: "The port that the node listens on for incoming tcp connections.", content: DefaultValue(Number(55558)), privacy: Public }, "state_sync_config.network_config.secret_key": SerializedParam { description: "The secret key used for building the peer id. If it's an empty string a random one will be used.", content: DefaultValue(String("")), privacy: Private }, "state_sync_config.network_config.session_timeout": SerializedParam { description: "Maximal time in seconds that each session can take before failing on timeout.", content: DefaultValue(Number(120)), privacy: Public }, "state_sync_config.p2p_sync_client_config.#is_none": SerializedParam { description: "Flag for an optional field.", content: DefaultValue(Bool(false)), privacy: TemporaryValue }, "state_sync_config.p2p_sync_client_config.buffer_size": SerializedParam { description: "Size of the buffer for read from the storage and for incoming responses.", content: DefaultValue(Number(100000)), privacy: Public }, "state_sync_config.p2p_sync_client_config.num_block_classes_per_query": SerializedParam { description: "The maximum amount of block's classes to ask from peers in each iteration.", content: DefaultValue(Number(100)), privacy: Public }, "state_sync_config.p2p_sync_client_config.num_block_state_diffs_per_query": SerializedParam { description: "The maximum amount of block's state diffs to ask from peers in each iteration.", content: DefaultValue(Number(100)), privacy: Public }, "state_sync_config.p2p_sync_client_config.num_block_transactions_per_query": SerializedParam { description: "The maximum amount of blocks to ask their transactions from peers in each iteration.", content: DefaultValue(Number(100)), privacy: Public }, "state_sync_config.p2p_sync_client_config.num_headers_per_query": SerializedParam { description: "The maximum amount of headers to ask from peers in each iteration.", content: DefaultValue(Number(10000)), privacy: Public }, "state_sync_config.p2p_sync_client_config.wait_period_for_new_data": SerializedParam { description: "Time in millisseconds to wait when a query returned with partial data before sending a new query", content: DefaultValue(Number(50)), privacy: Public }, "state_sync_config.p2p_sync_client_config.wait_period_for_other_protocol": SerializedParam { description: "Time in millisseconds to wait for a dependency protocol to advance (e.g.state diff sync depends on header sync)", content: DefaultValue(Number(50)), privacy: Public }, "state_sync_config.revert_config.revert_up_to_and_including": SerializedParam { description: "The component will revert blocks up to this block number (including).", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "state_sync_config.revert_config.should_revert": SerializedParam { description: "If set true, the component would revert blocks and do nothing else.", content: DefaultValue(Bool(false)), privacy: Public }, "state_sync_config.storage_config.db_config.chain_id": SerializedParam { description: "The chain to follow. For more details see https://docs.starknet.io/documentation/architecture_and_concepts/Blocks/transactions/#chain-id.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "state_sync_config.storage_config.db_config.enforce_file_exists": SerializedParam { description: "Whether to enforce that the path exists. If true, `open_env` fails when the mdbx.dat file does not exist.", content: DefaultValue(Bool(false)), privacy: Public }, "state_sync_config.storage_config.db_config.growth_step": SerializedParam { description: "The growth step in bytes, must be greater than zero to allow the database to grow.", content: DefaultValue(Number(67108864)), privacy: Public }, "state_sync_config.storage_config.db_config.max_size": SerializedParam { description: "The maximum size of the node's storage in bytes.", content: DefaultValue(Number(34359738368)), privacy: Public }, "state_sync_config.storage_config.db_config.min_size": SerializedParam { description: "The minimum size of the node's storage in bytes.", content: DefaultValue(Number(1048576)), privacy: Public }, "state_sync_config.storage_config.db_config.path_prefix": SerializedParam { description: "Prefix of the path of the node's storage directory, the storage file path will be <path_prefix>/<chain_id>. The path is not created automatically.", content: DefaultValue(String("/tmp/.tmpTCrQie")), privacy: Public }, "state_sync_config.storage_config.mmap_file_config.growth_step": SerializedParam { description: "The growth step in bytes, must be greater than max_object_size.", content: DefaultValue(Number(1048576)), privacy: Public }, "state_sync_config.storage_config.mmap_file_config.max_object_size": SerializedParam { description: "The maximum size of a single object in the file in bytes", content: DefaultValue(Number(65536)), privacy: Public }, "state_sync_config.storage_config.mmap_file_config.max_size": SerializedParam { description: "The maximum size of a memory mapped file in bytes. Must be greater than growth_step.", content: DefaultValue(Number(16777216)), privacy: Public }, "state_sync_config.storage_config.scope": SerializedParam { description: "The categories of data saved in storage.", content: DefaultValue(String("FullArchive")), privacy: Public }}
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.184318Z[0m [32m INFO[0m [2mpapyrus_storage[0m[2m:[0m Opening storage: /tmp/.tmpCcrqF1
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.187083Z[0m [32m INFO[0m [2mpapyrus_storage[0m[2m:[0m Opening s0)), privacy: Public }, "state_sync_config.p2p_sync_client_config.num_block_transactions_per_query": SerializedParam { description: "The maximum amount of blocks to ask their transactions from peers in each iteration.", content: DefaultValue(Number(100)), privacy: Public }, "state_sync_config.p2p_sync_client_config.num_headers_per_query": SerializedParam { description: "The maximum amount of headers to ask from peers in each iteration.", content: DefaultValue(Number(10000)), privacy: Public }, "state_sync_config.p2p_sync_client_config.wait_period_for_new_data": SerializedParam { description: "Time in millisseconds to wait when a query returned with partial data before sending a new query", content: DefaultValue(Number(50)), privacy: Public }, "state_sync_config.p2p_sync_client_config.wait_period_for_other_protocol": SerializedParam { description: "Time in millisseconds to wait for a dependency protocol to advance (e.g.state diff sync depends on header sync)", content: DefaultValue(Number(50)), privacy: Public }, "state_sync_config.revert_config.revert_up_to_and_including": SerializedParam { description: "The component will revert blocks up to this block number (including).", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "state_sync_config.revert_config.should_revert": SerializedParam { description: "If set true, the component would revert blocks and do nothing else.", content: DefaultValue(Bool(false)), privacy: Public }, "state_sync_config.storage_config.db_config.chain_id": SerializedParam { description: "The chain to follow. For more details see https://docs.starknet.io/documentation/architecture_and_concepts/Blocks/transactions/#chain-id.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "state_sync_config.storage_config.db_config.enforce_file_exists": SerializedParam { description: "Whether to enforce that the path exists. If true, `open_env` fails when the mdbx.dat file does not exist.", content: DefaultValue(Bool(false)), privacy: Public }, "state_sync_config.storage_config.db_config.growth_step": SerializedParam { description: "The growth step in bytes, must be greater than zero to allow the database to grow.", content: DefaultValue(Number(67108864)), privacy: Public }, "state_sync_config.storage_config.db_config.max_size": SerializedParam { description: "The maximum size of the node's storage in bytes.", content: DefaultValue(Number(34359738368)), privacy: Public }, "state_sync_config.storage_config.db_config.min_size": SerializedParam { description: "The minimum size of the node's storage in bytes.", content: DefaultValue(Number(1048576)), privacy: Public }, "state_sync_config.storage_config.db_config.path_prefix": SerializedParam { description: "Prefix of the path of the node's storage directory, the storage file path will be <path_prefix>/<chain_id>. The path is not created automatically.", content: DefaultValue(String("/tmp/.tmpvIYuWt")), privacy: Public }, "state_sync_config.storage_config.mmap_file_config.growth_step": SerializedParam { description: "The growth step in bytes, must be greater than max_object_size.", content: DefaultValue(Number(1048576)), privacy: Public }, "state_sync_config.storage_config.mmap_file_config.max_object_size": SerializedParam { description: "The maximum size of a single object in the file in bytes", content: DefaultValue(Number(65536)), privacy: Public }, "state_sync_config.storage_config.mmap_file_config.max_size": SerializedParam { description: "The maximum size of a memory mapped file in bytes. Must be greater than growth_step.", content: DefaultValue(Number(16777216)), privacy: Public }, "state_sync_config.storage_config.scope": SerializedParam { description: "The categories of data saved in storage.", content: DefaultValue(String("FullArchive")), privacy: Public }}
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.184663Z[0m [32m INFO[0m [2mpapyrus_storage[0m[2m:[0m Opening storage: /tmp/.tmp5SUm56
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.187259Z[0m [32m INFO[0m [2mpapyrus_storage[0m[2m:[0m Opening sunt of blocks to ask their transactions from peers in each iteration.", content: DefaultValue(Number(100)), privacy: Public }, "state_sync_config.p2p_sync_client_config.num_headers_per_query": SerializedParam { description: "The maximum amount of headers to ask from peers in each iteration.", content: DefaultValue(Number(10000)), privacy: Public }, "state_sync_config.p2p_sync_client_config.wait_period_for_new_data": SerializedParam { description: "Time in millisseconds to wait when a query returned with partial data before sending a new query", content: DefaultValue(Number(50)), privacy: Public }, "state_sync_config.p2p_sync_client_config.wait_period_for_other_protocol": SerializedParam { description: "Time in millisseconds to wait for a dependency protocol to advance (e.g.state diff sync depends on header sync)", content: DefaultValue(Number(50)), privacy: Public }, "state_sync_config.revert_config.revert_up_to_and_including": SerializedParam { description: "The component will revert blocks up to this block number (including).", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "state_sync_config.revert_config.should_revert": SerializedParam { description: "If set true, the component would revert blocks and do nothing else.", content: DefaultValue(Bool(false)), privacy: Public }, "state_sync_config.storage_config.db_config.chain_id": SerializedParam { description: "The chain to follow. For more details see https://docs.starknet.io/documentation/architecture_and_concepts/Blocks/transactions/#chain-id.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "state_sync_config.storage_config.db_config.enforce_file_exists": SerializedParam { description: "Whether to enforce that the path exists. If true, `open_env` fails when the mdbx.dat file does not exist.", content: DefaultValue(Bool(false)), privacy: Public }, "state_sync_config.storage_config.db_config.growth_step": SerializedParam { description: "The growth step in bytes, must be greater than zero to allow the database to grow.", content: DefaultValue(Number(67108864)), privacy: Public }, "state_sync_config.storage_config.db_config.max_size": SerializedParam { description: "The maximum size of the node's storage in bytes.", content: DefaultValue(Number(34359738368)), privacy: Public }, "state_sync_config.storage_config.db_config.min_size": SerializedParam { description: "The minimum size of the node's storage in bytes.", content: DefaultValue(Number(1048576)), privacy: Public }, "state_sync_config.storage_config.db_config.path_prefix": SerializedParam { description: "Prefix of the path of the node's storage directory, the storage file path will be <path_prefix>/<chain_id>. The path is not created automatically.", content: DefaultValue(String("/tmp/.tmpontX6C")), privacy: Public }, "state_sync_config.storage_config.mmap_file_config.growth_step": SerializedParam { description: "The growth step in bytes, must be greater than max_object_size.", content: DefaultValue(Number(1048576)), privacy: Public }, "state_sync_config.storage_config.mmap_file_config.max_object_size": SerializedParam { description: "The maximum size of a single object in the file in bytes", content: DefaultValue(Number(65536)), privacy: Public }, "state_sync_config.storage_config.mmap_file_config.max_size": SerializedParam { description: "The maximum size of a memory mapped file in bytes. Must be greater than growth_step.", content: DefaultValue(Number(16777216)), privacy: Public }, "state_sync_config.storage_config.scope": SerializedParam { description: "The categories of data saved in storage.", content: DefaultValue(String("FullArchive")), privacy: Public }}
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.184742Z[0m [32m INFO[0m [2mpapyrus_storage[0m[2m:[0m Opening storage: /tmp/.tmpnKRux4
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.188252Z[0m [32m INFO[0m [2mpapyrus_storage[0m[2m:[0m Opening storage: /tmp/.tmpontX6C
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.192812Z[0m [32m INFO[0m [2mlibp2p_swarm[0m[2m:[0m [3mlocal_peer_iunt of blocks to ask their transactions from peers in each iteration.", content: DefaultValue(Number(100)), privacy: Public }, "state_sync_config.p2p_sync_client_config.num_headers_per_query": SerializedParam { description: "The maximum amount of headers to ask from peers in each iteration.", content: DefaultValue(Number(10000)), privacy: Public }, "state_sync_config.p2p_sync_client_config.wait_period_for_new_data": SerializedParam { description: "Time in millisseconds to wait when a query returned with partial data before sending a new query", content: DefaultValue(Number(50)), privacy: Public }, "state_sync_config.p2p_sync_client_config.wait_period_for_other_protocol": SerializedParam { description: "Time in millisseconds to wait for a dependency protocol to advance (e.g.state diff sync depends on header sync)", content: DefaultValue(Number(50)), privacy: Public }, "state_sync_config.revert_config.revert_up_to_and_including": SerializedParam { description: "The component will revert blocks up to this block number (including).", content: DefaultValue(Number(18446744073709551615)), privacy: Public }, "state_sync_config.revert_config.should_revert": SerializedParam { description: "If set true, the component would revert blocks and do nothing else.", content: DefaultValue(Bool(false)), privacy: Public }, "state_sync_config.storage_config.db_config.chain_id": SerializedParam { description: "The chain to follow. For more details see https://docs.starknet.io/documentation/architecture_and_concepts/Blocks/transactions/#chain-id.", content: DefaultValue(String("CHAIN_ID_SUBDIR")), privacy: Public }, "state_sync_config.storage_config.db_config.enforce_file_exists": SerializedParam { description: "Whether to enforce that the path exists. If true, `open_env` fails when the mdbx.dat file does not exist.", content: DefaultValue(Bool(false)), privacy: Public }, "state_sync_config.storage_config.db_config.growth_step": SerializedParam { description: "The growth step in bytes, must be greater than zero to allow the database to grow.", content: DefaultValue(Number(67108864)), privacy: Public }, "state_sync_config.storage_config.db_config.max_size": SerializedParam { description: "The maximum size of the node's storage in bytes.", content: DefaultValue(Number(34359738368)), privacy: Public }, "state_sync_config.storage_config.db_config.min_size": SerializedParam { description: "The minimum size of the node's storage in bytes.", content: DefaultValue(Number(1048576)), privacy: Public }, "state_sync_config.storage_config.db_config.path_prefix": SerializedParam { description: "Prefix of the path of the node's storage directory, the storage file path will be <path_prefix>/<chain_id>. The path is not created automatically.", content: DefaultValue(String("/tmp/.tmpLkBlZ4")), privacy: Public }, "state_sync_config.storage_config.mmap_file_config.growth_step": SerializedParam { description: "The growth step in bytes, must be greater than max_object_size.", content: DefaultValue(Number(1048576)), privacy: Public }, "state_sync_config.storage_config.mmap_file_config.max_object_size": SerializedParam { description: "The maximum size of a single object in the file in bytes", content: DefaultValue(Number(65536)), privacy: Public }, "state_sync_config.storage_config.mmap_file_config.max_size": SerializedParam { description: "The maximum size of a memory mapped file in bytes. Must be greater than growth_step.", content: DefaultValue(Number(16777216)), privacy: Public }, "state_sync_config.storage_config.scope": SerializedParam { description: "The categories of data saved in storage.", content: DefaultValue(String("FullArchive")), privacy: Public }}
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.184391Z[0m [32m INFO[0m [2mpapyrus_storage[0m[2m:[0m Opening storage: /tmp/.tmpUbQi81
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.191490Z[0m [32m INFO[0m [2mpapyrus_storage[0m[2m:[0m Opening storage: /tmp/.tmpLkBlZ4
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.196345Z[0m [32m INFO[0m [2mlibp2p_swarm[0m[2m:[0m [3mlocal_peer_i[32m INFO[0m [2mstarknet_http_server::metrics[0m[2m:[0m Initializing HTTP Server metrics
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.156180Z[0m [32m INFO[0m [2mlibp2p_swarm[0m[2m:[0m [3mlocal_peer_id[0m[2m=[0m12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.157242Z[0m [32m INFO[0m [2mpapyrus_storage[0m[2m:[0m Opening storage: /tmp/.tmpSJyNou
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.162972Z[0m [32m INFO[0m [2mlibp2p_swarm[0m[2m:[0m [3mlocal_peer_id[0m[2m=[0m12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.197470Z[0m [32m INFO[0m [2mstarknet_sequencer_node[0m[2m:[0m Starting components!
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.197549Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting LocalComponentServer for StateSync.
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.197558Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_definitions[0m[2m:[0m Starting component StateSync with the default starter.
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.197568Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting server for component StateSync
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.197589Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting ConcurrentLocalComponentServer for SierraCompiler.
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.197594Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_definitions[0m[2m:[0m Starting component SierraCompiler with the default starter.
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.197600Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting concurrent server for component SierraCompiler
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.197611Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting LocalComponentServer for MempoolP2pPropagator.
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.197616Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_definitions[0m[2m:[0m Starting component MempoolP2pPropagator with the default starter.
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.197621Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting server for component MempoolP2pPropagator
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.197630Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting LocalComponentServer for MempoolCommunicationWrapper.
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.197686Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting server for component MempoolCommunicationWrapper
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.197696Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting LocalComponentServer for L1Provider.
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.197701Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_definitions[0m[2m:[0m Starting component L1Provider with the default starter.
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.197706Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting server for component L1Provider
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.197715Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting LocalComponentServer for Gateway.
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.197782Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting server for component Gateway
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.197792Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting LocalComponentServer for FsClassManager.
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.197797Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_definitions[0m[2m:[0m Starting component FsClassManager with the default starter.
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.197802Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting server for component FsClassManager
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.197810Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting LocalComponentServer for Batcher.
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.197818Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_definitions[0m[2m:[0m Starting component Batcher with the default starter.
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.197916Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting server for component Batcher
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.197928Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::empty_component_server[0m[2m:[0m Starting WrapperServer for StateSyncRunner.
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.198155Z[0m [32m INFO[0m [2mpapyrus_p2p_sync::client[0m[2m:[0m Starting p2p sync client
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.198709Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::empty_component_server[0m[2m:[0m Starting WrapperServer for MempoolP2pRunner.
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.199165Z[0m [32m INFO[0m [2mpapyrus_network::network_manager::swarm_trait[0m[2m:[0m Found new external address of this node: /ip4/172.17.0.1/tcp/55564
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.199227Z[0m [32m INFO[0m [2mpapyrus_network::network_manager::swarm_trait[0m[2m:[0m Found new external address of this node: /ip4/172.18.0.1/tcp/55564
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.199410Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::empty_component_server[0m[2m:[0m Starting WrapperServer for MonitoringEndpoint.
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.199449Z[0m [32m INFO[0m [2mstarknet_monitoring_endpoint::monitoring_endpoint[0m[2m:[0m Starting component MonitoringEndpoint.
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.199945Z[0m [32m INFO[0m [2mstarknet_monitoring_endpoint::monitoring_endpoint[0m[2m:[0m MonitoringEndpoint running using socket: 0.0.0.0:55001
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.200082Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::empty_component_server[0m[2m:[0m Starting WrapperServer for L1Scraper<EthereumBaseLayerContract>.
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.200101Z[0m [32m INFO[0m [2mstarknet_l1_provider::l1_scraper[0m[2m:[0m Starting component starknet_l1_provider::l1_scraper::L1Scraper<papyrus_base_layer::ethereum_base_layer_contract::EthereumBaseLayerContract>.
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.200627Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::empty_component_server[0m[2m:[0m Starting WrapperServer for HttpServer.
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.200671Z[0m [32m INFO[0m [2mstarknet_http_server::http_server[0m[2m:[0m Starting component HttpServer.
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.200797Z[0m [32m INFO[0m [2mstarknet_http_server::http_server[0m[2m:[0m HttpServer running using socket: 127.0.0.1:55002
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.200869Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::empty_component_server[0m[2m:[0m Starting WrapperServer for ConsensusManager.
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:5torage: /tmp/.tmpUO1mgV
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.189627Z[0m [32m INFO[0m [2mstarknet_http_server::metrics[0m[2m:[0m Initializing HTTP Server metrics
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.192577Z[0m [32m INFO[0m [2mlibp2p_swarm[0m[2m:[0m [3mlocal_peer_id[0m[2m=[0m12D3KooWG6jGCV6xsbvE8hqTJ6P8TzMU6aDqN489UwmQGoDr957G
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.193818Z[0m [32m INFO[0m [2mpapyrus_storage[0m[2m:[0m Opening storage: /tmp/.tmpTCrQie
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.198888Z[0m [32m INFO[0m [2mlibp2p_swarm[0m[2m:[0m [3mlocal_peer_id[0m[2m=[0m12D3KooWNyTfJqiMQcnByAUnpm8a9MJjFf1MA1tgQHKvcx4DeSzM
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.234574Z[0m [32m INFO[0m [2mstarknet_sequencer_node[0m[2m:[0m Starting components!
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.234754Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting LocalComponentServer for StateSync.
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.234769Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_definitions[0m[2m:[0m Starting component StateSync with the default starter.
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.234786Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting server for component StateSync
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.234824Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting ConcurrentLocalComponentServer for SierraCompiler.
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.234833Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_definitions[0m[2m:[0m Starting component SierraCompiler with the default starter.
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.234843Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting concurrent server for component SierraCompiler
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.234865Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting LocalComponentServer for MempoolP2pPropagator.
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.234874Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_definitions[0m[2m:[0m Starting component MempoolP2pPropagator with the default starter.
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.234884Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting server for component MempoolP2pPropagator
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.234902Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting LocalComponentServer for MempoolCommunicationWrapper.
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.234979Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting server for component MempoolCommunicationWrapper
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.234995Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting LocalComponentServer for L1Provider.
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.235004Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_definitions[0m[2m:[0m Starting component L1Provider with the default starter.
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.235014Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting server for component L1Provider
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.235031Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting LocalComponentServer for Gateway.
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.235120Z[0m [32m INFO[0m [2mstarknet_sequencd[0m[2m=[0m12D3KooWQXBGdvp2qWJpGG3DYxrGuP1m8sh3SxVnSFL9XCQobFGN
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.236234Z[0m [32m INFO[0m [2mstarknet_sequencer_node[0m[2m:[0m Starting components!
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.236330Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting LocalComponentServer for StateSync.
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.236348Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_definitions[0m[2m:[0m Starting component StateSync with the default starter.
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.236365Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting server for component StateSync
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.236392Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting ConcurrentLocalComponentServer for SierraCompiler.
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.236404Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_definitions[0m[2m:[0m Starting component SierraCompiler with the default starter.
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.236418Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting concurrent server for component SierraCompiler
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.236438Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting LocalComponentServer for L1Provider.
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.236450Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_definitions[0m[2m:[0m Starting component L1Provider with the default starter.
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.236462Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting server for component L1Provider
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.236513Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting LocalComponentServer for Batcher.
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.236530Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_definitions[0m[2m:[0m Starting component Batcher with the default starter.
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.236712Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting server for component Batcher
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.236806Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::empty_component_server[0m[2m:[0m Starting WrapperServer for StateSyncRunner.
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.237586Z[0m [32m INFO[0m [2mpapyrus_p2p_sync::client[0m[2m:[0m Starting p2p sync client
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.238233Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::empty_component_server[0m[2m:[0m Starting WrapperServer for MonitoringEndpoint.
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.238267Z[0m [32m INFO[0m [2mstarknet_monitoring_endpoint::monitoring_endpoint[0m[2m:[0m Starting component MonitoringEndpoint.
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.238450Z[0m [32m INFO[0m [2mstarknet_monitoring_endpoint::monitoring_endpoint[0m[2m:[0m MonitoringEndpoint running using socket: 0.0.0.0:55361
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.238527Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::empty_component_server[0m[2m:[0m Starting WrapperServer for L1Scraper<EthereumBaseLayerContract>.
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.238543Z[0m [32m INFO[0m [2mstarknet_l1_provider::l1_scraper[0m[2m:[0m Starting component starknet_l1_provider::l1_scraper::L1Scraper<papyrus_base_layer::ethereum_base_layer_contract::EthereumBaseLayeer_infra::component_server::local_component_server[0m[2m:[0m Starting server for component Gateway
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.235135Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting LocalComponentServer for FsClassManager.
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.235144Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_definitions[0m[2m:[0m Starting component FsClassManager with the default starter.
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.235153Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting server for component FsClassManager
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.235168Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting LocalComponentServer for Batcher.
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.235182Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_definitions[0m[2m:[0m Starting component Batcher with the default starter.
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.235382Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting server for component Batcher
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.235412Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::empty_component_server[0m[2m:[0m Starting WrapperServer for StateSyncRunner.
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.236453Z[0m [32m INFO[0m [2mpapyrus_p2p_sync::client[0m[2m:[0m Starting p2p sync client
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.237186Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::empty_component_server[0m[2m:[0m Starting WrapperServer for MempoolP2pRunner.
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.237721Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::empty_component_server[0m[2m:[0m Starting WrapperServer for MonitoringEndpoint.
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.237758Z[0m [32m INFO[0m [2mstarknet_monitoring_endpoint::monitoring_endpoint[0m[2m:[0m Starting component MonitoringEndpoint.
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.237945Z[0m [32m INFO[0m [2mstarknet_monitoring_endpoint::monitoring_endpoint[0m[2m:[0m MonitoringEndpoint running using socket: 0.0.0.0:55121
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.238017Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::empty_component_server[0m[2m:[0m Starting WrapperServer for L1Scraper<EthereumBaseLayerContract>.
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.238024Z[0m [32m INFO[0m [2mstarknet_l1_provider::l1_scraper[0m[2m:[0m Starting component starknet_l1_provider::l1_scraper::L1Scraper<papyrus_base_layer::ethereum_base_layer_contract::EthereumBaseLayerContract>.
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.238419Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::empty_component_server[0m[2m:[0m Starting WrapperServer for HttpServer.
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.238439Z[0m [32m INFO[0m [2mstarknet_http_server::http_server[0m[2m:[0m Starting component HttpServer.
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.238550Z[0m [32m INFO[0m [2mstarknet_http_server::http_server[0m[2m:[0m HttpServer running using socket: 127.0.0.1:55122
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.238593Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::empty_component_server[0m[2m:[0m Starting WrapperServer for ConsensusManager.
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.238634Z[0m [32m INFO[0m [2mstarknet_consensus_manager::consensus_manager[0m[2m:[0m Starting component ConsensusManager.
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.240102Z[0m [32m INFO[0m [2mlibp2p_swarm[0m[2m:[0m [3mlocal_peer_id[0m[2m=[0m12D3KooWBZgggfMLswCAbXT9nbku8utTGFcrksMqZobwFv3yxFMf
[33mNoded[0m[2m=[0m12D3KooWNFKsayJ8E97Ydsbfk9NM3YJKKLY7Hp61iK8sY8wMcoRp
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.239586Z[0m [32m INFO[0m [2mstarknet_sequencer_node[0m[2m:[0m Starting components!
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.239686Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting LocalComponentServer for StateSync.
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.239706Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_definitions[0m[2m:[0m Starting component StateSync with the default starter.
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.239722Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting server for component StateSync
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.239752Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting ConcurrentLocalComponentServer for SierraCompiler.
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.239766Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_definitions[0m[2m:[0m Starting component SierraCompiler with the default starter.
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.239779Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting concurrent server for component SierraCompiler
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.239798Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting LocalComponentServer for L1Provider.
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.239809Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_definitions[0m[2m:[0m Starting component L1Provider with the default starter.
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.239825Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting server for component L1Provider
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.239867Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting LocalComponentServer for Batcher.
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.239889Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_definitions[0m[2m:[0m Starting component Batcher with the default starter.
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.240122Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting server for component Batcher
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.240242Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::empty_component_server[0m[2m:[0m Starting WrapperServer for StateSyncRunner.
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.241054Z[0m [32m INFO[0m [2mpapyrus_p2p_sync::client[0m[2m:[0m Starting p2p sync client
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.241856Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::empty_component_server[0m[2m:[0m Starting WrapperServer for MonitoringEndpoint.
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.241890Z[0m [32m INFO[0m [2mstarknet_monitoring_endpoint::monitoring_endpoint[0m[2m:[0m Starting component MonitoringEndpoint.
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.242143Z[0m [32m INFO[0m [2mstarknet_monitoring_endpoint::monitoring_endpoint[0m[2m:[0m MonitoringEndpoint running using socket: 0.0.0.0:55241
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.242248Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::empty_component_server[0m[2m:[0m Starting WrapperServer for L1Scraper<EthereumBaseLayerContract>.
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.242266Z[0m [32m INFO[0m [2mstarknet_l1_provider::l1_scraper[0m[2m:[0m Starting component starknet_l1_provider::l1_scraper::L1Scraper<papyrus_base_layer::ethereum_base_layer_contract::EthereumBaseLayetorage: /tmp/.tmpAqwCgl
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.189887Z[0m [32m INFO[0m [2mstarknet_http_server::metrics[0m[2m:[0m Initializing HTTP Server metrics
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.192340Z[0m [32m INFO[0m [2mlibp2p_swarm[0m[2m:[0m [3mlocal_peer_id[0m[2m=[0m12D3KooWKvKewFUeW9KQW8tcSRv4F8Eup4fsydPVJCfF6C8mxTr1
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.193629Z[0m [32m INFO[0m [2mpapyrus_storage[0m[2m:[0m Opening storage: /tmp/.tmpvIYuWt
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.198388Z[0m [32m INFO[0m [2mlibp2p_swarm[0m[2m:[0m [3mlocal_peer_id[0m[2m=[0m12D3KooWLevku9cJMt9chmFVKeYtSX7rBwCQ2yE1ubgUQQ7CcXVV
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.241790Z[0m [32m INFO[0m [2mstarknet_sequencer_node[0m[2m:[0m Starting components!
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.241879Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting LocalComponentServer for StateSync.
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.241898Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_definitions[0m[2m:[0m Starting component StateSync with the default starter.
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.241921Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting server for component StateSync
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.241947Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting ConcurrentLocalComponentServer for SierraCompiler.
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.241960Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_definitions[0m[2m:[0m Starting component SierraCompiler with the default starter.
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.241974Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting concurrent server for component SierraCompiler
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.242001Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting LocalComponentServer for MempoolP2pPropagator.
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.242015Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_definitions[0m[2m:[0m Starting component MempoolP2pPropagator with the default starter.
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.242028Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting server for component MempoolP2pPropagator
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.242047Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting LocalComponentServer for MempoolCommunicationWrapper.
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.242164Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting server for component MempoolCommunicationWrapper
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.242189Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting LocalComponentServer for L1Provider.
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.242202Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_definitions[0m[2m:[0m Starting component L1Provider with the default starter.
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.242214Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting server for component L1Provider
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.242236Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting LocalComponentServer for Gateway.
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.242432Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting server for component Gateway
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.242469Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting LocalComponentServer for FsClassManager.
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.242483Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_definitions[0m[2m:[0m Starting component FsClassManager with the default starter.
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.242495Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting server for component FsClassManager
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.242512Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting LocalComponentServer for Batcher.
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.242530Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_definitions[0m[2m:[0m Starting component Batcher with the default starter.
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.242708Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::local_component_server[0m[2m:[0m Starting server for component Batcher
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.242749Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::empty_component_server[0m[2m:[0m Starting WrapperServer for StateSyncRunner.
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.243575Z[0m [32m INFO[0m [2mpapyrus_p2p_sync::client[0m[2m:[0m Starting p2p sync client
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.244436Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::empty_component_server[0m[2m:[0m Starting WrapperServer for MempoolP2pRunner.
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.245190Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::empty_component_server[0m[2m:[0m Starting WrapperServer for MonitoringEndpoint.
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.245242Z[0m [32m INFO[0m [2mstarknet_monitoring_endpoint::monitoring_endpoint[0m[2m:[0m Starting component MonitoringEndpoint.
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.245558Z[0m [32m INFO[0m [2mstarknet_monitoring_endpoint::monitoring_endpoint[0m[2m:[0m MonitoringEndpoint running using socket: 0.0.0.0:55061
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.245721Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::empty_component_server[0m[2m:[0m Starting WrapperServer for L1Scraper<EthereumBaseLayerContract>.
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.245741Z[0m [32m INFO[0m [2mstarknet_l1_provider::l1_scraper[0m[2m:[0m Starting component starknet_l1_provider::l1_scraper::L1Scraper<papyrus_base_layer::ethereum_base_layer_contract::EthereumBaseLayerContract>.
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.246378Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::empty_component_server[0m[2m:[0m Starting WrapperServer for HttpServer.
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.246408Z[0m [32m INFO[0m [2mstarknet_http_server::http_server[0m[2m:[0m Starting component HttpServer.
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.246599Z[0m [32m INFO[0m [2mstarknet_http_server::http_server[0m[2m:[0m HttpServer running using socket: 127.0.0.1:55062
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.246698Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::empty_component_server[0m[2m:[0m Starting WrapperServer for ConsensusManager.
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.246765Z[0m [32m INFO[0m [2mstarknet_consensus_manager::consensus_manager[0m[2m:[0m Starting component ConsensusManager.
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.249593Z[0m [32m INFO[0m [2mlibp2p_swarm[0m[2m:[0m [3mlocal_peer_id[0m[2m=[0m12D3KooWF2Gr1pEFKqyzVM7Skeuq554zd5hMgq6pWvfKk7yDfRf2
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.250962Z[0m [32m INFO[0m [2mpapyrus_network::network_manager::swarm_trait[0m[2m:[0m Found new external address of this node: /ip4/172.17.0.1/tcp/55558
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.251295Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m No peers. Waiting for a new peer to be connected for OutboundSessionId { value: 0 }
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.251332Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m No peers. Waiting for a new peer to be connected for OutboundSessionId { value: 1 }
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.251441Z[0m [32m INFO[0m [2mpapyrus_network::network_manager::swarm_trait[0m[2m:[0m Found new external address of this node: /ip4/172.18.0.1/tcp/55558
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.251811Z[0m [32m INFO[0m [2mpapyrus_network::network_manager::swarm_trait[0m[2m:[0m Found new external address of this node: /ip4/172.17.0.1/tcp/55565
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.251901Z[0m [32m INFO[0m [2mpapyrus_network::network_manager::swarm_trait[0m[2m:[0m Found new external address of this node: /ip4/172.18.0.1/tcp/55565
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.252168Z[0m [31mERROR[0m [1mrun[0m:[1minitialize[0m: [2mstarknet_l1_provider::l1_scraper[0m[2m:[0m [3merror[0m[2m=[0mBase layer error: error sending request for url (https://node_url/)
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.294329Z[0m [32m INFO[0m [1mrun_consensus[0m: [2mstarknet_consensus::manager[0m[2m:[0m Running consensus, start_active_height=1, start_observe_height=1, consensus_delay=15, timeouts=TimeoutsConfig { proposal_timeout: 9s, prevote_timeout: 3s, precommit_timeout: 3s } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000065[0m
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.294821Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5"): [/ip4/127.0.0.1/tcp/55564/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5]
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.294963Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5")
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.295417Z[0m [32m INFO[0m [2mpapyrus_network::network_manager::swarm_trait[0m[2m:[0m Found new external address of this node: /ip4/172.17.0.1/tcp/55551
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.295546Z[0m [32m INFO[0m [2mpapyrus_network::network_manager::swarm_trait[0m[2m:[0m Found new external address of this node: /ip4/172.18.0.1/tcp/55551
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.295510Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5"): [/ip4/127.0.0.1/tcp/55557/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5]
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.295627Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5")
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.296564Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5"): [/ip4/172.17.0.1/tcp/55564, /ip4/172.18.0.1/tcp/55564]
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.306376Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5"): [/ip4/127.0.0.1/tcp/55550/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5]
[32mNode id 1 part 0 id 2 part 0:[0m [2m2025-03-02T17:37:56.240666Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m No peers. Waiting for a new peer to be connected for OutboundSessionId { value: 0 }
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.240692Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m No peers. Waiting for a new peer to be connected for OutboundSessionId { value: 1 }
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.240932Z[0m [32m INFO[0m [2mpapyrus_network::network_manager::swarm_trait[0m[2m:[0m Found new external address of this node: /ip4/172.17.0.1/tcp/55559
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.240975Z[0m [32m INFO[0m [2mpapyrus_network::network_manager::swarm_trait[0m[2m:[0m Found new external address of this node: /ip4/172.18.0.1/tcp/55559
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.241151Z[0m [32m INFO[0m [2mpapyrus_network::network_manager::swarm_trait[0m[2m:[0m Found new external address of this node: /ip4/172.17.0.1/tcp/55566
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.241176Z[0m [32m INFO[0m [2mpapyrus_network::network_manager::swarm_trait[0m[2m:[0m Found new external address of this node: /ip4/172.18.0.1/tcp/55566
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.241378Z[0m [31mERROR[0m [1mrun[0m:[1minitialize[0m: [2mstarknet_l1_provider::l1_scraper[0m[2m:[0m [3merror[0m[2m=[0mBase layer error: error sending request for url (https://node_url/)
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.277528Z[0m [32m INFO[0m [1mrun_consensus[0m: [2mstarknet_consensus::manager[0m[2m:[0m Running consensus, start_active_height=1, start_observe_height=1, consensus_delay=15, timeouts=TimeoutsConfig { proposal_timeout: 9s, prevote_timeout: 3s, precommit_timeout: 3s } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000066[0m
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.278077Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5"): [/ip4/127.0.0.1/tcp/55557/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5]
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.278196Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5")
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.278732Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5"): [/ip4/127.0.0.1/tcp/55564/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5]
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.278770Z[0m [32m INFO[0m [2mpapyrus_network::network_manager::swarm_trait[0m[2m:[0m Found new external address of this node: /ip4/172.17.0.1/tcp/55552
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.278849Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5")
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.278896Z[0m [32m INFO[0m [2mpapyrus_network::network_manager::swarm_trait[0m[2m:[0m Found new external address of this node: /ip4/172.18.0.1/tcp/55552
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.289550Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5"): [/ip4/127.0.0.1/tcp/55550/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5]
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.289680Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5")
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.332857Z[0m [32m INFO[0m [2mpapyrus_network::discovery::6.200936Z[0m [32m INFO[0m [2mstarknet_consensus_manager::consensus_manager[0m[2m:[0m Starting component ConsensusManager.
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.203235Z[0m [32m INFO[0m [2mlibp2p_swarm[0m[2m:[0m [3mlocal_peer_id[0m[2m=[0m12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.204072Z[0m [32m INFO[0m [2mpapyrus_network::network_manager::swarm_trait[0m[2m:[0m Found new external address of this node: /ip4/172.17.0.1/tcp/55557
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.204182Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m No peers. Waiting for a new peer to be connected for OutboundSessionId { value: 0 }
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.204247Z[0m [32m INFO[0m [2mpapyrus_network::network_manager::swarm_trait[0m[2m:[0m Found new external address of this node: /ip4/172.18.0.1/tcp/55557
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.204347Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m No peers. Waiting for a new peer to be connected for OutboundSessionId { value: 1 }
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.204636Z[0m [31mERROR[0m [1mrun[0m:[1minitialize[0m: [2mstarknet_l1_provider::l1_scraper[0m[2m:[0m [3merror[0m[2m=[0mBase layer error: error sending request for url (https://node_url/)
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.241242Z[0m [32m INFO[0m [1mrun_consensus[0m: [2mstarknet_consensus::manager[0m[2m:[0m Running consensus, start_active_height=1, start_observe_height=1, consensus_delay=15, timeouts=TimeoutsConfig { proposal_timeout: 9s, prevote_timeout: 3s, precommit_timeout: 3s } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000064[0m
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.241676Z[0m [32m INFO[0m [2mpapyrus_network::network_manager::swarm_trait[0m[2m:[0m Found new external address of this node: /ip4/172.17.0.1/tcp/55550
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.241785Z[0m [32m INFO[0m [2mpapyrus_network::network_manager::swarm_trait[0m[2m:[0m Found new external address of this node: /ip4/172.18.0.1/tcp/55550
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.261506Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWKi6qUxsnmMqTgYX894brLNKV3m7PfTDGiZt7qmb85HVJ"): [/ip4/172.17.0.1/tcp/55567, /ip4/172.18.0.1/tcp/55567]
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.261652Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWKi6qUxsnmMqTgYX894brLNKV3m7PfTDGiZt7qmb85HVJ")
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.302765Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWFG5TdpnNR7xke7jRWfxhTgFAwPtYheaHWAZGKWvzTzU1"): [/ip4/172.17.0.1/tcp/55569, /ip4/172.18.0.1/tcp/55569]
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.302903Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWFG5TdpnNR7xke7jRWfxhTgFAwPtYheaHWAZGKWvzTzU1")
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.333139Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWNFKsayJ8E97Ydsbfk9NM3YJKKLY7Hp61iK8sY8wMcoRp"): [/ip4/172.17.0.1/tcp/55561, /ip4/172.18.0.1/tcp/55561]
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.333372Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWNFKsayJ8E97Ydsbfk9NM3YJKKLY7Hp61iK8sY8wMcoRp")
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.338198Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWKvKewFUeW9KQW8tcSRv4F8Eup4fsydPVJCfF6C8mxTr1"): [/ip4/172.18.0.1/tcp/55565, /ip4/1rContract>.
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.238908Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::empty_component_server[0m[2m:[0m Starting WrapperServer for ConsensusManager.
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.238960Z[0m [32m INFO[0m [2mstarknet_consensus_manager::consensus_manager[0m[2m:[0m Starting component ConsensusManager.
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.240885Z[0m [32m INFO[0m [2mlibp2p_swarm[0m[2m:[0m [3mlocal_peer_id[0m[2m=[0m12D3KooWG6bwAM4e3WnKMk6pNmYUaxVfu1uEho3EyEjxEgJ7mpFY
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.241675Z[0m [32m INFO[0m [2mpapyrus_network::network_manager::swarm_trait[0m[2m:[0m Found new external address of this node: /ip4/172.17.0.1/tcp/55563
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.241798Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m No peers. Waiting for a new peer to be connected for OutboundSessionId { value: 0 }
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.241823Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m No peers. Waiting for a new peer to be connected for OutboundSessionId { value: 1 }
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.241888Z[0m [32m INFO[0m [2mpapyrus_network::network_manager::swarm_trait[0m[2m:[0m Found new external address of this node: /ip4/172.18.0.1/tcp/55563
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.242151Z[0m [31mERROR[0m [1mrun[0m:[1minitialize[0m: [2mstarknet_l1_provider::l1_scraper[0m[2m:[0m [3merror[0m[2m=[0mBase layer error: error sending request for url (https://node_url/)
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.284386Z[0m [32m INFO[0m [1mrun_consensus[0m: [2mstarknet_consensus::manager[0m[2m:[0m Running consensus, start_active_height=1, start_observe_height=1, consensus_delay=15, timeouts=TimeoutsConfig { proposal_timeout: 9s, prevote_timeout: 3s, precommit_timeout: 3s } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000068[0m
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.284949Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5"): [/ip4/127.0.0.1/tcp/55557/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5]
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.285077Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5")
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.285568Z[0m [32m INFO[0m [2mpapyrus_network::network_manager::swarm_trait[0m[2m:[0m Found new external address of this node: /ip4/172.17.0.1/tcp/55556
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.285644Z[0m [32m INFO[0m [2mpapyrus_network::network_manager::swarm_trait[0m[2m:[0m Found new external address of this node: /ip4/172.18.0.1/tcp/55556
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.299406Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5"): [/ip4/127.0.0.1/tcp/55550/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5]
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.299567Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5")
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.332285Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5"): [/ip4/172.17.0.1/tcp/55557, /ip4/172.18.0.1/tcp/55557]
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.376700Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing tabrContract>.
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.242737Z[0m [32m INFO[0m [2mstarknet_sequencer_infra::component_server::empty_component_server[0m[2m:[0m Starting WrapperServer for ConsensusManager.
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.242798Z[0m [32m INFO[0m [2mstarknet_consensus_manager::consensus_manager[0m[2m:[0m Starting component ConsensusManager.
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.244877Z[0m [32m INFO[0m [2mlibp2p_swarm[0m[2m:[0m [3mlocal_peer_id[0m[2m=[0m12D3KooWGpU8ZYCs6gug4KStHgtLVMPMBBb9MhEZqvmNBJRdCEhu
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.245984Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m No peers. Waiting for a new peer to be connected for OutboundSessionId { value: 0 }
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.246114Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m No peers. Waiting for a new peer to be connected for OutboundSessionId { value: 1 }
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.246235Z[0m [32m INFO[0m [2mpapyrus_network::network_manager::swarm_trait[0m[2m:[0m Found new external address of this node: /ip4/172.17.0.1/tcp/55561
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.246359Z[0m [32m INFO[0m [2mpapyrus_network::network_manager::swarm_trait[0m[2m:[0m Found new external address of this node: /ip4/172.18.0.1/tcp/55561
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.246604Z[0m [31mERROR[0m [1mrun[0m:[1minitialize[0m: [2mstarknet_l1_provider::l1_scraper[0m[2m:[0m [3merror[0m[2m=[0mBase layer error: error sending request for url (https://node_url/)
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.288839Z[0m [32m INFO[0m [1mrun_consensus[0m: [2mstarknet_consensus::manager[0m[2m:[0m Running consensus, start_active_height=1, start_observe_height=1, consensus_delay=15, timeouts=TimeoutsConfig { proposal_timeout: 9s, prevote_timeout: 3s, precommit_timeout: 3s } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000067[0m
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.289392Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5"): [/ip4/127.0.0.1/tcp/55557/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5]
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.289537Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5")
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.290427Z[0m [32m INFO[0m [2mpapyrus_network::network_manager::swarm_trait[0m[2m:[0m Found new external address of this node: /ip4/172.17.0.1/tcp/55554
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.290587Z[0m [32m INFO[0m [2mpapyrus_network::network_manager::swarm_trait[0m[2m:[0m Found new external address of this node: /ip4/172.18.0.1/tcp/55554
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.291425Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5"): [/ip4/172.17.0.1/tcp/55557, /ip4/172.18.0.1/tcp/55557]
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.301389Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5"): [/ip4/127.0.0.1/tcp/55550/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5]
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.301506Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5")
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.378346Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing tab72.17.0.1/tcp/55565]
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.338441Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWKvKewFUeW9KQW8tcSRv4F8Eup4fsydPVJCfF6C8mxTr1")
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.372020Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWQXBGdvp2qWJpGG3DYxrGuP1m8sh3SxVnSFL9XCQobFGN"): [/ip4/172.17.0.1/tcp/55563, /ip4/172.18.0.1/tcp/55563]
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.372165Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWQXBGdvp2qWJpGG3DYxrGuP1m8sh3SxVnSFL9XCQobFGN")
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.372828Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWNyTfJqiMQcnByAUnpm8a9MJjFf1MA1tgQHKvcx4DeSzM"): [/ip4/172.17.0.1/tcp/55559, /ip4/172.18.0.1/tcp/55559]
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.372947Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWNyTfJqiMQcnByAUnpm8a9MJjFf1MA1tgQHKvcx4DeSzM")
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.375770Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWG6jGCV6xsbvE8hqTJ6P8TzMU6aDqN489UwmQGoDr957G"): [/ip4/172.18.0.1/tcp/55566, /ip4/172.17.0.1/tcp/55566]
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.375890Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWG6jGCV6xsbvE8hqTJ6P8TzMU6aDqN489UwmQGoDr957G")
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.378876Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWLevku9cJMt9chmFVKeYtSX7rBwCQ2yE1ubgUQQ7CcXVV"): [/ip4/172.18.0.1/tcp/55558, /ip4/172.17.0.1/tcp/55558]
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.379040Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWLevku9cJMt9chmFVKeYtSX7rBwCQ2yE1ubgUQQ7CcXVV")
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.405923Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWBZgggfMLswCAbXT9nbku8utTGFcrksMqZobwFv3yxFMf"): [/ip4/172.17.0.1/tcp/55552, /ip4/172.18.0.1/tcp/55552]
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.406132Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWBZgggfMLswCAbXT9nbku8utTGFcrksMqZobwFv3yxFMf")
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.418618Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWG6bwAM4e3WnKMk6pNmYUaxVfu1uEho3EyEjxEgJ7mpFY"): [/ip4/172.17.0.1/tcp/55556, /ip4/172.18.0.1/tcp/55556]
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.418789Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWG6bwAM4e3WnKMk6pNmYUaxVfu1uEho3EyEjxEgJ7mpFY")
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.419145Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWGpU8ZYCs6gug4KStHgtLVMPMBBb9MhEZqvmNBJRdCEhu"): [/ip4/172.18.0.1/tcp/55554, /ip4/172.17.0.1/tcp/55554]
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.419255Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWGpU8ZYCs6gug4KStHgtLVMPMBBb9MhEZqvmNBJRdCEhu")
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.424333Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWF2Gr1pEFKq[32m INFO[0m [2mstarknet_http_server::http_server[0m[2m:[0m Starting component HttpServer.
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.156366Z[0m [32m INFO[0m [2mstarknet_http_server::http_server[0m[2m:[0m HttpServer running using socket: 127.0.0.1:55182
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.156454Z[0m [33m WARN[0m [2mpapyrus_network::peer_manager::behaviour_impl[0m[2m:[0m Dial failure of an unknown peer. peer id: 12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.156518Z[0m [33m WARN[0m [2mpapyrus_network::network_manager[0m[2m:[0m Outgoing connection error. connection id: ConnectionId(2), requested peer id: Some(PeerId("12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5")), error: Transport([(/ip4/127.0.0.1/tcp/55564/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5, Other(Custom { kind: Other, error: Other(Transport(Left(Left(Os { code: 111, kind: ConnectionRefused, message: "Connection refused" })))) }))])
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.156797Z[0m [32m INFO[0m [2mpapyrus_network::network_manager::swarm_trait[0m[2m:[0m Found new external address of this node: /ip4/172.17.0.1/tcp/55567
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.156835Z[0m [32m INFO[0m [2mpapyrus_network::network_manager::swarm_trait[0m[2m:[0m Found new external address of this node: /ip4/172.18.0.1/tcp/55567
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.210000Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5"): [/ip4/127.0.0.1/tcp/55564/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5]
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.210171Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5")
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.258047Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5"): [/ip4/172.17.0.1/tcp/55564, /ip4/172.18.0.1/tcp/55564]
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.361758Z[0m [33m WARN[0m [2mpapyrus_network::network_manager[0m[2m:[0m Incoming connection error. connection id: ConnectionId(5), local addr: /ip4/172.18.0.1/tcp/55567, send back addr: /ip4/172.17.0.1/tcp/40120, error: Transport(Other(Custom { kind: Other, error: Other(Transport(Left(Right(Apply(Io(Os { code: 104, kind: ConnectionReset, message: "Connection reset by peer" })))))) }))
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.407762Z[0m [33m WARN[0m [2mpapyrus_network::network_manager[0m[2m:[0m Incoming connection error. connection id: ConnectionId(8), local addr: /ip4/172.17.0.1/tcp/55567, send back addr: /ip4/172.17.0.1/tcp/40174, error: Transport(Other(Custom { kind: Other, error: Other(Transport(Left(Right(Apply(Io(Os { code: 104, kind: ConnectionReset, message: "Connection reset by peer" })))))) }))
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.438568Z[0m [33m WARN[0m [2mpapyrus_network::network_manager[0m[2m:[0m Incoming connection error. connection id: ConnectionId(11), local addr: /ip4/172.18.0.1/tcp/55567, send back addr: /ip4/172.17.0.1/tcp/40142, error: Transport(Other(Custom { kind: Other, error: Other(Transport(Left(Right(Apply(Io(Os { code: 104, kind: ConnectionReset, message: "Connection reset by peer" })))))) }))
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.448596Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWKvKewFUeW9KQW8tcSRv4F8Eup4fsydPVJCfF6C8mxTr1"): [/ip4/172.18.0.1/tcp/55565, /ip4/172.17.0.1/tcp/55565]
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.448761Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer P:[0m [2m2025-03-02T17:37:56.306501Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5")
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.338784Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5"): [/ip4/172.17.0.1/tcp/55557, /ip4/172.18.0.1/tcp/55557]
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.371932Z[0m [33m WARN[0m [2mpapyrus_network::network_manager[0m[2m:[0m Incoming connection error. connection id: ConnectionId(8), local addr: /ip4/172.17.0.1/tcp/55565, send back addr: /ip4/172.17.0.1/tcp/40020, error: Transport(Other(Custom { kind: Other, error: Other(Transport(Left(Right(Apply(Io(Os { code: 104, kind: ConnectionReset, message: "Connection reset by peer" })))))) }))
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.383373Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5"): [/ip4/172.17.0.1/tcp/55550, /ip4/172.18.0.1/tcp/55550]
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.431636Z[0m [33m WARN[0m [2mpapyrus_network::network_manager[0m[2m:[0m Incoming connection error. connection id: ConnectionId(13), local addr: /ip4/172.17.0.1/tcp/55558, send back addr: /ip4/172.17.0.1/tcp/40054, error: Transport(Other(Custom { kind: Other, error: Other(Transport(Left(Right(Apply(Io(Os { code: 104, kind: ConnectionReset, message: "Connection reset by peer" })))))) }))
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.431808Z[0m [33m WARN[0m [2mpapyrus_network::network_manager[0m[2m:[0m Incoming connection error. connection id: ConnectionId(15), local addr: /ip4/172.17.0.1/tcp/55558, send back addr: /ip4/172.17.0.1/tcp/40056, error: Transport(Other(Custom { kind: Other, error: Other(Transport(Left(Right(Apply(Io(Os { code: 104, kind: ConnectionReset, message: "Connection reset by peer" })))))) }))
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.444719Z[0m [33m WARN[0m [2mpapyrus_network::network_manager[0m[2m:[0m Incoming connection error. connection id: ConnectionId(16), local addr: /ip4/172.18.0.1/tcp/55565, send back addr: /ip4/172.17.0.1/tcp/40042, error: Transport(Other(Custom { kind: Other, error: Other(Transport(Left(Right(Apply(Io(Os { code: 104, kind: ConnectionReset, message: "Connection reset by peer" })))))) }))
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.452216Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWKi6qUxsnmMqTgYX894brLNKV3m7PfTDGiZt7qmb85HVJ"): [/ip4/172.18.0.1/tcp/55567, /ip4/172.17.0.1/tcp/55567]
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.452389Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWKi6qUxsnmMqTgYX894brLNKV3m7PfTDGiZt7qmb85HVJ")
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.452598Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWFG5TdpnNR7xke7jRWfxhTgFAwPtYheaHWAZGKWvzTzU1"): [/ip4/172.18.0.1/tcp/55569, /ip4/172.17.0.1/tcp/55569]
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.452704Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWFG5TdpnNR7xke7jRWfxhTgFAwPtYheaHWAZGKWvzTzU1")
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.452924Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWG6jGCV6xsbvE8hqTJ6P8TzMU6aDqN489UwmQGoDr957G"): [/ip4/172.18.0.1/tcp/55566, /ip4/172.17.0.1/tcp/55566]
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.453025Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3[32m INFO[0m [2mstarknet_http_server::http_server[0m[2m:[0m Starting component HttpServer.
[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.159883Z[0m [32m INFO[0m [2mstarknet_http_server::http_server[0m[2m:[0m HttpServer running using socket: 127.0.0.1:55302
[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.160102Z[0m [32m INFO[0m [2mpapyrus_network::network_manager::swarm_trait[0m[2m:[0m Found new external address of this node: /ip4/172.17.0.1/tcp/55569
[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.160141Z[0m [32m INFO[0m [2mpapyrus_network::network_manager::swarm_trait[0m[2m:[0m Found new external address of this node: /ip4/172.18.0.1/tcp/55569
[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.214236Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5"): [/ip4/127.0.0.1/tcp/55564/p2p/12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5]
[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.214385Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5")
[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.262305Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5"): [/ip4/172.18.0.1/tcp/55564, /ip4/172.17.0.1/tcp/55564]
[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.380009Z[0m [33m WARN[0m [2mpapyrus_network::network_manager[0m[2m:[0m Incoming connection error. connection id: ConnectionId(5), local addr: /ip4/172.18.0.1/tcp/55569, send back addr: /ip4/172.17.0.1/tcp/40082, error: Transport(Other(Custom { kind: Other, error: Other(Transport(Left(Right(Apply(Io(Os { code: 104, kind: ConnectionReset, message: "Connection reset by peer" })))))) }))
[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.399894Z[0m [33m WARN[0m [2mpapyrus_network::network_manager[0m[2m:[0m Incoming connection error. connection id: ConnectionId(7), local addr: /ip4/172.18.0.1/tcp/55569, send back addr: /ip4/172.17.0.1/tcp/40088, error: Transport(Other(Custom { kind: Other, error: Other(Transport(Left(Right(Apply(Io(Os { code: 104, kind: ConnectionReset, message: "Connection reset by peer" })))))) }))
[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.440302Z[0m [33m WARN[0m [2mpapyrus_network::network_manager[0m[2m:[0m Incoming connection error. connection id: ConnectionId(9), local addr: /ip4/172.18.0.1/tcp/55569, send back addr: /ip4/172.17.0.1/tcp/40096, error: Transport(Other(Custom { kind: Other, error: Other(Transport(Left(Right(Apply(Io(Os { code: 104, kind: ConnectionReset, message: "Connection reset by peer" })))))) }))
[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.441142Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWKi6qUxsnmMqTgYX894brLNKV3m7PfTDGiZt7qmb85HVJ"): [/ip4/172.18.0.1/tcp/55567, /ip4/172.17.0.1/tcp/55567]
[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.441319Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWKi6qUxsnmMqTgYX894brLNKV3m7PfTDGiZt7qmb85HVJ")
[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.456654Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWKvKewFUeW9KQW8tcSRv4F8Eup4fsydPVJCfF6C8mxTr1"): [/ip4/172.17.0.1/tcp/55565, /ip4/172.18.0.1/tcp/55565]
[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.456798Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWKvKewFUeW9KQW8tcSRv4F8Eup4fsydPVJCfF6C8mxTr1")
[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.468751Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing tablekad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5"): [/ip4/172.18.0.1/tcp/55557, /ip4/172.17.0.1/tcp/55557]
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.335368Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5"): [/ip4/172.18.0.1/tcp/55564, /ip4/172.17.0.1/tcp/55564]
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.364951Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5"): [/ip4/172.18.0.1/tcp/55550, /ip4/172.17.0.1/tcp/55550]
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.402638Z[0m [33m WARN[0m [2mpapyrus_network::network_manager[0m[2m:[0m Incoming connection error. connection id: ConnectionId(8), local addr: /ip4/172.17.0.1/tcp/55566, send back addr: /ip4/172.17.0.1/tcp/40166, error: Transport(Other(Custom { kind: Other, error: Other(Transport(Left(Right(Apply(Io(Os { code: 104, kind: ConnectionReset, message: "Connection reset by peer" })))))) }))
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.426136Z[0m [33m WARN[0m [2mpapyrus_network::network_manager[0m[2m:[0m Incoming connection error. connection id: ConnectionId(10), local addr: /ip4/172.18.0.1/tcp/55559, send back addr: /ip4/172.17.0.1/tcp/40170, error: Transport(Other(Custom { kind: Other, error: Other(Transport(Left(Right(Apply(Io(Os { code: 104, kind: ConnectionReset, message: "Connection reset by peer" })))))) }))
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.445545Z[0m [33m WARN[0m [2mpapyrus_network::network_manager[0m[2m:[0m Incoming connection error. connection id: ConnectionId(17), local addr: /ip4/172.17.0.1/tcp/55559, send back addr: /ip4/172.17.0.1/tcp/40018, error: Transport(Other(Custom { kind: Other, error: Other(Transport(Left(Right(Apply(Io(Os { code: 104, kind: ConnectionReset, message: "Connection reset by peer" })))))) }))
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.453830Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWKvKewFUeW9KQW8tcSRv4F8Eup4fsydPVJCfF6C8mxTr1"): [/ip4/172.17.0.1/tcp/55565, /ip4/172.18.0.1/tcp/55565]
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.453981Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWKvKewFUeW9KQW8tcSRv4F8Eup4fsydPVJCfF6C8mxTr1")
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.454696Z[0m [33m WARN[0m [2mpapyrus_network::network_manager[0m[2m:[0m Incoming connection error. connection id: ConnectionId(20), local addr: /ip4/172.17.0.1/tcp/55566, send back addr: /ip4/172.17.0.1/tcp/40178, error: Transport(Other(Custom { kind: Other, error: Other(Transport(Left(Right(Apply(Io(Os { code: 104, kind: ConnectionReset, message: "Connection reset by peer" })))))) }))
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.474918Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWQXBGdvp2qWJpGG3DYxrGuP1m8sh3SxVnSFL9XCQobFGN"): [/ip4/172.18.0.1/tcp/55563, /ip4/172.17.0.1/tcp/55563]
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.475046Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWQXBGdvp2qWJpGG3DYxrGuP1m8sh3SxVnSFL9XCQobFGN")
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.475249Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWLevku9cJMt9chmFVKeYtSX7rBwCQ2yE1ubgUQQ7CcXVV"): [/ip4/172.17.0.1/tcp/55558, /ip4/172.18.0.1/tcp/55558]
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.475352Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3le for peer PeerId("12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5"): [/ip4/172.17.0.1/tcp/55550, /ip4/172.18.0.1/tcp/55550]
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.431863Z[0m [33m WARN[0m [2mpapyrus_network::network_manager[0m[2m:[0m Incoming connection error. connection id: ConnectionId(8), local addr: /ip4/172.17.0.1/tcp/55563, send back addr: /ip4/172.17.0.1/tcp/40024, error: Transport(Other(Custom { kind: Other, error: Other(Transport(Left(Right(Apply(Io(Os { code: 104, kind: ConnectionReset, message: "Connection reset by peer" })))))) }))
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.448824Z[0m [33m WARN[0m [2mpapyrus_network::network_manager[0m[2m:[0m Incoming connection error. connection id: ConnectionId(10), local addr: /ip4/172.17.0.1/tcp/55563, send back addr: /ip4/172.17.0.1/tcp/40026, error: Transport(Other(Custom { kind: Other, error: Other(Transport(Left(Right(Apply(Io(Os { code: 104, kind: ConnectionReset, message: "Connection reset by peer" })))))) }))
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.461721Z[0m [33m WARN[0m [2mpapyrus_network::network_manager[0m[2m:[0m Incoming connection error. connection id: ConnectionId(13), local addr: /ip4/172.18.0.1/tcp/55556, send back addr: /ip4/172.17.0.1/tcp/40072, error: Transport(Other(Custom { kind: Other, error: Other(Transport(Left(Right(Apply(Io(Os { code: 104, kind: ConnectionReset, message: "Connection reset by peer" })))))) }))
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.472535Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWLevku9cJMt9chmFVKeYtSX7rBwCQ2yE1ubgUQQ7CcXVV"): [/ip4/172.17.0.1/tcp/55558, /ip4/172.18.0.1/tcp/55558]
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.472691Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWLevku9cJMt9chmFVKeYtSX7rBwCQ2yE1ubgUQQ7CcXVV")
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.474368Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWNFKsayJ8E97Ydsbfk9NM3YJKKLY7Hp61iK8sY8wMcoRp"): [/ip4/172.18.0.1/tcp/55561, /ip4/172.17.0.1/tcp/55561]
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.474513Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWNFKsayJ8E97Ydsbfk9NM3YJKKLY7Hp61iK8sY8wMcoRp")
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.474770Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWNyTfJqiMQcnByAUnpm8a9MJjFf1MA1tgQHKvcx4DeSzM"): [/ip4/172.17.0.1/tcp/55559, /ip4/172.18.0.1/tcp/55559]
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.474875Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWNyTfJqiMQcnByAUnpm8a9MJjFf1MA1tgQHKvcx4DeSzM")
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.480069Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWNyTfJqiMQcnByAUnpm8a9MJjFf1MA1tgQHKvcx4DeSzM"): [/ip4/172.17.0.1/tcp/55559, /ip4/172.18.0.1/tcp/55559]
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.488892Z[0m [33m WARN[0m [2mpapyrus_network::network_manager[0m[2m:[0m Incoming connection error. connection id: ConnectionId(17), local addr: /ip4/172.17.0.1/tcp/55556, send back addr: /ip4/172.17.0.1/tcp/40046, error: Transport(Other(Custom { kind: Other, error: Other(Transport(Left(Right(Apply(Io(Os { code: 104, kind: ConnectionReset, message: "Connection reset by peer" })))))) }))
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.495178Z[0m [33m WARN[0m [2mpapyrus_network::network_manager[0m[2m:[0m Incoming connection error. connection id: ConnectionId(20), local addr: /ip4/172.18.0.1/tcp/55556, send back addr: /ip4/172.17.0.1/tcp/40094, error: Transport(Other(Custom { kind: Other, errKooWG6jGCV6xsbvE8hqTJ6P8TzMU6aDqN489UwmQGoDr957G")
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.463638Z[0m [33m WARN[0m [2mpapyrus_network::network_manager[0m[2m:[0m Incoming connection error. connection id: ConnectionId(21), local addr: /ip4/172.18.0.1/tcp/55565, send back addr: /ip4/172.17.0.1/tcp/40058, error: Transport(Other(Custom { kind: Other, error: Other(Transport(Left(Right(Apply(Io(Os { code: 104, kind: ConnectionReset, message: "Connection reset by peer" })))))) }))
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.463767Z[0m [33m WARN[0m [2mpapyrus_network::network_manager[0m[2m:[0m Incoming connection error. connection id: ConnectionId(25), local addr: /ip4/172.18.0.1/tcp/55551, send back addr: /ip4/172.17.0.1/tcp/40088, error: Transport(Other(Custom { kind: Other, error: Other(Transport(Left(Right(Apply(Io(Os { code: 104, kind: ConnectionReset, message: "Connection reset by peer" })))))) }))
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.476180Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWQXBGdvp2qWJpGG3DYxrGuP1m8sh3SxVnSFL9XCQobFGN"): [/ip4/172.17.0.1/tcp/55563, /ip4/172.18.0.1/tcp/55563]
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.476332Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWQXBGdvp2qWJpGG3DYxrGuP1m8sh3SxVnSFL9XCQobFGN")
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.484902Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWKi6qUxsnmMqTgYX894brLNKV3m7PfTDGiZt7qmb85HVJ"): [/ip4/172.17.0.1/tcp/55567, /ip4/172.18.0.1/tcp/55567]
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.485421Z[0m [33m WARN[0m [2mpapyrus_network::network_manager[0m[2m:[0m Incoming connection error. connection id: ConnectionId(27), local addr: /ip4/172.18.0.1/tcp/55551, send back addr: /ip4/172.17.0.1/tcp/40104, error: Transport(Other(Custom { kind: Other, error: Other(Transport(Left(Right(Apply(Io(Os { code: 104, kind: ConnectionReset, message: "Connection reset by peer" })))))) }))
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.488381Z[0m [33m WARN[0m [2mpapyrus_network::network_manager[0m[2m:[0m Incoming connection error. connection id: ConnectionId(29), local addr: /ip4/172.18.0.1/tcp/55551, send back addr: /ip4/172.17.0.1/tcp/40118, error: Transport(Other(Custom { kind: Other, error: Other(Transport(Left(Right(Apply(Io(Os { code: 104, kind: ConnectionReset, message: "Connection reset by peer" })))))) }))
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.517698Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWNyTfJqiMQcnByAUnpm8a9MJjFf1MA1tgQHKvcx4DeSzM"): [/ip4/172.17.0.1/tcp/55559, /ip4/172.18.0.1/tcp/55559]
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.517858Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWNyTfJqiMQcnByAUnpm8a9MJjFf1MA1tgQHKvcx4DeSzM")
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.522299Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWNFKsayJ8E97Ydsbfk9NM3YJKKLY7Hp61iK8sY8wMcoRp"): [/ip4/172.18.0.1/tcp/55561, /ip4/172.17.0.1/tcp/55561]
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.522414Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWNFKsayJ8E97Ydsbfk9NM3YJKKLY7Hp61iK8sY8wMcoRp")
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.523542Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWNyTfJqiMQcnByAUnpm8a9MJjFf1MA1tgQHKvcx4DeSzM"): [/ip4/172.17.0.1/tcp/55559, /ip4/172.18.0.1/tcp/55559]
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.525285Z[0m [32m INFO[0m [2mpapyrus_nele for peer PeerId("12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5"): [/ip4/172.18.0.1/tcp/55550, /ip4/172.17.0.1/tcp/55550]
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.429412Z[0m [33m WARN[0m [2mpapyrus_network::network_manager[0m[2m:[0m Incoming connection error. connection id: ConnectionId(8), local addr: /ip4/172.18.0.1/tcp/55561, send back addr: /ip4/172.17.0.1/tcp/40098, error: Transport(Other(Custom { kind: Other, error: Other(Transport(Left(Right(Apply(Io(Os { code: 104, kind: ConnectionReset, message: "Connection reset by peer" })))))) }))
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.433824Z[0m [33m WARN[0m [2mpapyrus_network::network_manager[0m[2m:[0m Incoming connection error. connection id: ConnectionId(6), local addr: /ip4/172.18.0.1/tcp/55561, send back addr: /ip4/172.17.0.1/tcp/40082, error: Transport(Other(Custom { kind: Other, error: Other(Transport(Left(Right(Apply(Io(Os { code: 104, kind: ConnectionReset, message: "Connection reset by peer" })))))) }))
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.447886Z[0m [33m WARN[0m [2mpapyrus_network::network_manager[0m[2m:[0m Incoming connection error. connection id: ConnectionId(10), local addr: /ip4/172.18.0.1/tcp/55561, send back addr: /ip4/172.17.0.1/tcp/40110, error: Transport(Other(Custom { kind: Other, error: Other(Transport(Left(Right(Apply(Io(Os { code: 104, kind: ConnectionReset, message: "Connection reset by peer" })))))) }))
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.462236Z[0m [33m WARN[0m [2mpapyrus_network::network_manager[0m[2m:[0m Incoming connection error. connection id: ConnectionId(12), local addr: /ip4/172.17.0.1/tcp/55554, send back addr: /ip4/172.17.0.1/tcp/40128, error: Transport(Other(Custom { kind: Other, error: Other(Transport(Left(Right(Apply(Io(Os { code: 104, kind: ConnectionReset, message: "Connection reset by peer" })))))) }))
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.482036Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWQXBGdvp2qWJpGG3DYxrGuP1m8sh3SxVnSFL9XCQobFGN"): [/ip4/172.18.0.1/tcp/55563, /ip4/172.17.0.1/tcp/55563]
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.482196Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWQXBGdvp2qWJpGG3DYxrGuP1m8sh3SxVnSFL9XCQobFGN")
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.483189Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWNyTfJqiMQcnByAUnpm8a9MJjFf1MA1tgQHKvcx4DeSzM"): [/ip4/172.17.0.1/tcp/55559, /ip4/172.18.0.1/tcp/55559]
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.483325Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWNyTfJqiMQcnByAUnpm8a9MJjFf1MA1tgQHKvcx4DeSzM")
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.484495Z[0m [33m WARN[0m [2mpapyrus_network::network_manager[0m[2m:[0m Incoming connection error. connection id: ConnectionId(17), local addr: /ip4/172.17.0.1/tcp/55554, send back addr: /ip4/172.17.0.1/tcp/40138, error: Transport(Other(Custom { kind: Other, error: Other(Transport(Left(Right(Apply(Io(Os { code: 104, kind: ConnectionReset, message: "Connection reset by peer" })))))) }))
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.496792Z[0m [33m WARN[0m [2mpapyrus_network::network_manager[0m[2m:[0m Incoming connection error. connection id: ConnectionId(19), local addr: /ip4/172.17.0.1/tcp/55554, send back addr: /ip4/172.17.0.1/tcp/40146, error: Transport(Other(Custom { kind: Other, error: Other(Transport(Left(Right(Apply(Io(Os { code: 104, kind: ConnectionReset, message: "Connection reset by peer" })))))) }))
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.530722Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWBZgggfMLswCAbXT9nbku8utTGFcrksMqZobwFv3yxFMf"): [/ip4KooWLevku9cJMt9chmFVKeYtSX7rBwCQ2yE1ubgUQQ7CcXVV")
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.479503Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWNFKsayJ8E97Ydsbfk9NM3YJKKLY7Hp61iK8sY8wMcoRp"): [/ip4/172.17.0.1/tcp/55561, /ip4/172.18.0.1/tcp/55561]
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.479657Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWNFKsayJ8E97Ydsbfk9NM3YJKKLY7Hp61iK8sY8wMcoRp")
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.479953Z[0m [33m WARN[0m [2mpapyrus_network::network_manager[0m[2m:[0m Incoming connection error. connection id: ConnectionId(25), local addr: /ip4/172.17.0.1/tcp/55566, send back addr: /ip4/172.17.0.1/tcp/40190, error: Transport(Other(Custom { kind: Other, error: Other(Transport(Left(Right(Apply(Io(Os { code: 104, kind: ConnectionReset, message: "Connection reset by peer" })))))) }))
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.488041Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWFG5TdpnNR7xke7jRWfxhTgFAwPtYheaHWAZGKWvzTzU1"): [/ip4/172.17.0.1/tcp/55569, /ip4/172.18.0.1/tcp/55569]
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.488324Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWFG5TdpnNR7xke7jRWfxhTgFAwPtYheaHWAZGKWvzTzU1")
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.488595Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWKi6qUxsnmMqTgYX894brLNKV3m7PfTDGiZt7qmb85HVJ"): [/ip4/172.18.0.1/tcp/55567, /ip4/172.17.0.1/tcp/55567]
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.488742Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWKi6qUxsnmMqTgYX894brLNKV3m7PfTDGiZt7qmb85HVJ")
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.496209Z[0m [33m WARN[0m [2mpapyrus_network::network_manager[0m[2m:[0m Incoming connection error. connection id: ConnectionId(29), local addr: /ip4/172.18.0.1/tcp/55552, send back addr: /ip4/172.17.0.1/tcp/40000, error: Transport(Other(Custom { kind: Other, error: Other(Transport(Left(Right(Apply(Io(Os { code: 104, kind: ConnectionReset, message: "Connection reset by peer" })))))) }))
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.496361Z[0m [33m WARN[0m [2mpapyrus_network::network_manager[0m[2m:[0m Incoming connection error. connection id: ConnectionId(27), local addr: /ip4/172.18.0.1/tcp/55552, send back addr: /ip4/172.17.0.1/tcp/40192, error: Transport(Other(Custom { kind: Other, error: Other(Transport(Left(Right(Apply(Io(Os { code: 104, kind: ConnectionReset, message: "Connection reset by peer" })))))) }))
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.497678Z[0m [33m WARN[0m [2mpapyrus_network::network_manager[0m[2m:[0m Incoming connection error. connection id: ConnectionId(30), local addr: /ip4/172.17.0.1/tcp/55552, send back addr: /ip4/172.17.0.1/tcp/40138, error: Transport(Other(Custom { kind: Other, error: Other(Transport(Left(Right(Apply(Io(Os { code: 104, kind: ConnectionReset, message: "Connection reset by peer" })))))) }))
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.513554Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWQXBGdvp2qWJpGG3DYxrGuP1m8sh3SxVnSFL9XCQobFGN"): [/ip4/172.17.0.1/tcp/55563, /ip4/172.18.0.1/tcp/55563]
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.519256Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWKvKewFUeW9KQW8tcSRv4F8Eup4fsydPVJCfF6C8mxTr1"): [/ip4/172.18.0.1/tcp/55565, /ip4/172.17.0.1/tcp/55565]
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.530936Z[0m [32m INFO[0m [2mpapyrus_ne[2m2025-03-02T17:38:01.067412Z[0m [32m INFO[0m [2mstarknet_monitoring_endpoint::test_utils[0m[2m:[0m Querying the node for aliveness.
[2m2025-03-02T17:38:01.067767Z[0m [32m INFO[0m [2mstarknet_monitoring_endpoint::test_utils[0m[2m:[0m Querying the node for aliveness.
[2m2025-03-02T17:38:01.067899Z[0m [32m INFO[0m [2mstarknet_monitoring_endpoint::test_utils[0m[2m:[0m Querying the node for aliveness.
[2m2025-03-02T17:38:01.068038Z[0m [32m INFO[0m [2mstarknet_monitoring_endpoint::test_utils[0m[2m:[0m Querying the node for aliveness.
[2m2025-03-02T17:38:01.068190Z[0m [32m INFO[0m [2mstarknet_monitoring_endpoint::test_utils[0m[2m:[0m Querying the node for aliveness.
[2m2025-03-02T17:38:01.068337Z[0m [32m INFO[0m [2mstarknet_monitoring_endpoint::test_utils[0m[2m:[0m Querying the node for aliveness.
[2m2025-03-02T17:38:01.068463Z[0m [32m INFO[0m [2mstarknet_monitoring_endpoint::test_utils[0m[2m:[0m Querying the node for aliveness.
[2m2025-03-02T17:38:01.069554Z[0m [32m INFO[0m [2mstarknet_infra_utils::tracing[0m[2m:[0m Waiting for node to be alive: Attempt 2/50, Value true
[2m2025-03-02T17:38:01.069596Z[0m [32m INFO[0m [2mstarknet_infra_utils::tracing[0m[2m:[0m Waiting for node to be alive: Condition met on attempt 2/50
[2m2025-03-02T17:38:01.069667Z[0m [32m INFO[0m [2mstarknet_infra_utils::tracing[0m[2m:[0m Waiting for node to be alive: Attempt 2/50, Value true
[2m2025-03-02T17:38:01.069681Z[0m [32m INFO[0m [2mstarknet_infra_utils::tracing[0m[2m:[0m Waiting for node to be alive: Condition met on attempt 2/50
[2m2025-03-02T17:38:01.069720Z[0m [32m INFO[0m [2mstarknet_infra_utils::tracing[0m[2m:[0m Waiting for node to be alive: Attempt 2/50, Value true
[2m2025-03-02T17:38:01.069732Z[0m [32m INFO[0m [2mstarknet_infra_utils::tracing[0m[2m:[0m Waiting for node to be alive: Condition met on attempt 2/50
[2m2025-03-02T17:38:01.069772Z[0m [32m INFO[0m [2mstarknet_infra_utils::tracing[0m[2m:[0m Waiting for node to be alive: Attempt 2/50, Value true
[2m2025-03-02T17:38:01.069783Z[0m [32m INFO[0m [2mstarknet_infra_utils::tracing[0m[2m:[0m Waiting for node to be alive: Condition met on attempt 2/50
[2m2025-03-02T17:38:01.069836Z[0m [32m INFO[0m [2mstarknet_infra_utils::tracing[0m[2m:[0m Waiting for node to be alive: Attempt 2/50, Value true
[2m2025-03-02T17:38:01.069848Z[0m [32m INFO[0m [2mstarknet_infra_utils::tracing[0m[2m:[0m Waiting for node to be alive: Condition met on attempt 2/50
[2m2025-03-02T17:38:01.069887Z[0m [32m INFO[0m [2mstarknet_infra_utils::tracing[0m[2m:[0m Waiting for node to be alive: Attempt 2/50, Value true
[2m2025-03-02T17:38:01.069899Z[0m [32m INFO[0m [2mstarknet_infra_utils::tracing[0m[2m:[0m Waiting for node to be alive: Condition met on attempt 2/50
[2m2025-03-02T17:38:01.069936Z[0m [32m INFO[0m [2mstarknet_infra_utils::tracing[0m[2m:[0m Waiting for node to be alive: Attempt 2/50, Value true
[2m2025-03-02T17:38:01.069947Z[0m [32m INFO[0m [2mstarknet_infra_utils::tracing[0m[2m:[0m Waiting for node to be alive: Condition met on attempt 2/50
[2m2025-03-02T17:38:01.069998Z[0m [32m INFO[0m [2mstarknet_integration_tests::monitoring_utils[0m[2m:[0m Verifying that sequencer 0 got 0 batched txs.
[2m2025-03-02T17:38:01.074699Z[0m [32m INFO[0m [2mstarknet_integration_tests::sequencer_manager[0m[2m:[0m Running integration test simulator.
[2m2025-03-02T17:38:01.074735Z[0m [32m INFO[0m [2mstarknet_integration_tests::utils[0m[2m:[0m Sending 2 txs.
or: Other(Transport(Left(Right(Apply(Io(Os { code: 104, kind: ConnectionReset, message: "Connection reset by peer" })))))) }))
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.543503Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWLevku9cJMt9chmFVKeYtSX7rBwCQ2yE1ubgUQQ7CcXVV"): [/ip4/172.18.0.1/tcp/55558, /ip4/172.17.0.1/tcp/55558]
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.552288Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWGpU8ZYCs6gug4KStHgtLVMPMBBb9MhEZqvmNBJRdCEhu"): [/ip4/172.17.0.1/tcp/55554, /ip4/172.18.0.1/tcp/55554]
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.552424Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWGpU8ZYCs6gug4KStHgtLVMPMBBb9MhEZqvmNBJRdCEhu")
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.552696Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWBZgggfMLswCAbXT9nbku8utTGFcrksMqZobwFv3yxFMf"): [/ip4/172.18.0.1/tcp/55552, /ip4/172.17.0.1/tcp/55552]
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.552801Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWBZgggfMLswCAbXT9nbku8utTGFcrksMqZobwFv3yxFMf")
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.559500Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWF2Gr1pEFKqyzVM7Skeuq554zd5hMgq6pWvfKk7yDfRf2"): [/ip4/172.18.0.1/tcp/55551, /ip4/172.17.0.1/tcp/55551]
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.559607Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWF2Gr1pEFKqyzVM7Skeuq554zd5hMgq6pWvfKk7yDfRf2")
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.573255Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWBZgggfMLswCAbXT9nbku8utTGFcrksMqZobwFv3yxFMf"): [/ip4/172.17.0.1/tcp/55552, /ip4/172.18.0.1/tcp/55552]
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.589078Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWF2Gr1pEFKqyzVM7Skeuq554zd5hMgq6pWvfKk7yDfRf2"): [/ip4/172.17.0.1/tcp/55551, /ip4/172.18.0.1/tcp/55551]
[35mNode id 4 part 1:[0m [2m2025-03-02T17:37:56.604048Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWGpU8ZYCs6gug4KStHgtLVMPMBBb9MhEZqvmNBJRdCEhu"): [/ip4/172.17.0.1/tcp/55554, /ip4/172.18.0.1/tcp/55554]
[35mNode id 4 part 1:[0m [2m2025-03-02T17:38:01.730382Z[0m [33m WARN[0m [2mstarknet_sequencer_infra::component_client::local_component_client[0m[2m:[0m Dropping LocalComponentClient<StateSyncRequest,StateSyncResponse>.
[35mNode id 4 part 1:[0m [2m2025-03-02T17:38:01.733096Z[0m [33m WARN[0m [2mstarknet_sequencer_infra::component_client::local_component_client[0m[2m:[0m Dropping LocalComponentClient<StateSyncRequest,StateSyncResponse>.
[35mNode id 4 part 1:[0m [2m2025-03-02T17:38:01.737605Z[0m [33m WARN[0m [2mstarknet_sequencer_infra::component_client::local_component_client[0m[2m:[0m Dropping LocalComponentClient<StateSyncRequest,StateSyncResponse>.
[35mNode id 4 part 1:[0m [2m2025-03-02T17:38:01.739843Z[0m [33m WARN[0m [2mstarknet_sequencer_infra::component_client::local_component_client[0m[2m:[0m Dropping LocalComponentClient<StateSyncRequest,StateSyncResponse>.
[35mNode id 4 part 1:[0m [2m2025-03-02T17:38:01.741668Z[0m [33m WARN[0m [2mstarknet_sequencer_infra::component_client::local_component_client[0m[2m:[0m Dropping LocalComponentClient<StateSyncRequest,StateSyncResponse>.
[35mNode id 4 part 1:[0m [2m2025-03-02/172.17.0.1/tcp/55552, /ip4/172.18.0.1/tcp/55552]
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.530895Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWBZgggfMLswCAbXT9nbku8utTGFcrksMqZobwFv3yxFMf")
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.535378Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWF2Gr1pEFKqyzVM7Skeuq554zd5hMgq6pWvfKk7yDfRf2"): [/ip4/172.17.0.1/tcp/55551, /ip4/172.18.0.1/tcp/55551]
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.535462Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWF2Gr1pEFKqyzVM7Skeuq554zd5hMgq6pWvfKk7yDfRf2")
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.535543Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWBZgggfMLswCAbXT9nbku8utTGFcrksMqZobwFv3yxFMf"): [/ip4/172.17.0.1/tcp/55552, /ip4/172.18.0.1/tcp/55552]
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.552405Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWG6bwAM4e3WnKMk6pNmYUaxVfu1uEho3EyEjxEgJ7mpFY"): [/ip4/172.17.0.1/tcp/55556, /ip4/172.18.0.1/tcp/55556]
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.552552Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWG6bwAM4e3WnKMk6pNmYUaxVfu1uEho3EyEjxEgJ7mpFY")
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.553738Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWLevku9cJMt9chmFVKeYtSX7rBwCQ2yE1ubgUQQ7CcXVV"): [/ip4/172.17.0.1/tcp/55558, /ip4/172.18.0.1/tcp/55558]
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.553874Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWLevku9cJMt9chmFVKeYtSX7rBwCQ2yE1ubgUQQ7CcXVV")
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.560432Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWG6bwAM4e3WnKMk6pNmYUaxVfu1uEho3EyEjxEgJ7mpFY"): [/ip4/172.18.0.1/tcp/55556, /ip4/172.17.0.1/tcp/55556]
[34mNode id 3 part 1:[0m [2m2025-03-02T17:37:56.615965Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWF2Gr1pEFKqyzVM7Skeuq554zd5hMgq6pWvfKk7yDfRf2"): [/ip4/172.18.0.1/tcp/55551, /ip4/172.17.0.1/tcp/55551]
[34mNode id 3 part 1:[0m [2m2025-03-02T17:38:01.734383Z[0m [33m WARN[0m [2mstarknet_sequencer_infra::component_client::local_component_client[0m[2m:[0m Dropping LocalComponentClient<StateSyncRequest,StateSyncResponse>.
[34mNode id 3 part 1:[0m [2m2025-03-02T17:38:01.736102Z[0m [33m WARN[0m [2mstarknet_sequencer_infra::component_client::local_component_client[0m[2m:[0m Dropping LocalComponentClient<StateSyncRequest,StateSyncResponse>.
[34mNode id 3 part 1:[0m [2m2025-03-02T17:38:01.739830Z[0m [33m WARN[0m [2mstarknet_sequencer_infra::component_client::local_component_client[0m[2m:[0m Dropping LocalComponentClient<StateSyncRequest,StateSyncResponse>.
[34mNode id 3 part 1:[0m [2m2025-03-02T17:38:01.742267Z[0m [33m WARN[0m [2mstarknet_sequencer_infra::component_client::local_component_client[0m[2m:[0m Dropping LocalComponentClient<StateSyncRequest,StateSyncResponse>.
[34mNode id 3 part 1:[0m [2m2025-03-02T17:38:01.743634Z[0m [33m WARN[0m [2mstarknet_sequencer_infra::component_client::local_component_client[0m[2m:[0m Dropping LocalComponentClient<StateSyncRequest,StateSyncResponse>.
[34mNode id 3 part 1:[0m [2m2025-03-02T17:38:01.745675Z[0m [33m WARN[0m [2mstarknet_sequencer_infra::component_client::local_component_client[0m[2m:[0m Dropping LocalComponentClient<StateSyncRequestwork::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWGpU8ZYCs6gug4KStHgtLVMPMBBb9MhEZqvmNBJRdCEhu"): [/ip4/172.17.0.1/tcp/55554, /ip4/172.18.0.1/tcp/55554]
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.531061Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWGpU8ZYCs6gug4KStHgtLVMPMBBb9MhEZqvmNBJRdCEhu")
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.531244Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWG6bwAM4e3WnKMk6pNmYUaxVfu1uEho3EyEjxEgJ7mpFY"): [/ip4/172.18.0.1/tcp/55556, /ip4/172.17.0.1/tcp/55556]
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.531330Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWKi6qUxsnmMqTgYX894brLNKV3m7PfTDGiZt7qmb85HVJ"): [/ip4/172.17.0.1/tcp/55567, /ip4/172.18.0.1/tcp/55567]
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.531390Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWG6bwAM4e3WnKMk6pNmYUaxVfu1uEho3EyEjxEgJ7mpFY")
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.531695Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWF2Gr1pEFKqyzVM7Skeuq554zd5hMgq6pWvfKk7yDfRf2"): [/ip4/172.17.0.1/tcp/55551, /ip4/172.18.0.1/tcp/55551]
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.531789Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWF2Gr1pEFKqyzVM7Skeuq554zd5hMgq6pWvfKk7yDfRf2")
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.544725Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWFG5TdpnNR7xke7jRWfxhTgFAwPtYheaHWAZGKWvzTzU1"): [/ip4/172.18.0.1/tcp/55569, /ip4/172.17.0.1/tcp/55569]
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.565528Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWLevku9cJMt9chmFVKeYtSX7rBwCQ2yE1ubgUQQ7CcXVV"): [/ip4/172.17.0.1/tcp/55558, /ip4/172.18.0.1/tcp/55558]
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.576954Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWGpU8ZYCs6gug4KStHgtLVMPMBBb9MhEZqvmNBJRdCEhu"): [/ip4/172.17.0.1/tcp/55554, /ip4/172.18.0.1/tcp/55554]
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.587362Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWG6bwAM4e3WnKMk6pNmYUaxVfu1uEho3EyEjxEgJ7mpFY"): [/ip4/172.18.0.1/tcp/55556, /ip4/172.17.0.1/tcp/55556]
[33mNode id 2 part 0:[0m [2m2025-03-02T17:37:56.615965Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWF2Gr1pEFKqyzVM7Skeuq554zd5hMgq6pWvfKk7yDfRf2"): [/ip4/172.17.0.1/tcp/55551, /ip4/172.18.0.1/tcp/55551]
[33mNode id 2 part 0:[0m [2m2025-03-02T17:38:01.672293Z[0m [32m INFO[0m [2mstarknet_mempool_p2p::runner[0m[2m:[0m Received transaction from network, forwarding to gateway
[33mNode id 2 part 0:[0m [2m2025-03-02T17:38:01.756219Z[0m [32m INFO[0m [1madd_tx[0m: [2mstarknet_mempool::mempool[0m[2m:[0m Adding transaction to mempool. [2m[3mtx_nonce[0m[2m=[0m0 [3mtx_hash[0m[2m=[0m1282192958315187179208142443179377467708682392011225534862360039907523430818 [3mtx_tip[0m[2m=[0m0 [3mtx_max_l2_gas_price[0m[2m=[0m100000000000 [3maccount_state[0m[2m=[0mAccountState { address: 0x0560a3c9b0d5762842454e5b68098afbf8e9bff9052b8e015ac43a50a75d98ca, nonce: 0 }[0m
[33mNode id 2 part 0:[0m [2m2025-03-02T17:38:01.756430Z[0m [32m INFO[0m [2mstarknet_mempool_p2p:twork::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWQXBGdvp2qWJpGG3DYxrGuP1m8sh3SxVnSFL9XCQobFGN"): [/ip4/172.17.0.1/tcp/55563, /ip4/172.18.0.1/tcp/55563]
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.531051Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWBZgggfMLswCAbXT9nbku8utTGFcrksMqZobwFv3yxFMf"): [/ip4/172.17.0.1/tcp/55552, /ip4/172.18.0.1/tcp/55552]
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.531202Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWBZgggfMLswCAbXT9nbku8utTGFcrksMqZobwFv3yxFMf")
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.545921Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWGpU8ZYCs6gug4KStHgtLVMPMBBb9MhEZqvmNBJRdCEhu"): [/ip4/172.18.0.1/tcp/55554, /ip4/172.17.0.1/tcp/55554]
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.546068Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWGpU8ZYCs6gug4KStHgtLVMPMBBb9MhEZqvmNBJRdCEhu")
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.551634Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWG6jGCV6xsbvE8hqTJ6P8TzMU6aDqN489UwmQGoDr957G"): [/ip4/172.18.0.1/tcp/55566, /ip4/172.17.0.1/tcp/55566]
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.571807Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWG6bwAM4e3WnKMk6pNmYUaxVfu1uEho3EyEjxEgJ7mpFY"): [/ip4/172.17.0.1/tcp/55556, /ip4/172.18.0.1/tcp/55556]
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.571947Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWG6bwAM4e3WnKMk6pNmYUaxVfu1uEho3EyEjxEgJ7mpFY")
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.573478Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWGpU8ZYCs6gug4KStHgtLVMPMBBb9MhEZqvmNBJRdCEhu"): [/ip4/172.18.0.1/tcp/55554, /ip4/172.17.0.1/tcp/55554]
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.574429Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWBZgggfMLswCAbXT9nbku8utTGFcrksMqZobwFv3yxFMf"): [/ip4/172.17.0.1/tcp/55552, /ip4/172.18.0.1/tcp/55552]
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.579842Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWFG5TdpnNR7xke7jRWfxhTgFAwPtYheaHWAZGKWvzTzU1"): [/ip4/172.18.0.1/tcp/55569, /ip4/172.17.0.1/tcp/55569]
[32mNode id 1 part 0:[0m [2m2025-03-02T17:37:56.602911Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWG6bwAM4e3WnKMk6pNmYUaxVfu1uEho3EyEjxEgJ7mpFY"): [/ip4/172.17.0.1/tcp/55556, /ip4/172.18.0.1/tcp/55556]
[32mNode id 1 part 0:[0m [2m2025-03-02T17:38:01.672293Z[0m [32m INFO[0m [2mstarknet_mempool_p2p::runner[0m[2m:[0m Received transaction from network, forwarding to gateway
[32mNode id 1 part 0:[0m [2m2025-03-02T17:38:01.766768Z[0m [32m INFO[0m [1madd_tx[0m: [2mstarknet_mempool::mempool[0m[2m:[0m Adding transaction to mempool. [2m[3mtx_nonce[0m[2m=[0m0 [3mtx_hash[0m[2m=[0m1282192958315187179208142443179377467708682392011225534862360039907523430818 [3mtx_tip[0m[2m=[0m0 [3mtx_max_l2_gas_price[0m[2m=[0m100000000000 [3maccount_state[0m[2m=[0mAccountState { address: 0x0560a3c9b0d5762842454e5b68098afbf8e9bff9052b8e015ac43a50a75d98ca, nonce: 0 }[0m
[32mNode id 1 part 0:[0m [2m2025-03-02T17:38:01.766930Z[0m [32m INFO[0m [2mstarknet_mempool_p2p:[2m2025-03-02T17:38:02.182922Z[0m [32m INFO[0m [2mstarknet_integration_tests::monitoring_utils[0m[2m:[0m Awaiting until 2 blocks have been created in sequencer 2.
[2m2025-03-02T17:38:02.187694Z[0m [32m INFO[0m [2mstarknet_infra_utils::tracing[0m[2m:[0m Waiting for batcher height metric to reach block 2 in sequencer 2 executable 0.: Attempt 1/50, Value BlockNumber(0)
eerId("12D3KooWKvKewFUeW9KQW8tcSRv4F8Eup4fsydPVJCfF6C8mxTr1")
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.456630Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWFG5TdpnNR7xke7jRWfxhTgFAwPtYheaHWAZGKWvzTzU1"): [/ip4/172.18.0.1/tcp/55569, /ip4/172.17.0.1/tcp/55569]
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.456736Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWFG5TdpnNR7xke7jRWfxhTgFAwPtYheaHWAZGKWvzTzU1")
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.461028Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWFG5TdpnNR7xke7jRWfxhTgFAwPtYheaHWAZGKWvzTzU1"): [/ip4/172.18.0.1/tcp/55569, /ip4/172.17.0.1/tcp/55569]
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.525065Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWKvKewFUeW9KQW8tcSRv4F8Eup4fsydPVJCfF6C8mxTr1"): [/ip4/172.18.0.1/tcp/55565, /ip4/172.17.0.1/tcp/55565]
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.529619Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWG6jGCV6xsbvE8hqTJ6P8TzMU6aDqN489UwmQGoDr957G"): [/ip4/172.17.0.1/tcp/55566, /ip4/172.18.0.1/tcp/55566]
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.529813Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWG6jGCV6xsbvE8hqTJ6P8TzMU6aDqN489UwmQGoDr957G")
[34mNode id 3 part 0:[0m [2m2025-03-02T17:37:56.530840Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWG6jGCV6xsbvE8hqTJ6P8TzMU6aDqN489UwmQGoDr957G"): [/ip4/172.18.0.1/tcp/55566, /ip4/172.17.0.1/tcp/55566]
[34mNode id 3 part 0:[0m [2m2025-03-02T17:38:01.679928Z[0m [32m INFO[0m [2mstarknet_mempool_p2p::runner[0m[2m:[0m Received transaction from network, forwarding to gateway
[34mNode id 3 part 0:[0m [2m2025-03-02T17:38:01.811869Z[0m [32m INFO[0m [1madd_tx[0m: [2mstarknet_mempool::mempool[0m[2m:[0m Adding transaction to mempool. [2m[3mtx_nonce[0m[2m=[0m0 [3mtx_hash[0m[2m=[0m1282192958315187179208142443179377467708682392011225534862360039907523430818 [3mtx_tip[0m[2m=[0m0 [3mtx_max_l2_gas_price[0m[2m=[0m100000000000 [3maccount_state[0m[2m=[0mAccountState { address: 0x0560a3c9b0d5762842454e5b68098afbf8e9bff9052b8e015ac43a50a75d98ca, nonce: 0 }[0m
[34mNode id 3 part 0:[0m [2m2025-03-02T17:38:01.812040Z[0m [32m INFO[0m [2mstarknet_mempool_p2p::propagator[0m[2m:[0m Continuing propagation of received transaction
[34mNode id 3 part 0:[0m [2m2025-03-02T17:38:01.812215Z[0m [32m INFO[0m [1madd_tx[0m: [2mstarknet_gateway::gateway[0m[2m:[0m [3mreturn[0m[2m=[0mOk(TransactionHash(0x2d5b20c12d16a620e818b7d2bc59c49cc9b037e81c470ed6d79989de65e09a2))
[34mNode id 3 part 0:[0m [2m2025-03-02T17:38:02.189658Z[0m [32m INFO[0m [2mstarknet_mempool_p2p::runner[0m[2m:[0m Received transaction from network, forwarding to gateway
[34mNode id 3 part 0:[0m [2m2025-03-02T17:38:02.212291Z[0m [32m INFO[0m [1madd_tx[0m: [2mstarknet_mempool::mempool[0m[2m:[0m Adding transaction to mempool. [2m[3mtx_nonce[0m[2m=[0m1 [3mtx_hash[0m[2m=[0m2662131833982121741085617079462280994847867660620089198152154542983990642290 [3mtx_tip[0m[2m=[0m1 [3mtx_max_l2_gas_price[0m[2m=[0m100000000000 [3maccount_state[0m[2m=[0mAccountState { address: 0x0560a3c9b0d5762842454e5b68098afbf8e9bff9052b8e015ac43a50a75d98ca, nonce: 0 }[0m
[34mNode id 3 part 0:[0m [2m2025-03-02T17:38:02.212439Z[0m [32m INFO[0m [2mstarknet_mempool_p2p::propagator[0m[2m:[0m Continuing propagation of received transaction
[34mNode id 3 part 0:[0m [2m2025-03-02T17:38:02.212599Z[0m [32m INFO[0m [1madd_tx[0m: [[2m2025-03-02T17:38:07.193915Z[0m [32m INFO[0m [2mstarknet_infra_utils::tracing[0m[2m:[0m Waiting for batcher height metric to reach block 2 in sequencer 2 executable 0.: Attempt 2/50, Value BlockNumber(0)
:propagator[0m[2m:[0m Continuing propagation of received transaction
[32mNode id 1 part 0:[0m [2m2025-03-02T17:38:01.767095Z[0m [32m INFO[0m [1madd_tx[0m: [2mstarknet_gateway::gateway[0m[2m:[0m [3mreturn[0m[2m=[0mOk(TransactionHash(0x2d5b20c12d16a620e818b7d2bc59c49cc9b037e81c470ed6d79989de65e09a2))
[32mNode id 1 part 0:[0m [2m2025-03-02T17:38:02.189917Z[0m [32m INFO[0m [2mstarknet_mempool_p2p::runner[0m[2m:[0m Received transaction from network, forwarding to gateway
[32mNode id 1 part 0:[0m [2m2025-03-02T17:38:02.205901Z[0m [32m INFO[0m [1madd_tx[0m: [2mstarknet_mempool::mempool[0m[2m:[0m Adding transaction to mempool. [2m[3mtx_nonce[0m[2m=[0m1 [3mtx_hash[0m[2m=[0m2662131833982121741085617079462280994847867660620089198152154542983990642290 [3mtx_tip[0m[2m=[0m1 [3mtx_max_l2_gas_price[0m[2m=[0m100000000000 [3maccount_state[0m[2m=[0mAccountState { address: 0x0560a3c9b0d5762842454e5b68098afbf8e9bff9052b8e015ac43a50a75d98ca, nonce: 0 }[0m
[32mNode id 1 part 0:[0m [2m2025-03-02T17:38:02.208332Z[0m [32m INFO[0m [2mstarknet_mempool_p2p::propagator[0m[2m:[0m Continuing propagation of received transaction
[32mNode id 1 part 0:[0m [2m2025-03-02T17:38:02.209293Z[0m [32m INFO[0m [1madd_tx[0m: [2mstarknet_gateway::gateway[0m[2m:[0m [3mreturn[0m[2m=[0mOk(TransactionHash(0x5e2b695b9b89468c011eb7ceb90775c9a7f6a8c2047c575bda8b595db6a8672))
[32mNode id 1 part 0:[0m [2m2025-03-02T17:38:11.295371Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m: [2mstarknet_consensus::manager[0m[2m:[0m running consensus for height BlockNumber(1). is_observer: false, validators: [ContractAddress(PatriciaKey(0x64)), ContractAddress(PatriciaKey(0x65)), ContractAddress(PatriciaKey(0x66)), ContractAddress(PatriciaKey(0x67)), ContractAddress(PatriciaKey(0x68))] [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000065[0m [2m[3mheight[0m[2m=[0m1[0m
[32mNode id 1 part 0:[0m [2m2025-03-02T17:38:11.295657Z[0m [32m INFO[0m [1mstart_height[0m: [2mstarknet_batcher::batcher[0m[2m:[0m Starting to work on height 1. [2m[3minput[0m[2m=[0mStartHeightInput { height: BlockNumber(1) }[0m
[32mNode id 1 part 0:[0m [2m2025-03-02T17:38:11.295770Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mstart[0m: [2mstarknet_consensus::state_machine[0m[2m:[0m Starting round 0 as Proposer [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000065[0m [2m[3mheight[0m[2m=[0m1[0m
[32mNode id 1 part 0:[0m [2m2025-03-02T17:38:11.295828Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mstart[0m:[1mbuild_proposal[0m: [2mstarknet_consensus_orchestrator::cende[0m[2m:[0m Height 1 is configured as the `skip_write_height`, meaning consensus can send a proposal without writing to Aerospike. The blob that should have been written here in a normal flow, should already be written to Aerospike. Not writing to Aerospike previous height blob!!!. [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000065[0m [2m[3mheight[0m[2m=[0m1[0m
[32mNode id 1 part 0:[0m [2m2025-03-02T17:38:11.295905Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mstart[0m:[1mbuild_proposal[0m: [2mstarknet_consensus_orchestrator::sequencer_consensus_context[0m[2m:[0m Building proposal [3mproposal_init[0m[2m=[0mProposalInit { height: BlockNumber(1), round: 0, valid_round: None, proposer: ContractAddress(PatriciaKey(0x65)) } [3mtimeout[0m[2m=[0m9s [3mproposal_id[0m[2m=[0m0 [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000065[0m [2m[3mheight[0m[2m=[0m1[0m
[32mNode id 1 part 0:[0m [2m2025-03-02T17:38:11.296402Z[0m [33m WARN[0m [1mhandle_request[0m: [2mstarknet_sequencer_infra::component_client::local_component_client[0m[2m:[0m Dropping LocalComponentClient<L1ProviderRequest,L1ProviderResponse>. [2m[3mrequest[0m[2m=[0mStartBlocyzVM7Skeuq554zd5hMgq6pWvfKk7yDfRf2"): [/ip4/172.17.0.1/tcp/55551, /ip4/172.18.0.1/tcp/55551]
[31mNode id 0 part 0:[0m [2m2025-03-02T17:37:56.424509Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWF2Gr1pEFKqyzVM7Skeuq554zd5hMgq6pWvfKk7yDfRf2")
[31mNode id 0 part 0:[0m [2m2025-03-02T17:38:01.663771Z[0m [32m INFO[0m [1madd_tx[0m: [2mstarknet_mempool::mempool[0m[2m:[0m Adding transaction to mempool. [2m[3mtx_nonce[0m[2m=[0m0 [3mtx_hash[0m[2m=[0m1282192958315187179208142443179377467708682392011225534862360039907523430818 [3mtx_tip[0m[2m=[0m0 [3mtx_max_l2_gas_price[0m[2m=[0m100000000000 [3maccount_state[0m[2m=[0mAccountState { address: 0x0560a3c9b0d5762842454e5b68098afbf8e9bff9052b8e015ac43a50a75d98ca, nonce: 0 }[0m
[31mNode id 0 part 0:[0m [2m2025-03-02T17:38:01.664007Z[0m [32m INFO[0m [2mstarknet_mempool_p2p::propagator[0m[2m:[0m Broadcast new transaction to other mempool peers
[31mNode id 0 part 0:[0m [2m2025-03-02T17:38:01.664856Z[0m [32m INFO[0m [1madd_tx[0m: [2mstarknet_gateway::gateway[0m[2m:[0m [3mreturn[0m[2m=[0mOk(TransactionHash(0x2d5b20c12d16a620e818b7d2bc59c49cc9b037e81c470ed6d79989de65e09a2))
[31mNode id 0 part 0:[0m [2m2025-03-02T17:38:02.181236Z[0m [32m INFO[0m [1madd_tx[0m: [2mstarknet_mempool::mempool[0m[2m:[0m Adding transaction to mempool. [2m[3mtx_nonce[0m[2m=[0m1 [3mtx_hash[0m[2m=[0m2662131833982121741085617079462280994847867660620089198152154542983990642290 [3mtx_tip[0m[2m=[0m1 [3mtx_max_l2_gas_price[0m[2m=[0m100000000000 [3maccount_state[0m[2m=[0mAccountState { address: 0x0560a3c9b0d5762842454e5b68098afbf8e9bff9052b8e015ac43a50a75d98ca, nonce: 0 }[0m
[31mNode id 0 part 0:[0m [2m2025-03-02T17:38:02.181381Z[0m [32m INFO[0m [2mstarknet_mempool_p2p::propagator[0m[2m:[0m Broadcast new transaction to other mempool peers
[31mNode id 0 part 0:[0m [2m2025-03-02T17:38:02.182019Z[0m [32m INFO[0m [1madd_tx[0m: [2mstarknet_gateway::gateway[0m[2m:[0m [3mreturn[0m[2m=[0mOk(TransactionHash(0x5e2b695b9b89468c011eb7ceb90775c9a7f6a8c2047c575bda8b595db6a8672))
[31mNode id 0 part 0:[0m [2m2025-03-02T17:38:11.242483Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m: [2mstarknet_consensus::manager[0m[2m:[0m running consensus for height BlockNumber(1). is_observer: false, validators: [ContractAddress(PatriciaKey(0x64)), ContractAddress(PatriciaKey(0x65)), ContractAddress(PatriciaKey(0x66)), ContractAddress(PatriciaKey(0x67)), ContractAddress(PatriciaKey(0x68))] [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000064[0m [2m[3mheight[0m[2m=[0m1[0m
[31mNode id 0 part 0:[0m [2m2025-03-02T17:38:11.243191Z[0m [32m INFO[0m [1mstart_height[0m: [2mstarknet_batcher::batcher[0m[2m:[0m Starting to work on height 1. [2m[3minput[0m[2m=[0mStartHeightInput { height: BlockNumber(1) }[0m
[31mNode id 0 part 0:[0m [2m2025-03-02T17:38:11.243375Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mstart[0m: [2mstarknet_consensus::state_machine[0m[2m:[0m Starting round 0 as Validator [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000064[0m [2m[3mheight[0m[2m=[0m1[0m
[31mNode id 0 part 0:[0m [2m2025-03-02T17:38:11.305319Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_proposal[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Accepting ProposalInit { height: BlockNumber(1), round: 0, valid_round: None, proposer: ContractAddress(PatriciaKey(0x65)) }. node_round: 0, timeout: 9s [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000064[0m [2m[3mheight[0m[2m=[0m1[0m
[31mNode id 0 part 0:[0m [2m2025-03-02T17:38:11.305429Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_proposal[0m:[1mvalidate_proposal[0m: [2mstarknet_consensus_orchestrator::sequencer_consensus_context[0m[2m:[0m Validating propt,StateSyncResponse>.
[34mNode id 3 part 1:[0m [2m2025-03-02T17:38:01.763942Z[0m [33m WARN[0m [2mstarknet_sequencer_infra::component_client::local_component_client[0m[2m:[0m Dropping LocalComponentClient<StateSyncRequest,StateSyncResponse>.
[34mNode id 3 part 1:[0m [2m2025-03-02T17:38:01.802859Z[0m [33m WARN[0m [2mstarknet_sequencer_infra::component_client::local_component_client[0m[2m:[0m Dropping LocalComponentClient<StateSyncRequest,StateSyncResponse>.
[34mNode id 3 part 1:[0m [2m2025-03-02T17:38:01.804963Z[0m [33m WARN[0m [2mstarknet_sequencer_infra::component_client::local_component_client[0m[2m:[0m Dropping LocalComponentClient<StateSyncRequest,StateSyncResponse>.
[34mNode id 3 part 1:[0m [2m2025-03-02T17:38:02.198736Z[0m [33m WARN[0m [2mstarknet_sequencer_infra::component_client::local_component_client[0m[2m:[0m Dropping LocalComponentClient<StateSyncRequest,StateSyncResponse>.
[34mNode id 3 part 1:[0m [2m2025-03-02T17:38:02.200633Z[0m [33m WARN[0m [2mstarknet_sequencer_infra::component_client::local_component_client[0m[2m:[0m Dropping LocalComponentClient<StateSyncRequest,StateSyncResponse>.
[34mNode id 3 part 1:[0m [2m2025-03-02T17:38:02.202654Z[0m [33m WARN[0m [2mstarknet_sequencer_infra::component_client::local_component_client[0m[2m:[0m Dropping LocalComponentClient<StateSyncRequest,StateSyncResponse>.
[34mNode id 3 part 1:[0m [2m2025-03-02T17:38:02.205912Z[0m [33m WARN[0m [2mstarknet_sequencer_infra::component_client::local_component_client[0m[2m:[0m Dropping LocalComponentClient<StateSyncRequest,StateSyncResponse>.
[34mNode id 3 part 1:[0m [2m2025-03-02T17:38:02.207608Z[0m [33m WARN[0m [2mstarknet_sequencer_infra::component_client::local_component_client[0m[2m:[0m Dropping LocalComponentClient<StateSyncRequest,StateSyncResponse>.
[34mNode id 3 part 1:[0m [2m2025-03-02T17:38:11.290624Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m: [2mstarknet_consensus::manager[0m[2m:[0m running consensus for height BlockNumber(1). is_observer: false, validators: [ContractAddress(PatriciaKey(0x64)), ContractAddress(PatriciaKey(0x65)), ContractAddress(PatriciaKey(0x66)), ContractAddress(PatriciaKey(0x67)), ContractAddress(PatriciaKey(0x68))] [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000067[0m [2m[3mheight[0m[2m=[0m1[0m
[34mNode id 3 part 1:[0m [2m2025-03-02T17:38:11.291085Z[0m [32m INFO[0m [1mstart_height[0m: [2mstarknet_batcher::batcher[0m[2m:[0m Starting to work on height 1. [2m[3minput[0m[2m=[0mStartHeightInput { height: BlockNumber(1) }[0m
[34mNode id 3 part 1:[0m [2m2025-03-02T17:38:11.291248Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mstart[0m: [2mstarknet_consensus::state_machine[0m[2m:[0m Starting round 0 as Validator [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000067[0m [2m[3mheight[0m[2m=[0m1[0m
[34mNode id 3 part 1:[0m [2m2025-03-02T17:38:11.305384Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_proposal[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Accepting ProposalInit { height: BlockNumber(1), round: 0, valid_round: None, proposer: ContractAddress(PatriciaKey(0x65)) }. node_round: 0, timeout: 9s [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000067[0m [2m[3mheight[0m[2m=[0m1[0m
[34mNode id 3 part 1:[0m [2m2025-03-02T17:38:11.305460Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_proposal[0m:[1mvalidate_proposal[0m: [2mstarknet_consensus_orchestrator::sequencer_consensus_context[0m[2m:[0m Validating proposal. [3mtimeout[0m[2m=[0m9s [3mproposal_id[0m[2m=[0m0 [3mproposer[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000065 [3mround[0m[2m=[0m0 [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000067[0m [2m[3mheight[0m[2m=[0m1[0m
[34mNode:propagator[0m[2m:[0m Continuing propagation of received transaction
[33mNode id 2 part 0:[0m [2m2025-03-02T17:38:01.756626Z[0m [32m INFO[0m [1madd_tx[0m: [2mstarknet_gateway::gateway[0m[2m:[0m [3mreturn[0m[2m=[0mOk(TransactionHash(0x2d5b20c12d16a620e818b7d2bc59c49cc9b037e81c470ed6d79989de65e09a2))
[33mNode id 2 part 0:[0m [2m2025-03-02T17:38:02.189658Z[0m [32m INFO[0m [2mstarknet_mempool_p2p::runner[0m[2m:[0m Received transaction from network, forwarding to gateway
[33mNode id 2 part 0:[0m [2m2025-03-02T17:38:02.202496Z[0m [32m INFO[0m [1madd_tx[0m: [2mstarknet_mempool::mempool[0m[2m:[0m Adding transaction to mempool. [2m[3mtx_nonce[0m[2m=[0m1 [3mtx_hash[0m[2m=[0m2662131833982121741085617079462280994847867660620089198152154542983990642290 [3mtx_tip[0m[2m=[0m1 [3mtx_max_l2_gas_price[0m[2m=[0m100000000000 [3maccount_state[0m[2m=[0mAccountState { address: 0x0560a3c9b0d5762842454e5b68098afbf8e9bff9052b8e015ac43a50a75d98ca, nonce: 0 }[0m
[33mNode id 2 part 0:[0m [2m2025-03-02T17:38:02.205266Z[0m [32m INFO[0m [2mstarknet_mempool_p2p::propagator[0m[2m:[0m Continuing propagation of received transaction
[33mNode id 2 part 0:[0m [2m2025-03-02T17:38:02.205535Z[0m [32m INFO[0m [1madd_tx[0m: [2mstarknet_gateway::gateway[0m[2m:[0m [3mreturn[0m[2m=[0mOk(TransactionHash(0x5e2b695b9b89468c011eb7ceb90775c9a7f6a8c2047c575bda8b595db6a8672))
[33mNode id 2 part 0:[0m [2m2025-03-02T17:38:11.278584Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m: [2mstarknet_consensus::manager[0m[2m:[0m running consensus for height BlockNumber(1). is_observer: false, validators: [ContractAddress(PatriciaKey(0x64)), ContractAddress(PatriciaKey(0x65)), ContractAddress(PatriciaKey(0x66)), ContractAddress(PatriciaKey(0x67)), ContractAddress(PatriciaKey(0x68))] [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000066[0m [2m[3mheight[0m[2m=[0m1[0m
[33mNode id 2 part 0:[0m [2m2025-03-02T17:38:11.279168Z[0m [32m INFO[0m [1mstart_height[0m: [2mstarknet_batcher::batcher[0m[2m:[0m Starting to work on height 1. [2m[3minput[0m[2m=[0mStartHeightInput { height: BlockNumber(1) }[0m
[33mNode id 2 part 0:[0m [2m2025-03-02T17:38:11.279618Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mstart[0m: [2mstarknet_consensus::state_machine[0m[2m:[0m Starting round 0 as Validator [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000066[0m [2m[3mheight[0m[2m=[0m1[0m
[33mNode id 2 part 0:[0m [2m2025-03-02T17:38:11.305795Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_proposal[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Accepting ProposalInit { height: BlockNumber(1), round: 0, valid_round: None, proposer: ContractAddress(PatriciaKey(0x65)) }. node_round: 0, timeout: 9s [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000066[0m [2m[3mheight[0m[2m=[0m1[0m
[33mNode id 2 part 0:[0m [2m2025-03-02T17:38:11.305884Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_proposal[0m:[1mvalidate_proposal[0m: [2mstarknet_consensus_orchestrator::sequencer_consensus_context[0m[2m:[0m Validating proposal. [3mtimeout[0m[2m=[0m9s [3mproposal_id[0m[2m=[0m0 [3mproposer[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000065 [3mround[0m[2m=[0m0 [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000066[0m [2m[3mheight[0m[2m=[0m1[0m
[33mNode id 2 part 0:[0m [2m2025-03-02T17:38:11.322157Z[0m [33m WARN[0m [1mhandle_request[0m: [2mstarknet_sequencer_infra::component_client::local_component_client[0m[2m:[0m Dropping LocalComponentClient<L1ProviderRequest,L1ProviderResponse>. [2m[3mrequest[0m[2m=[0mStartBlock { state: Validate, height: BlockNumber(1) }[0m
[33mNode id 2 part 0:[0m [2m2025-03-02T17:38:11.322209Z[0m [33m WARN[0m [1mhandleT17:38:01.743001Z[0m [33m WARN[0m [2mstarknet_sequencer_infra::component_client::local_component_client[0m[2m:[0m Dropping LocalComponentClient<StateSyncRequest,StateSyncResponse>.
[35mNode id 4 part 1:[0m [2m2025-03-02T17:38:01.768090Z[0m [33m WARN[0m [2mstarknet_sequencer_infra::component_client::local_component_client[0m[2m:[0m Dropping LocalComponentClient<StateSyncRequest,StateSyncResponse>.
[35mNode id 4 part 1:[0m [2m2025-03-02T17:38:01.810259Z[0m [33m WARN[0m [2mstarknet_sequencer_infra::component_client::local_component_client[0m[2m:[0m Dropping LocalComponentClient<StateSyncRequest,StateSyncResponse>.
[35mNode id 4 part 1:[0m [2m2025-03-02T17:38:01.811869Z[0m [33m WARN[0m [2mstarknet_sequencer_infra::component_client::local_component_client[0m[2m:[0m Dropping LocalComponentClient<StateSyncRequest,StateSyncResponse>.
[35mNode id 4 part 1:[0m [2m2025-03-02T17:38:02.195019Z[0m [33m WARN[0m [2mstarknet_sequencer_infra::component_client::local_component_client[0m[2m:[0m Dropping LocalComponentClient<StateSyncRequest,StateSyncResponse>.
[35mNode id 4 part 1:[0m [2m2025-03-02T17:38:02.196923Z[0m [33m WARN[0m [2mstarknet_sequencer_infra::component_client::local_component_client[0m[2m:[0m Dropping LocalComponentClient<StateSyncRequest,StateSyncResponse>.
[35mNode id 4 part 1:[0m [2m2025-03-02T17:38:02.198746Z[0m [33m WARN[0m [2mstarknet_sequencer_infra::component_client::local_component_client[0m[2m:[0m Dropping LocalComponentClient<StateSyncRequest,StateSyncResponse>.
[35mNode id 4 part 1:[0m [2m2025-03-02T17:38:02.200998Z[0m [33m WARN[0m [2mstarknet_sequencer_infra::component_client::local_component_client[0m[2m:[0m Dropping LocalComponentClient<StateSyncRequest,StateSyncResponse>.
[35mNode id 4 part 1:[0m [2m2025-03-02T17:38:02.202240Z[0m [33m WARN[0m [2mstarknet_sequencer_infra::component_client::local_component_client[0m[2m:[0m Dropping LocalComponentClient<StateSyncRequest,StateSyncResponse>.
[35mNode id 4 part 1:[0m [2m2025-03-02T17:38:11.285147Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m: [2mstarknet_consensus::manager[0m[2m:[0m running consensus for height BlockNumber(1). is_observer: false, validators: [ContractAddress(PatriciaKey(0x64)), ContractAddress(PatriciaKey(0x65)), ContractAddress(PatriciaKey(0x66)), ContractAddress(PatriciaKey(0x67)), ContractAddress(PatriciaKey(0x68))] [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000068[0m [2m[3mheight[0m[2m=[0m1[0m
[35mNode id 4 part 1:[0m [2m2025-03-02T17:38:11.285464Z[0m [32m INFO[0m [1mstart_height[0m: [2mstarknet_batcher::batcher[0m[2m:[0m Starting to work on height 1. [2m[3minput[0m[2m=[0mStartHeightInput { height: BlockNumber(1) }[0m
[35mNode id 4 part 1:[0m [2m2025-03-02T17:38:11.285561Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mstart[0m: [2mstarknet_consensus::state_machine[0m[2m:[0m Starting round 0 as Validator [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000068[0m [2m[3mheight[0m[2m=[0m1[0m
[35mNode id 4 part 1:[0m [2m2025-03-02T17:38:11.325220Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_proposal[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Accepting ProposalInit { height: BlockNumber(1), round: 0, valid_round: None, proposer: ContractAddress(PatriciaKey(0x65)) }. node_round: 0, timeout: 9s [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000068[0m [2m[3mheight[0m[2m=[0m1[0m
[35mNode id 4 part 1:[0m [2m2025-03-02T17:38:11.325300Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_proposal[0m:[1mvalidate_proposal[0m: [2mstarknet_consensus_orchestrator::sequencer_consensus_context[0m[2m:[0m Validating proposal. [3mtimeout[0m[2m=[0m9s [3mproposal_id[0m[2m=[0m0 [3mproposer[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000065 [3m for peer PeerId("12D3KooWKi6qUxsnmMqTgYX894brLNKV3m7PfTDGiZt7qmb85HVJ"): [/ip4/172.18.0.1/tcp/55567, /ip4/172.17.0.1/tcp/55567]
[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.508112Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWG6jGCV6xsbvE8hqTJ6P8TzMU6aDqN489UwmQGoDr957G"): [/ip4/172.17.0.1/tcp/55566, /ip4/172.18.0.1/tcp/55566]
[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.508250Z[0m [32m INFO[0m [2mpapyrus_network::peer_manager[0m[2m:[0m Peer Manager found new peer PeerId("12D3KooWG6jGCV6xsbvE8hqTJ6P8TzMU6aDqN489UwmQGoDr957G")
[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.530904Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWG6jGCV6xsbvE8hqTJ6P8TzMU6aDqN489UwmQGoDr957G"): [/ip4/172.17.0.1/tcp/55566, /ip4/172.18.0.1/tcp/55566]
[35mNode id 4 part 0:[0m [2m2025-03-02T17:37:56.539198Z[0m [32m INFO[0m [2mpapyrus_network::discovery::kad_impl[0m[2m:[0m Adding new listen addresses to routing table for peer PeerId("12D3KooWKvKewFUeW9KQW8tcSRv4F8Eup4fsydPVJCfF6C8mxTr1"): [/ip4/172.18.0.1/tcp/55565, /ip4/172.17.0.1/tcp/55565]
[35mNode id 4 part 0:[0m [2m2025-03-02T17:38:01.679900Z[0m [32m INFO[0m [2mstarknet_mempool_p2p::runner[0m[2m:[0m Received transaction from network, forwarding to gateway
[35mNode id 4 part 0:[0m [2m2025-03-02T17:38:01.818298Z[0m [32m INFO[0m [1madd_tx[0m: [2mstarknet_mempool::mempool[0m[2m:[0m Adding transaction to mempool. [2m[3mtx_nonce[0m[2m=[0m0 [3mtx_hash[0m[2m=[0m1282192958315187179208142443179377467708682392011225534862360039907523430818 [3mtx_tip[0m[2m=[0m0 [3mtx_max_l2_gas_price[0m[2m=[0m100000000000 [3maccount_state[0m[2m=[0mAccountState { address: 0x0560a3c9b0d5762842454e5b68098afbf8e9bff9052b8e015ac43a50a75d98ca, nonce: 0 }[0m
[35mNode id 4 part 0:[0m [2m2025-03-02T17:38:01.818409Z[0m [32m INFO[0m [2mstarknet_mempool_p2p::propagator[0m[2m:[0m Continuing propagation of received transaction
[35mNode id 4 part 0:[0m [2m2025-03-02T17:38:01.818562Z[0m [32m INFO[0m [1madd_tx[0m: [2mstarknet_gateway::gateway[0m[2m:[0m [3mreturn[0m[2m=[0mOk(TransactionHash(0x2d5b20c12d16a620e818b7d2bc59c49cc9b037e81c470ed6d79989de65e09a2))
[35mNode id 4 part 0:[0m [2m2025-03-02T17:38:02.189734Z[0m [32m INFO[0m [2mstarknet_mempool_p2p::runner[0m[2m:[0m Received transaction from network, forwarding to gateway
[35mNode id 4 part 0:[0m [2m2025-03-02T17:38:02.207598Z[0m [32m INFO[0m [1madd_tx[0m: [2mstarknet_mempool::mempool[0m[2m:[0m Adding transaction to mempool. [2m[3mtx_nonce[0m[2m=[0m1 [3mtx_hash[0m[2m=[0m2662131833982121741085617079462280994847867660620089198152154542983990642290 [3mtx_tip[0m[2m=[0m1 [3mtx_max_l2_gas_price[0m[2m=[0m100000000000 [3maccount_state[0m[2m=[0mAccountState { address: 0x0560a3c9b0d5762842454e5b68098afbf8e9bff9052b8e015ac43a50a75d98ca, nonce: 0 }[0m
[35mNode id 4 part 0:[0m [2m2025-03-02T17:38:02.207800Z[0m [32m INFO[0m [2mstarknet_mempool_p2p::propagator[0m[2m:[0m Continuing propagation of received transaction
[35mNode id 4 part 0:[0m [2m2025-03-02T17:38:02.208044Z[0m [32m INFO[0m [1madd_tx[0m: [2mstarknet_gateway::gateway[0m[2m:[0m [3mreturn[0m[2m=[0mOk(TransactionHash(0x5e2b695b9b89468c011eb7ceb90775c9a7f6a8c2047c575bda8b595db6a8672))
[35mNode id 4 part 0:[0m [2m2025-03-02T17:38:11.399893Z[0m [33m WARN[0m [2mstarknet_sequencer_infra::component_client::local_component_client[0m[2m:[0m Dropping LocalComponentClient<ClassManagerRequest,ClassManagerResponse>.
[35mNode id 4 part 0:[0m [2m2025-03-02T17:38:11.450662Z[0m [33m WARN[0m [2mstarknet_sequencer_infra::component_client::local_component_client[0m[2m:[0m Dropping LocalComponentClient<ClassManagerRequest,ClassManagerResponse>.
[35mNode id 4 part 0:[0m [2m2025-03-02T17:38:11.517395Z[0m [33m WARN[0m [2mstarknet_sequencer_infra::component_client::local_compon[2m2025-03-02T17:38:12.201998Z[0m [32m INFO[0m [2mstarknet_infra_utils::tracing[0m[2m:[0m Waiting for batcher height metric to reach block 2 in sequencer 2 executable 0.: Attempt 3/50, Value BlockNumber(0)
[2m2025-03-02T17:38:17.208694Z[0m [32m INFO[0m [2mstarknet_infra_utils::tracing[0m[2m:[0m Waiting for batcher height metric to reach block 2 in sequencer 2 executable 0.: Attempt 4/50, Value BlockNumber(0)
k { state: Propose, height: BlockNumber(1) }[0m
[32mNode id 1 part 0:[0m [2m2025-03-02T17:38:11.296442Z[0m [33m WARN[0m [1mhandle_request[0m: [2mstarknet_sequencer_infra::component_client::local_component_client[0m[2m:[0m Dropping LocalComponentClient<StateSyncRequest,StateSyncResponse>. [2m[3mrequest[0m[2m=[0mStartBlock { state: Propose, height: BlockNumber(1) }[0m
[32mNode id 1 part 0:[0m [2m2025-03-02T17:38:11.296611Z[0m [32m INFO[0m [1mpropose_block[0m: [2mstarknet_batcher::batcher[0m[2m:[0m Starting generation of a new proposal with id 0. [2m[3mpropose_block_input[0m[2m=[0mProposeBlockInput { proposal_id: ProposalId(0), deadline: 2025-03-02T17:38:19.296027910Z, retrospective_block_hash: Some(BlockHashAndNumber { hash: BlockHash(0x0), number: BlockNumber(0) }), block_info: BlockInfo { block_number: BlockNumber(1), block_timestamp: BlockTimestamp(1740937091), sequencer_address: ContractAddress(PatriciaKey(0x65)), gas_prices: GasPrices { eth_gas_prices: GasPriceVector { l1_gas_price: NonzeroGasPrice(GasPrice(1)), l1_data_gas_price: NonzeroGasPrice(GasPrice(1)), l2_gas_price: NonzeroGasPrice(GasPrice(1)) }, strk_gas_prices: GasPriceVector { l1_gas_price: NonzeroGasPrice(GasPrice(1)), l1_data_gas_price: NonzeroGasPrice(GasPrice(1)), l2_gas_price: NonzeroGasPrice(GasPrice(100000)) } }, use_kzg_da: true } }[0m
[32mNode id 1 part 0:[0m [2m2025-03-02T17:38:11.297061Z[0m [32m INFO[0m [1mget_txs[0m: [2mstarknet_mempool::mempool[0m[2m:[0m Returned 2 out of 100 transactions, ready for sequencing. [2m[3mn_txs[0m[2m=[0m100[0m
[32mNode id 1 part 0:[0m [2m2025-03-02T17:38:11.374909Z[0m [32m INFO[0m [1mget_txs[0m: [2mstarknet_mempool::mempool[0m[2m:[0m Returned 0 out of 100 transactions, ready for sequencing. [2m[3mn_txs[0m[2m=[0m100[0m
[32mNode id 1 part 0:[0m [2m2025-03-02T17:38:12.376538Z[0m [32m INFO[0m [1mget_txs[0m: [2mstarknet_mempool::mempool[0m[2m:[0m Returned 0 out of 100 transactions, ready for sequencing. [2m[3mn_txs[0m[2m=[0m100[0m
[32mNode id 1 part 0:[0m [2m2025-03-02T17:38:13.377599Z[0m [32m INFO[0m [1mget_txs[0m: [2mstarknet_mempool::mempool[0m[2m:[0m Returned 0 out of 100 transactions, ready for sequencing. [2m[3mn_txs[0m[2m=[0m100[0m
[32mNode id 1 part 0:[0m [2m2025-03-02T17:38:14.378637Z[0m [32m INFO[0m [1mget_txs[0m: [2mstarknet_mempool::mempool[0m[2m:[0m Returned 0 out of 100 transactions, ready for sequencing. [2m[3mn_txs[0m[2m=[0m100[0m
[32mNode id 1 part 0:[0m [2m2025-03-02T17:38:15.379425Z[0m [32m INFO[0m [1mget_txs[0m: [2mstarknet_mempool::mempool[0m[2m:[0m Returned 0 out of 100 transactions, ready for sequencing. [2m[3mn_txs[0m[2m=[0m100[0m
[32mNode id 1 part 0:[0m [2m2025-03-02T17:38:16.380473Z[0m [32m INFO[0m [1mget_txs[0m: [2mstarknet_mempool::mempool[0m[2m:[0m Returned 0 out of 100 transactions, ready for sequencing. [2m[3mn_txs[0m[2m=[0m100[0m
[32mNode id 1 part 0:[0m [2m2025-03-02T17:38:17.381204Z[0m [32m INFO[0m [1mget_txs[0m: [2mstarknet_mempool::mempool[0m[2m:[0m Returned 0 out of 100 transactions, ready for sequencing. [2m[3mn_txs[0m[2m=[0m100[0m
[32mNode id 1 part 0:[0m [2m2025-03-02T17:38:18.382475Z[0m [32m INFO[0m [1mget_txs[0m: [2mstarknet_mempool::mempool[0m[2m:[0m Returned 0 out of 100 transactions, ready for sequencing. [2m[3mn_txs[0m[2m=[0m100[0m
[32mNode id 1 part 0:[0m [2m2025-03-02T17:38:19.383469Z[0m [32m INFO[0m [1mpropose_block[0m: [2mstarknet_batcher::block_builder[0m[2m:[0m Block builder deadline reached. [2m[3mpropose_block_input[0m[2m=[0mProposeBlockInput { proposal_id: ProposalId(0), deadline: 2025-03-02T17:38:19.296027910Z, retrospective_block_hash: Some(BlockHashAndNumber { hash: BlockHash(0x0), number: BlockNumber(0) }), block_info: BlockInfo { block_number: BlockNumber(1), block_timestamp: BlockTimestamp(1740937091), sequencer_address: ContractAddress(PatriciaKey(0x65)), gas_prices: GasPrices { eth_gas_prices: GasPriceVector { l1_gas_price: NonzeroGasPrice(GasProsal. [3mtimeout[0m[2m=[0m9s [3mproposal_id[0m[2m=[0m0 [3mproposer[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000065 [3mround[0m[2m=[0m0 [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000064[0m [2m[3mheight[0m[2m=[0m1[0m
[31mNode id 0 part 0:[0m [2m2025-03-02T17:38:11.333511Z[0m [33m WARN[0m [1mhandle_request[0m: [2mstarknet_sequencer_infra::component_client::local_component_client[0m[2m:[0m Dropping LocalComponentClient<L1ProviderRequest,L1ProviderResponse>. [2m[3mrequest[0m[2m=[0mStartBlock { state: Validate, height: BlockNumber(1) }[0m
[31mNode id 0 part 0:[0m [2m2025-03-02T17:38:11.333572Z[0m [33m WARN[0m [1mhandle_request[0m: [2mstarknet_sequencer_infra::component_client::local_component_client[0m[2m:[0m Dropping LocalComponentClient<StateSyncRequest,StateSyncResponse>. [2m[3mrequest[0m[2m=[0mStartBlock { state: Validate, height: BlockNumber(1) }[0m
[31mNode id 0 part 0:[0m [2m2025-03-02T17:38:11.333733Z[0m [32m INFO[0m [1mvalidate_block[0m: [2mstarknet_batcher::batcher[0m[2m:[0m Starting generation of a new proposal with id 0. [2m[3mvalidate_block_input[0m[2m=[0mValidateBlockInput { proposal_id: ProposalId(0), deadline: 2025-03-02T17:38:30.333168363Z, retrospective_block_hash: Some(BlockHashAndNumber { hash: BlockHash(0x0), number: BlockNumber(0) }), block_info: BlockInfo { block_number: BlockNumber(1), block_timestamp: BlockTimestamp(1740937091), sequencer_address: ContractAddress(PatriciaKey(0x65)), gas_prices: GasPrices { eth_gas_prices: GasPriceVector { l1_gas_price: NonzeroGasPrice(GasPrice(1)), l1_data_gas_price: NonzeroGasPrice(GasPrice(1)), l2_gas_price: NonzeroGasPrice(GasPrice(1)) }, strk_gas_prices: GasPriceVector { l1_gas_price: NonzeroGasPrice(GasPrice(1)), l1_data_gas_price: NonzeroGasPrice(GasPrice(1)), l2_gas_price: NonzeroGasPrice(GasPrice(100000)) } }, use_kzg_da: true } }[0m
[31mNode id 0 part 0:[0m [2m2025-03-02T17:38:19.406348Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_proposal[0m:[1mvalidate_proposal[0m:[1mconsensus_validate_proposal[0m: [2mstarknet_consensus_orchestrator::sequencer_consensus_context[0m[2m:[0m Finished validating proposal. [3mnetwork_block_id[0m[2m=[0mBlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2) [3mbatcher_block_id[0m[2m=[0mBlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2) [3mnum_txs[0m[2m=[0m2 [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000064[0m [2m[3mheight[0m[2m=[0m1[0m [2m[3mproposal_id[0m[2m=[0m0 [3mround[0m[2m=[0m0[0m
[31mNode id 0 part 0:[0m [2m2025-03-02T17:38:19.407322Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_event[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Broadcasting Vote { vote_type: Prevote, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x64)) } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000064[0m [2m[3mheight[0m[2m=[0m1[0m
[31mNode id 0 part 0:[0m [2m2025-03-02T17:38:19.425916Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_vote[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Accepting Vote { vote_type: Prevote, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x65)) } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000064[0m [2m[3mheight[0m[2m=[0m1[0m
[31mNode id 0 part 0:[0m [2m2025-03-02T17:38:19.427144Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_vote[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Accepting Vote { vote_type: Prevote, height: 1, round: 0, block_hash: Some(Blockround[0m[2m=[0m0 [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000068[0m [2m[3mheight[0m[2m=[0m1[0m
[35mNode id 4 part 1:[0m [2m2025-03-02T17:38:11.325701Z[0m [33m WARN[0m [1mhandle_request[0m: [2mstarknet_sequencer_infra::component_client::local_component_client[0m[2m:[0m Dropping LocalComponentClient<L1ProviderRequest,L1ProviderResponse>. [2m[3mrequest[0m[2m=[0mStartBlock { state: Validate, height: BlockNumber(1) }[0m
[35mNode id 4 part 1:[0m [2m2025-03-02T17:38:11.325732Z[0m [33m WARN[0m [1mhandle_request[0m: [2mstarknet_sequencer_infra::component_client::local_component_client[0m[2m:[0m Dropping LocalComponentClient<StateSyncRequest,StateSyncResponse>. [2m[3mrequest[0m[2m=[0mStartBlock { state: Validate, height: BlockNumber(1) }[0m
[35mNode id 4 part 1:[0m [2m2025-03-02T17:38:11.328029Z[0m [32m INFO[0m [1mvalidate_block[0m: [2mstarknet_batcher::batcher[0m[2m:[0m Starting generation of a new proposal with id 0. [2m[3mvalidate_block_input[0m[2m=[0mValidateBlockInput { proposal_id: ProposalId(0), deadline: 2025-03-02T17:38:30.325466538Z, retrospective_block_hash: Some(BlockHashAndNumber { hash: BlockHash(0x0), number: BlockNumber(0) }), block_info: BlockInfo { block_number: BlockNumber(1), block_timestamp: BlockTimestamp(1740937091), sequencer_address: ContractAddress(PatriciaKey(0x65)), gas_prices: GasPrices { eth_gas_prices: GasPriceVector { l1_gas_price: NonzeroGasPrice(GasPrice(1)), l1_data_gas_price: NonzeroGasPrice(GasPrice(1)), l2_gas_price: NonzeroGasPrice(GasPrice(1)) }, strk_gas_prices: GasPriceVector { l1_gas_price: NonzeroGasPrice(GasPrice(1)), l1_data_gas_price: NonzeroGasPrice(GasPrice(1)), l2_gas_price: NonzeroGasPrice(GasPrice(100000)) } }, use_kzg_da: true } }[0m
[35mNode id 4 part 1:[0m [2m2025-03-02T17:38:19.422131Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_proposal[0m:[1mvalidate_proposal[0m:[1mconsensus_validate_proposal[0m: [2mstarknet_consensus_orchestrator::sequencer_consensus_context[0m[2m:[0m Finished validating proposal. [3mnetwork_block_id[0m[2m=[0mBlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2) [3mbatcher_block_id[0m[2m=[0mBlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2) [3mnum_txs[0m[2m=[0m2 [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000068[0m [2m[3mheight[0m[2m=[0m1[0m [2m[3mproposal_id[0m[2m=[0m0 [3mround[0m[2m=[0m0[0m
[35mNode id 4 part 1:[0m [2m2025-03-02T17:38:19.422431Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_event[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Broadcasting Vote { vote_type: Prevote, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x68)) } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000068[0m [2m[3mheight[0m[2m=[0m1[0m
[35mNode id 4 part 1:[0m [2m2025-03-02T17:38:19.442921Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_vote[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Accepting Vote { vote_type: Prevote, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x64)) } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000068[0m [2m[3mheight[0m[2m=[0m1[0m
[35mNode id 4 part 1:[0m [2m2025-03-02T17:38:19.443442Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_vote[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Accepting Vote { vote_type: Prevote, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x67)) } [2m[3mvalidator_id[0m[2m=[0m0x000000 id 3 part 1:[0m [2m2025-03-02T17:38:11.316567Z[0m [33m WARN[0m [1mhandle_request[0m: [2mstarknet_sequencer_infra::component_client::local_component_client[0m[2m:[0m Dropping LocalComponentClient<L1ProviderRequest,L1ProviderResponse>. [2m[3mrequest[0m[2m=[0mStartBlock { state: Validate, height: BlockNumber(1) }[0m
[34mNode id 3 part 1:[0m [2m2025-03-02T17:38:11.316639Z[0m [33m WARN[0m [1mhandle_request[0m: [2mstarknet_sequencer_infra::component_client::local_component_client[0m[2m:[0m Dropping LocalComponentClient<StateSyncRequest,StateSyncResponse>. [2m[3mrequest[0m[2m=[0mStartBlock { state: Validate, height: BlockNumber(1) }[0m
[34mNode id 3 part 1:[0m [2m2025-03-02T17:38:11.320962Z[0m [32m INFO[0m [1mvalidate_block[0m: [2mstarknet_batcher::batcher[0m[2m:[0m Starting generation of a new proposal with id 0. [2m[3mvalidate_block_input[0m[2m=[0mValidateBlockInput { proposal_id: ProposalId(0), deadline: 2025-03-02T17:38:30.315844719Z, retrospective_block_hash: Some(BlockHashAndNumber { hash: BlockHash(0x0), number: BlockNumber(0) }), block_info: BlockInfo { block_number: BlockNumber(1), block_timestamp: BlockTimestamp(1740937091), sequencer_address: ContractAddress(PatriciaKey(0x65)), gas_prices: GasPrices { eth_gas_prices: GasPriceVector { l1_gas_price: NonzeroGasPrice(GasPrice(1)), l1_data_gas_price: NonzeroGasPrice(GasPrice(1)), l2_gas_price: NonzeroGasPrice(GasPrice(1)) }, strk_gas_prices: GasPriceVector { l1_gas_price: NonzeroGasPrice(GasPrice(1)), l1_data_gas_price: NonzeroGasPrice(GasPrice(1)), l2_gas_price: NonzeroGasPrice(GasPrice(100000)) } }, use_kzg_da: true } }[0m
[34mNode id 3 part 1:[0m [2m2025-03-02T17:38:19.407166Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_proposal[0m:[1mvalidate_proposal[0m:[1mconsensus_validate_proposal[0m: [2mstarknet_consensus_orchestrator::sequencer_consensus_context[0m[2m:[0m Finished validating proposal. [3mnetwork_block_id[0m[2m=[0mBlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2) [3mbatcher_block_id[0m[2m=[0mBlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2) [3mnum_txs[0m[2m=[0m2 [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000067[0m [2m[3mheight[0m[2m=[0m1[0m [2m[3mproposal_id[0m[2m=[0m0 [3mround[0m[2m=[0m0[0m
[34mNode id 3 part 1:[0m [2m2025-03-02T17:38:19.407931Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_event[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Broadcasting Vote { vote_type: Prevote, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x67)) } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000067[0m [2m[3mheight[0m[2m=[0m1[0m
[34mNode id 3 part 1:[0m [2m2025-03-02T17:38:19.412816Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_vote[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Accepting Vote { vote_type: Prevote, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x65)) } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000067[0m [2m[3mheight[0m[2m=[0m1[0m
[34mNode id 3 part 1:[0m [2m2025-03-02T17:38:19.417910Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_vote[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Accepting Vote { vote_type: Prevote, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x64)) } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000067[0m [2m[3mheight[0m[2m=[0m1[0m
[34mNode id 3 part 1:[0m [2m2025-03-02T17:38:19.449201Z[0m [32m I_request[0m: [2mstarknet_sequencer_infra::component_client::local_component_client[0m[2m:[0m Dropping LocalComponentClient<StateSyncRequest,StateSyncResponse>. [2m[3mrequest[0m[2m=[0mStartBlock { state: Validate, height: BlockNumber(1) }[0m
[33mNode id 2 part 0:[0m [2m2025-03-02T17:38:11.322362Z[0m [32m INFO[0m [1mvalidate_block[0m: [2mstarknet_batcher::batcher[0m[2m:[0m Starting generation of a new proposal with id 0. [2m[3mvalidate_block_input[0m[2m=[0mValidateBlockInput { proposal_id: ProposalId(0), deadline: 2025-03-02T17:38:30.321795157Z, retrospective_block_hash: Some(BlockHashAndNumber { hash: BlockHash(0x0), number: BlockNumber(0) }), block_info: BlockInfo { block_number: BlockNumber(1), block_timestamp: BlockTimestamp(1740937091), sequencer_address: ContractAddress(PatriciaKey(0x65)), gas_prices: GasPrices { eth_gas_prices: GasPriceVector { l1_gas_price: NonzeroGasPrice(GasPrice(1)), l1_data_gas_price: NonzeroGasPrice(GasPrice(1)), l2_gas_price: NonzeroGasPrice(GasPrice(1)) }, strk_gas_prices: GasPriceVector { l1_gas_price: NonzeroGasPrice(GasPrice(1)), l1_data_gas_price: NonzeroGasPrice(GasPrice(1)), l2_gas_price: NonzeroGasPrice(GasPrice(100000)) } }, use_kzg_da: true } }[0m
[33mNode id 2 part 0:[0m [2m2025-03-02T17:38:19.408119Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_proposal[0m:[1mvalidate_proposal[0m:[1mconsensus_validate_proposal[0m: [2mstarknet_consensus_orchestrator::sequencer_consensus_context[0m[2m:[0m Finished validating proposal. [3mnetwork_block_id[0m[2m=[0mBlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2) [3mbatcher_block_id[0m[2m=[0mBlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2) [3mnum_txs[0m[2m=[0m2 [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000066[0m [2m[3mheight[0m[2m=[0m1[0m [2m[3mproposal_id[0m[2m=[0m0 [3mround[0m[2m=[0m0[0m
[33mNode id 2 part 0:[0m [2m2025-03-02T17:38:19.408793Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_event[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Broadcasting Vote { vote_type: Prevote, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x66)) } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000066[0m [2m[3mheight[0m[2m=[0m1[0m
[33mNode id 2 part 0:[0m [2m2025-03-02T17:38:19.414691Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_vote[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Accepting Vote { vote_type: Prevote, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x65)) } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000066[0m [2m[3mheight[0m[2m=[0m1[0m
[33mNode id 2 part 0:[0m [2m2025-03-02T17:38:19.422648Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_vote[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Accepting Vote { vote_type: Prevote, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x64)) } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000066[0m [2m[3mheight[0m[2m=[0m1[0m
[33mNode id 2 part 0:[0m [2m2025-03-02T17:38:19.454837Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_vote[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Accepting Vote { vote_type: Precommit, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x65)) } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000ice(1)), l1_data_gas_price: NonzeroGasPrice(GasPrice(1)), l2_gas_price: NonzeroGasPrice(GasPrice(1)) }, strk_gas_prices: GasPriceVector { l1_gas_price: NonzeroGasPrice(GasPrice(1)), l1_data_gas_price: NonzeroGasPrice(GasPrice(1)), l2_gas_price: NonzeroGasPrice(GasPrice(100000)) } }, use_kzg_da: true } }[0m
[32mNode id 1 part 0:[0m [2m2025-03-02T17:38:19.387449Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mstart[0m:[1mbuild_proposal[0m:[1mconsensus_build_proposal[0m: [2mstarknet_consensus_orchestrator::sequencer_consensus_context[0m[2m:[0m Finished building proposal [3mproposal_commitment[0m[2m=[0mBlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2) [3mnum_txs[0m[2m=[0m1 [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000065[0m [2m[3mheight[0m[2m=[0m1[0m [2m[3mproposal_id[0m[2m=[0m0 [3mround[0m[2m=[0m0[0m
[32mNode id 1 part 0:[0m [2m2025-03-02T17:38:19.387838Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_event[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Broadcasting Vote { vote_type: Prevote, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x65)) } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000065[0m [2m[3mheight[0m[2m=[0m1[0m
[32mNode id 1 part 0:[0m [2m2025-03-02T17:38:19.421451Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_vote[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Accepting Vote { vote_type: Prevote, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x64)) } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000065[0m [2m[3mheight[0m[2m=[0m1[0m
[32mNode id 1 part 0:[0m [2m2025-03-02T17:38:19.429519Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_vote[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Accepting Vote { vote_type: Prevote, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x66)) } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000065[0m [2m[3mheight[0m[2m=[0m1[0m
[32mNode id 1 part 0:[0m [2m2025-03-02T17:38:19.430310Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_vote[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Accepting Vote { vote_type: Prevote, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x67)) } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000065[0m [2m[3mheight[0m[2m=[0m1[0m
[32mNode id 1 part 0:[0m [2m2025-03-02T17:38:19.430407Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_vote[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Broadcasting Vote { vote_type: Precommit, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x65)) } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000065[0m [2m[3mheight[0m[2m=[0m1[0m
[32mNode id 1 part 0:[0m [2m2025-03-02T17:38:19.478927Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_vote[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Accepting Vote { vote_type: Precommit, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x66)) } [2m[3mvalidator_id[0m[2m=[0m0x00000000000000000000000000000NFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_vote[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Accepting Vote { vote_type: Precommit, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x65)) } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000067[0m [2m[3mheight[0m[2m=[0m1[0m
[34mNode id 3 part 1:[0m [2m2025-03-02T17:38:19.474638Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_vote[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Accepting Vote { vote_type: Prevote, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x66)) } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000067[0m [2m[3mheight[0m[2m=[0m1[0m
[34mNode id 3 part 1:[0m [2m2025-03-02T17:38:19.474769Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_vote[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Broadcasting Vote { vote_type: Precommit, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x67)) } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000067[0m [2m[3mheight[0m[2m=[0m1[0m
[34mNode id 3 part 1:[0m [2m2025-03-02T17:38:19.491215Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_vote[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Accepting Vote { vote_type: Precommit, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x66)) } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000067[0m [2m[3mheight[0m[2m=[0m1[0m
[34mNode id 3 part 1:[0m [2m2025-03-02T17:38:19.491330Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_vote[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Accepting Vote { vote_type: Precommit, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x64)) } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000067[0m [2m[3mheight[0m[2m=[0m1[0m
[34mNode id 3 part 1:[0m [2m2025-03-02T17:38:19.491404Z[0m [32m INFO[0m [1mrun_consensus[0m: [2mstarknet_consensus::manager[0m[2m:[0m Decision reached. Decision { block: BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2), precommits: [Vote { vote_type: Precommit, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x64)) }, Vote { vote_type: Precommit, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x65)) }, Vote { vote_type: Precommit, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x66)) }, Vote { vote_type: Precommit, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x67)) }] } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000067[0m
[34mNode id 3 part 1:[0m [2m2025-03-02T17:38:19.491433Z[0m [32m INFO[0m [1mrun_consensus[0m: [2mstarknet_consensus_orchestrator::sequencer_consensus_context[0m[2m:[0m Finished consensus for height: 1. Agreed on block: 0x02f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2 [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000068[0m [2m[3mheight[0m[2m=[0m1[0m
[35mNode id 4 part 1:[0m [2m2025-03-02T17:38:19.443854Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_vote[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Accepting Vote { vote_type: Prevote, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x65)) } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000068[0m [2m[3mheight[0m[2m=[0m1[0m
[35mNode id 4 part 1:[0m [2m2025-03-02T17:38:19.444148Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_vote[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Broadcasting Vote { vote_type: Precommit, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x68)) } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000068[0m [2m[3mheight[0m[2m=[0m1[0m
[35mNode id 4 part 1:[0m [2m2025-03-02T17:38:19.444611Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_vote[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Accepting Vote { vote_type: Prevote, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x66)) } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000068[0m [2m[3mheight[0m[2m=[0m1[0m
[35mNode id 4 part 1:[0m [2m2025-03-02T17:38:19.464216Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_vote[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Accepting Vote { vote_type: Precommit, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x65)) } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000068[0m [2m[3mheight[0m[2m=[0m1[0m
[35mNode id 4 part 1:[0m [2m2025-03-02T17:38:19.498250Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_vote[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Accepting Vote { vote_type: Precommit, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x64)) } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000068[0m [2m[3mheight[0m[2m=[0m1[0m
[35mNode id 4 part 1:[0m [2m2025-03-02T17:38:19.502534Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_vote[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Accepting Vote { vote_type: Precommit, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x66)) } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000068[0m [2m[3mheight[0m[2m=[0m1[0m
[35mNode id 4 part 1:[0m [2m2025-03-02T17:38:19.502790Z[0m [32m INFO[0m [1mrun_consensus[0m: [2mstarknet_consensus::manager[0m[2m:[0m Decision reached. Decision { block: BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2), precommits: [Vote { vote_type: Precommit, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x64)) }, Vote { vote_type: Precommit, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x65)) }, Vote { vote_type: Precommit, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f000000066[0m [2m[3mheight[0m[2m=[0m1[0m
[33mNode id 2 part 0:[0m [2m2025-03-02T17:38:19.458916Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_vote[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Accepting Vote { vote_type: Prevote, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x67)) } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000066[0m [2m[3mheight[0m[2m=[0m1[0m
[33mNode id 2 part 0:[0m [2m2025-03-02T17:38:19.459117Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_vote[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Broadcasting Vote { vote_type: Precommit, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x66)) } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000066[0m [2m[3mheight[0m[2m=[0m1[0m
[33mNode id 2 part 0:[0m [2m2025-03-02T17:38:19.486994Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_vote[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Accepting Vote { vote_type: Prevote, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x68)) } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000066[0m [2m[3mheight[0m[2m=[0m1[0m
[33mNode id 2 part 0:[0m [2m2025-03-02T17:38:19.490745Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_vote[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Accepting Vote { vote_type: Precommit, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x64)) } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000066[0m [2m[3mheight[0m[2m=[0m1[0m
[33mNode id 2 part 0:[0m [2m2025-03-02T17:38:19.504673Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_vote[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Accepting Vote { vote_type: Precommit, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x68)) } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000066[0m [2m[3mheight[0m[2m=[0m1[0m
[33mNode id 2 part 0:[0m [2m2025-03-02T17:38:19.504859Z[0m [32m INFO[0m [1mrun_consensus[0m: [2mstarknet_consensus::manager[0m[2m:[0m Decision reached. Decision { block: BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2), precommits: [Vote { vote_type: Precommit, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x64)) }, Vote { vote_type: Precommit, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x65)) }, Vote { vote_type: Precommit, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x66)) }, Vote { vote_type: Precommit, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x68)) }] } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000066[0m
[33mNode id 2 part 0:[0m [2m2025-03-02T17:38:19.504914Z[0m [32m INFO[0m [1mrun_consensus[0m: [2mstarknet_consensus_orchestrator::sequencer_consensus_context[0m[2m:[0m Finished consensus for height: 1. Agre00000000000000000000000000000000065[0m [2m[3mheight[0m[2m=[0m1[0m
[32mNode id 1 part 0:[0m [2m2025-03-02T17:38:19.479070Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_vote[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Accepting Vote { vote_type: Precommit, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x64)) } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000065[0m [2m[3mheight[0m[2m=[0m1[0m
[32mNode id 1 part 0:[0m [2m2025-03-02T17:38:19.486827Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_vote[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Accepting Vote { vote_type: Precommit, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x67)) } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000065[0m [2m[3mheight[0m[2m=[0m1[0m
[32mNode id 1 part 0:[0m [2m2025-03-02T17:38:19.486979Z[0m [32m INFO[0m [1mrun_consensus[0m: [2mstarknet_consensus::manager[0m[2m:[0m Decision reached. Decision { block: BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2), precommits: [Vote { vote_type: Precommit, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x64)) }, Vote { vote_type: Precommit, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x65)) }, Vote { vote_type: Precommit, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x66)) }, Vote { vote_type: Precommit, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x67)) }] } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000065[0m
[32mNode id 1 part 0:[0m [2m2025-03-02T17:38:19.487020Z[0m [32m INFO[0m [1mrun_consensus[0m: [2mstarknet_consensus_orchestrator::sequencer_consensus_context[0m[2m:[0m Finished consensus for height: 1. Agreed on block: 0x02f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2 [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000065[0m
[32mNode id 1 part 0:[0m [2m2025-03-02T17:38:19.487331Z[0m [32m INFO[0m [1mdecision_reached[0m: [2mstarknet_batcher::batcher[0m[2m:[0m Committing block at height 1 and notifying mempool of the block. [2m[3minput[0m[2m=[0mDecisionReachedInput { proposal_id: ProposalId(0) }[0m
[32mNode id 1 part 0:[0m [2m2025-03-02T17:38:19.519506Z[0m [32m INFO[0m [2mpapyrus_p2p_sync::client::block_data_stream_builder[0m[2m:[0m Added internally "headers" for block 1.
[32mNode id 1 part 0:[0m Testing with seed: 8574217189055740156
[32mNode id 1 part 0:[0m [2m2025-03-02T17:38:19.531478Z[0m [32m INFO[0m [2mpapyrus_p2p_sync::client::block_data_stream_builder[0m[2m:[0m Added internally "transactions" for block 1.
[32mNode id 1 part 0:[0m [2m2025-03-02T17:38:19.536000Z[0m [32m INFO[0m [2mpapyrus_p2p_sync::client::block_data_stream_builder[0m[2m:[0m Added internally "state diffs" for block 1.
[32mNode id 1 part 0:[0m [2m2025-03-02T17:38:19.541208Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m: [2mstarknet_consensus::manager[0m[2m:[0m running consensus for height BlockNumber(2). is_observer: false, validators: [ContractAddress(PatriciaKey(0x64)), ContractAddress(PatriciaKey(0x65)), ContractAddress(PatriciaKey(0x66)), ContractAddress(PatriciaKey(0x67)), ContractAddress(PatriciaKey(0x68))] [2m[3mvalidator_id[0m[2m=[0m0x000000000000000Hash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x67)) } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000064[0m [2m[3mheight[0m[2m=[0m1[0m
[31mNode id 0 part 0:[0m [2m2025-03-02T17:38:19.454746Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_vote[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Accepting Vote { vote_type: Precommit, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x65)) } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000064[0m [2m[3mheight[0m[2m=[0m1[0m
[31mNode id 0 part 0:[0m [2m2025-03-02T17:38:19.455000Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_vote[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Accepting Vote { vote_type: Prevote, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x66)) } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000064[0m [2m[3mheight[0m[2m=[0m1[0m
[31mNode id 0 part 0:[0m [2m2025-03-02T17:38:19.455055Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_vote[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Broadcasting Vote { vote_type: Precommit, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x64)) } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000064[0m [2m[3mheight[0m[2m=[0m1[0m
[31mNode id 0 part 0:[0m [2m2025-03-02T17:38:19.544181Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_vote[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Accepting Vote { vote_type: Precommit, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x66)) } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000064[0m [2m[3mheight[0m[2m=[0m1[0m
[31mNode id 0 part 0:[0m [2m2025-03-02T17:38:19.544437Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_vote[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Accepting Vote { vote_type: Precommit, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x67)) } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000064[0m [2m[3mheight[0m[2m=[0m1[0m
[31mNode id 0 part 0:[0m [2m2025-03-02T17:38:19.544580Z[0m [32m INFO[0m [1mrun_consensus[0m: [2mstarknet_consensus::manager[0m[2m:[0m Decision reached. Decision { block: BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2), precommits: [Vote { vote_type: Precommit, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x64)) }, Vote { vote_type: Precommit, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x65)) }, Vote { vote_type: Precommit, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x66)) }, Vote { vote_type: Precommit, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x67)) }] } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000064[0m
[31mNo262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x66)) }, Vote { vote_type: Precommit, height: 1, round: 0, block_hash: Some(BlockHash(0x2f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2)), voter: ContractAddress(PatriciaKey(0x68)) }] } [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000068[0m
[35mNode id 4 part 1:[0m [2m2025-03-02T17:38:19.502844Z[0m [32m INFO[0m [1mrun_consensus[0m: [2mstarknet_consensus_orchestrator::sequencer_consensus_context[0m[2m:[0m Finished consensus for height: 1. Agreed on block: 0x02f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2 [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000068[0m
[35mNode id 4 part 1:[0m [2m2025-03-02T17:38:19.503317Z[0m [32m INFO[0m [1mdecision_reached[0m: [2mstarknet_batcher::batcher[0m[2m:[0m Committing block at height 1 and notifying mempool of the block. [2m[3minput[0m[2m=[0mDecisionReachedInput { proposal_id: ProposalId(0) }[0m
[35mNode id 4 part 1:[0m [2m2025-03-02T17:38:19.533912Z[0m [32m INFO[0m [2mpapyrus_p2p_sync::client::block_data_stream_builder[0m[2m:[0m Added internally "headers" for block 1.
[35mNode id 4 part 1:[0m [2m2025-03-02T17:38:19.540767Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m: [2mstarknet_consensus::manager[0m[2m:[0m running consensus for height BlockNumber(2). is_observer: false, validators: [ContractAddress(PatriciaKey(0x64)), ContractAddress(PatriciaKey(0x65)), ContractAddress(PatriciaKey(0x66)), ContractAddress(PatriciaKey(0x67)), ContractAddress(PatriciaKey(0x68))] [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000068[0m [2m[3mheight[0m[2m=[0m2[0m
[35mNode id 4 part 1:[0m [2m2025-03-02T17:38:19.541247Z[0m [32m INFO[0m [1mstart_height[0m: [2mstarknet_batcher::batcher[0m[2m:[0m Starting to work on height 2. [2m[3minput[0m[2m=[0mStartHeightInput { height: BlockNumber(2) }[0m
[35mNode id 4 part 1:[0m [2m2025-03-02T17:38:19.541462Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mstart[0m: [2mstarknet_consensus::state_machine[0m[2m:[0m Starting round 0 as Validator [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000068[0m [2m[3mheight[0m[2m=[0m2[0m
[35mNode id 4 part 1:[0m [2m2025-03-02T17:38:19.554104Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_proposal[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Accepting ProposalInit { height: BlockNumber(2), round: 0, valid_round: None, proposer: ContractAddress(PatriciaKey(0x66)) }. node_round: 0, timeout: 9s [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000068[0m [2m[3mheight[0m[2m=[0m2[0m
[35mNode id 4 part 1:[0m [2m2025-03-02T17:38:19.554224Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_proposal[0m:[1mvalidate_proposal[0m: [2mstarknet_consensus_orchestrator::sequencer_consensus_context[0m[2m:[0m Validating proposal. [3mtimeout[0m[2m=[0m9s [3mproposal_id[0m[2m=[0m1 [3mproposer[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000066 [3mround[0m[2m=[0m0 [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000068[0m [2m[3mheight[0m[2m=[0m2[0m
[35mNode id 4 part 1:[0m [2m2025-03-02T17:38:19.554941Z[0m [32m INFO[0m [1mvalidate_block[0m: [2mstarknet_batcher::batcher[0m[2m:[0m Starting generation of a new proposal with id 1. [2m[3mvalidate_block_input[0m[2m=[0mValidateBlockInput { proposal_id: ProposalId(1), deadline: 2025-03-02T17:38:38.554419819Z, retrospective_block_hash: Some(BlockHashAndNumber { hash: BlockHash(0x0), number: BlockNumber(0) }), block_info: BlockInfo { block_number: BlockNumber(2), block_timestamp: BlockTimestamp(1740937099), sequencer_address: ContractAddress(PatriciaKey(0x66)), gas_prices: GasPrices { eth_gade id 0 part 0:[0m [2m2025-03-02T17:38:19.544627Z[0m [32m INFO[0m [1mrun_consensus[0m: [2mstarknet_consensus_orchestrator::sequencer_consensus_context[0m[2m:[0m Finished consensus for height: 1. Agreed on block: 0x02f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2 [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000064[0m
[31mNode id 0 part 0:[0m [2m2025-03-02T17:38:19.544951Z[0m [32m INFO[0m [1mdecision_reached[0m: [2mstarknet_batcher::batcher[0m[2m:[0m Committing block at height 1 and notifying mempool of the block. [2m[3minput[0m[2m=[0mDecisionReachedInput { proposal_id: ProposalId(0) }[0m
[31mNode id 0 part 0:[0m [2m2025-03-02T17:38:19.551793Z[0m [32m INFO[0m [2mpapyrus_p2p_sync::client::block_data_stream_builder[0m[2m:[0m Added internally "headers" for block 1.
[31mNode id 0 part 0:[0m [2m2025-03-02T17:38:19.555632Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m: [2mstarknet_consensus::manager[0m[2m:[0m running consensus for height BlockNumber(2). is_observer: false, validators: [ContractAddress(PatriciaKey(0x64)), ContractAddress(PatriciaKey(0x65)), ContractAddress(PatriciaKey(0x66)), ContractAddress(PatriciaKey(0x67)), ContractAddress(PatriciaKey(0x68))] [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000064[0m [2m[3mheight[0m[2m=[0m2[0m
[31mNode id 0 part 0:[0m [2m2025-03-02T17:38:19.556680Z[0m [32m INFO[0m [1mstart_height[0m: [2mstarknet_batcher::batcher[0m[2m:[0m Starting to work on height 2. [2m[3minput[0m[2m=[0mStartHeightInput { height: BlockNumber(2) }[0m
[31mNode id 0 part 0:[0m [2m2025-03-02T17:38:19.557121Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mstart[0m: [2mstarknet_consensus::state_machine[0m[2m:[0m Starting round 0 as Validator [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000064[0m [2m[3mheight[0m[2m=[0m2[0m
[31mNode id 0 part 0:[0m [2m2025-03-02T17:38:19.565232Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_proposal[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Accepting ProposalInit { height: BlockNumber(2), round: 0, valid_round: None, proposer: ContractAddress(PatriciaKey(0x66)) }. node_round: 0, timeout: 9s [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000064[0m [2m[3mheight[0m[2m=[0m2[0m
[31mNode id 0 part 0:[0m [2m2025-03-02T17:38:19.565314Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_proposal[0m:[1mvalidate_proposal[0m: [2mstarknet_consensus_orchestrator::sequencer_consensus_context[0m[2m:[0m Validating proposal. [3mtimeout[0m[2m=[0m9s [3mproposal_id[0m[2m=[0m1 [3mproposer[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000066 [3mround[0m[2m=[0m0 [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000064[0m [2m[3mheight[0m[2m=[0m2[0m
[31mNode id 0 part 0:[0m [2m2025-03-02T17:38:19.565807Z[0m [32m INFO[0m [1mvalidate_block[0m: [2mstarknet_batcher::batcher[0m[2m:[0m Starting generation of a new proposal with id 1. [2m[3mvalidate_block_input[0m[2m=[0mValidateBlockInput { proposal_id: ProposalId(1), deadline: 2025-03-02T17:38:38.565462845Z, retrospective_block_hash: Some(BlockHashAndNumber { hash: BlockHash(0x0), number: BlockNumber(0) }), block_info: BlockInfo { block_number: BlockNumber(2), block_timestamp: BlockTimestamp(1740937099), sequencer_address: ContractAddress(PatriciaKey(0x66)), gas_prices: GasPrices { eth_gas_prices: GasPriceVector { l1_gas_price: NonzeroGasPrice(GasPrice(1)), l1_data_gas_price: NonzeroGasPrice(GasPrice(1)), l2_gas_price: NonzeroGasPrice(GasPrice(1)) }, strk_gas_prices: GasPriceVector { l1_gas_price: NonzeroGasPrice(GasPrice(1)), l1_data_gas_price: NonzeroGasPrice(GasPrice(1)), l2_gas_price: NonzeroGasPrice(GasPrice(100000)) } }, use_kzg_da: true } }[0m
[31mNed on block: 0x02f709344c983b4a07e6403adb609dbd93ad886f262351f2a86b3f80b4ed82c2 [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000066[0m
[33mNode id 2 part 0:[0m [2m2025-03-02T17:38:19.505535Z[0m [32m INFO[0m [1mdecision_reached[0m: [2mstarknet_batcher::batcher[0m[2m:[0m Committing block at height 1 and notifying mempool of the block. [2m[3minput[0m[2m=[0mDecisionReachedInput { proposal_id: ProposalId(0) }[0m
[33mNode id 2 part 0:[0m [2m2025-03-02T17:38:19.520902Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m: [2mstarknet_consensus::manager[0m[2m:[0m running consensus for height BlockNumber(2). is_observer: false, validators: [ContractAddress(PatriciaKey(0x64)), ContractAddress(PatriciaKey(0x65)), ContractAddress(PatriciaKey(0x66)), ContractAddress(PatriciaKey(0x67)), ContractAddress(PatriciaKey(0x68))] [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000066[0m [2m[3mheight[0m[2m=[0m2[0m
[33mNode id 2 part 0:[0m [2m2025-03-02T17:38:19.523505Z[0m [32m INFO[0m [1mstart_height[0m: [2mstarknet_batcher::batcher[0m[2m:[0m Starting to work on height 2. [2m[3minput[0m[2m=[0mStartHeightInput { height: BlockNumber(2) }[0m
[33mNode id 2 part 0:[0m [2m2025-03-02T17:38:19.523920Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mstart[0m: [2mstarknet_consensus::state_machine[0m[2m:[0m Starting round 0 as Proposer [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000066[0m [2m[3mheight[0m[2m=[0m2[0m
[33mNode id 2 part 0:[0m [2m2025-03-02T17:38:19.524117Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mstart[0m:[1mbuild_proposal[0m: [2mstarknet_consensus_orchestrator::sequencer_consensus_context[0m[2m:[0m Building proposal [3mproposal_init[0m[2m=[0mProposalInit { height: BlockNumber(2), round: 0, valid_round: None, proposer: ContractAddress(PatriciaKey(0x66)) } [3mtimeout[0m[2m=[0m9s [3mproposal_id[0m[2m=[0m1 [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000066[0m [2m[3mheight[0m[2m=[0m2[0m
[33mNode id 2 part 0:[0m [2m2025-03-02T17:38:19.526633Z[0m [32m INFO[0m [1mpropose_block[0m: [2mstarknet_batcher::batcher[0m[2m:[0m Starting generation of a new proposal with id 1. [2m[3mpropose_block_input[0m[2m=[0mProposeBlockInput { proposal_id: ProposalId(1), deadline: 2025-03-02T17:38:27.524326390Z, retrospective_block_hash: Some(BlockHashAndNumber { hash: BlockHash(0x0), number: BlockNumber(0) }), block_info: BlockInfo { block_number: BlockNumber(2), block_timestamp: BlockTimestamp(1740937099), sequencer_address: ContractAddress(PatriciaKey(0x66)), gas_prices: GasPrices { eth_gas_prices: GasPriceVector { l1_gas_price: NonzeroGasPrice(GasPrice(1)), l1_data_gas_price: NonzeroGasPrice(GasPrice(1)), l2_gas_price: NonzeroGasPrice(GasPrice(1)) }, strk_gas_prices: GasPriceVector { l1_gas_price: NonzeroGasPrice(GasPrice(1)), l1_data_gas_price: NonzeroGasPrice(GasPrice(1)), l2_gas_price: NonzeroGasPrice(GasPrice(100000)) } }, use_kzg_da: true } }[0m
[33mNode id 2 part 0:[0m [2m2025-03-02T17:38:19.532089Z[0m [32m INFO[0m [1mget_txs[0m: [2mstarknet_mempool::mempool[0m[2m:[0m Returned 0 out of 100 transactions, ready for sequencing. [2m[3mn_txs[0m[2m=[0m100[0m
[33mNode id 2 part 0:[0m [2m2025-03-02T17:38:19.555956Z[0m [32m INFO[0m [2mpapyrus_p2p_sync::client::block_data_stream_builder[0m[2m:[0m Added internally "headers" for block 1.
[33mNode id 2 part 0:[0m [2m2025-03-02T17:38:19.567919Z[0m [32m INFO[0m [2mpapyrus_p2p_sync::server[0m[2m:[0m Sending response for inbound header query for block BlockNumber(1)
[33mNode id 2 part 0:[0m [2m2025-03-02T17:38:19.575095Z[0m [32m INFO[0m [2mpapyrus_p2p_sync::client::block_data_stream_builder[0m[2m:[0m Added internally "state diffs" for block 1.
[33mNode id 2 part 0:[0m Testing with seed: 17149377647536517784
[33mNode id 2 part 0:[0m 0000000000000000000000000000000000000000000000000000000000000067[0m
[34mNode id 3 part 1:[0m [2m2025-03-02T17:38:19.491647Z[0m [32m INFO[0m [1mdecision_reached[0m: [2mstarknet_batcher::batcher[0m[2m:[0m Committing block at height 1 and notifying mempool of the block. [2m[3minput[0m[2m=[0mDecisionReachedInput { proposal_id: ProposalId(0) }[0m
[34mNode id 3 part 1:[0m [2m2025-03-02T17:38:19.533476Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m: [2mstarknet_consensus::manager[0m[2m:[0m running consensus for height BlockNumber(2). is_observer: false, validators: [ContractAddress(PatriciaKey(0x64)), ContractAddress(PatriciaKey(0x65)), ContractAddress(PatriciaKey(0x66)), ContractAddress(PatriciaKey(0x67)), ContractAddress(PatriciaKey(0x68))] [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000067[0m [2m[3mheight[0m[2m=[0m2[0m
[34mNode id 3 part 1:[0m [2m2025-03-02T17:38:19.533855Z[0m [32m INFO[0m [1mstart_height[0m: [2mstarknet_batcher::batcher[0m[2m:[0m Starting to work on height 2. [2m[3minput[0m[2m=[0mStartHeightInput { height: BlockNumber(2) }[0m
[34mNode id 3 part 1:[0m [2m2025-03-02T17:38:19.533974Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mstart[0m: [2mstarknet_consensus::state_machine[0m[2m:[0m Starting round 0 as Validator [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000067[0m [2m[3mheight[0m[2m=[0m2[0m
[34mNode id 3 part 1:[0m [2m2025-03-02T17:38:19.570586Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_proposal[0m: [2mstarknet_consensus::single_height_consensus[0m[2m:[0m Accepting ProposalInit { height: BlockNumber(2), round: 0, valid_round: None, proposer: ContractAddress(PatriciaKey(0x66)) }. node_round: 0, timeout: 9s [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000067[0m [2m[3mheight[0m[2m=[0m2[0m
[34mNode id 3 part 1:[0m [2m2025-03-02T17:38:19.570705Z[0m [32m INFO[0m [1mrun_consensus[0m:[1mrun_height[0m:[1mhandle_proposal[0m:[1mvalidate_proposal[0m: [2mstarknet_consensus_orchestrator::sequencer_consensus_context[0m[2m:[0m Validating proposal. [3mtimeout[0m[2m=[0m9s [3mproposal_id[0m[2m=[0m1 [3mproposer[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000066 [3mround[0m[2m=[0m0 [2m[3mvalidator_id[0m[2m=[0m0x0000000000000000000000000000000000000000000000000000000000000067[0m [2m[3mheight[0m[2m=[0m2[0m
[34mNode id 3 part 1:[0m [2m2025-03-02T17:38:19.571337Z[0m [32m INFO[0m [1mvalidate_block[0m: [2mstarknet_batcher::batcher[0m[2m:[0m Starting generation of a new proposal with id 1. [2m[3mvalidate_block_input[0m[2m=[0mValidateBlockInput { proposal_id: ProposalId(1), deadline: 2025-03-02T17:38:38.570870423Z, retrospective_block_hash: Some(BlockHashAndNumber { hash: BlockHash(0x0), number: BlockNumber(0) }), block_info: BlockInfo { block_number: BlockNumber(2), block_timestamp: BlockTimestamp(1740937099), sequencer_address: ContractAddress(PatriciaKey(0x66)), gas_prices: GasPrices { eth_gas_prices: GasPriceVector { l1_gas_price: NonzeroGasPrice(GasPrice(1)), l1_data_gas_price: NonzeroGasPrice(GasPrice(1)), l2_gas_price: NonzeroGasPrice(GasPrice(1)) }, strk_gas_prices: GasPriceVector { l1_gas_price: NonzeroGasPrice(GasPrice(1)), l1_data_gas_price: NonzeroGasPrice(GasPrice(1)), l2_gas_price: NonzeroGasPrice(GasPrice(100000)) } }, use_kzg_da: true } }[0m
[34mNode id 3 part 1:[0m [2m2025-03-02T17:38:19.579162Z[0m [32m INFO[0m [2mpapyrus_p2p_sync::client::block_data_stream_builder[0m[2m:[0m Added internally "headers" for block 1.
[34mNode id 3 part 1:[0m Testing with seed: 2133972947890681630
[34mNode id 3 part 1:[0m [2m2025-03-02T17:38:19.590543Z[0m [32m INFO[0m [2mpapyrus_p2p_sync::client::block_data_stream_builder[0m[2m:[0m Added internally "transactions" for block 1.
[34mNode id 3 part 1:[0m [2m2025-03-02T17:38:19.593684Z[0m [32m INFO
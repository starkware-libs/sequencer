[package]
name = "starknet_client"
version = "0.4.0-rc.0"
edition.workspace = true
repository.workspace = true
license-file.workspace = true
description = "A client implementation that can communicate with Starknet."

[features]
testing = ["enum-iterator", "mockall", "papyrus_test_utils", "rand", "rand_chacha"]

[dependencies]
async-trait.workspace = true
cairo-lang-starknet-classes.workspace = true
enum-iterator = { workspace = true, optional = true }
http.workspace = true
indexmap = { workspace = true, features = ["serde"] }
mockall = { workspace = true, optional = true }
os_info.workspace = true
papyrus_common = { path = "../papyrus_common", version = "0.4.0-rc.0" }
papyrus_config = { path = "../papyrus_config", version = "0.4.0-rc.0" }
rand = { workspace = true, optional = true }
rand_chacha = { workspace = true, optional = true }
reqwest = { workspace = true, features = ["blocking", "json"] }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true, features = ["arbitrary_precision"] }
serde_repr.workspace = true
starknet_api = { path = "../starknet_api", version = "0.13.0-rc.0" }
starknet-types-core = { workspace = true, features = ["serde"] }
strum.workspace = true
strum_macros.workspace = true
papyrus_test_utils = { path = "../papyrus_test_utils", optional = true }
thiserror.workspace = true
tokio = { workspace = true, features = ["full", "sync"] }
tokio-retry.workspace = true
tracing.workspace = true
url.workspace = true

[dev-dependencies]
assert_matches.workspace = true
enum-iterator.workspace = true
mockall.workspace = true
mockito = "0.31.0"
rand.workspace = true
rand_chacha.workspace = true
pretty_assertions.workspace = true
simple_logger.workspace = true
starknet_api = { path = "../starknet_api", version = "0.13.0-rc.0", features = ["testing"] }
papyrus_test_utils = { path = "../papyrus_test_utils" }

[package.metadata.cargo-machete]
# The `rand` and `rand_chacha` crates are used in the `testing` feature, which is optional.
# `strum` is used by `EnumIter` which is used in this crate.
ignored = ["rand", "rand_chacha", "strum"]

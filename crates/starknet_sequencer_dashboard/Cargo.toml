[package]
name = "starknet_sequencer_dashboard"
version.workspace = true
edition.workspace = true
repository.workspace = true
license.workspace = true


[features]
testing = []

[lints]
workspace = true

[dependencies]
const_format.workspace = true
indexmap = { workspace = true, features = ["serde"] }
papyrus_sync.workspace = true
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true, features = ["arbitrary_precision"] }
starknet_batcher.workspace = true
starknet_consensus.workspace = true
starknet_consensus_manager.workspace = true
starknet_gateway.workspace = true
starknet_http_server.workspace = true
starknet_infra_utils.workspace = true
starknet_mempool.workspace = true
starknet_mempool_p2p.workspace = true
starknet_sequencer_infra.workspace = true
starknet_sequencer_metrics.workspace = true
starknet_state_sync.workspace = true

[dev-dependencies]
papyrus_sync = { workspace = true, features = ["testing"] }
starknet_batcher = { workspace = true, features = ["testing"] }
starknet_consensus = { workspace = true, features = ["testing"] }
starknet_consensus_manager = { workspace = true, features = ["testing"] }
starknet_gateway = { workspace = true, features = ["testing"] }
starknet_http_server = { workspace = true, features = ["testing"] }
starknet_infra_utils = { workspace = true, features = ["testing"] }
starknet_mempool = { workspace = true, features = ["testing"] }
starknet_mempool_p2p = { workspace = true, features = ["testing"] }
starknet_sequencer_infra = { workspace = true, features = ["testing"] }
starknet_state_sync = { workspace = true, features = ["testing"] }

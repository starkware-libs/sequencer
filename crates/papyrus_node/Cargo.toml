[package]
name = "papyrus_node"
version.workspace = true
edition.workspace = true
repository.workspace = true
license-file.workspace = true

[features]
default = ["rpc"]
rpc = ["apollo_rpc"]
testing = []

[[bin]]
name = "central_source_integration_test"
path = "src/bin/central_source_integration_test.rs"
required-features = ["futures-util", "tokio-stream"]

[dependencies]
anyhow.workspace = true
apollo_central_sync.workspace = true
apollo_config.workspace = true
apollo_network.workspace = true
apollo_p2p_sync.workspace = true
apollo_rpc = { workspace = true, optional = true }
apollo_storage.workspace = true
clap = { workspace = true }
const_format.workspace = true
futures.workspace = true
itertools.workspace = true
lazy_static.workspace = true
once_cell.workspace = true
papyrus_base_layer.workspace = true
papyrus_common.workspace = true
papyrus_monitoring_gateway.workspace = true
reqwest = { workspace = true, features = ["blocking", "json"] }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true, features = ["arbitrary_precision"] }
starknet_api.workspace = true
starknet_class_manager_types.workspace = true
starknet_client.workspace = true
starknet_consensus.workspace = true
starknet_consensus_orchestrator.workspace = true
strum.workspace = true
tokio = { workspace = true, features = ["full", "sync"] }
tracing.workspace = true
tracing-subscriber = { workspace = true, features = ["env-filter"] }
validator = { workspace = true, features = ["derive"] }

# Binaries dependencies
futures-util = { workspace = true, optional = true }
tokio-stream = { workspace = true, optional = true }

[dev-dependencies]
apollo_test_utils.workspace = true
colored.workspace = true
insta = { workspace = true, features = ["json"] }
metrics-exporter-prometheus.workspace = true
pretty_assertions.workspace = true
starknet_infra_utils = { workspace = true, features = ["testing"] }
tempfile.workspace = true


[lints]
workspace = true

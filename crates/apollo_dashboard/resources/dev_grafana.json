{
  "Sequencer Node Dashboard": {
    "Consensus": [
      {
        "title": "consensus_block_number",
        "description": "The block number consensus is working to decide",
        "type": "timeseries",
        "exprs": [
          "consensus_block_number{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "consensus_round",
        "description": "The round of the state machine",
        "type": "timeseries",
        "exprs": [
          "consensus_round{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "Average consensus round",
        "description": "Average consensus round (10m)",
        "type": "timeseries",
        "exprs": [
          "avg_over_time(consensus_round{cluster=~\"$cluster\", namespace=~\"$namespace\"}[10m])"
        ],
        "extra_params": {}
      },
      {
        "title": "consensus_round_above_zero",
        "description": "The number of times the consensus round has increased above zero",
        "type": "timeseries",
        "exprs": [
          "consensus_round_above_zero{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "consensus_max_cached_block_number",
        "description": "How many blocks after current are cached",
        "type": "timeseries",
        "exprs": [
          "consensus_max_cached_block_number{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "consensus_cached_votes",
        "description": "How many votes are cached when starting to work on a new block number",
        "type": "timeseries",
        "exprs": [
          "consensus_cached_votes{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "consensus_decisions_reached_by_consensus",
        "description": "The total number of decisions reached by way of consensus",
        "type": "timeseries",
        "exprs": [
          "consensus_decisions_reached_by_consensus{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "consensus_decisions_reached_by_sync",
        "description": "The total number of decisions reached by way of sync",
        "type": "timeseries",
        "exprs": [
          "consensus_decisions_reached_by_sync{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "consensus_proposals_received",
        "description": "The total number of proposals received",
        "type": "timeseries",
        "exprs": [
          "consensus_proposals_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "consensus_proposals_valid_init",
        "description": "The total number of proposals received with a valid init",
        "type": "timeseries",
        "exprs": [
          "consensus_proposals_valid_init{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "consensus_proposals_validated",
        "description": "The total number of complete, valid proposals received",
        "type": "timeseries",
        "exprs": [
          "consensus_proposals_validated{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "consensus_proposals_invalid",
        "description": "The total number of proposals that failed validation",
        "type": "timeseries",
        "exprs": [
          "consensus_proposals_invalid{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "consensus_build_proposal_total",
        "description": "The total number of proposals built",
        "type": "timeseries",
        "exprs": [
          "consensus_build_proposal_total{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "consensus_build_proposal_failed",
        "description": "The number of proposals that failed to be built",
        "type": "timeseries",
        "exprs": [
          "consensus_build_proposal_failed{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "consensus_reproposals",
        "description": "The number of reproposals sent",
        "type": "timeseries",
        "exprs": [
          "consensus_reproposals{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "consensus_new_value_locks",
        "description": "The number of times consensus has attained a lock on a new value",
        "type": "timeseries",
        "exprs": [
          "consensus_new_value_locks{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "consensus_held_locks",
        "description": "The number of times consensus progressed to a new round while holding a lock",
        "type": "timeseries",
        "exprs": [
          "consensus_held_locks{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "consensus_timeouts",
        "description": "The number of times consensus has timed out",
        "type": "timeseries",
        "exprs": [
          "sum  by (timeout_reason) (consensus_timeouts{cluster=~\"$cluster\", namespace=~\"$namespace\"})"
        ],
        "extra_params": {}
      },
      {
        "title": "consensus_num_batches_in_proposal",
        "description": "The number of transaction batches in a valid proposal received",
        "type": "timeseries",
        "exprs": [
          "consensus_num_batches_in_proposal{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "consensus_num_txs_in_proposal",
        "description": "The total number of individual transactions in a valid proposal received",
        "type": "timeseries",
        "exprs": [
          "consensus_num_txs_in_proposal{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "consensus_inbound_stream_started",
        "description": "The total number of inbound streams started",
        "type": "timeseries",
        "exprs": [
          "consensus_inbound_stream_started{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "consensus_inbound_stream_evicted",
        "description": "The total number of inbound streams evicted due to cache capacity",
        "type": "timeseries",
        "exprs": [
          "consensus_inbound_stream_evicted{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "consensus_inbound_stream_finished",
        "description": "The total number of inbound streams finished",
        "type": "timeseries",
        "exprs": [
          "consensus_inbound_stream_finished{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "consensus_outbound_stream_started",
        "description": "The total number of outbound streams started",
        "type": "timeseries",
        "exprs": [
          "consensus_outbound_stream_started{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "consensus_outbound_stream_finished",
        "description": "The total number of outbound streams finished",
        "type": "timeseries",
        "exprs": [
          "consensus_outbound_stream_finished{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "consensus_l2_gas_price",
        "description": "The L2 gas price calculated in an accepted proposal",
        "type": "timeseries",
        "exprs": [
          "consensus_l2_gas_price{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "cende_last_prepared_blob_block_number",
        "description": "The blob block number that cende knows. That means the sequencer can be the proposer only if the current height is greater by one than this value.",
        "type": "timeseries",
        "exprs": [
          "cende_last_prepared_blob_block_number{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "cende_prepare_blob_for_next_height_latency",
        "description": "The time it takes to prepare the blob for the next height, i.e create the blob object.",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(cende_prepare_blob_for_next_height_latency_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(cende_prepare_blob_for_next_height_latency_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "cende_write_prev_height_blob_latency",
        "description": "Be careful with this metric, if the blob was already written by another request, the latency is much lower since writing to Aerospike is not needed.",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(cende_write_prev_height_blob_latency_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(cende_write_prev_height_blob_latency_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "cende_write_blob_success",
        "description": "The number of successful blob writes to Aerospike",
        "type": "timeseries",
        "exprs": [
          "cende_write_blob_success{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "cende_write_blob_failure",
        "description": "The number of failed blob writes to Aerospike",
        "type": "timeseries",
        "exprs": [
          "sum  by (cende_write_failure_reason) (cende_write_blob_failure{cluster=~\"$cluster\", namespace=~\"$namespace\"})"
        ],
        "extra_params": {}
      },
      {
        "title": "consensus_l1_data_gas_mismatch",
        "description": "The number of times the L1 data gas in a proposal does not match the value expected by this validator",
        "type": "timeseries",
        "exprs": [
          "consensus_l1_data_gas_mismatch{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "consensus_l1_gas_mismatch",
        "description": "The number of times the L1 gas in a proposal does not match the value expected by this validator",
        "type": "timeseries",
        "exprs": [
          "consensus_l1_gas_mismatch{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      }
    ],
    "Batcher": [
      {
        "title": "batcher_proposal_started",
        "description": "Counter of proposals started",
        "type": "stat",
        "exprs": [
          "batcher_proposal_started{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "batcher_proposal_succeeded",
        "description": "Counter of successful proposals",
        "type": "stat",
        "exprs": [
          "batcher_proposal_succeeded{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "batcher_proposal_failed",
        "description": "Counter of failed proposals",
        "type": "stat",
        "exprs": [
          "batcher_proposal_failed{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "batcher_batched_transactions",
        "description": "Counter of batched transactions across all forks",
        "type": "stat",
        "exprs": [
          "batcher_batched_transactions{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "batcher_last_batched_block",
        "description": "The last block received by batching",
        "type": "stat",
        "exprs": [
          "batcher_last_batched_block{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "rejection_ratio",
        "description": "Ratio of rejected transactions out of all processed, over the last 5 minutes",
        "type": "timeseries",
        "exprs": [
          "100 * (increase(batcher_rejected_transactions{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m]) / (increase(batcher_rejected_transactions{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m]) + increase(batcher_batched_transactions{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "reverted_transactions_ratio",
        "description": "Ratio of reverted transactions out of all processed, over the last 5 minutes",
        "type": "timeseries",
        "exprs": [
          "100 * (increase(batcher_reverted_transactions{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m]) / (increase(batcher_rejected_transactions{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m]) + increase(batcher_batched_transactions{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
        ],
        "extra_params": {}
      }
    ],
    "State Sync": [
      {
        "title": "apollo_state_sync_processed_transactions",
        "description": "The number of transactions processed by the state sync component",
        "type": "stat",
        "exprs": [
          "apollo_state_sync_processed_transactions{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "apollo_state_sync_reverted_transactions",
        "description": "The number of transactions reverted by the state sync component",
        "type": "stat",
        "exprs": [
          "apollo_state_sync_reverted_transactions{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "apollo_central_sync_central_block_marker",
        "description": "The first block number that doesn't exist yet",
        "type": "stat",
        "exprs": [
          "apollo_central_sync_central_block_marker{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "apollo_state_sync_body_marker",
        "description": "The first block number for which the state sync component does not have a body",
        "type": "stat",
        "exprs": [
          "apollo_state_sync_body_marker{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "apollo_state_sync_class_manager_marker",
        "description": "The first block number for which the state sync component does not guarantee all of the corresponding classes are stored in the class manager component",
        "type": "stat",
        "exprs": [
          "apollo_state_sync_class_manager_marker{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "apollo_state_sync_header_marker",
        "description": "The first block number for which the state sync component does not have a header",
        "type": "stat",
        "exprs": [
          "apollo_state_sync_header_marker{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "apollo_state_sync_state_marker",
        "description": "The first block number for which the state sync component does not have a state body",
        "type": "stat",
        "exprs": [
          "apollo_state_sync_state_marker{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      }
    ],
    "Http Server": [
      {
        "title": "http_server_added_transactions_total",
        "description": "Total number of transactions added",
        "type": "timeseries",
        "exprs": [
          "http_server_added_transactions_total{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "http_server_transactions_received_rate (TPS)",
        "description": "The rate of transactions received by the HTTP Server during the last 20 minutes",
        "type": "timeseries",
        "exprs": [
          "sum(rate(http_server_added_transactions_total{cluster=~\"$cluster\", namespace=~\"$namespace\"}[20m])) or vector(0)"
        ],
        "extra_params": {}
      },
      {
        "title": "http_server_added_transactions_success",
        "description": "Number of successfully added transactions",
        "type": "timeseries",
        "exprs": [
          "http_server_added_transactions_success{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "http_server_added_transactions_failure",
        "description": "Number of faulty added transactions",
        "type": "timeseries",
        "exprs": [
          "http_server_added_transactions_failure{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "http_server_added_transactions_internal_error",
        "description": "Number of faulty added transactions failing on internal error",
        "type": "timeseries",
        "exprs": [
          "http_server_added_transactions_internal_error{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "http_server_added_transactions_deprecated_error",
        "description": "Number of faulty added transactions failing on deprecated error",
        "type": "timeseries",
        "exprs": [
          "http_server_added_transactions_deprecated_error{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "http_server_add_tx_latency",
        "description": "Latency of HTTP add_tx endpoint in secs",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(http_server_add_tx_latency_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(http_server_add_tx_latency_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
        ],
        "extra_params": {}
      }
    ],
    "Gateway": [
      {
        "title": "gateway_transactions_received",
        "description": "Counter of transactions received",
        "type": "stat",
        "exprs": [
          "sum  by (tx_type) (gateway_transactions_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}) "
        ],
        "extra_params": {}
      },
      {
        "title": "gateway_transactions_received",
        "description": "Counter of transactions received",
        "type": "stat",
        "exprs": [
          "sum  by (source) (gateway_transactions_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}) "
        ],
        "extra_params": {}
      },
      {
        "title": "gateway_transactions_received_rate (TPS)",
        "description": "The rate of transactions received by the gateway during the last 20 minutes",
        "type": "timeseries",
        "exprs": [
          "sum(rate(gateway_transactions_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}[20m])) or vector(0)"
        ],
        "extra_params": {}
      },
      {
        "title": "gateway_add_tx_latency",
        "description": "Latency of gateway add_tx function in secs",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(gateway_add_tx_latency_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(gateway_add_tx_latency_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "gateway_validate_tx_latency",
        "description": "Latency of gateway validate function in secs",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(gateway_validate_tx_latency_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(gateway_validate_tx_latency_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "gateway_transactions_failed",
        "description": "Counter of failed transactions",
        "type": "stat",
        "exprs": [
          "sum  by (tx_type) (gateway_transactions_failed{cluster=~\"$cluster\", namespace=~\"$namespace\"})"
        ],
        "extra_params": {}
      },
      {
        "title": "gateway_transactions_sent_to_mempool",
        "description": "Counter of transactions sent to the mempool",
        "type": "stat",
        "exprs": [
          "sum  by (tx_type) (gateway_transactions_sent_to_mempool{cluster=~\"$cluster\", namespace=~\"$namespace\"})"
        ],
        "extra_params": {}
      }
    ],
    "Mempool": [
      {
        "title": "mempool_transactions_received",
        "description": "Counter of transactions received by the mempool",
        "type": "stat",
        "exprs": [
          "sum  by (tx_type) (mempool_transactions_received{cluster=~\"$cluster\", namespace=~\"$namespace\"})"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_transactions_received_rate (TPS)",
        "description": "The rate of transactions received by the mempool during the last 20 minutes",
        "type": "timeseries",
        "exprs": [
          "sum(rate(mempool_transactions_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}[20m])) or vector(0)"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_transactions_dropped",
        "description": "Counter of transactions dropped from the mempool",
        "type": "stat",
        "exprs": [
          "sum  by (drop_reason) (mempool_transactions_dropped{cluster=~\"$cluster\", namespace=~\"$namespace\"})"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_txs_committed",
        "description": "The number of transactions that were committed to block",
        "type": "stat",
        "exprs": [
          "mempool_txs_committed{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_pool_size",
        "description": "The average size of the pool",
        "type": "timeseries",
        "exprs": [
          "avg_over_time(mempool_pool_size{cluster=~\"$cluster\", namespace=~\"$namespace\"}[2m])"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_priority_queue_size",
        "description": "The average size of the priority queue",
        "type": "timeseries",
        "exprs": [
          "avg_over_time(mempool_priority_queue_size{cluster=~\"$cluster\", namespace=~\"$namespace\"}[2m])"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_pending_queue_size",
        "description": "The average size of the pending queue",
        "type": "timeseries",
        "exprs": [
          "avg_over_time(mempool_pending_queue_size{cluster=~\"$cluster\", namespace=~\"$namespace\"}[2m])"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_total_size_bytes",
        "description": "The average total transaction size in bytes over time in the mempool",
        "type": "timeseries",
        "exprs": [
          "avg_over_time(mempool_total_size_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\"}[2m])"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_get_txs_size",
        "description": "The average size of the get_txs",
        "type": "timeseries",
        "exprs": [
          "avg_over_time(mempool_get_txs_size{cluster=~\"$cluster\", namespace=~\"$namespace\"}[2m])"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_delayed_declare_size",
        "description": "The average number of delayed declare transactions",
        "type": "timeseries",
        "exprs": [
          "avg_over_time(mempool_delayed_declare_size{cluster=~\"$cluster\", namespace=~\"$namespace\"}[2m])"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_transaction_time_spent",
        "description": "The time (seconds) a transaction spent in the mempool before removal (any reason - commit, reject, TTL expiry, fee escalation, or eviction)",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(mempool_transaction_time_spent_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(mempool_transaction_time_spent_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_transaction_time_spent_until_committed",
        "description": "The time (seconds) a transaction spent in the mempool until it was committed",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(mempool_transaction_time_spent_until_committed_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(mempool_transaction_time_spent_until_committed_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
        ],
        "extra_params": {}
      }
    ],
    "L1 Provider": [
      {
        "title": "l1_message_scraper_success_count",
        "description": "Number of times the L1 message scraper successfully scraped messages and updated the provider",
        "type": "timeseries",
        "exprs": [
          "l1_message_scraper_success_count{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_message_scraper_baselayer_error_count",
        "description": "Number of times the L1 message scraper encountered an error while scraping the base layer",
        "type": "timeseries",
        "exprs": [
          "l1_message_scraper_baselayer_error_count{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_message_scraper_reorg_detected",
        "description": "Number of times the L1 message scraper detected a reorganization in the base layer",
        "type": "timeseries",
        "exprs": [
          "l1_message_scraper_reorg_detected{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      }
    ],
    "L1 Gas Price": [
      {
        "title": "eth_to_strk_error_count",
        "description": "Number of times the query to the Eth to Strk oracle failed due to an error or timeout",
        "type": "stat",
        "exprs": [
          "eth_to_strk_error_count{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "eth_to_strk_success_count",
        "description": "Number of times the query to the Eth to Strk oracle succeeded",
        "type": "stat",
        "exprs": [
          "eth_to_strk_success_count{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "eth_to_strk_rate",
        "description": "The current rate of ETH to STRK conversion",
        "type": "timeseries",
        "exprs": [
          "eth_to_strk_rate{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_gas_price_provider_insufficient_history",
        "description": "Number of times the L1 gas price provider calculated an average with too few blocks",
        "type": "stat",
        "exprs": [
          "l1_gas_price_provider_insufficient_history{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_gas_price_scraper_success_count",
        "description": "Number of times the L1 gas price scraper successfully scraped and updated gas prices",
        "type": "stat",
        "exprs": [
          "l1_gas_price_scraper_success_count{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_gas_price_scraper_baselayer_error_count",
        "description": "Number of times the L1 gas price scraper encountered an error while scraping the base layer",
        "type": "stat",
        "exprs": [
          "l1_gas_price_scraper_baselayer_error_count{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_gas_price_scraper_reorg_detected",
        "description": "Number of times the L1 gas price scraper detected a reorganization in the base layer",
        "type": "stat",
        "exprs": [
          "l1_gas_price_scraper_reorg_detected{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_gas_price_scraper_latest_scraped_block",
        "description": "The latest block number that the L1 gas price scraper has scraped",
        "type": "timeseries",
        "exprs": [
          "l1_gas_price_scraper_latest_scraped_block{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "eth_to_strk_rate",
        "description": "The current rate of ETH to STRK conversion",
        "type": "timeseries",
        "exprs": [
          "eth_to_strk_rate{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_gas_price_latest_mean_value",
        "description": "The latest L1 gas price, calculated as an average by the provider client",
        "type": "timeseries",
        "exprs": [
          "l1_gas_price_latest_mean_value{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_data_gas_price_latest_mean_value",
        "description": "The latest L1 data gas price, calculated as an average by the provider client",
        "type": "timeseries",
        "exprs": [
          "l1_data_gas_price_latest_mean_value{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      }
    ],
    "Blockifier": [
      {
        "title": "class_cache_miss_ratio",
        "description": "The ratio of cache misses when requesting compiled classes from the Blockifier State Reader",
        "type": "timeseries",
        "exprs": [
          "100 * (increase(class_cache_misses{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m]) / (increase(class_cache_misses{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m]) + increase(class_cache_hits{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "native_class_returned_ratio",
        "description": "The ratio of Native classes returned by the Blockifier",
        "type": "timeseries",
        "exprs": [
          "100 * (increase(native_class_returned{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m]) / (increase(class_cache_hits{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m]) + increase(class_cache_misses{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "native_compilation_error",
        "description": "Counter of Native compilation failures in the blockifier",
        "type": "stat",
        "exprs": [
          "native_compilation_error{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "native_execution_ratio",
        "description": "The ratio of calls running Cairo Native in the Blockifier",
        "type": "timeseries",
        "exprs": [
          "100 * (increase(calls_running_native{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m]) / (increase(number_of_total_calls{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
        ],
        "extra_params": {}
      }
    ],
    "Compile sierra to casm": [
      {
        "title": "compile_to_casm_compilation_duration_seconds",
        "description": "Server-side compilation to casm duration in seconds",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(compile_to_casm_compilation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(compile_to_casm_compilation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
        ],
        "extra_params": {}
      }
    ],
    "ConsensusP2p": [
      {
        "title": "apollo_consensus_num_connected_peers",
        "description": "The number of connected peers to the consensus p2p component",
        "type": "timeseries",
        "exprs": [
          "apollo_consensus_num_connected_peers{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "apollo_consensus_votes_num_sent_messages",
        "description": "The number of messages sent by the consensus p2p component over the Votes topic",
        "type": "timeseries",
        "exprs": [
          "apollo_consensus_votes_num_sent_messages{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "apollo_consensus_votes_num_received_messages",
        "description": "The number of messages received by the consensus p2p component over the Votes topic",
        "type": "timeseries",
        "exprs": [
          "apollo_consensus_votes_num_received_messages{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "apollo_consensus_proposals_num_sent_messages",
        "description": "The number of messages sent by the consensus p2p component over the Proposals topic",
        "type": "timeseries",
        "exprs": [
          "apollo_consensus_proposals_num_sent_messages{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "apollo_consensus_proposals_num_received_messages",
        "description": "The number of messages received by the consensus p2p component over the Proposals topic",
        "type": "timeseries",
        "exprs": [
          "apollo_consensus_proposals_num_received_messages{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "consensus_conflicting_votes",
        "description": "The number of times consensus has received conflicting votes",
        "type": "timeseries",
        "exprs": [
          "consensus_conflicting_votes{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      }
    ],
    "StateSyncP2p": [
      {
        "title": "apollo_p2p_sync_num_connected_peers",
        "description": "The number of connected peers to the p2p sync component",
        "type": "stat",
        "exprs": [
          "apollo_p2p_sync_num_connected_peers{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "apollo_p2p_sync_num_active_inbound_sessions",
        "description": "The number of inbound sessions to the p2p sync component",
        "type": "stat",
        "exprs": [
          "apollo_p2p_sync_num_active_inbound_sessions{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "apollo_p2p_sync_num_active_outbound_sessions",
        "description": "The number of outbound sessions to the p2p sync component",
        "type": "stat",
        "exprs": [
          "apollo_p2p_sync_num_active_outbound_sessions{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      }
    ],
    "MempoolP2p": [
      {
        "title": "apollo_mempool_p2p_num_connected_peers",
        "description": "The number of connected peers to the mempool p2p component",
        "type": "timeseries",
        "exprs": [
          "apollo_mempool_p2p_num_connected_peers{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "apollo_mempool_p2p_num_sent_messages",
        "description": "The number of messages sent by the mempool p2p component",
        "type": "timeseries",
        "exprs": [
          "apollo_mempool_p2p_num_sent_messages{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "apollo_mempool_p2p_num_received_messages",
        "description": "The number of messages received by the mempool p2p component",
        "type": "timeseries",
        "exprs": [
          "apollo_mempool_p2p_num_received_messages{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "apollo_mempool_p2p_broadcasted_transaction_batch_size",
        "description": "The number of transactions in batches broadcast by the mempool p2p component",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(apollo_mempool_p2p_broadcasted_transaction_batch_size_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(apollo_mempool_p2p_broadcasted_transaction_batch_size_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
        ],
        "extra_params": {}
      }
    ],
    "Batcher Infra": [
      {
        "title": "batcher_local_msgs_received",
        "description": "Counter of messages received by batcher local server",
        "type": "timeseries",
        "exprs": [
          "batcher_local_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "batcher_local_msgs_processed",
        "description": "Counter of messages processed by batcher local server",
        "type": "timeseries",
        "exprs": [
          "batcher_local_msgs_processed{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "batcher_local_queue_depth",
        "description": "The depth of the batcher's local message queue",
        "type": "timeseries",
        "exprs": [
          "batcher_local_queue_depth{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "batcher_remote_msgs_received",
        "description": "Counter of messages received by batcher remote server",
        "type": "timeseries",
        "exprs": [
          "batcher_remote_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "batcher_remote_valid_msgs_received",
        "description": "Counter of valid messages received by batcher remote server",
        "type": "timeseries",
        "exprs": [
          "batcher_remote_valid_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "batcher_remote_msgs_processed",
        "description": "Counter of messages processed by batcher remote server",
        "type": "timeseries",
        "exprs": [
          "batcher_remote_msgs_processed{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "batcher_remote_number_of_connections",
        "description": "Number of connections to batcher remote server",
        "type": "timeseries",
        "exprs": [
          "batcher_remote_number_of_connections{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "batcher_remote_client_send_attempts",
        "description": "Required number of remote connection attempts made by a batcher remote client",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(batcher_remote_client_send_attempts_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(batcher_remote_client_send_attempts_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "batcher_labeled_processing_times_secs add_sync_block",
        "description": "Request processing times of the batcher, per label (secs): add_sync_block",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(batcher_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_sync_block\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(batcher_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_sync_block\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "batcher_labeled_processing_times_secs decision_reached",
        "description": "Request processing times of the batcher, per label (secs): decision_reached",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(batcher_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"decision_reached\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(batcher_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"decision_reached\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "batcher_labeled_processing_times_secs get_current_height",
        "description": "Request processing times of the batcher, per label (secs): get_current_height",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(batcher_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_current_height\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(batcher_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_current_height\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "batcher_labeled_processing_times_secs get_proposal_content",
        "description": "Request processing times of the batcher, per label (secs): get_proposal_content",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(batcher_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_proposal_content\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(batcher_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_proposal_content\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "batcher_labeled_processing_times_secs propose_block",
        "description": "Request processing times of the batcher, per label (secs): propose_block",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(batcher_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"propose_block\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(batcher_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"propose_block\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "batcher_labeled_processing_times_secs revert_block",
        "description": "Request processing times of the batcher, per label (secs): revert_block",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(batcher_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"revert_block\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(batcher_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"revert_block\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "batcher_labeled_processing_times_secs send_proposal_content",
        "description": "Request processing times of the batcher, per label (secs): send_proposal_content",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(batcher_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"send_proposal_content\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(batcher_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"send_proposal_content\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "batcher_labeled_processing_times_secs start_height",
        "description": "Request processing times of the batcher, per label (secs): start_height",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(batcher_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"start_height\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(batcher_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"start_height\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "batcher_labeled_processing_times_secs validate_block",
        "description": "Request processing times of the batcher, per label (secs): validate_block",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(batcher_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"validate_block\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(batcher_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"validate_block\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "batcher_labeled_queueing_times_secs add_sync_block",
        "description": "Request queueing times of the batcher, per label (secs): add_sync_block",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(batcher_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_sync_block\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(batcher_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_sync_block\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "batcher_labeled_queueing_times_secs decision_reached",
        "description": "Request queueing times of the batcher, per label (secs): decision_reached",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(batcher_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"decision_reached\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(batcher_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"decision_reached\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "batcher_labeled_queueing_times_secs get_current_height",
        "description": "Request queueing times of the batcher, per label (secs): get_current_height",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(batcher_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_current_height\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(batcher_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_current_height\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "batcher_labeled_queueing_times_secs get_proposal_content",
        "description": "Request queueing times of the batcher, per label (secs): get_proposal_content",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(batcher_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_proposal_content\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(batcher_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_proposal_content\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "batcher_labeled_queueing_times_secs propose_block",
        "description": "Request queueing times of the batcher, per label (secs): propose_block",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(batcher_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"propose_block\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(batcher_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"propose_block\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "batcher_labeled_queueing_times_secs revert_block",
        "description": "Request queueing times of the batcher, per label (secs): revert_block",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(batcher_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"revert_block\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(batcher_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"revert_block\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "batcher_labeled_queueing_times_secs send_proposal_content",
        "description": "Request queueing times of the batcher, per label (secs): send_proposal_content",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(batcher_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"send_proposal_content\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(batcher_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"send_proposal_content\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "batcher_labeled_queueing_times_secs start_height",
        "description": "Request queueing times of the batcher, per label (secs): start_height",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(batcher_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"start_height\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(batcher_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"start_height\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "batcher_labeled_queueing_times_secs validate_block",
        "description": "Request queueing times of the batcher, per label (secs): validate_block",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(batcher_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"validate_block\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(batcher_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"validate_block\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "batcher_labeled_local_response_times_secs add_sync_block",
        "description": "Request local response times of the batcher, per label (secs): add_sync_block",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(batcher_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_sync_block\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(batcher_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_sync_block\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "batcher_labeled_local_response_times_secs decision_reached",
        "description": "Request local response times of the batcher, per label (secs): decision_reached",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(batcher_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"decision_reached\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(batcher_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"decision_reached\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "batcher_labeled_local_response_times_secs get_current_height",
        "description": "Request local response times of the batcher, per label (secs): get_current_height",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(batcher_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_current_height\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(batcher_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_current_height\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "batcher_labeled_local_response_times_secs get_proposal_content",
        "description": "Request local response times of the batcher, per label (secs): get_proposal_content",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(batcher_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_proposal_content\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(batcher_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_proposal_content\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "batcher_labeled_local_response_times_secs propose_block",
        "description": "Request local response times of the batcher, per label (secs): propose_block",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(batcher_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"propose_block\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(batcher_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"propose_block\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "batcher_labeled_local_response_times_secs revert_block",
        "description": "Request local response times of the batcher, per label (secs): revert_block",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(batcher_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"revert_block\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(batcher_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"revert_block\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "batcher_labeled_local_response_times_secs send_proposal_content",
        "description": "Request local response times of the batcher, per label (secs): send_proposal_content",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(batcher_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"send_proposal_content\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(batcher_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"send_proposal_content\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "batcher_labeled_local_response_times_secs start_height",
        "description": "Request local response times of the batcher, per label (secs): start_height",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(batcher_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"start_height\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(batcher_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"start_height\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "batcher_labeled_local_response_times_secs validate_block",
        "description": "Request local response times of the batcher, per label (secs): validate_block",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(batcher_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"validate_block\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(batcher_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"validate_block\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "batcher_labeled_remote_response_times_secs add_sync_block",
        "description": "Request remote response times of the batcher, per label (secs): add_sync_block",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(batcher_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_sync_block\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(batcher_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_sync_block\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "batcher_labeled_remote_response_times_secs decision_reached",
        "description": "Request remote response times of the batcher, per label (secs): decision_reached",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(batcher_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"decision_reached\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(batcher_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"decision_reached\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "batcher_labeled_remote_response_times_secs get_current_height",
        "description": "Request remote response times of the batcher, per label (secs): get_current_height",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(batcher_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_current_height\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(batcher_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_current_height\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "batcher_labeled_remote_response_times_secs get_proposal_content",
        "description": "Request remote response times of the batcher, per label (secs): get_proposal_content",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(batcher_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_proposal_content\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(batcher_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_proposal_content\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "batcher_labeled_remote_response_times_secs propose_block",
        "description": "Request remote response times of the batcher, per label (secs): propose_block",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(batcher_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"propose_block\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(batcher_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"propose_block\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "batcher_labeled_remote_response_times_secs revert_block",
        "description": "Request remote response times of the batcher, per label (secs): revert_block",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(batcher_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"revert_block\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(batcher_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"revert_block\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "batcher_labeled_remote_response_times_secs send_proposal_content",
        "description": "Request remote response times of the batcher, per label (secs): send_proposal_content",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(batcher_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"send_proposal_content\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(batcher_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"send_proposal_content\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "batcher_labeled_remote_response_times_secs start_height",
        "description": "Request remote response times of the batcher, per label (secs): start_height",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(batcher_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"start_height\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(batcher_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"start_height\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "batcher_labeled_remote_response_times_secs validate_block",
        "description": "Request remote response times of the batcher, per label (secs): validate_block",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(batcher_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"validate_block\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(batcher_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"validate_block\"}[5m])))"
        ],
        "extra_params": {}
      }
    ],
    "StateSyncInfra": [
      {
        "title": "state_sync_local_msgs_received",
        "description": "Counter of messages received by state sync local server",
        "type": "timeseries",
        "exprs": [
          "state_sync_local_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "state_sync_local_msgs_processed",
        "description": "Counter of messages processed by state sync local server",
        "type": "timeseries",
        "exprs": [
          "state_sync_local_msgs_processed{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "state_sync_local_queue_depth",
        "description": "The depth of the state sync's local message queue",
        "type": "timeseries",
        "exprs": [
          "state_sync_local_queue_depth{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "state_sync_remote_msgs_received",
        "description": "Counter of messages received by state sync remote server",
        "type": "timeseries",
        "exprs": [
          "state_sync_remote_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "state_sync_remote_valid_msgs_received",
        "description": "Counter of valid messages received by state sync remote server",
        "type": "timeseries",
        "exprs": [
          "state_sync_remote_valid_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "state_sync_remote_msgs_processed",
        "description": "Counter of messages processed by state sync remote server",
        "type": "timeseries",
        "exprs": [
          "state_sync_remote_msgs_processed{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "state_sync_remote_number_of_connections",
        "description": "Number of connections to state sync remote server",
        "type": "timeseries",
        "exprs": [
          "state_sync_remote_number_of_connections{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "state_sync_remote_client_send_attempts",
        "description": "Required number of remote connection attempts made by a state sync remote client",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(state_sync_remote_client_send_attempts_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(state_sync_remote_client_send_attempts_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "state_sync_labeled_processing_times_secs add_new_block",
        "description": "Request processing times of the state sync, per label (secs): add_new_block",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(state_sync_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_new_block\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(state_sync_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_new_block\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "state_sync_labeled_processing_times_secs get_block",
        "description": "Request processing times of the state sync, per label (secs): get_block",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(state_sync_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_block\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(state_sync_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_block\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "state_sync_labeled_processing_times_secs get_block_hash",
        "description": "Request processing times of the state sync, per label (secs): get_block_hash",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(state_sync_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_block_hash\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(state_sync_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_block_hash\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "state_sync_labeled_processing_times_secs get_class_hash_at",
        "description": "Request processing times of the state sync, per label (secs): get_class_hash_at",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(state_sync_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_class_hash_at\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(state_sync_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_class_hash_at\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "state_sync_labeled_processing_times_secs get_latest_block_number",
        "description": "Request processing times of the state sync, per label (secs): get_latest_block_number",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(state_sync_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_latest_block_number\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(state_sync_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_latest_block_number\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "state_sync_labeled_processing_times_secs get_nonce_at",
        "description": "Request processing times of the state sync, per label (secs): get_nonce_at",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(state_sync_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_nonce_at\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(state_sync_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_nonce_at\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "state_sync_labeled_processing_times_secs get_storage_at",
        "description": "Request processing times of the state sync, per label (secs): get_storage_at",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(state_sync_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_storage_at\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(state_sync_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_storage_at\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "state_sync_labeled_processing_times_secs is_class_declared_at",
        "description": "Request processing times of the state sync, per label (secs): is_class_declared_at",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(state_sync_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"is_class_declared_at\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(state_sync_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"is_class_declared_at\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "state_sync_labeled_queueing_times_secs add_new_block",
        "description": "Request queueing times of the state sync, per label (secs): add_new_block",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(state_sync_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_new_block\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(state_sync_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_new_block\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "state_sync_labeled_queueing_times_secs get_block",
        "description": "Request queueing times of the state sync, per label (secs): get_block",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(state_sync_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_block\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(state_sync_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_block\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "state_sync_labeled_queueing_times_secs get_block_hash",
        "description": "Request queueing times of the state sync, per label (secs): get_block_hash",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(state_sync_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_block_hash\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(state_sync_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_block_hash\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "state_sync_labeled_queueing_times_secs get_class_hash_at",
        "description": "Request queueing times of the state sync, per label (secs): get_class_hash_at",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(state_sync_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_class_hash_at\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(state_sync_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_class_hash_at\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "state_sync_labeled_queueing_times_secs get_latest_block_number",
        "description": "Request queueing times of the state sync, per label (secs): get_latest_block_number",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(state_sync_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_latest_block_number\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(state_sync_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_latest_block_number\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "state_sync_labeled_queueing_times_secs get_nonce_at",
        "description": "Request queueing times of the state sync, per label (secs): get_nonce_at",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(state_sync_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_nonce_at\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(state_sync_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_nonce_at\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "state_sync_labeled_queueing_times_secs get_storage_at",
        "description": "Request queueing times of the state sync, per label (secs): get_storage_at",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(state_sync_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_storage_at\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(state_sync_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_storage_at\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "state_sync_labeled_queueing_times_secs is_class_declared_at",
        "description": "Request queueing times of the state sync, per label (secs): is_class_declared_at",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(state_sync_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"is_class_declared_at\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(state_sync_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"is_class_declared_at\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "state_sync_labeled_local_response_times_secs add_new_block",
        "description": "Request local response times of the state sync, per label (secs): add_new_block",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(state_sync_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_new_block\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(state_sync_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_new_block\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "state_sync_labeled_local_response_times_secs get_block",
        "description": "Request local response times of the state sync, per label (secs): get_block",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(state_sync_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_block\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(state_sync_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_block\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "state_sync_labeled_local_response_times_secs get_block_hash",
        "description": "Request local response times of the state sync, per label (secs): get_block_hash",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(state_sync_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_block_hash\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(state_sync_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_block_hash\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "state_sync_labeled_local_response_times_secs get_class_hash_at",
        "description": "Request local response times of the state sync, per label (secs): get_class_hash_at",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(state_sync_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_class_hash_at\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(state_sync_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_class_hash_at\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "state_sync_labeled_local_response_times_secs get_latest_block_number",
        "description": "Request local response times of the state sync, per label (secs): get_latest_block_number",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(state_sync_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_latest_block_number\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(state_sync_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_latest_block_number\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "state_sync_labeled_local_response_times_secs get_nonce_at",
        "description": "Request local response times of the state sync, per label (secs): get_nonce_at",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(state_sync_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_nonce_at\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(state_sync_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_nonce_at\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "state_sync_labeled_local_response_times_secs get_storage_at",
        "description": "Request local response times of the state sync, per label (secs): get_storage_at",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(state_sync_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_storage_at\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(state_sync_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_storage_at\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "state_sync_labeled_local_response_times_secs is_class_declared_at",
        "description": "Request local response times of the state sync, per label (secs): is_class_declared_at",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(state_sync_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"is_class_declared_at\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(state_sync_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"is_class_declared_at\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "state_sync_labeled_remote_response_times_secs add_new_block",
        "description": "Request remote response times of the state sync, per label (secs): add_new_block",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(state_sync_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_new_block\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(state_sync_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_new_block\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "state_sync_labeled_remote_response_times_secs get_block",
        "description": "Request remote response times of the state sync, per label (secs): get_block",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(state_sync_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_block\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(state_sync_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_block\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "state_sync_labeled_remote_response_times_secs get_block_hash",
        "description": "Request remote response times of the state sync, per label (secs): get_block_hash",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(state_sync_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_block_hash\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(state_sync_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_block_hash\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "state_sync_labeled_remote_response_times_secs get_class_hash_at",
        "description": "Request remote response times of the state sync, per label (secs): get_class_hash_at",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(state_sync_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_class_hash_at\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(state_sync_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_class_hash_at\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "state_sync_labeled_remote_response_times_secs get_latest_block_number",
        "description": "Request remote response times of the state sync, per label (secs): get_latest_block_number",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(state_sync_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_latest_block_number\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(state_sync_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_latest_block_number\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "state_sync_labeled_remote_response_times_secs get_nonce_at",
        "description": "Request remote response times of the state sync, per label (secs): get_nonce_at",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(state_sync_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_nonce_at\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(state_sync_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_nonce_at\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "state_sync_labeled_remote_response_times_secs get_storage_at",
        "description": "Request remote response times of the state sync, per label (secs): get_storage_at",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(state_sync_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_storage_at\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(state_sync_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_storage_at\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "state_sync_labeled_remote_response_times_secs is_class_declared_at",
        "description": "Request remote response times of the state sync, per label (secs): is_class_declared_at",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(state_sync_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"is_class_declared_at\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(state_sync_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"is_class_declared_at\"}[5m])))"
        ],
        "extra_params": {}
      }
    ],
    "Gateway Infra": [
      {
        "title": "gateway_local_msgs_received",
        "description": "Counter of messages received by gateway local server",
        "type": "timeseries",
        "exprs": [
          "gateway_local_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "gateway_local_msgs_processed",
        "description": "Counter of messages processed by gateway local server",
        "type": "timeseries",
        "exprs": [
          "gateway_local_msgs_processed{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "gateway_local_queue_depth",
        "description": "The depth of the gateway's local message queue",
        "type": "timeseries",
        "exprs": [
          "gateway_local_queue_depth{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "gateway_remote_msgs_received",
        "description": "Counter of messages received by gateway remote server",
        "type": "timeseries",
        "exprs": [
          "gateway_remote_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "gateway_remote_valid_msgs_received",
        "description": "Counter of valid messages received by gateway remote server",
        "type": "timeseries",
        "exprs": [
          "gateway_remote_valid_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "gateway_remote_msgs_processed",
        "description": "Counter of messages processed by gateway remote server",
        "type": "timeseries",
        "exprs": [
          "gateway_remote_msgs_processed{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "gateway_remote_number_of_connections",
        "description": "Number of connections to gateway remote server",
        "type": "timeseries",
        "exprs": [
          "gateway_remote_number_of_connections{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "gateway_remote_client_send_attempts",
        "description": "Required number of remote connection attempts made by a gateway remote client",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(gateway_remote_client_send_attempts_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(gateway_remote_client_send_attempts_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "gateway_labeled_processing_times_secs add_transaction",
        "description": "Request processing times of the gateway, per label (secs): add_transaction",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(gateway_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(gateway_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "gateway_labeled_queueing_times_secs add_transaction",
        "description": "Request queueing times of the gateway, per label (secs): add_transaction",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(gateway_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(gateway_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "gateway_labeled_local_response_times_secs add_transaction",
        "description": "Request local response times of the gateway, per label (secs): add_transaction",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(gateway_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(gateway_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "gateway_labeled_remote_response_times_secs add_transaction",
        "description": "Request remote response times of the gateway, per label (secs): add_transaction",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(gateway_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(gateway_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])))"
        ],
        "extra_params": {}
      }
    ],
    "Mempool Infra": [
      {
        "title": "mempool_local_msgs_received",
        "description": "Counter of messages received by mempool local server",
        "type": "timeseries",
        "exprs": [
          "mempool_local_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_local_msgs_processed",
        "description": "Counter of messages processed by mempool local server",
        "type": "timeseries",
        "exprs": [
          "mempool_local_msgs_processed{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_local_queue_depth",
        "description": "The depth of the mempool's local message queue",
        "type": "timeseries",
        "exprs": [
          "mempool_local_queue_depth{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_remote_msgs_received",
        "description": "Counter of messages received by mempool remote server",
        "type": "timeseries",
        "exprs": [
          "mempool_remote_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_remote_valid_msgs_received",
        "description": "Counter of valid messages received by mempool remote server",
        "type": "timeseries",
        "exprs": [
          "mempool_remote_valid_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_remote_msgs_processed",
        "description": "Counter of messages processed by mempool remote server",
        "type": "timeseries",
        "exprs": [
          "mempool_remote_msgs_processed{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_remote_number_of_connections",
        "description": "Number of connections to mempool remote server",
        "type": "timeseries",
        "exprs": [
          "mempool_remote_number_of_connections{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_remote_client_send_attempts",
        "description": "Required number of remote connection attempts made by a mempool remote client",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(mempool_remote_client_send_attempts_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(mempool_remote_client_send_attempts_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_labeled_processing_times_secs account_tx_in_pool_or_recent_block",
        "description": "Request processing times of the mempool, per label (secs): account_tx_in_pool_or_recent_block",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(mempool_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"account_tx_in_pool_or_recent_block\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(mempool_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"account_tx_in_pool_or_recent_block\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_labeled_processing_times_secs add_transaction",
        "description": "Request processing times of the mempool, per label (secs): add_transaction",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(mempool_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(mempool_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_labeled_processing_times_secs commit_block",
        "description": "Request processing times of the mempool, per label (secs): commit_block",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(mempool_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"commit_block\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(mempool_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"commit_block\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_labeled_processing_times_secs get_mempool_snapshot",
        "description": "Request processing times of the mempool, per label (secs): get_mempool_snapshot",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(mempool_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_mempool_snapshot\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(mempool_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_mempool_snapshot\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_labeled_processing_times_secs get_transactions",
        "description": "Request processing times of the mempool, per label (secs): get_transactions",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(mempool_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_transactions\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(mempool_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_transactions\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_labeled_processing_times_secs update_gas_price",
        "description": "Request processing times of the mempool, per label (secs): update_gas_price",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(mempool_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"update_gas_price\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(mempool_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"update_gas_price\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_labeled_queueing_times_secs account_tx_in_pool_or_recent_block",
        "description": "Request queueing times of the mempool, per label (secs): account_tx_in_pool_or_recent_block",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(mempool_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"account_tx_in_pool_or_recent_block\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(mempool_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"account_tx_in_pool_or_recent_block\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_labeled_queueing_times_secs add_transaction",
        "description": "Request queueing times of the mempool, per label (secs): add_transaction",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(mempool_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(mempool_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_labeled_queueing_times_secs commit_block",
        "description": "Request queueing times of the mempool, per label (secs): commit_block",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(mempool_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"commit_block\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(mempool_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"commit_block\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_labeled_queueing_times_secs get_mempool_snapshot",
        "description": "Request queueing times of the mempool, per label (secs): get_mempool_snapshot",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(mempool_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_mempool_snapshot\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(mempool_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_mempool_snapshot\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_labeled_queueing_times_secs get_transactions",
        "description": "Request queueing times of the mempool, per label (secs): get_transactions",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(mempool_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_transactions\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(mempool_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_transactions\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_labeled_queueing_times_secs update_gas_price",
        "description": "Request queueing times of the mempool, per label (secs): update_gas_price",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(mempool_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"update_gas_price\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(mempool_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"update_gas_price\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_labeled_local_response_times_secs account_tx_in_pool_or_recent_block",
        "description": "Request local response times of the mempool, per label (secs): account_tx_in_pool_or_recent_block",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(mempool_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"account_tx_in_pool_or_recent_block\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(mempool_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"account_tx_in_pool_or_recent_block\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_labeled_local_response_times_secs add_transaction",
        "description": "Request local response times of the mempool, per label (secs): add_transaction",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(mempool_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(mempool_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_labeled_local_response_times_secs commit_block",
        "description": "Request local response times of the mempool, per label (secs): commit_block",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(mempool_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"commit_block\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(mempool_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"commit_block\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_labeled_local_response_times_secs get_mempool_snapshot",
        "description": "Request local response times of the mempool, per label (secs): get_mempool_snapshot",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(mempool_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_mempool_snapshot\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(mempool_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_mempool_snapshot\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_labeled_local_response_times_secs get_transactions",
        "description": "Request local response times of the mempool, per label (secs): get_transactions",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(mempool_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_transactions\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(mempool_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_transactions\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_labeled_local_response_times_secs update_gas_price",
        "description": "Request local response times of the mempool, per label (secs): update_gas_price",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(mempool_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"update_gas_price\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(mempool_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"update_gas_price\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_labeled_remote_response_times_secs account_tx_in_pool_or_recent_block",
        "description": "Request remote response times of the mempool, per label (secs): account_tx_in_pool_or_recent_block",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(mempool_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"account_tx_in_pool_or_recent_block\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(mempool_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"account_tx_in_pool_or_recent_block\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_labeled_remote_response_times_secs add_transaction",
        "description": "Request remote response times of the mempool, per label (secs): add_transaction",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(mempool_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(mempool_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_labeled_remote_response_times_secs commit_block",
        "description": "Request remote response times of the mempool, per label (secs): commit_block",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(mempool_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"commit_block\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(mempool_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"commit_block\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_labeled_remote_response_times_secs get_mempool_snapshot",
        "description": "Request remote response times of the mempool, per label (secs): get_mempool_snapshot",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(mempool_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_mempool_snapshot\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(mempool_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_mempool_snapshot\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_labeled_remote_response_times_secs get_transactions",
        "description": "Request remote response times of the mempool, per label (secs): get_transactions",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(mempool_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_transactions\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(mempool_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_transactions\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_labeled_remote_response_times_secs update_gas_price",
        "description": "Request remote response times of the mempool, per label (secs): update_gas_price",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(mempool_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"update_gas_price\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(mempool_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"update_gas_price\"}[5m])))"
        ],
        "extra_params": {}
      }
    ],
    "MempoolP2pInfra": [
      {
        "title": "mempool_p2p_propagator_local_msgs_received",
        "description": "Counter of messages received by mempool p2p local server",
        "type": "timeseries",
        "exprs": [
          "mempool_p2p_propagator_local_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_p2p_propagator_local_msgs_processed",
        "description": "Counter of messages processed by mempool p2p local server",
        "type": "timeseries",
        "exprs": [
          "mempool_p2p_propagator_local_msgs_processed{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_p2p_propagator_local_queue_depth",
        "description": "The depth of the mempool p2p's local message queue",
        "type": "timeseries",
        "exprs": [
          "mempool_p2p_propagator_local_queue_depth{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_p2p_propagator_remote_msgs_received",
        "description": "Counter of messages received by mempool p2p remote server",
        "type": "timeseries",
        "exprs": [
          "mempool_p2p_propagator_remote_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_p2p_propagator_remote_valid_msgs_received",
        "description": "Counter of valid messages received by mempool p2p remote server",
        "type": "timeseries",
        "exprs": [
          "mempool_p2p_propagator_remote_valid_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_p2p_propagator_remote_msgs_processed",
        "description": "Counter of messages processed by mempool p2p remote server",
        "type": "timeseries",
        "exprs": [
          "mempool_p2p_propagator_remote_msgs_processed{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_p2p_propagator_remote_number_of_connections",
        "description": "Number of connections to mempool p2p remote server",
        "type": "timeseries",
        "exprs": [
          "mempool_p2p_propagator_remote_number_of_connections{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_p2p_propagator_remote_client_send_attempts",
        "description": "Required number of remote connection attempts made by a mempool p2p remote client",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(mempool_p2p_propagator_remote_client_send_attempts_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(mempool_p2p_propagator_remote_client_send_attempts_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_p2p_labeled_processing_times_secs add_transaction",
        "description": "Request processing times of the mempool p2p, per label (secs): add_transaction",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(mempool_p2p_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(mempool_p2p_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_p2p_labeled_processing_times_secs broadcast_queued_transactions",
        "description": "Request processing times of the mempool p2p, per label (secs): broadcast_queued_transactions",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(mempool_p2p_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"broadcast_queued_transactions\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(mempool_p2p_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"broadcast_queued_transactions\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_p2p_labeled_processing_times_secs continue_propagation",
        "description": "Request processing times of the mempool p2p, per label (secs): continue_propagation",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(mempool_p2p_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"continue_propagation\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(mempool_p2p_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"continue_propagation\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_p2p_labeled_queueing_times_secs add_transaction",
        "description": "Request queueing times of the mempool p2p, per label (secs): add_transaction",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(mempool_p2p_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(mempool_p2p_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_p2p_labeled_queueing_times_secs broadcast_queued_transactions",
        "description": "Request queueing times of the mempool p2p, per label (secs): broadcast_queued_transactions",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(mempool_p2p_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"broadcast_queued_transactions\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(mempool_p2p_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"broadcast_queued_transactions\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_p2p_labeled_queueing_times_secs continue_propagation",
        "description": "Request queueing times of the mempool p2p, per label (secs): continue_propagation",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(mempool_p2p_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"continue_propagation\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(mempool_p2p_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"continue_propagation\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_p2p_labeled_local_response_times_secs add_transaction",
        "description": "Request local response times of the mempool p2p, per label (secs): add_transaction",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(mempool_p2p_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(mempool_p2p_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_p2p_labeled_local_response_times_secs broadcast_queued_transactions",
        "description": "Request local response times of the mempool p2p, per label (secs): broadcast_queued_transactions",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(mempool_p2p_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"broadcast_queued_transactions\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(mempool_p2p_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"broadcast_queued_transactions\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_p2p_labeled_local_response_times_secs continue_propagation",
        "description": "Request local response times of the mempool p2p, per label (secs): continue_propagation",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(mempool_p2p_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"continue_propagation\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(mempool_p2p_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"continue_propagation\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_p2p_labeled_remote_response_times_secs add_transaction",
        "description": "Request remote response times of the mempool p2p, per label (secs): add_transaction",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(mempool_p2p_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(mempool_p2p_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_p2p_labeled_remote_response_times_secs broadcast_queued_transactions",
        "description": "Request remote response times of the mempool p2p, per label (secs): broadcast_queued_transactions",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(mempool_p2p_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"broadcast_queued_transactions\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(mempool_p2p_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"broadcast_queued_transactions\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "mempool_p2p_labeled_remote_response_times_secs continue_propagation",
        "description": "Request remote response times of the mempool p2p, per label (secs): continue_propagation",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(mempool_p2p_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"continue_propagation\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(mempool_p2p_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"continue_propagation\"}[5m])))"
        ],
        "extra_params": {}
      }
    ],
    "L1 Provider Infra": [
      {
        "title": "l1_provider_local_msgs_received",
        "description": "Counter of messages received by L1 provider local server",
        "type": "timeseries",
        "exprs": [
          "l1_provider_local_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_provider_local_msgs_processed",
        "description": "Counter of messages processed by L1 provider local server",
        "type": "timeseries",
        "exprs": [
          "l1_provider_local_msgs_processed{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_provider_local_queue_depth",
        "description": "The depth of the L1 provider's local message queue",
        "type": "timeseries",
        "exprs": [
          "l1_provider_local_queue_depth{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_provider_remote_msgs_received",
        "description": "Counter of messages received by L1 provider remote server",
        "type": "timeseries",
        "exprs": [
          "l1_provider_remote_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_provider_remote_valid_msgs_received",
        "description": "Counter of valid messages received by L1 provider remote server",
        "type": "timeseries",
        "exprs": [
          "l1_provider_remote_valid_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_provider_remote_msgs_processed",
        "description": "Counter of messages processed by L1 provider remote server",
        "type": "timeseries",
        "exprs": [
          "l1_provider_remote_msgs_processed{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_provider_remote_number_of_connections",
        "description": "Number of connections to L1 provider remote server",
        "type": "timeseries",
        "exprs": [
          "l1_provider_remote_number_of_connections{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_provider_remote_client_send_attempts",
        "description": "Required number of remote connection attempts made by a L1 provider remote client",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(l1_provider_remote_client_send_attempts_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(l1_provider_remote_client_send_attempts_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_provider_labeled_processing_times_secs add_events",
        "description": "Request processing times of the L1 provider, per label (secs): add_events",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(l1_provider_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_events\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(l1_provider_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_events\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_provider_labeled_processing_times_secs commit_block",
        "description": "Request processing times of the L1 provider, per label (secs): commit_block",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(l1_provider_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"commit_block\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(l1_provider_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"commit_block\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_provider_labeled_processing_times_secs get_l1_provider_snapshot",
        "description": "Request processing times of the L1 provider, per label (secs): get_l1_provider_snapshot",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(l1_provider_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_l1_provider_snapshot\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(l1_provider_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_l1_provider_snapshot\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_provider_labeled_processing_times_secs get_transactions",
        "description": "Request processing times of the L1 provider, per label (secs): get_transactions",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(l1_provider_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_transactions\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(l1_provider_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_transactions\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_provider_labeled_processing_times_secs initialize",
        "description": "Request processing times of the L1 provider, per label (secs): initialize",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(l1_provider_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"initialize\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(l1_provider_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"initialize\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_provider_labeled_processing_times_secs start_block",
        "description": "Request processing times of the L1 provider, per label (secs): start_block",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(l1_provider_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"start_block\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(l1_provider_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"start_block\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_provider_labeled_processing_times_secs validate",
        "description": "Request processing times of the L1 provider, per label (secs): validate",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(l1_provider_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"validate\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(l1_provider_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"validate\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_provider_labeled_queueing_times_secs add_events",
        "description": "Request queueing times of the L1 provider, per label (secs): add_events",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(l1_provider_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_events\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(l1_provider_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_events\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_provider_labeled_queueing_times_secs commit_block",
        "description": "Request queueing times of the L1 provider, per label (secs): commit_block",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(l1_provider_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"commit_block\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(l1_provider_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"commit_block\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_provider_labeled_queueing_times_secs get_l1_provider_snapshot",
        "description": "Request queueing times of the L1 provider, per label (secs): get_l1_provider_snapshot",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(l1_provider_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_l1_provider_snapshot\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(l1_provider_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_l1_provider_snapshot\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_provider_labeled_queueing_times_secs get_transactions",
        "description": "Request queueing times of the L1 provider, per label (secs): get_transactions",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(l1_provider_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_transactions\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(l1_provider_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_transactions\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_provider_labeled_queueing_times_secs initialize",
        "description": "Request queueing times of the L1 provider, per label (secs): initialize",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(l1_provider_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"initialize\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(l1_provider_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"initialize\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_provider_labeled_queueing_times_secs start_block",
        "description": "Request queueing times of the L1 provider, per label (secs): start_block",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(l1_provider_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"start_block\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(l1_provider_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"start_block\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_provider_labeled_queueing_times_secs validate",
        "description": "Request queueing times of the L1 provider, per label (secs): validate",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(l1_provider_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"validate\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(l1_provider_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"validate\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_provider_labeled_local_response_times_secs add_events",
        "description": "Request local response times of the L1 provider, per label (secs): add_events",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(l1_provider_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_events\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(l1_provider_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_events\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_provider_labeled_local_response_times_secs commit_block",
        "description": "Request local response times of the L1 provider, per label (secs): commit_block",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(l1_provider_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"commit_block\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(l1_provider_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"commit_block\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_provider_labeled_local_response_times_secs get_l1_provider_snapshot",
        "description": "Request local response times of the L1 provider, per label (secs): get_l1_provider_snapshot",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(l1_provider_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_l1_provider_snapshot\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(l1_provider_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_l1_provider_snapshot\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_provider_labeled_local_response_times_secs get_transactions",
        "description": "Request local response times of the L1 provider, per label (secs): get_transactions",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(l1_provider_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_transactions\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(l1_provider_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_transactions\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_provider_labeled_local_response_times_secs initialize",
        "description": "Request local response times of the L1 provider, per label (secs): initialize",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(l1_provider_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"initialize\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(l1_provider_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"initialize\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_provider_labeled_local_response_times_secs start_block",
        "description": "Request local response times of the L1 provider, per label (secs): start_block",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(l1_provider_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"start_block\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(l1_provider_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"start_block\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_provider_labeled_local_response_times_secs validate",
        "description": "Request local response times of the L1 provider, per label (secs): validate",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(l1_provider_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"validate\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(l1_provider_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"validate\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_provider_labeled_remote_response_times_secs add_events",
        "description": "Request remote response times of the L1 provider, per label (secs): add_events",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(l1_provider_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_events\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(l1_provider_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_events\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_provider_labeled_remote_response_times_secs commit_block",
        "description": "Request remote response times of the L1 provider, per label (secs): commit_block",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(l1_provider_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"commit_block\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(l1_provider_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"commit_block\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_provider_labeled_remote_response_times_secs get_l1_provider_snapshot",
        "description": "Request remote response times of the L1 provider, per label (secs): get_l1_provider_snapshot",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(l1_provider_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_l1_provider_snapshot\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(l1_provider_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_l1_provider_snapshot\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_provider_labeled_remote_response_times_secs get_transactions",
        "description": "Request remote response times of the L1 provider, per label (secs): get_transactions",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(l1_provider_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_transactions\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(l1_provider_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_transactions\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_provider_labeled_remote_response_times_secs initialize",
        "description": "Request remote response times of the L1 provider, per label (secs): initialize",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(l1_provider_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"initialize\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(l1_provider_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"initialize\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_provider_labeled_remote_response_times_secs start_block",
        "description": "Request remote response times of the L1 provider, per label (secs): start_block",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(l1_provider_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"start_block\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(l1_provider_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"start_block\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_provider_labeled_remote_response_times_secs validate",
        "description": "Request remote response times of the L1 provider, per label (secs): validate",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(l1_provider_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"validate\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(l1_provider_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"validate\"}[5m])))"
        ],
        "extra_params": {}
      }
    ],
    "L1 Gas Price Infra": [
      {
        "title": "l1_gas_price_provider_local_msgs_received",
        "description": "Counter of messages received by L1 gas price provider local server",
        "type": "timeseries",
        "exprs": [
          "l1_gas_price_provider_local_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_gas_price_provider_local_msgs_processed",
        "description": "Counter of messages processed by L1 gas price provider local server",
        "type": "timeseries",
        "exprs": [
          "l1_gas_price_provider_local_msgs_processed{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_gas_price_provider_local_queue_depth",
        "description": "The depth of the L1 gas price provider's local message queue",
        "type": "timeseries",
        "exprs": [
          "l1_gas_price_provider_local_queue_depth{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_gas_price_provider_remote_msgs_received",
        "description": "Counter of messages received by L1 gas price provider remote server",
        "type": "timeseries",
        "exprs": [
          "l1_gas_price_provider_remote_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_gas_price_provider_remote_valid_msgs_received",
        "description": "Counter of valid messages received by L1 gas price provider remote server",
        "type": "timeseries",
        "exprs": [
          "l1_gas_price_provider_remote_valid_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_gas_price_provider_remote_msgs_processed",
        "description": "Counter of messages processed by L1 gas price provider remote server",
        "type": "timeseries",
        "exprs": [
          "l1_gas_price_provider_remote_msgs_processed{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_gas_price_provider_remote_number_of_connections",
        "description": "Number of connections to L1 gas price provider remote server",
        "type": "timeseries",
        "exprs": [
          "l1_gas_price_provider_remote_number_of_connections{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_gas_price_provider_remote_client_send_attempts",
        "description": "Required number of remote connection attempts made by a L1 gas price provider remote client",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(l1_gas_price_provider_remote_client_send_attempts_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(l1_gas_price_provider_remote_client_send_attempts_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_gas_price_labeled_processing_times_secs add_gas_price",
        "description": "Request processing times of the L1 gas price, per label (secs): add_gas_price",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(l1_gas_price_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_gas_price\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(l1_gas_price_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_gas_price\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_gas_price_labeled_processing_times_secs get_eth_to_fri_rate",
        "description": "Request processing times of the L1 gas price, per label (secs): get_eth_to_fri_rate",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(l1_gas_price_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_eth_to_fri_rate\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(l1_gas_price_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_eth_to_fri_rate\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_gas_price_labeled_processing_times_secs get_gas_price",
        "description": "Request processing times of the L1 gas price, per label (secs): get_gas_price",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(l1_gas_price_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_gas_price\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(l1_gas_price_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_gas_price\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_gas_price_labeled_processing_times_secs initialize",
        "description": "Request processing times of the L1 gas price, per label (secs): initialize",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(l1_gas_price_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"initialize\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(l1_gas_price_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"initialize\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_gas_price_labeled_queueing_times_secs add_gas_price",
        "description": "Request queueing times of the L1 gas price, per label (secs): add_gas_price",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(l1_gas_price_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_gas_price\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(l1_gas_price_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_gas_price\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_gas_price_labeled_queueing_times_secs get_eth_to_fri_rate",
        "description": "Request queueing times of the L1 gas price, per label (secs): get_eth_to_fri_rate",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(l1_gas_price_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_eth_to_fri_rate\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(l1_gas_price_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_eth_to_fri_rate\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_gas_price_labeled_queueing_times_secs get_gas_price",
        "description": "Request queueing times of the L1 gas price, per label (secs): get_gas_price",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(l1_gas_price_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_gas_price\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(l1_gas_price_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_gas_price\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_gas_price_labeled_queueing_times_secs initialize",
        "description": "Request queueing times of the L1 gas price, per label (secs): initialize",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(l1_gas_price_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"initialize\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(l1_gas_price_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"initialize\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_gas_price_labeled_local_response_times_secs add_gas_price",
        "description": "Request local response times of the L1 gas price, per label (secs): add_gas_price",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(l1_gas_price_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_gas_price\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(l1_gas_price_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_gas_price\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_gas_price_labeled_local_response_times_secs get_eth_to_fri_rate",
        "description": "Request local response times of the L1 gas price, per label (secs): get_eth_to_fri_rate",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(l1_gas_price_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_eth_to_fri_rate\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(l1_gas_price_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_eth_to_fri_rate\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_gas_price_labeled_local_response_times_secs get_gas_price",
        "description": "Request local response times of the L1 gas price, per label (secs): get_gas_price",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(l1_gas_price_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_gas_price\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(l1_gas_price_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_gas_price\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_gas_price_labeled_local_response_times_secs initialize",
        "description": "Request local response times of the L1 gas price, per label (secs): initialize",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(l1_gas_price_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"initialize\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(l1_gas_price_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"initialize\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_gas_price_labeled_remote_response_times_secs add_gas_price",
        "description": "Request remote response times of the L1 gas price, per label (secs): add_gas_price",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(l1_gas_price_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_gas_price\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(l1_gas_price_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_gas_price\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_gas_price_labeled_remote_response_times_secs get_eth_to_fri_rate",
        "description": "Request remote response times of the L1 gas price, per label (secs): get_eth_to_fri_rate",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(l1_gas_price_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_eth_to_fri_rate\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(l1_gas_price_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_eth_to_fri_rate\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_gas_price_labeled_remote_response_times_secs get_gas_price",
        "description": "Request remote response times of the L1 gas price, per label (secs): get_gas_price",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(l1_gas_price_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_gas_price\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(l1_gas_price_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_gas_price\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "l1_gas_price_labeled_remote_response_times_secs initialize",
        "description": "Request remote response times of the L1 gas price, per label (secs): initialize",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(l1_gas_price_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"initialize\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(l1_gas_price_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"initialize\"}[5m])))"
        ],
        "extra_params": {}
      }
    ],
    "Class Manager Infra": [
      {
        "title": "class_manager_local_msgs_received",
        "description": "Counter of messages received by class manager local server",
        "type": "timeseries",
        "exprs": [
          "class_manager_local_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "class_manager_local_msgs_processed",
        "description": "Counter of messages processed by class manager local server",
        "type": "timeseries",
        "exprs": [
          "class_manager_local_msgs_processed{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "class_manager_local_queue_depth",
        "description": "The depth of the class manager's local message queue",
        "type": "timeseries",
        "exprs": [
          "class_manager_local_queue_depth{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "class_manager_remote_msgs_received",
        "description": "Counter of messages received by class manager remote server",
        "type": "timeseries",
        "exprs": [
          "class_manager_remote_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "class_manager_remote_valid_msgs_received",
        "description": "Counter of valid messages received by class manager remote server",
        "type": "timeseries",
        "exprs": [
          "class_manager_remote_valid_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "class_manager_remote_msgs_processed",
        "description": "Counter of messages processed by class manager remote server",
        "type": "timeseries",
        "exprs": [
          "class_manager_remote_msgs_processed{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "class_manager_remote_number_of_connections",
        "description": "Number of connections to class manager remote server",
        "type": "timeseries",
        "exprs": [
          "class_manager_remote_number_of_connections{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "class_manager_remote_client_send_attempts",
        "description": "Required number of remote connection attempts made by a class manager remote client",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(class_manager_remote_client_send_attempts_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(class_manager_remote_client_send_attempts_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "class_manager_labeled_processing_times_secs add_class",
        "description": "Request processing times of the class manager, per label (secs): add_class",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(class_manager_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_class\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(class_manager_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_class\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "class_manager_labeled_processing_times_secs add_class_and_executable_unsafe",
        "description": "Request processing times of the class manager, per label (secs): add_class_and_executable_unsafe",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(class_manager_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_class_and_executable_unsafe\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(class_manager_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_class_and_executable_unsafe\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "class_manager_labeled_processing_times_secs add_deprecated_class",
        "description": "Request processing times of the class manager, per label (secs): add_deprecated_class",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(class_manager_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_deprecated_class\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(class_manager_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_deprecated_class\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "class_manager_labeled_processing_times_secs get_executable",
        "description": "Request processing times of the class manager, per label (secs): get_executable",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(class_manager_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_executable\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(class_manager_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_executable\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "class_manager_labeled_processing_times_secs get_sierra",
        "description": "Request processing times of the class manager, per label (secs): get_sierra",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(class_manager_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_sierra\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(class_manager_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_sierra\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "class_manager_labeled_queueing_times_secs add_class",
        "description": "Request queueing times of the class manager, per label (secs): add_class",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(class_manager_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_class\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(class_manager_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_class\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "class_manager_labeled_queueing_times_secs add_class_and_executable_unsafe",
        "description": "Request queueing times of the class manager, per label (secs): add_class_and_executable_unsafe",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(class_manager_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_class_and_executable_unsafe\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(class_manager_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_class_and_executable_unsafe\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "class_manager_labeled_queueing_times_secs add_deprecated_class",
        "description": "Request queueing times of the class manager, per label (secs): add_deprecated_class",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(class_manager_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_deprecated_class\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(class_manager_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_deprecated_class\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "class_manager_labeled_queueing_times_secs get_executable",
        "description": "Request queueing times of the class manager, per label (secs): get_executable",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(class_manager_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_executable\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(class_manager_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_executable\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "class_manager_labeled_queueing_times_secs get_sierra",
        "description": "Request queueing times of the class manager, per label (secs): get_sierra",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(class_manager_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_sierra\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(class_manager_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_sierra\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "class_manager_labeled_local_response_times_secs add_class",
        "description": "Request local response times of the class manager, per label (secs): add_class",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(class_manager_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_class\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(class_manager_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_class\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "class_manager_labeled_local_response_times_secs add_class_and_executable_unsafe",
        "description": "Request local response times of the class manager, per label (secs): add_class_and_executable_unsafe",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(class_manager_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_class_and_executable_unsafe\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(class_manager_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_class_and_executable_unsafe\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "class_manager_labeled_local_response_times_secs add_deprecated_class",
        "description": "Request local response times of the class manager, per label (secs): add_deprecated_class",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(class_manager_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_deprecated_class\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(class_manager_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_deprecated_class\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "class_manager_labeled_local_response_times_secs get_executable",
        "description": "Request local response times of the class manager, per label (secs): get_executable",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(class_manager_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_executable\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(class_manager_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_executable\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "class_manager_labeled_local_response_times_secs get_sierra",
        "description": "Request local response times of the class manager, per label (secs): get_sierra",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(class_manager_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_sierra\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(class_manager_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_sierra\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "class_manager_labeled_remote_response_times_secs add_class",
        "description": "Request remote response times of the class manager, per label (secs): add_class",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(class_manager_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_class\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(class_manager_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_class\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "class_manager_labeled_remote_response_times_secs add_class_and_executable_unsafe",
        "description": "Request remote response times of the class manager, per label (secs): add_class_and_executable_unsafe",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(class_manager_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_class_and_executable_unsafe\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(class_manager_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_class_and_executable_unsafe\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "class_manager_labeled_remote_response_times_secs add_deprecated_class",
        "description": "Request remote response times of the class manager, per label (secs): add_deprecated_class",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(class_manager_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_deprecated_class\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(class_manager_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_deprecated_class\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "class_manager_labeled_remote_response_times_secs get_executable",
        "description": "Request remote response times of the class manager, per label (secs): get_executable",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(class_manager_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_executable\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(class_manager_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_executable\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "class_manager_labeled_remote_response_times_secs get_sierra",
        "description": "Request remote response times of the class manager, per label (secs): get_sierra",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(class_manager_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_sierra\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(class_manager_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_sierra\"}[5m])))"
        ],
        "extra_params": {}
      }
    ],
    "SierraCompilerInfra": [
      {
        "title": "sierra_compiler_local_msgs_received",
        "description": "Counter of messages received by sierra compiler local server",
        "type": "timeseries",
        "exprs": [
          "sierra_compiler_local_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "sierra_compiler_local_msgs_processed",
        "description": "Counter of messages processed by sierra compiler local server",
        "type": "timeseries",
        "exprs": [
          "sierra_compiler_local_msgs_processed{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "sierra_compiler_local_queue_depth",
        "description": "The depth of the sierra compiler's local message queue",
        "type": "timeseries",
        "exprs": [
          "sierra_compiler_local_queue_depth{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "sierra_compiler_remote_msgs_received",
        "description": "Counter of messages received by sierra compiler remote server",
        "type": "timeseries",
        "exprs": [
          "sierra_compiler_remote_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "sierra_compiler_remote_valid_msgs_received",
        "description": "Counter of valid messages received by sierra compiler remote server",
        "type": "timeseries",
        "exprs": [
          "sierra_compiler_remote_valid_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "sierra_compiler_remote_msgs_processed",
        "description": "Counter of messages processed by sierra compiler remote server",
        "type": "timeseries",
        "exprs": [
          "sierra_compiler_remote_msgs_processed{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "sierra_compiler_remote_number_of_connections",
        "description": "Number of connections to sierra compiler remote server",
        "type": "timeseries",
        "exprs": [
          "sierra_compiler_remote_number_of_connections{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
        ],
        "extra_params": {}
      },
      {
        "title": "sierra_compiler_remote_client_send_attempts",
        "description": "Required number of remote connection attempts made by a sierra compiler remote client",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(sierra_compiler_remote_client_send_attempts_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(sierra_compiler_remote_client_send_attempts_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "sierra_compiler_labeled_processing_times_secs compile",
        "description": "Request processing times of the sierra compiler, per label (secs): compile",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(sierra_compiler_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"compile\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(sierra_compiler_labeled_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"compile\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "sierra_compiler_labeled_queueing_times_secs compile",
        "description": "Request queueing times of the sierra compiler, per label (secs): compile",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(sierra_compiler_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"compile\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(sierra_compiler_labeled_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"compile\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "sierra_compiler_labeled_local_response_times_secs compile",
        "description": "Request local response times of the sierra compiler, per label (secs): compile",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(sierra_compiler_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"compile\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(sierra_compiler_labeled_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"compile\"}[5m])))"
        ],
        "extra_params": {}
      },
      {
        "title": "sierra_compiler_labeled_remote_response_times_secs compile",
        "description": "Request remote response times of the sierra compiler, per label (secs): compile",
        "type": "timeseries",
        "exprs": [
          "histogram_quantile(0.50, sum by (le) (rate(sierra_compiler_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"compile\"}[5m])))",
          "histogram_quantile(0.95, sum by (le) (rate(sierra_compiler_labeled_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"compile\"}[5m])))"
        ],
        "extra_params": {}
      }
    ]
  }
}

{
  "Sequencer Node Dashboard": {
    "Overview": {
      "panels": [
        {
          "title": "Consensus Round",
          "description": "The round the node is currently working on",
          "type": "timeseries",
          "exprs": [
            "consensus_round{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {
            "log_query": "\"START_ROUND\" OR \"PROPOSAL_FAILED\" OR textPayload=~\"DECISION_REACHED\"",
            "log_comment": "-- \"START_HEIGHT:\" OR \"START_ROUND\" OR textPayload=~\"DECISION_REACHED\" OR \"PROPOSAL_FAILED\" OR \"Proposal succeeded\" OR \"Applying Timeout\" OR \"Accepting\" OR \"Broadcasting\""
          }
        },
        {
          "title": "Write Blob Failure by Reason",
          "description": "The number of failed blob writes to Cende (10m window)",
          "type": "timeseries",
          "exprs": [
            "sum by (cende_write_failure_reason) (increase(cende_write_blob_failure{cluster=~\"$cluster\", namespace=~\"$namespace\"}[10m]))"
          ],
          "extra_params": {
            "log_query": "\"CENDE_FAILURE\""
          }
        },
        {
          "title": "HTTP Server Transactions Received Rate (TPS)",
          "description": "The rate of transactions received by the HTTP Server (1m window)",
          "type": "timeseries",
          "exprs": [
            "rate(http_server_added_transactions_total{cluster=~\"$cluster\", namespace=~\"$namespace\"}[1m])"
          ],
          "extra_params": {}
        },
        {
          "title": "Batched Transactions Rate (TPS)",
          "description": "The rate of transactions batched by the Batcher (1m window)",
          "type": "timeseries",
          "exprs": [
            "rate(batcher_batched_transactions{cluster=~\"$cluster\", namespace=~\"$namespace\"}[1m])"
          ],
          "extra_params": {}
        },
        {
          "title": "Sync Diff From Central",
          "description": "The number of blocks that were not fully synced yet",
          "type": "timeseries",
          "exprs": [
            "apollo_central_sync_central_block_marker{cluster=~\"$cluster\", namespace=~\"$namespace\"} - apollo_state_sync_class_manager_marker{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "Transaction Failure Rate by Type",
          "description": "The rate of failed transactions vs received transactions by type (over the selected time range)",
          "type": "stat",
          "exprs": [
            "(sum by (tx_type) (increase(gateway_transactions_failed{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__range])) / sum by (tx_type) (increase(gateway_transactions_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__range])))"
          ],
          "extra_params": {
            "unit": "percentunit"
          }
        }
      ],
      "collapsed": false
    },
    "Consensus": {
      "panels": [
        {
          "title": "Consensus Height",
          "description": "The block height the node is currently working on",
          "type": "stat",
          "exprs": [
            "consensus_block_number{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {
            "log_query": "\"START_HEIGHT: running consensus for height\" OR \"Start building proposal\" OR \"Start validating proposal\"",
            "log_comment": "-- \"START_HEIGHT:\" OR \"START_ROUND\" OR textPayload=~\"DECISION_REACHED\" OR \"PROPOSAL_FAILED\" OR \"Proposal succeeded\" OR \"Applying Timeout\" OR \"Accepting\" OR \"Broadcasting\""
          }
        },
        {
          "title": "Consensus Round",
          "description": "The round the node is currently working on",
          "type": "timeseries",
          "exprs": [
            "consensus_round{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {
            "log_query": "\"START_ROUND\" OR \"PROPOSAL_FAILED\" OR textPayload=~\"DECISION_REACHED\"",
            "log_comment": "-- \"START_HEIGHT:\" OR \"START_ROUND\" OR textPayload=~\"DECISION_REACHED\" OR \"PROPOSAL_FAILED\" OR \"Proposal succeeded\" OR \"Applying Timeout\" OR \"Accepting\" OR \"Broadcasting\""
          }
        },
        {
          "title": "Consensus Height Diff From Sync",
          "description": "The difference between the consensus height and the sync height",
          "type": "timeseries",
          "exprs": [
            "(consensus_block_number{cluster=~\"$cluster\", namespace=~\"$namespace\"} - apollo_state_sync_class_manager_marker{cluster=~\"$cluster\", namespace=~\"$namespace\"})"
          ],
          "extra_params": {}
        },
        {
          "title": "Average Block Time",
          "description": "Average block time (10m window)",
          "type": "timeseries",
          "exprs": [
            "1 / rate(consensus_block_number{cluster=~\"$cluster\", namespace=~\"$namespace\"}[10m])"
          ],
          "extra_params": {
            "unit": "s"
          }
        },
        {
          "title": "Decisions Reached By Consensus",
          "description": "The number of decisions reached by way of consensus (10m window)",
          "type": "timeseries",
          "exprs": [
            "increase(consensus_decisions_reached_by_consensus{cluster=~\"$cluster\", namespace=~\"$namespace\"}[10m])"
          ],
          "extra_params": {
            "log_query": "\"DECISION_REACHED: Decision reached for round\"",
            "log_comment": "-- \"START_HEIGHT:\" OR \"START_ROUND\" OR textPayload=~\"DECISION_REACHED\" OR \"PROPOSAL_FAILED\" OR \"Proposal succeeded\" OR \"Applying Timeout\" OR \"Accepting\" OR \"Broadcasting\""
          }
        },
        {
          "title": "Decisions Reached By Sync",
          "description": "The number of decisions reached by way of sync (10m window)",
          "type": "timeseries",
          "exprs": [
            "increase(consensus_decisions_reached_by_sync{cluster=~\"$cluster\", namespace=~\"$namespace\"}[10m])"
          ],
          "extra_params": {
            "log_query": "\"Decision learned via sync protocol.\"",
            "log_comment": "-- \"START_HEIGHT:\" OR \"START_ROUND\" OR textPayload=~\"DECISION_REACHED\" OR \"PROPOSAL_FAILED\" OR \"Proposal succeeded\" OR \"Applying Timeout\" OR \"Accepting\" OR \"Broadcasting\""
          }
        },
        {
          "title": "Proposal Build: Number of Proposals Started",
          "description": "The number of proposals that started building (10m window)",
          "type": "timeseries",
          "exprs": [
            "increase(consensus_build_proposal_total{cluster=~\"$cluster\", namespace=~\"$namespace\"}[10m])"
          ],
          "extra_params": {}
        },
        {
          "title": "Proposal Build: Number of Proposals Failed",
          "description": "The number of proposals that failed to be built (10m window)",
          "type": "timeseries",
          "exprs": [
            "increase(consensus_build_proposal_failed{cluster=~\"$cluster\", namespace=~\"$namespace\"}[10m])"
          ],
          "extra_params": {}
        },
        {
          "title": "Proposal Build: Proposal Failure by Reason",
          "description": "The number of build proposal failures (over the selected time range)",
          "type": "stat",
          "exprs": [
            "sum by (build_proposal_failure_reason) (increase(consensus_build_proposal_failure{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__range])) > 0"
          ],
          "extra_params": {
            "log_query": "\"PROPOSAL_FAILED: Proposal failed as proposer\"",
            "log_comment": "-- \"START_HEIGHT:\" OR \"START_ROUND\" OR textPayload=~\"DECISION_REACHED\" OR \"PROPOSAL_FAILED\" OR \"Proposal succeeded\" OR \"Applying Timeout\" OR \"Accepting\" OR \"Broadcasting\""
          }
        },
        {
          "title": "Proposal Validation: Number of Received Proposals",
          "description": "The number of proposals received from the network (10m window)",
          "type": "timeseries",
          "exprs": [
            "increase(consensus_proposals_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}[10m])"
          ],
          "extra_params": {}
        },
        {
          "title": "Proposal Validation: Number of Validated Proposals",
          "description": "The number of proposals received and validated successfully (10m window)",
          "type": "timeseries",
          "exprs": [
            "increase(consensus_proposals_validated{cluster=~\"$cluster\", namespace=~\"$namespace\"}[10m])"
          ],
          "extra_params": {
            "log_query": "\"Validated proposal.\" OR \"PROPOSAL_FAILED\"",
            "log_comment": "-- \"START_HEIGHT:\" OR \"START_ROUND\" OR textPayload=~\"DECISION_REACHED\" OR \"PROPOSAL_FAILED\" OR \"Proposal succeeded\" OR \"Applying Timeout\" OR \"Accepting\" OR \"Broadcasting\""
          }
        },
        {
          "title": "Proposal Validation: Number of Invalid Proposals",
          "description": "The number of proposals received and failed validation (10m window)",
          "type": "timeseries",
          "exprs": [
            "increase(consensus_proposals_invalid{cluster=~\"$cluster\", namespace=~\"$namespace\"}[10m])"
          ],
          "extra_params": {
            "log_query": "\"Validated proposal.\" OR \"PROPOSAL_FAILED\"",
            "log_comment": "-- \"START_HEIGHT:\" OR \"START_ROUND\" OR textPayload=~\"DECISION_REACHED\" OR \"PROPOSAL_FAILED\" OR \"Proposal succeeded\" OR \"Applying Timeout\" OR \"Accepting\" OR \"Broadcasting\""
          }
        },
        {
          "title": "Proposal Validation: Proposal Failure by Reason",
          "description": "The number of validate proposal failures (over the selected time range)",
          "type": "stat",
          "exprs": [
            "sum by (validate_proposal_failure_reason) (increase(consensus_validate_proposal_failure{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__range])) > 0"
          ],
          "extra_params": {
            "log_query": "\"PROPOSAL_FAILED: Proposal failed as validator\"",
            "log_comment": "-- \"START_HEIGHT:\" OR \"START_ROUND\" OR textPayload=~\"DECISION_REACHED\" OR \"PROPOSAL_FAILED\" OR \"Proposal succeeded\" OR \"Applying Timeout\" OR \"Accepting\" OR \"Broadcasting\""
          }
        },
        {
          "title": "Consensus Timeouts By Type",
          "description": "The number of times consensus has timed out by type (10m window). \n- TimeoutPropose: as proposer, didn’t finish building in time; as validator, either didn’t receive the proposal or didn’t finish validation in time.\n- TimeoutPrevote: the node voted and received a quorum of prevotes, but not on the same value.\n- TimeoutPrecommit: didn’t finish validation but quorum of precommits received, or it finished but no decision reached.",
          "type": "timeseries",
          "exprs": [
            "sum by (timeout_type) (increase(consensus_timeouts{cluster=~\"$cluster\", namespace=~\"$namespace\"}[10m]))"
          ],
          "extra_params": {
            "log_query": "\"Applying Timeout\"",
            "log_comment": "-- \"START_HEIGHT:\" OR \"START_ROUND\" OR textPayload=~\"DECISION_REACHED\" OR \"PROPOSAL_FAILED\" OR \"Proposal succeeded\" OR \"Applying Timeout\" OR \"Accepting\" OR \"Broadcasting\""
          }
        },
        {
          "title": "L2 Gas Price (GFri)",
          "description": "L2 gas price in GFri calculated in an accepted proposal",
          "type": "timeseries",
          "exprs": [
            "consensus_l2_gas_price{cluster=~\"$cluster\", namespace=~\"$namespace\"} / 1e9"
          ],
          "extra_params": {}
        }
      ],
      "collapsed": true
    },
    "Cende": {
      "panels": [
        {
          "title": "Write Blob Success",
          "description": "The number of successful blob writes to Cende (10m window)",
          "type": "timeseries",
          "exprs": [
            "increase(cende_write_blob_success{cluster=~\"$cluster\", namespace=~\"$namespace\"}[10m])"
          ],
          "extra_params": {
            "log_query": "\"Blob for block number\" OR \"Writing blob to Aerospike\" OR \"transactions was written to Aerospike\""
          }
        },
        {
          "title": "Write Blob Failure by Reason",
          "description": "The number of failed blob writes to Cende (10m window)",
          "type": "timeseries",
          "exprs": [
            "sum by (cende_write_failure_reason) (increase(cende_write_blob_failure{cluster=~\"$cluster\", namespace=~\"$namespace\"}[10m]))"
          ],
          "extra_params": {
            "log_query": "\"CENDE_FAILURE\""
          }
        },
        {
          "title": "Write Blob Latency",
          "description": "The time it takes to write the blob to Cende",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50, sum by (le) (rate(cende_write_prev_height_blob_latency_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))",
            "histogram_quantile(0.95, sum by (le) (rate(cende_write_prev_height_blob_latency_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
          ],
          "extra_params": {
            "unit": "s"
          }
        },
        {
          "title": "Last Prepared Blob Block Number",
          "description": "The block number that is ready to be sent to Cende in the next height",
          "type": "stat",
          "exprs": [
            "cende_last_prepared_blob_block_number{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {
            "log_query": "\"Blob for block number\""
          }
        },
        {
          "title": "Write Preconfirmed Block Success",
          "description": "The number of successful writes to Cende for preconfirmed blocks (10m window). Each preconfirmed block may involve multiple writes.",
          "type": "timeseries",
          "exprs": [
            "increase(batcher_preconfirmed_block_written{cluster=~\"$cluster\", namespace=~\"$namespace\"}[10m])"
          ],
          "extra_params": {
            "log_query": "\"write_pre_confirmed_block request succeeded.\""
          }
        }
      ],
      "collapsed": true
    },
    "Batcher": {
      "panels": [
        {
          "title": "Storage Height",
          "description": "The height of the batcher's storage",
          "type": "stat",
          "exprs": [
            "batcher_storage_height{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "Batched Transactions Rate (TPS)",
          "description": "The rate of transactions batched by the Batcher (1m window)",
          "type": "timeseries",
          "exprs": [
            "rate(batcher_batched_transactions{cluster=~\"$cluster\", namespace=~\"$namespace\"}[1m])"
          ],
          "extra_params": {}
        },
        {
          "title": "Proposal Build: Deferred TXs",
          "description": "Number of txs started execution by the proposer but excluded from the block (10m window)",
          "type": "timeseries",
          "exprs": [
            "increase(batcher_proposer_deferred_txs{cluster=~\"$cluster\", namespace=~\"$namespace\"}[10m])"
          ],
          "extra_params": {
            "log_query": "\"Finished building block as proposer. Started executing\""
          }
        },
        {
          "title": "Proposal Validation: Wasted TXs",
          "description": "Number of txs executed by the validator but excluded from the block (10m window)",
          "type": "timeseries",
          "exprs": [
            "increase(batcher_validator_wasted_txs{cluster=~\"$cluster\", namespace=~\"$namespace\"}[10m])"
          ],
          "extra_params": {
            "log_query": "\"Finished building block as validator. Started executing\""
          }
        },
        {
          "title": "Rejected / Reverted TXs Ratio",
          "description": "Ratio of rejected / reverted transactions out of all processed txs (10m window)",
          "type": "timeseries",
          "exprs": [
            "increase(batcher_rejected_transactions{cluster=~\"$cluster\", namespace=~\"$namespace\"}[10m]) / (increase(batcher_rejected_transactions{cluster=~\"$cluster\", namespace=~\"$namespace\"}[10m]) + increase(batcher_reverted_transactions{cluster=~\"$cluster\", namespace=~\"$namespace\"}[10m]) + increase(batcher_batched_transactions{cluster=~\"$cluster\", namespace=~\"$namespace\"}[10m]))",
            "increase(batcher_reverted_transactions{cluster=~\"$cluster\", namespace=~\"$namespace\"}[10m]) / (increase(batcher_rejected_transactions{cluster=~\"$cluster\", namespace=~\"$namespace\"}[10m]) + increase(batcher_reverted_transactions{cluster=~\"$cluster\", namespace=~\"$namespace\"}[10m]) + increase(batcher_batched_transactions{cluster=~\"$cluster\", namespace=~\"$namespace\"}[10m]))"
          ],
          "extra_params": {
            "unit": "percentunit",
            "legends": [
              "Rejected",
              "Reverted"
            ]
          }
        },
        {
          "title": "Block Close Reasons",
          "description": "Number of blocks closed by reason (10m window)",
          "type": "timeseries",
          "exprs": [
            "sum by (block_close_reason) (increase(batcher_block_close_reason{cluster=~\"$cluster\", namespace=~\"$namespace\"}[10m]))"
          ],
          "extra_params": {
            "log_query": "\"Block builder deadline reached.\" OR \"Block is full.\""
          }
        },
        {
          "title": "Number of Chunks in Proposal",
          "description": "The number of transaction batches received in a valid proposal",
          "type": "timeseries",
          "exprs": [
            "consensus_num_batches_in_proposal{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "Number of Transactions in Proposal",
          "description": "The total number of individual transactions in a valid proposal received",
          "type": "timeseries",
          "exprs": [
            "consensus_num_txs_in_proposal{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        }
      ],
      "collapsed": true
    },
    "State Sync": {
      "panels": [
        {
          "title": "Central Block Marker",
          "description": "The first block that Central Starknet hasn't seen yet",
          "type": "stat",
          "exprs": [
            "apollo_central_sync_central_block_marker{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "State Sync Body Marker",
          "description": "The first block number for which the state sync component does not have a body",
          "type": "stat",
          "exprs": [
            "apollo_state_sync_body_marker{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "Sync Diff From Central",
          "description": "The number of blocks that were not fully synced yet",
          "type": "timeseries",
          "exprs": [
            "apollo_central_sync_central_block_marker{cluster=~\"$cluster\", namespace=~\"$namespace\"} - apollo_state_sync_class_manager_marker{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "Sync Block Age",
          "description": "The time from a block’s timestamp until its header is synced through the feeder-gateway.",
          "type": "timeseries",
          "exprs": [
            "apollo_state_sync_header_latency{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {
            "unit": "s"
          }
        }
      ],
      "collapsed": true
    },
    "Http Server": {
      "panels": [
        {
          "title": "HTTP Server Transactions Received Rate (TPS)",
          "description": "The rate of transactions received by the HTTP Server (1m window)",
          "type": "timeseries",
          "exprs": [
            "rate(http_server_added_transactions_total{cluster=~\"$cluster\", namespace=~\"$namespace\"}[1m])"
          ],
          "extra_params": {}
        },
        {
          "title": "Transactions Received",
          "description": "Number of transactions received (10m window)",
          "type": "timeseries",
          "exprs": [
            "increase(http_server_added_transactions_total{cluster=~\"$cluster\", namespace=~\"$namespace\"}[10m])"
          ],
          "extra_params": {
            "log_query": "\"ADD_TX_START\""
          }
        },
        {
          "title": "Transaction Success Rate",
          "description": "The ratio of transactions successfully added to the gateway (10m window)",
          "type": "timeseries",
          "exprs": [
            "increase(http_server_added_transactions_success{cluster=~\"$cluster\", namespace=~\"$namespace\"}[10m]) / (increase(http_server_added_transactions_success{cluster=~\"$cluster\", namespace=~\"$namespace\"}[10m]) + increase(http_server_added_transactions_failure{cluster=~\"$cluster\", namespace=~\"$namespace\"}[10m]))"
          ],
          "extra_params": {
            "unit": "percentunit",
            "log_query": "\"Recorded transaction\""
          }
        },
        {
          "title": "Transactions Failed to Be Added (By Reason)",
          "description": "Number of transactions that failed to be added by reason (10m window)",
          "type": "timeseries",
          "exprs": [
            "sum(increase(http_server_added_transactions_internal_error{cluster=~\"$cluster\", namespace=~\"$namespace\"}[10m]))",
            "sum(increase(http_server_added_transactions_deprecated_error{cluster=~\"$cluster\", namespace=~\"$namespace\"}[10m]))"
          ],
          "extra_params": {
            "legends": [
              "internal error",
              "deprecated error"
            ]
          }
        },
        {
          "title": "HTTP Server Add Tx Latency",
          "description": "The time it takes to add a transaction to the HTTP Server",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50, sum by (le) (rate(http_server_add_tx_latency_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))",
            "histogram_quantile(0.95, sum by (le) (rate(http_server_add_tx_latency_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
          ],
          "extra_params": {
            "unit": "s"
          }
        }
      ],
      "collapsed": true
    },
    "Gateway": {
      "panels": [
        {
          "title": "Gateway Transactions Received Rate (TPS)",
          "description": "The rate of transactions received by the gateway (1m window)",
          "type": "timeseries",
          "exprs": [
            "sum(rate(gateway_transactions_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}[1m])) or vector(0)"
          ],
          "extra_params": {}
        },
        {
          "title": "Add Tx Latency",
          "description": "The time it takes the gateway to add a transaction to the mempool",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50, sum by (le) (rate(gateway_add_tx_latency_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))",
            "histogram_quantile(0.95, sum by (le) (rate(gateway_add_tx_latency_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
          ],
          "extra_params": {
            "unit": "s"
          }
        },
        {
          "title": "Validate Tx Latency",
          "description": "The time it takes to validate a transaction",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50, sum by (le) (rate(gateway_validate_tx_latency_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))",
            "histogram_quantile(0.95, sum by (le) (rate(gateway_validate_tx_latency_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
          ],
          "extra_params": {
            "unit": "s"
          }
        },
        {
          "title": "Transactions Received by Source",
          "description": "The number of transactions received by source (over the selected time range)",
          "type": "stat",
          "exprs": [
            "sum  by (source) (increase(gateway_transactions_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__range])) "
          ],
          "extra_params": {
            "log_query": "\"Processing tx\" AND \"is_p2p=\""
          }
        },
        {
          "title": "Transactions Received by Type",
          "description": "The number of transactions received by type (over the selected time range)",
          "type": "stat",
          "exprs": [
            "sum  by (tx_type) (increase(gateway_transactions_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__range])) "
          ],
          "extra_params": {
            "log_query": "\"Processing tx\""
          }
        },
        {
          "title": "Transaction Failure Rate by Type",
          "description": "The rate of failed transactions vs received transactions by type (over the selected time range)",
          "type": "stat",
          "exprs": [
            "(sum by (tx_type) (increase(gateway_transactions_failed{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__range])) / sum by (tx_type) (increase(gateway_transactions_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__range])))"
          ],
          "extra_params": {
            "unit": "percentunit"
          }
        },
        {
          "title": "Transactions Failed by Reason",
          "description": "The number of transactions failed by reason (over the selected time range)",
          "type": "stat",
          "exprs": [
            "sum by (add_tx_failure_reason) (increase(gateway_add_tx_failure{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__range])) > 0"
          ],
          "extra_params": {}
        },
        {
          "title": "Transactions Sent to Mempool by Type",
          "description": "The number of transactions sent to mempool by type (over the selected time range)",
          "type": "stat",
          "exprs": [
            "sum  by (tx_type) (increase(gateway_transactions_sent_to_mempool{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__range]))"
          ],
          "extra_params": {}
        },
        {
          "title": "Gateway Validate Stateful Tx Storage Micros",
          "description": "Total time spent in storage operations in micros during stateful tx validation",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50, sum by (le) (rate(gateway_validate_stateful_tx_storage_micros_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))",
            "histogram_quantile(0.95, sum by (le) (rate(gateway_validate_stateful_tx_storage_micros_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
          ],
          "extra_params": {}
        },
        {
          "title": "Gateway Validate Stateful Tx Storage Operations",
          "description": "Total number of storage operations during stateful tx validation",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50, sum by (le) (rate(gateway_validate_stateful_tx_storage_operations_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))",
            "histogram_quantile(0.95, sum by (le) (rate(gateway_validate_stateful_tx_storage_operations_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
          ],
          "extra_params": {}
        }
      ],
      "collapsed": true
    },
    "Mempool": {
      "panels": [
        {
          "title": "Mempool Transactions Received Rate (TPS)",
          "description": "The rate of transactions received by the mempool (1m window)",
          "type": "timeseries",
          "exprs": [
            "sum(rate(mempool_transactions_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}[1m])) or vector(0)"
          ],
          "extra_params": {
            "log_query": "\"Adding transaction to mempool\""
          }
        },
        {
          "title": "Transactions Committed",
          "description": "Number of transactions committed to a block (10m window)",
          "type": "timeseries",
          "exprs": [
            "increase(mempool_txs_committed{cluster=~\"$cluster\", namespace=~\"$namespace\"}[10m])"
          ],
          "extra_params": {}
        },
        {
          "title": "Dropped Transactions by Reason",
          "description": "Number of transactions dropped from the mempool by reason (over the selected time range)",
          "type": "stat",
          "exprs": [
            "sum  by (drop_reason) (increase(mempool_transactions_dropped{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__range]))"
          ],
          "extra_params": {}
        },
        {
          "title": "Pool Size (Num TXs)",
          "description": "Number of all the transactions in the mempool",
          "type": "timeseries",
          "exprs": [
            "mempool_pool_size{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "Mempool Size (Data)",
          "description": "Size of the transactions in the mempool",
          "type": "timeseries",
          "exprs": [
            "mempool_total_size_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {
            "unit": "bytes"
          }
        },
        {
          "title": "Prioritized Transactions",
          "description": "Number of transactions prioritized for batching",
          "type": "timeseries",
          "exprs": [
            "mempool_priority_queue_size{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "Pending Transactions",
          "description": "Number of transactions eligible for batching but below the gas price threshold",
          "type": "timeseries",
          "exprs": [
            "mempool_pending_queue_size{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "Delayed Declare Transactions",
          "description": "Number of delayed declare transactions",
          "type": "timeseries",
          "exprs": [
            "mempool_delayed_declare_size{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "Transaction Time Spent in Mempool Until Batched",
          "description": "The time a transaction spends in the mempool until it is batched (5m window)",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50, sum by (le) (rate(mempool_transaction_time_spent_until_batched_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))",
            "histogram_quantile(0.95, sum by (le) (rate(mempool_transaction_time_spent_until_batched_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
          ],
          "extra_params": {
            "unit": "s"
          }
        },
        {
          "title": "Transaction Time Spent in Mempool Until Committed",
          "description": "The time a transaction spends in the mempool until it is committed (5m window)",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50, sum by (le) (rate(mempool_transaction_time_spent_until_committed_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))",
            "histogram_quantile(0.95, sum by (le) (rate(mempool_transaction_time_spent_until_committed_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
          ],
          "extra_params": {
            "unit": "s"
          }
        }
      ],
      "collapsed": true
    },
    "L1 Provider": {
      "panels": [
        {
          "title": "L1 Message Scraper Success Count",
          "description": "The increase in the number of times the L1 message scraper successfully scraped messages (10m window)",
          "type": "timeseries",
          "exprs": [
            "increase(l1_message_scraper_success_count{cluster=~\"$cluster\", namespace=~\"$namespace\"}[10m])"
          ],
          "extra_params": {}
        },
        {
          "title": "L1 Message Scraper Base Layer Error Count",
          "description": "The increase in the number of times the L1 message scraper encountered an error while scraping the base layer (10m window)",
          "type": "timeseries",
          "exprs": [
            "increase(l1_message_scraper_baselayer_error_count{cluster=~\"$cluster\", namespace=~\"$namespace\"}[10m])"
          ],
          "extra_params": {}
        },
        {
          "title": "L1 Message Scraper Reorg Detected",
          "description": "The increase in the number of times the L1 message scraper detected a reorg (12h window)",
          "type": "timeseries",
          "exprs": [
            "increase(l1_message_scraper_reorg_detected{cluster=~\"$cluster\", namespace=~\"$namespace\"}[12h])"
          ],
          "extra_params": {}
        }
      ],
      "collapsed": true
    },
    "ETH→STRK Rate & L1 Gas Price": {
      "panels": [
        {
          "title": "ETH→STRK Rate Query Success (binary)",
          "description": "Indicates whether the ETH→STRK rate query succeeded (1m window) \nExpected to be 1 every 15 minutes.",
          "type": "timeseries",
          "exprs": [
            "changes(eth_to_strk_success_count{cluster=~\"$cluster\", namespace=~\"$namespace\"}[1m])"
          ],
          "extra_params": {
            "log_query": "\"Caching conversion rate for timestamp\""
          }
        },
        {
          "title": "ETH→STRK Rate Query Error Count",
          "description": "The number of times the ETH→STRK rate query failed (10m window)",
          "type": "timeseries",
          "exprs": [
            "increase(eth_to_strk_error_count{cluster=~\"$cluster\", namespace=~\"$namespace\"}[10m])"
          ],
          "extra_params": {}
        },
        {
          "title": "eth_to_strk_rate",
          "description": "ETH→STRK rate (divided by DEFAULT_ETH_TO_FRI_RATE=1000000000000000000000)",
          "type": "timeseries",
          "exprs": [
            "eth_to_strk_rate{cluster=~\"$cluster\", namespace=~\"$namespace\"} / 1000000000000000000000"
          ],
          "extra_params": {
            "log_query": "\"Caching conversion rate for timestamp\""
          }
        },
        {
          "title": "L1 Gas Price Provider Insufficient History",
          "description": "The number of times the L1 gas price provider calculated an average with too few blocks (10m window)",
          "type": "timeseries",
          "exprs": [
            "increase(l1_gas_price_provider_insufficient_history{cluster=~\"$cluster\", namespace=~\"$namespace\"}[10m])"
          ],
          "extra_params": {
            "log_query": "\"Not enough history to calculate the mean gas price.\""
          }
        },
        {
          "title": "L1 Gas Price Scraper Success Count",
          "description": "The number of times the L1 gas price scraper successfully scraped and updated gas prices (10m window)",
          "type": "timeseries",
          "exprs": [
            "increase(l1_gas_price_scraper_success_count{cluster=~\"$cluster\", namespace=~\"$namespace\"}[10m])"
          ],
          "extra_params": {}
        },
        {
          "title": "L1 Gas Price Scraper Base Layer Error Count",
          "description": "The number of times the L1 gas price scraper encountered an error while scraping the base layer (10m window)",
          "type": "timeseries",
          "exprs": [
            "increase(l1_gas_price_scraper_baselayer_error_count{cluster=~\"$cluster\", namespace=~\"$namespace\"}[10m])"
          ],
          "extra_params": {}
        },
        {
          "title": "L1 Gas Price Scraper Reorg Detected",
          "description": "The number of times the L1 gas price scraper detected a reorganization in the base layer (10m window)",
          "type": "timeseries",
          "exprs": [
            "increase(l1_gas_price_scraper_reorg_detected{cluster=~\"$cluster\", namespace=~\"$namespace\"}[10m])"
          ],
          "extra_params": {}
        },
        {
          "title": "L1 Gas Price Scraper Latest Scraped Block",
          "description": "The latest block number that the L1 gas price scraper has scraped",
          "type": "stat",
          "exprs": [
            "l1_gas_price_scraper_latest_scraped_block{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "L1 Gas Price Latest Mean Value",
          "description": "The latest L1 gas price, calculated as an average by the provider client",
          "type": "timeseries",
          "exprs": [
            "l1_gas_price_latest_mean_value{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "L1 Data Gas Price Latest Mean Value",
          "description": "The latest L1 data gas price, calculated as an average by the provider client",
          "type": "timeseries",
          "exprs": [
            "l1_data_gas_price_latest_mean_value{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        }
      ],
      "collapsed": true
    },
    "Blockifier": {
      "panels": [
        {
          "title": "class_cache_miss_ratio",
          "description": "The ratio of cache misses when requesting compiled classes from the Blockifier State Reader",
          "type": "timeseries",
          "exprs": [
            "(increase(class_cache_misses{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m]) / (increase(class_cache_misses{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m]) + increase(class_cache_hits{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
          ],
          "extra_params": {
            "unit": "percentunit"
          }
        },
        {
          "title": "native_class_returned_ratio",
          "description": "The ratio of Native classes returned by the Blockifier",
          "type": "timeseries",
          "exprs": [
            "(increase(native_class_returned{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m]) / (increase(class_cache_hits{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m]) + increase(class_cache_misses{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
          ],
          "extra_params": {
            "unit": "percentunit"
          }
        },
        {
          "title": "native_compilation_error",
          "description": "Counter of Native compilation failures in the blockifier",
          "type": "stat",
          "exprs": [
            "native_compilation_error{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "native_execution_ratio",
          "description": "The ratio of calls running Cairo Native in the Blockifier",
          "type": "timeseries",
          "exprs": [
            "(increase(calls_running_native{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m]) / (increase(number_of_total_calls{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
          ],
          "extra_params": {
            "unit": "percentunit"
          }
        }
      ],
      "collapsed": true
    },
    "Class Manager": {
      "panels": [
        {
          "title": "Compile to Casm Compilation Duration",
          "description": "Server-side compilation of Sierra to Casm duration",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50, sum by (le) (rate(compile_to_casm_compilation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))",
            "histogram_quantile(0.95, sum by (le) (rate(compile_to_casm_compilation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
          ],
          "extra_params": {
            "unit": "s"
          }
        },
        {
          "title": "Number of Classes",
          "description": "Number of classes, labeled by type (regular, deprecated)",
          "type": "stat",
          "exprs": [
            "sum by (class_type) (increase(class_manager_n_classes{cluster=~\"$cluster\", namespace=~\"$namespace\"}[10m]))"
          ],
          "extra_params": {}
        },
        {
          "title": "Class Sizes",
          "description": "Size of the classes in bytes, labeled by type (sierra, casm, deprecated casm)",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50, sum by (le, class_object_type) (rate(class_manager_class_sizes_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))",
            "histogram_quantile(0.95, sum by (le, class_object_type) (rate(class_manager_class_sizes_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
          ],
          "extra_params": {
            "unit": "decmbytes"
          }
        }
      ],
      "collapsed": true
    },
    "ConsensusP2p": {
      "panels": [
        {
          "title": "Number of Connected Peers",
          "description": "The number of connected peers in Consensus P2P",
          "type": "timeseries",
          "exprs": [
            "apollo_consensus_num_connected_peers{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "Consensus Votes Number of Sent Messages",
          "description": "The increase in the number of vote messages sent by consensus p2p (10m window)",
          "type": "timeseries",
          "exprs": [
            "increase(apollo_consensus_votes_num_sent_messages{cluster=~\"$cluster\", namespace=~\"$namespace\"}[10m])"
          ],
          "extra_params": {}
        },
        {
          "title": "Consensus Votes Number of Received Messages",
          "description": "The increase in the number of vote messages received by consensus p2p (10m window)",
          "type": "timeseries",
          "exprs": [
            "increase(apollo_consensus_votes_num_received_messages{cluster=~\"$cluster\", namespace=~\"$namespace\"}[10m])"
          ],
          "extra_params": {}
        },
        {
          "title": "apollo_consensus_votes_num_dropped_messages",
          "description": "The number of messages dropped by the consensus p2p component over the Votes topic",
          "type": "timeseries",
          "exprs": [
            "sum by (drop_reason) (apollo_consensus_votes_num_dropped_messages{cluster=~\"$cluster\", namespace=~\"$namespace\"})"
          ],
          "extra_params": {}
        },
        {
          "title": "Consensus Conflicting Votes",
          "description": "The increase in the number of conflicting votes (12h window)",
          "type": "timeseries",
          "exprs": [
            "increase(consensus_conflicting_votes{cluster=~\"$cluster\", namespace=~\"$namespace\"}[12h])"
          ],
          "extra_params": {}
        },
        {
          "title": "Consensus Proposals Number of Sent Messages",
          "description": "The increase in the number of proposal messages sent by consensus p2p (10m window)",
          "type": "timeseries",
          "exprs": [
            "increase(apollo_consensus_proposals_num_sent_messages{cluster=~\"$cluster\", namespace=~\"$namespace\"}[10m])"
          ],
          "extra_params": {}
        },
        {
          "title": "Consensus Proposals Number of Received Messages",
          "description": "The increase in the number of proposal messages received by consensus p2p (10m window)",
          "type": "timeseries",
          "exprs": [
            "increase(apollo_consensus_proposals_num_received_messages{cluster=~\"$cluster\", namespace=~\"$namespace\"}[10m])"
          ],
          "extra_params": {}
        },
        {
          "title": "apollo_consensus_proposals_num_dropped_messages",
          "description": "The number of messages dropped by the consensus p2p component over the Proposals topic",
          "type": "timeseries",
          "exprs": [
            "sum by (drop_reason) (apollo_consensus_proposals_num_dropped_messages{cluster=~\"$cluster\", namespace=~\"$namespace\"})"
          ],
          "extra_params": {}
        },
        {
          "title": "apollo_consensus_network_events",
          "description": "Network events counter by event type for consensus",
          "type": "timeseries",
          "exprs": [
            "sum by (event_type) (apollo_consensus_network_events{cluster=~\"$cluster\", namespace=~\"$namespace\"})"
          ],
          "extra_params": {}
        }
      ],
      "collapsed": true
    },
    "StateSyncP2p": {
      "panels": [
        {
          "title": "apollo_p2p_sync_num_connected_peers",
          "description": "The number of connected peers to the p2p sync component",
          "type": "stat",
          "exprs": [
            "apollo_p2p_sync_num_connected_peers{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "apollo_p2p_sync_num_active_inbound_sessions",
          "description": "The number of inbound sessions to the p2p sync component",
          "type": "stat",
          "exprs": [
            "apollo_p2p_sync_num_active_inbound_sessions{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "apollo_p2p_sync_num_active_outbound_sessions",
          "description": "The number of outbound sessions to the p2p sync component",
          "type": "stat",
          "exprs": [
            "apollo_p2p_sync_num_active_outbound_sessions{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        }
      ],
      "collapsed": true
    },
    "Storage": {
      "panels": [
        {
          "title": "Append Thin State Diff Latency",
          "description": "Latency to append thin state diff in storage",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50, sum by (le) (rate(storage_append_thin_state_diff_latency_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))",
            "histogram_quantile(0.95, sum by (le) (rate(storage_append_thin_state_diff_latency_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
          ],
          "extra_params": {
            "unit": "s"
          }
        },
        {
          "title": "Storage Commit Latency",
          "description": "Latency to commit changes in storage",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50, sum by (le) (rate(storage_commit_latency_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))",
            "histogram_quantile(0.95, sum by (le) (rate(storage_commit_latency_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
          ],
          "extra_params": {
            "unit": "s"
          }
        },
        {
          "title": "sync_storage_open_read_transactions",
          "description": "The number of open sync  read transactions",
          "type": "timeseries",
          "exprs": [
            "sync_storage_open_read_transactions{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "batcher_storage_open_read_transactions",
          "description": "The number of open batcher read transactions",
          "type": "timeseries",
          "exprs": [
            "batcher_storage_open_read_transactions{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "class_manager_storage_open_read_transactions",
          "description": "The number of open class manager read transactions",
          "type": "timeseries",
          "exprs": [
            "class_manager_storage_open_read_transactions{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        }
      ],
      "collapsed": true
    },
    "MempoolP2p": {
      "panels": [
        {
          "title": "apollo_mempool_p2p_num_connected_peers",
          "description": "The number of connected peers to the mempool p2p component",
          "type": "timeseries",
          "exprs": [
            "apollo_mempool_p2p_num_connected_peers{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "apollo_mempool_p2p_num_sent_messages",
          "description": "The number of messages sent by the mempool p2p component",
          "type": "timeseries",
          "exprs": [
            "apollo_mempool_p2p_num_sent_messages{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "apollo_mempool_p2p_num_received_messages",
          "description": "The number of messages received by the mempool p2p component",
          "type": "timeseries",
          "exprs": [
            "apollo_mempool_p2p_num_received_messages{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "Mempool P2p Broadcasted Transaction Batch Size",
          "description": "The number of transactions in batches broadcast by the mempool p2p component",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50, sum by (le) (rate(apollo_mempool_p2p_broadcasted_transaction_batch_size_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))",
            "histogram_quantile(0.95, sum by (le) (rate(apollo_mempool_p2p_broadcasted_transaction_batch_size_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
          ],
          "extra_params": {}
        },
        {
          "title": "apollo_mempool_p2p_network_events",
          "description": "Network events counter by event type for mempool p2p",
          "type": "timeseries",
          "exprs": [
            "sum by (event_type) (apollo_mempool_p2p_network_events{cluster=~\"$cluster\", namespace=~\"$namespace\"})"
          ],
          "extra_params": {}
        },
        {
          "title": "apollo_mempool_p2p_num_dropped_messages",
          "description": "The number of messages dropped by the mempool p2p component",
          "type": "timeseries",
          "exprs": [
            "sum by (drop_reason) (apollo_mempool_p2p_num_dropped_messages{cluster=~\"$cluster\", namespace=~\"$namespace\"})"
          ],
          "extra_params": {}
        }
      ],
      "collapsed": true
    },
    "Tokio Runtime Metrics": {
      "panels": [
        {
          "title": "tokio_total_busy_duration",
          "description": "The amount of time worker threads were busy (in microseconds)",
          "type": "timeseries",
          "exprs": [
            "tokio_total_busy_duration{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "tokio_min_busy_duration",
          "description": "The minimum amount of time a worker thread was busy (in microseconds)",
          "type": "timeseries",
          "exprs": [
            "tokio_min_busy_duration{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "tokio_max_busy_duration",
          "description": "The maximum amount of time a worker thread was busy (in microseconds)",
          "type": "timeseries",
          "exprs": [
            "tokio_max_busy_duration{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "tokio_total_park_count",
          "description": "The number of times worker threads parked",
          "type": "timeseries",
          "exprs": [
            "tokio_total_park_count{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "tokio_min_park_count",
          "description": "The minimum number of times any worker thread parked",
          "type": "timeseries",
          "exprs": [
            "tokio_min_park_count{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "tokio_max_park_count",
          "description": "The maximum number of times any worker thread parked",
          "type": "timeseries",
          "exprs": [
            "tokio_max_park_count{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "tokio_global_queue_depth",
          "description": "The number of tasks currently scheduled in the runtime's global queue",
          "type": "timeseries",
          "exprs": [
            "tokio_global_queue_depth{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "tokio_workers_count",
          "description": "The number of worker threads used by the runtime",
          "type": "timeseries",
          "exprs": [
            "tokio_workers_count{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        }
      ],
      "collapsed": true
    },
    "Batcher Infra": {
      "panels": [
        {
          "title": "batcher_remote_client_send_attempts",
          "description": "Required number of remote connection attempts made by a batcher remote client",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50, sum by (le) (rate(batcher_remote_client_send_attempts_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))",
            "histogram_quantile(0.95, sum by (le) (rate(batcher_remote_client_send_attempts_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
          ],
          "extra_params": {}
        },
        {
          "title": "batcher_local_msgs_received",
          "description": "Counter of messages received by batcher local server",
          "type": "timeseries",
          "exprs": [
            "batcher_local_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "batcher_local_msgs_processed",
          "description": "Counter of messages processed by batcher local server",
          "type": "timeseries",
          "exprs": [
            "batcher_local_msgs_processed{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "local_queue_depth",
          "description": "The depth of the local priority queues",
          "type": "timeseries",
          "exprs": [
            "batcher_local_high_priority_queue_depth{cluster=~\"$cluster\", namespace=~\"$namespace\"}",
            "batcher_local_normal_priority_queue_depth{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "batcher_remote_msgs_received",
          "description": "Counter of messages received by batcher remote server",
          "type": "timeseries",
          "exprs": [
            "batcher_remote_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "batcher_remote_valid_msgs_received",
          "description": "Counter of valid messages received by batcher remote server",
          "type": "timeseries",
          "exprs": [
            "batcher_remote_valid_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "batcher_remote_msgs_processed",
          "description": "Counter of messages processed by batcher remote server",
          "type": "timeseries",
          "exprs": [
            "batcher_remote_msgs_processed{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "batcher_remote_number_of_connections",
          "description": "Number of connections to batcher remote server",
          "type": "timeseries",
          "exprs": [
            "batcher_remote_number_of_connections{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "add_sync_block (client)",
          "description": "client infra metrics for request type add_sync_block",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(batcher_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_sync_block\"}[5m])), \"label_name\", \"0.50 batcher_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(batcher_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_sync_block\"}[5m])), \"label_name\", \"0.95 batcher_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(batcher_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_sync_block\"}[5m])), \"label_name\", \"0.50 batcher_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(batcher_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_sync_block\"}[5m])), \"label_name\", \"0.95 batcher_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(batcher_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_sync_block\"}[5m])), \"label_name\", \"0.50 batcher_remote_client_communication_failure_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(batcher_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_sync_block\"}[5m])), \"label_name\", \"0.95 batcher_remote_client_communication_failure_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "decision_reached (client)",
          "description": "client infra metrics for request type decision_reached",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(batcher_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"decision_reached\"}[5m])), \"label_name\", \"0.50 batcher_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(batcher_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"decision_reached\"}[5m])), \"label_name\", \"0.95 batcher_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(batcher_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"decision_reached\"}[5m])), \"label_name\", \"0.50 batcher_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(batcher_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"decision_reached\"}[5m])), \"label_name\", \"0.95 batcher_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(batcher_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"decision_reached\"}[5m])), \"label_name\", \"0.50 batcher_remote_client_communication_failure_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(batcher_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"decision_reached\"}[5m])), \"label_name\", \"0.95 batcher_remote_client_communication_failure_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "get_current_height (client)",
          "description": "client infra metrics for request type get_current_height",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(batcher_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_current_height\"}[5m])), \"label_name\", \"0.50 batcher_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(batcher_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_current_height\"}[5m])), \"label_name\", \"0.95 batcher_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(batcher_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_current_height\"}[5m])), \"label_name\", \"0.50 batcher_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(batcher_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_current_height\"}[5m])), \"label_name\", \"0.95 batcher_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(batcher_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_current_height\"}[5m])), \"label_name\", \"0.50 batcher_remote_client_communication_failure_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(batcher_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_current_height\"}[5m])), \"label_name\", \"0.95 batcher_remote_client_communication_failure_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "get_proposal_content (client)",
          "description": "client infra metrics for request type get_proposal_content",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(batcher_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_proposal_content\"}[5m])), \"label_name\", \"0.50 batcher_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(batcher_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_proposal_content\"}[5m])), \"label_name\", \"0.95 batcher_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(batcher_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_proposal_content\"}[5m])), \"label_name\", \"0.50 batcher_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(batcher_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_proposal_content\"}[5m])), \"label_name\", \"0.95 batcher_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(batcher_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_proposal_content\"}[5m])), \"label_name\", \"0.50 batcher_remote_client_communication_failure_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(batcher_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_proposal_content\"}[5m])), \"label_name\", \"0.95 batcher_remote_client_communication_failure_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "propose_block (client)",
          "description": "client infra metrics for request type propose_block",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(batcher_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"propose_block\"}[5m])), \"label_name\", \"0.50 batcher_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(batcher_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"propose_block\"}[5m])), \"label_name\", \"0.95 batcher_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(batcher_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"propose_block\"}[5m])), \"label_name\", \"0.50 batcher_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(batcher_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"propose_block\"}[5m])), \"label_name\", \"0.95 batcher_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(batcher_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"propose_block\"}[5m])), \"label_name\", \"0.50 batcher_remote_client_communication_failure_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(batcher_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"propose_block\"}[5m])), \"label_name\", \"0.95 batcher_remote_client_communication_failure_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "revert_block (client)",
          "description": "client infra metrics for request type revert_block",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(batcher_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"revert_block\"}[5m])), \"label_name\", \"0.50 batcher_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(batcher_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"revert_block\"}[5m])), \"label_name\", \"0.95 batcher_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(batcher_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"revert_block\"}[5m])), \"label_name\", \"0.50 batcher_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(batcher_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"revert_block\"}[5m])), \"label_name\", \"0.95 batcher_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(batcher_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"revert_block\"}[5m])), \"label_name\", \"0.50 batcher_remote_client_communication_failure_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(batcher_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"revert_block\"}[5m])), \"label_name\", \"0.95 batcher_remote_client_communication_failure_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "send_proposal_content (client)",
          "description": "client infra metrics for request type send_proposal_content",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(batcher_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"send_proposal_content\"}[5m])), \"label_name\", \"0.50 batcher_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(batcher_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"send_proposal_content\"}[5m])), \"label_name\", \"0.95 batcher_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(batcher_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"send_proposal_content\"}[5m])), \"label_name\", \"0.50 batcher_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(batcher_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"send_proposal_content\"}[5m])), \"label_name\", \"0.95 batcher_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(batcher_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"send_proposal_content\"}[5m])), \"label_name\", \"0.50 batcher_remote_client_communication_failure_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(batcher_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"send_proposal_content\"}[5m])), \"label_name\", \"0.95 batcher_remote_client_communication_failure_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "start_height (client)",
          "description": "client infra metrics for request type start_height",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(batcher_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"start_height\"}[5m])), \"label_name\", \"0.50 batcher_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(batcher_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"start_height\"}[5m])), \"label_name\", \"0.95 batcher_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(batcher_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"start_height\"}[5m])), \"label_name\", \"0.50 batcher_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(batcher_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"start_height\"}[5m])), \"label_name\", \"0.95 batcher_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(batcher_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"start_height\"}[5m])), \"label_name\", \"0.50 batcher_remote_client_communication_failure_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(batcher_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"start_height\"}[5m])), \"label_name\", \"0.95 batcher_remote_client_communication_failure_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "validate_block (client)",
          "description": "client infra metrics for request type validate_block",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(batcher_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"validate_block\"}[5m])), \"label_name\", \"0.50 batcher_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(batcher_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"validate_block\"}[5m])), \"label_name\", \"0.95 batcher_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(batcher_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"validate_block\"}[5m])), \"label_name\", \"0.50 batcher_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(batcher_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"validate_block\"}[5m])), \"label_name\", \"0.95 batcher_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(batcher_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"validate_block\"}[5m])), \"label_name\", \"0.50 batcher_remote_client_communication_failure_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(batcher_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"validate_block\"}[5m])), \"label_name\", \"0.95 batcher_remote_client_communication_failure_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "add_sync_block (server)",
          "description": "server infra metrics for request type add_sync_block",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(batcher_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_sync_block\"}[5m])), \"label_name\", \"0.50 batcher_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(batcher_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_sync_block\"}[5m])), \"label_name\", \"0.95 batcher_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(batcher_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_sync_block\"}[5m])), \"label_name\", \"0.50 batcher_queueing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(batcher_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_sync_block\"}[5m])), \"label_name\", \"0.95 batcher_queueing_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "decision_reached (server)",
          "description": "server infra metrics for request type decision_reached",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(batcher_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"decision_reached\"}[5m])), \"label_name\", \"0.50 batcher_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(batcher_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"decision_reached\"}[5m])), \"label_name\", \"0.95 batcher_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(batcher_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"decision_reached\"}[5m])), \"label_name\", \"0.50 batcher_queueing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(batcher_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"decision_reached\"}[5m])), \"label_name\", \"0.95 batcher_queueing_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "get_current_height (server)",
          "description": "server infra metrics for request type get_current_height",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(batcher_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_current_height\"}[5m])), \"label_name\", \"0.50 batcher_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(batcher_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_current_height\"}[5m])), \"label_name\", \"0.95 batcher_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(batcher_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_current_height\"}[5m])), \"label_name\", \"0.50 batcher_queueing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(batcher_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_current_height\"}[5m])), \"label_name\", \"0.95 batcher_queueing_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "get_proposal_content (server)",
          "description": "server infra metrics for request type get_proposal_content",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(batcher_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_proposal_content\"}[5m])), \"label_name\", \"0.50 batcher_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(batcher_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_proposal_content\"}[5m])), \"label_name\", \"0.95 batcher_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(batcher_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_proposal_content\"}[5m])), \"label_name\", \"0.50 batcher_queueing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(batcher_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_proposal_content\"}[5m])), \"label_name\", \"0.95 batcher_queueing_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "propose_block (server)",
          "description": "server infra metrics for request type propose_block",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(batcher_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"propose_block\"}[5m])), \"label_name\", \"0.50 batcher_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(batcher_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"propose_block\"}[5m])), \"label_name\", \"0.95 batcher_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(batcher_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"propose_block\"}[5m])), \"label_name\", \"0.50 batcher_queueing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(batcher_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"propose_block\"}[5m])), \"label_name\", \"0.95 batcher_queueing_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "revert_block (server)",
          "description": "server infra metrics for request type revert_block",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(batcher_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"revert_block\"}[5m])), \"label_name\", \"0.50 batcher_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(batcher_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"revert_block\"}[5m])), \"label_name\", \"0.95 batcher_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(batcher_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"revert_block\"}[5m])), \"label_name\", \"0.50 batcher_queueing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(batcher_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"revert_block\"}[5m])), \"label_name\", \"0.95 batcher_queueing_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "send_proposal_content (server)",
          "description": "server infra metrics for request type send_proposal_content",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(batcher_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"send_proposal_content\"}[5m])), \"label_name\", \"0.50 batcher_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(batcher_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"send_proposal_content\"}[5m])), \"label_name\", \"0.95 batcher_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(batcher_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"send_proposal_content\"}[5m])), \"label_name\", \"0.50 batcher_queueing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(batcher_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"send_proposal_content\"}[5m])), \"label_name\", \"0.95 batcher_queueing_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "start_height (server)",
          "description": "server infra metrics for request type start_height",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(batcher_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"start_height\"}[5m])), \"label_name\", \"0.50 batcher_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(batcher_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"start_height\"}[5m])), \"label_name\", \"0.95 batcher_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(batcher_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"start_height\"}[5m])), \"label_name\", \"0.50 batcher_queueing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(batcher_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"start_height\"}[5m])), \"label_name\", \"0.95 batcher_queueing_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "validate_block (server)",
          "description": "server infra metrics for request type validate_block",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(batcher_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"validate_block\"}[5m])), \"label_name\", \"0.50 batcher_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(batcher_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"validate_block\"}[5m])), \"label_name\", \"0.95 batcher_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(batcher_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"validate_block\"}[5m])), \"label_name\", \"0.50 batcher_queueing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(batcher_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"validate_block\"}[5m])), \"label_name\", \"0.95 batcher_queueing_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        }
      ],
      "collapsed": true
    },
    "State Sync Infra": {
      "panels": [
        {
          "title": "state_sync_remote_client_send_attempts",
          "description": "Required number of remote connection attempts made by a state_sync remote client",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50, sum by (le) (rate(state_sync_remote_client_send_attempts_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))",
            "histogram_quantile(0.95, sum by (le) (rate(state_sync_remote_client_send_attempts_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
          ],
          "extra_params": {}
        },
        {
          "title": "state_sync_local_msgs_received",
          "description": "Counter of messages received by state_sync local server",
          "type": "timeseries",
          "exprs": [
            "state_sync_local_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "state_sync_local_msgs_processed",
          "description": "Counter of messages processed by state_sync local server",
          "type": "timeseries",
          "exprs": [
            "state_sync_local_msgs_processed{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "local_queue_depth",
          "description": "The depth of the local priority queues",
          "type": "timeseries",
          "exprs": [
            "state_sync_local_high_priority_queue_depth{cluster=~\"$cluster\", namespace=~\"$namespace\"}",
            "state_sync_local_normal_priority_queue_depth{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "state_sync_remote_msgs_received",
          "description": "Counter of messages received by state_sync remote server",
          "type": "timeseries",
          "exprs": [
            "state_sync_remote_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "state_sync_remote_valid_msgs_received",
          "description": "Counter of valid messages received by state_sync remote server",
          "type": "timeseries",
          "exprs": [
            "state_sync_remote_valid_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "state_sync_remote_msgs_processed",
          "description": "Counter of messages processed by state_sync remote server",
          "type": "timeseries",
          "exprs": [
            "state_sync_remote_msgs_processed{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "state_sync_remote_number_of_connections",
          "description": "Number of connections to state_sync remote server",
          "type": "timeseries",
          "exprs": [
            "state_sync_remote_number_of_connections{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "add_new_block (client)",
          "description": "client infra metrics for request type add_new_block",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(state_sync_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_new_block\"}[5m])), \"label_name\", \"0.50 state_sync_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(state_sync_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_new_block\"}[5m])), \"label_name\", \"0.95 state_sync_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(state_sync_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_new_block\"}[5m])), \"label_name\", \"0.50 state_sync_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(state_sync_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_new_block\"}[5m])), \"label_name\", \"0.95 state_sync_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(state_sync_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_new_block\"}[5m])), \"label_name\", \"0.50 state_sync_remote_client_communication_failure_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(state_sync_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_new_block\"}[5m])), \"label_name\", \"0.95 state_sync_remote_client_communication_failure_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "get_block (client)",
          "description": "client infra metrics for request type get_block",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(state_sync_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_block\"}[5m])), \"label_name\", \"0.50 state_sync_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(state_sync_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_block\"}[5m])), \"label_name\", \"0.95 state_sync_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(state_sync_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_block\"}[5m])), \"label_name\", \"0.50 state_sync_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(state_sync_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_block\"}[5m])), \"label_name\", \"0.95 state_sync_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(state_sync_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_block\"}[5m])), \"label_name\", \"0.50 state_sync_remote_client_communication_failure_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(state_sync_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_block\"}[5m])), \"label_name\", \"0.95 state_sync_remote_client_communication_failure_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "get_block_hash (client)",
          "description": "client infra metrics for request type get_block_hash",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(state_sync_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_block_hash\"}[5m])), \"label_name\", \"0.50 state_sync_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(state_sync_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_block_hash\"}[5m])), \"label_name\", \"0.95 state_sync_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(state_sync_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_block_hash\"}[5m])), \"label_name\", \"0.50 state_sync_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(state_sync_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_block_hash\"}[5m])), \"label_name\", \"0.95 state_sync_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(state_sync_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_block_hash\"}[5m])), \"label_name\", \"0.50 state_sync_remote_client_communication_failure_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(state_sync_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_block_hash\"}[5m])), \"label_name\", \"0.95 state_sync_remote_client_communication_failure_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "get_class_hash_at (client)",
          "description": "client infra metrics for request type get_class_hash_at",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(state_sync_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_class_hash_at\"}[5m])), \"label_name\", \"0.50 state_sync_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(state_sync_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_class_hash_at\"}[5m])), \"label_name\", \"0.95 state_sync_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(state_sync_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_class_hash_at\"}[5m])), \"label_name\", \"0.50 state_sync_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(state_sync_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_class_hash_at\"}[5m])), \"label_name\", \"0.95 state_sync_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(state_sync_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_class_hash_at\"}[5m])), \"label_name\", \"0.50 state_sync_remote_client_communication_failure_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(state_sync_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_class_hash_at\"}[5m])), \"label_name\", \"0.95 state_sync_remote_client_communication_failure_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "get_latest_block_number (client)",
          "description": "client infra metrics for request type get_latest_block_number",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(state_sync_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_latest_block_number\"}[5m])), \"label_name\", \"0.50 state_sync_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(state_sync_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_latest_block_number\"}[5m])), \"label_name\", \"0.95 state_sync_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(state_sync_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_latest_block_number\"}[5m])), \"label_name\", \"0.50 state_sync_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(state_sync_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_latest_block_number\"}[5m])), \"label_name\", \"0.95 state_sync_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(state_sync_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_latest_block_number\"}[5m])), \"label_name\", \"0.50 state_sync_remote_client_communication_failure_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(state_sync_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_latest_block_number\"}[5m])), \"label_name\", \"0.95 state_sync_remote_client_communication_failure_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "get_nonce_at (client)",
          "description": "client infra metrics for request type get_nonce_at",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(state_sync_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_nonce_at\"}[5m])), \"label_name\", \"0.50 state_sync_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(state_sync_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_nonce_at\"}[5m])), \"label_name\", \"0.95 state_sync_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(state_sync_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_nonce_at\"}[5m])), \"label_name\", \"0.50 state_sync_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(state_sync_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_nonce_at\"}[5m])), \"label_name\", \"0.95 state_sync_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(state_sync_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_nonce_at\"}[5m])), \"label_name\", \"0.50 state_sync_remote_client_communication_failure_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(state_sync_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_nonce_at\"}[5m])), \"label_name\", \"0.95 state_sync_remote_client_communication_failure_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "get_storage_at (client)",
          "description": "client infra metrics for request type get_storage_at",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(state_sync_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_storage_at\"}[5m])), \"label_name\", \"0.50 state_sync_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(state_sync_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_storage_at\"}[5m])), \"label_name\", \"0.95 state_sync_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(state_sync_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_storage_at\"}[5m])), \"label_name\", \"0.50 state_sync_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(state_sync_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_storage_at\"}[5m])), \"label_name\", \"0.95 state_sync_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(state_sync_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_storage_at\"}[5m])), \"label_name\", \"0.50 state_sync_remote_client_communication_failure_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(state_sync_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_storage_at\"}[5m])), \"label_name\", \"0.95 state_sync_remote_client_communication_failure_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "is_class_declared_at (client)",
          "description": "client infra metrics for request type is_class_declared_at",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(state_sync_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"is_class_declared_at\"}[5m])), \"label_name\", \"0.50 state_sync_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(state_sync_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"is_class_declared_at\"}[5m])), \"label_name\", \"0.95 state_sync_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(state_sync_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"is_class_declared_at\"}[5m])), \"label_name\", \"0.50 state_sync_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(state_sync_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"is_class_declared_at\"}[5m])), \"label_name\", \"0.95 state_sync_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(state_sync_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"is_class_declared_at\"}[5m])), \"label_name\", \"0.50 state_sync_remote_client_communication_failure_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(state_sync_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"is_class_declared_at\"}[5m])), \"label_name\", \"0.95 state_sync_remote_client_communication_failure_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "add_new_block (server)",
          "description": "server infra metrics for request type add_new_block",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(state_sync_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_new_block\"}[5m])), \"label_name\", \"0.50 state_sync_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(state_sync_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_new_block\"}[5m])), \"label_name\", \"0.95 state_sync_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(state_sync_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_new_block\"}[5m])), \"label_name\", \"0.50 state_sync_queueing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(state_sync_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_new_block\"}[5m])), \"label_name\", \"0.95 state_sync_queueing_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "get_block (server)",
          "description": "server infra metrics for request type get_block",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(state_sync_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_block\"}[5m])), \"label_name\", \"0.50 state_sync_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(state_sync_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_block\"}[5m])), \"label_name\", \"0.95 state_sync_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(state_sync_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_block\"}[5m])), \"label_name\", \"0.50 state_sync_queueing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(state_sync_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_block\"}[5m])), \"label_name\", \"0.95 state_sync_queueing_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "get_block_hash (server)",
          "description": "server infra metrics for request type get_block_hash",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(state_sync_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_block_hash\"}[5m])), \"label_name\", \"0.50 state_sync_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(state_sync_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_block_hash\"}[5m])), \"label_name\", \"0.95 state_sync_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(state_sync_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_block_hash\"}[5m])), \"label_name\", \"0.50 state_sync_queueing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(state_sync_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_block_hash\"}[5m])), \"label_name\", \"0.95 state_sync_queueing_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "get_class_hash_at (server)",
          "description": "server infra metrics for request type get_class_hash_at",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(state_sync_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_class_hash_at\"}[5m])), \"label_name\", \"0.50 state_sync_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(state_sync_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_class_hash_at\"}[5m])), \"label_name\", \"0.95 state_sync_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(state_sync_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_class_hash_at\"}[5m])), \"label_name\", \"0.50 state_sync_queueing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(state_sync_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_class_hash_at\"}[5m])), \"label_name\", \"0.95 state_sync_queueing_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "get_latest_block_number (server)",
          "description": "server infra metrics for request type get_latest_block_number",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(state_sync_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_latest_block_number\"}[5m])), \"label_name\", \"0.50 state_sync_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(state_sync_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_latest_block_number\"}[5m])), \"label_name\", \"0.95 state_sync_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(state_sync_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_latest_block_number\"}[5m])), \"label_name\", \"0.50 state_sync_queueing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(state_sync_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_latest_block_number\"}[5m])), \"label_name\", \"0.95 state_sync_queueing_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "get_nonce_at (server)",
          "description": "server infra metrics for request type get_nonce_at",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(state_sync_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_nonce_at\"}[5m])), \"label_name\", \"0.50 state_sync_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(state_sync_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_nonce_at\"}[5m])), \"label_name\", \"0.95 state_sync_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(state_sync_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_nonce_at\"}[5m])), \"label_name\", \"0.50 state_sync_queueing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(state_sync_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_nonce_at\"}[5m])), \"label_name\", \"0.95 state_sync_queueing_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "get_storage_at (server)",
          "description": "server infra metrics for request type get_storage_at",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(state_sync_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_storage_at\"}[5m])), \"label_name\", \"0.50 state_sync_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(state_sync_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_storage_at\"}[5m])), \"label_name\", \"0.95 state_sync_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(state_sync_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_storage_at\"}[5m])), \"label_name\", \"0.50 state_sync_queueing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(state_sync_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_storage_at\"}[5m])), \"label_name\", \"0.95 state_sync_queueing_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "is_class_declared_at (server)",
          "description": "server infra metrics for request type is_class_declared_at",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(state_sync_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"is_class_declared_at\"}[5m])), \"label_name\", \"0.50 state_sync_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(state_sync_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"is_class_declared_at\"}[5m])), \"label_name\", \"0.95 state_sync_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(state_sync_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"is_class_declared_at\"}[5m])), \"label_name\", \"0.50 state_sync_queueing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(state_sync_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"is_class_declared_at\"}[5m])), \"label_name\", \"0.95 state_sync_queueing_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        }
      ],
      "collapsed": true
    },
    "Gateway Infra": {
      "panels": [
        {
          "title": "gateway_remote_client_send_attempts",
          "description": "Required number of remote connection attempts made by a gateway remote client",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50, sum by (le) (rate(gateway_remote_client_send_attempts_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))",
            "histogram_quantile(0.95, sum by (le) (rate(gateway_remote_client_send_attempts_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
          ],
          "extra_params": {}
        },
        {
          "title": "gateway_local_msgs_received",
          "description": "Counter of messages received by gateway local server",
          "type": "timeseries",
          "exprs": [
            "gateway_local_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "gateway_local_msgs_processed",
          "description": "Counter of messages processed by gateway local server",
          "type": "timeseries",
          "exprs": [
            "gateway_local_msgs_processed{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "local_queue_depth",
          "description": "The depth of the local priority queues",
          "type": "timeseries",
          "exprs": [
            "gateway_local_high_priority_queue_depth{cluster=~\"$cluster\", namespace=~\"$namespace\"}",
            "gateway_local_normal_priority_queue_depth{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "gateway_remote_msgs_received",
          "description": "Counter of messages received by gateway remote server",
          "type": "timeseries",
          "exprs": [
            "gateway_remote_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "gateway_remote_valid_msgs_received",
          "description": "Counter of valid messages received by gateway remote server",
          "type": "timeseries",
          "exprs": [
            "gateway_remote_valid_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "gateway_remote_msgs_processed",
          "description": "Counter of messages processed by gateway remote server",
          "type": "timeseries",
          "exprs": [
            "gateway_remote_msgs_processed{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "gateway_remote_number_of_connections",
          "description": "Number of connections to gateway remote server",
          "type": "timeseries",
          "exprs": [
            "gateway_remote_number_of_connections{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "add_transaction (client)",
          "description": "client infra metrics for request type add_transaction",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(gateway_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])), \"label_name\", \"0.50 gateway_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(gateway_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])), \"label_name\", \"0.95 gateway_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(gateway_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])), \"label_name\", \"0.50 gateway_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(gateway_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])), \"label_name\", \"0.95 gateway_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(gateway_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])), \"label_name\", \"0.50 gateway_remote_client_communication_failure_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(gateway_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])), \"label_name\", \"0.95 gateway_remote_client_communication_failure_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "add_transaction (server)",
          "description": "server infra metrics for request type add_transaction",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(gateway_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])), \"label_name\", \"0.50 gateway_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(gateway_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])), \"label_name\", \"0.95 gateway_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(gateway_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])), \"label_name\", \"0.50 gateway_queueing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(gateway_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])), \"label_name\", \"0.95 gateway_queueing_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        }
      ],
      "collapsed": true
    },
    "Mempool Infra": {
      "panels": [
        {
          "title": "mempool_remote_client_send_attempts",
          "description": "Required number of remote connection attempts made by a mempool remote client",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50, sum by (le) (rate(mempool_remote_client_send_attempts_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))",
            "histogram_quantile(0.95, sum by (le) (rate(mempool_remote_client_send_attempts_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
          ],
          "extra_params": {}
        },
        {
          "title": "mempool_local_msgs_received",
          "description": "Counter of messages received by mempool local server",
          "type": "timeseries",
          "exprs": [
            "mempool_local_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "mempool_local_msgs_processed",
          "description": "Counter of messages processed by mempool local server",
          "type": "timeseries",
          "exprs": [
            "mempool_local_msgs_processed{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "local_queue_depth",
          "description": "The depth of the local priority queues",
          "type": "timeseries",
          "exprs": [
            "mempool_local_high_priority_queue_depth{cluster=~\"$cluster\", namespace=~\"$namespace\"}",
            "mempool_local_normal_priority_queue_depth{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "mempool_remote_msgs_received",
          "description": "Counter of messages received by mempool remote server",
          "type": "timeseries",
          "exprs": [
            "mempool_remote_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "mempool_remote_valid_msgs_received",
          "description": "Counter of valid messages received by mempool remote server",
          "type": "timeseries",
          "exprs": [
            "mempool_remote_valid_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "mempool_remote_msgs_processed",
          "description": "Counter of messages processed by mempool remote server",
          "type": "timeseries",
          "exprs": [
            "mempool_remote_msgs_processed{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "mempool_remote_number_of_connections",
          "description": "Number of connections to mempool remote server",
          "type": "timeseries",
          "exprs": [
            "mempool_remote_number_of_connections{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "account_tx_in_pool_or_recent_block (client)",
          "description": "client infra metrics for request type account_tx_in_pool_or_recent_block",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(mempool_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"account_tx_in_pool_or_recent_block\"}[5m])), \"label_name\", \"0.50 mempool_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(mempool_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"account_tx_in_pool_or_recent_block\"}[5m])), \"label_name\", \"0.95 mempool_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(mempool_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"account_tx_in_pool_or_recent_block\"}[5m])), \"label_name\", \"0.50 mempool_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(mempool_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"account_tx_in_pool_or_recent_block\"}[5m])), \"label_name\", \"0.95 mempool_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(mempool_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"account_tx_in_pool_or_recent_block\"}[5m])), \"label_name\", \"0.50 mempool_remote_client_communication_failure_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(mempool_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"account_tx_in_pool_or_recent_block\"}[5m])), \"label_name\", \"0.95 mempool_remote_client_communication_failure_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "add_transaction (client)",
          "description": "client infra metrics for request type add_transaction",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(mempool_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])), \"label_name\", \"0.50 mempool_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(mempool_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])), \"label_name\", \"0.95 mempool_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(mempool_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])), \"label_name\", \"0.50 mempool_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(mempool_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])), \"label_name\", \"0.95 mempool_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(mempool_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])), \"label_name\", \"0.50 mempool_remote_client_communication_failure_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(mempool_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])), \"label_name\", \"0.95 mempool_remote_client_communication_failure_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "commit_block (client)",
          "description": "client infra metrics for request type commit_block",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(mempool_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"commit_block\"}[5m])), \"label_name\", \"0.50 mempool_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(mempool_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"commit_block\"}[5m])), \"label_name\", \"0.95 mempool_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(mempool_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"commit_block\"}[5m])), \"label_name\", \"0.50 mempool_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(mempool_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"commit_block\"}[5m])), \"label_name\", \"0.95 mempool_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(mempool_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"commit_block\"}[5m])), \"label_name\", \"0.50 mempool_remote_client_communication_failure_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(mempool_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"commit_block\"}[5m])), \"label_name\", \"0.95 mempool_remote_client_communication_failure_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "get_mempool_snapshot (client)",
          "description": "client infra metrics for request type get_mempool_snapshot",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(mempool_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_mempool_snapshot\"}[5m])), \"label_name\", \"0.50 mempool_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(mempool_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_mempool_snapshot\"}[5m])), \"label_name\", \"0.95 mempool_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(mempool_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_mempool_snapshot\"}[5m])), \"label_name\", \"0.50 mempool_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(mempool_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_mempool_snapshot\"}[5m])), \"label_name\", \"0.95 mempool_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(mempool_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_mempool_snapshot\"}[5m])), \"label_name\", \"0.50 mempool_remote_client_communication_failure_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(mempool_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_mempool_snapshot\"}[5m])), \"label_name\", \"0.95 mempool_remote_client_communication_failure_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "get_transactions (client)",
          "description": "client infra metrics for request type get_transactions",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(mempool_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_transactions\"}[5m])), \"label_name\", \"0.50 mempool_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(mempool_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_transactions\"}[5m])), \"label_name\", \"0.95 mempool_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(mempool_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_transactions\"}[5m])), \"label_name\", \"0.50 mempool_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(mempool_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_transactions\"}[5m])), \"label_name\", \"0.95 mempool_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(mempool_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_transactions\"}[5m])), \"label_name\", \"0.50 mempool_remote_client_communication_failure_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(mempool_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_transactions\"}[5m])), \"label_name\", \"0.95 mempool_remote_client_communication_failure_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "update_gas_price (client)",
          "description": "client infra metrics for request type update_gas_price",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(mempool_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"update_gas_price\"}[5m])), \"label_name\", \"0.50 mempool_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(mempool_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"update_gas_price\"}[5m])), \"label_name\", \"0.95 mempool_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(mempool_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"update_gas_price\"}[5m])), \"label_name\", \"0.50 mempool_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(mempool_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"update_gas_price\"}[5m])), \"label_name\", \"0.95 mempool_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(mempool_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"update_gas_price\"}[5m])), \"label_name\", \"0.50 mempool_remote_client_communication_failure_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(mempool_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"update_gas_price\"}[5m])), \"label_name\", \"0.95 mempool_remote_client_communication_failure_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "account_tx_in_pool_or_recent_block (server)",
          "description": "server infra metrics for request type account_tx_in_pool_or_recent_block",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(mempool_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"account_tx_in_pool_or_recent_block\"}[5m])), \"label_name\", \"0.50 mempool_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(mempool_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"account_tx_in_pool_or_recent_block\"}[5m])), \"label_name\", \"0.95 mempool_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(mempool_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"account_tx_in_pool_or_recent_block\"}[5m])), \"label_name\", \"0.50 mempool_queueing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(mempool_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"account_tx_in_pool_or_recent_block\"}[5m])), \"label_name\", \"0.95 mempool_queueing_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "add_transaction (server)",
          "description": "server infra metrics for request type add_transaction",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(mempool_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])), \"label_name\", \"0.50 mempool_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(mempool_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])), \"label_name\", \"0.95 mempool_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(mempool_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])), \"label_name\", \"0.50 mempool_queueing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(mempool_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])), \"label_name\", \"0.95 mempool_queueing_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "commit_block (server)",
          "description": "server infra metrics for request type commit_block",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(mempool_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"commit_block\"}[5m])), \"label_name\", \"0.50 mempool_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(mempool_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"commit_block\"}[5m])), \"label_name\", \"0.95 mempool_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(mempool_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"commit_block\"}[5m])), \"label_name\", \"0.50 mempool_queueing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(mempool_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"commit_block\"}[5m])), \"label_name\", \"0.95 mempool_queueing_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "get_mempool_snapshot (server)",
          "description": "server infra metrics for request type get_mempool_snapshot",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(mempool_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_mempool_snapshot\"}[5m])), \"label_name\", \"0.50 mempool_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(mempool_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_mempool_snapshot\"}[5m])), \"label_name\", \"0.95 mempool_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(mempool_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_mempool_snapshot\"}[5m])), \"label_name\", \"0.50 mempool_queueing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(mempool_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_mempool_snapshot\"}[5m])), \"label_name\", \"0.95 mempool_queueing_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "get_transactions (server)",
          "description": "server infra metrics for request type get_transactions",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(mempool_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_transactions\"}[5m])), \"label_name\", \"0.50 mempool_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(mempool_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_transactions\"}[5m])), \"label_name\", \"0.95 mempool_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(mempool_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_transactions\"}[5m])), \"label_name\", \"0.50 mempool_queueing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(mempool_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_transactions\"}[5m])), \"label_name\", \"0.95 mempool_queueing_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "update_gas_price (server)",
          "description": "server infra metrics for request type update_gas_price",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(mempool_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"update_gas_price\"}[5m])), \"label_name\", \"0.50 mempool_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(mempool_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"update_gas_price\"}[5m])), \"label_name\", \"0.95 mempool_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(mempool_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"update_gas_price\"}[5m])), \"label_name\", \"0.50 mempool_queueing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(mempool_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"update_gas_price\"}[5m])), \"label_name\", \"0.95 mempool_queueing_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        }
      ],
      "collapsed": true
    },
    "Mempool P2P Infra": {
      "panels": [
        {
          "title": "mempool_p2p_remote_client_send_attempts",
          "description": "Required number of remote connection attempts made by a mempool_p2p remote client",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50, sum by (le) (rate(mempool_p2p_remote_client_send_attempts_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))",
            "histogram_quantile(0.95, sum by (le) (rate(mempool_p2p_remote_client_send_attempts_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
          ],
          "extra_params": {}
        },
        {
          "title": "mempool_p2p_local_msgs_received",
          "description": "Counter of messages received by mempool_p2p local server",
          "type": "timeseries",
          "exprs": [
            "mempool_p2p_local_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "mempool_p2p_local_msgs_processed",
          "description": "Counter of messages processed by mempool_p2p local server",
          "type": "timeseries",
          "exprs": [
            "mempool_p2p_local_msgs_processed{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "local_queue_depth",
          "description": "The depth of the local priority queues",
          "type": "timeseries",
          "exprs": [
            "mempool_p2p_local_high_priority_queue_depth{cluster=~\"$cluster\", namespace=~\"$namespace\"}",
            "mempool_p2p_local_normal_priority_queue_depth{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "mempool_p2p_remote_msgs_received",
          "description": "Counter of messages received by mempool_p2p remote server",
          "type": "timeseries",
          "exprs": [
            "mempool_p2p_remote_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "mempool_p2p_remote_valid_msgs_received",
          "description": "Counter of valid messages received by mempool_p2p remote server",
          "type": "timeseries",
          "exprs": [
            "mempool_p2p_remote_valid_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "mempool_p2p_remote_msgs_processed",
          "description": "Counter of messages processed by mempool_p2p remote server",
          "type": "timeseries",
          "exprs": [
            "mempool_p2p_remote_msgs_processed{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "mempool_p2p_remote_number_of_connections",
          "description": "Number of connections to mempool_p2p remote server",
          "type": "timeseries",
          "exprs": [
            "mempool_p2p_remote_number_of_connections{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "add_transaction (client)",
          "description": "client infra metrics for request type add_transaction",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(mempool_p2p_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])), \"label_name\", \"0.50 mempool_p2p_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(mempool_p2p_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])), \"label_name\", \"0.95 mempool_p2p_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(mempool_p2p_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])), \"label_name\", \"0.50 mempool_p2p_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(mempool_p2p_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])), \"label_name\", \"0.95 mempool_p2p_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(mempool_p2p_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])), \"label_name\", \"0.50 mempool_p2p_remote_client_communication_failure_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(mempool_p2p_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])), \"label_name\", \"0.95 mempool_p2p_remote_client_communication_failure_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "broadcast_queued_transactions (client)",
          "description": "client infra metrics for request type broadcast_queued_transactions",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(mempool_p2p_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"broadcast_queued_transactions\"}[5m])), \"label_name\", \"0.50 mempool_p2p_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(mempool_p2p_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"broadcast_queued_transactions\"}[5m])), \"label_name\", \"0.95 mempool_p2p_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(mempool_p2p_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"broadcast_queued_transactions\"}[5m])), \"label_name\", \"0.50 mempool_p2p_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(mempool_p2p_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"broadcast_queued_transactions\"}[5m])), \"label_name\", \"0.95 mempool_p2p_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(mempool_p2p_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"broadcast_queued_transactions\"}[5m])), \"label_name\", \"0.50 mempool_p2p_remote_client_communication_failure_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(mempool_p2p_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"broadcast_queued_transactions\"}[5m])), \"label_name\", \"0.95 mempool_p2p_remote_client_communication_failure_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "continue_propagation (client)",
          "description": "client infra metrics for request type continue_propagation",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(mempool_p2p_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"continue_propagation\"}[5m])), \"label_name\", \"0.50 mempool_p2p_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(mempool_p2p_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"continue_propagation\"}[5m])), \"label_name\", \"0.95 mempool_p2p_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(mempool_p2p_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"continue_propagation\"}[5m])), \"label_name\", \"0.50 mempool_p2p_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(mempool_p2p_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"continue_propagation\"}[5m])), \"label_name\", \"0.95 mempool_p2p_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(mempool_p2p_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"continue_propagation\"}[5m])), \"label_name\", \"0.50 mempool_p2p_remote_client_communication_failure_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(mempool_p2p_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"continue_propagation\"}[5m])), \"label_name\", \"0.95 mempool_p2p_remote_client_communication_failure_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "add_transaction (server)",
          "description": "server infra metrics for request type add_transaction",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(mempool_p2p_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])), \"label_name\", \"0.50 mempool_p2p_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(mempool_p2p_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])), \"label_name\", \"0.95 mempool_p2p_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(mempool_p2p_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])), \"label_name\", \"0.50 mempool_p2p_queueing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(mempool_p2p_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_transaction\"}[5m])), \"label_name\", \"0.95 mempool_p2p_queueing_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "broadcast_queued_transactions (server)",
          "description": "server infra metrics for request type broadcast_queued_transactions",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(mempool_p2p_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"broadcast_queued_transactions\"}[5m])), \"label_name\", \"0.50 mempool_p2p_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(mempool_p2p_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"broadcast_queued_transactions\"}[5m])), \"label_name\", \"0.95 mempool_p2p_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(mempool_p2p_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"broadcast_queued_transactions\"}[5m])), \"label_name\", \"0.50 mempool_p2p_queueing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(mempool_p2p_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"broadcast_queued_transactions\"}[5m])), \"label_name\", \"0.95 mempool_p2p_queueing_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "continue_propagation (server)",
          "description": "server infra metrics for request type continue_propagation",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(mempool_p2p_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"continue_propagation\"}[5m])), \"label_name\", \"0.50 mempool_p2p_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(mempool_p2p_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"continue_propagation\"}[5m])), \"label_name\", \"0.95 mempool_p2p_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(mempool_p2p_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"continue_propagation\"}[5m])), \"label_name\", \"0.50 mempool_p2p_queueing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(mempool_p2p_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"continue_propagation\"}[5m])), \"label_name\", \"0.95 mempool_p2p_queueing_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        }
      ],
      "collapsed": true
    },
    "L1 Provider Infra": {
      "panels": [
        {
          "title": "l1_provider_remote_client_send_attempts",
          "description": "Required number of remote connection attempts made by a l1_provider remote client",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50, sum by (le) (rate(l1_provider_remote_client_send_attempts_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))",
            "histogram_quantile(0.95, sum by (le) (rate(l1_provider_remote_client_send_attempts_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
          ],
          "extra_params": {}
        },
        {
          "title": "l1_provider_local_msgs_received",
          "description": "Counter of messages received by l1_provider local server",
          "type": "timeseries",
          "exprs": [
            "l1_provider_local_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "l1_provider_local_msgs_processed",
          "description": "Counter of messages processed by l1_provider local server",
          "type": "timeseries",
          "exprs": [
            "l1_provider_local_msgs_processed{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "local_queue_depth",
          "description": "The depth of the local priority queues",
          "type": "timeseries",
          "exprs": [
            "l1_provider_local_high_priority_queue_depth{cluster=~\"$cluster\", namespace=~\"$namespace\"}",
            "l1_provider_local_normal_priority_queue_depth{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "l1_provider_remote_msgs_received",
          "description": "Counter of messages received by l1_provider remote server",
          "type": "timeseries",
          "exprs": [
            "l1_provider_remote_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "l1_provider_remote_valid_msgs_received",
          "description": "Counter of valid messages received by l1_provider remote server",
          "type": "timeseries",
          "exprs": [
            "l1_provider_remote_valid_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "l1_provider_remote_msgs_processed",
          "description": "Counter of messages processed by l1_provider remote server",
          "type": "timeseries",
          "exprs": [
            "l1_provider_remote_msgs_processed{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "l1_provider_remote_number_of_connections",
          "description": "Number of connections to l1_provider remote server",
          "type": "timeseries",
          "exprs": [
            "l1_provider_remote_number_of_connections{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "add_events (client)",
          "description": "client infra metrics for request type add_events",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_provider_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_events\"}[5m])), \"label_name\", \"0.50 l1_provider_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_provider_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_events\"}[5m])), \"label_name\", \"0.95 l1_provider_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_provider_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_events\"}[5m])), \"label_name\", \"0.50 l1_provider_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_provider_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_events\"}[5m])), \"label_name\", \"0.95 l1_provider_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_provider_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_events\"}[5m])), \"label_name\", \"0.50 l1_provider_remote_client_communication_failure_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_provider_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_events\"}[5m])), \"label_name\", \"0.95 l1_provider_remote_client_communication_failure_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "commit_block (client)",
          "description": "client infra metrics for request type commit_block",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_provider_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"commit_block\"}[5m])), \"label_name\", \"0.50 l1_provider_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_provider_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"commit_block\"}[5m])), \"label_name\", \"0.95 l1_provider_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_provider_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"commit_block\"}[5m])), \"label_name\", \"0.50 l1_provider_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_provider_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"commit_block\"}[5m])), \"label_name\", \"0.95 l1_provider_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_provider_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"commit_block\"}[5m])), \"label_name\", \"0.50 l1_provider_remote_client_communication_failure_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_provider_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"commit_block\"}[5m])), \"label_name\", \"0.95 l1_provider_remote_client_communication_failure_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "get_l1_provider_snapshot (client)",
          "description": "client infra metrics for request type get_l1_provider_snapshot",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_provider_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_l1_provider_snapshot\"}[5m])), \"label_name\", \"0.50 l1_provider_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_provider_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_l1_provider_snapshot\"}[5m])), \"label_name\", \"0.95 l1_provider_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_provider_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_l1_provider_snapshot\"}[5m])), \"label_name\", \"0.50 l1_provider_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_provider_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_l1_provider_snapshot\"}[5m])), \"label_name\", \"0.95 l1_provider_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_provider_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_l1_provider_snapshot\"}[5m])), \"label_name\", \"0.50 l1_provider_remote_client_communication_failure_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_provider_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_l1_provider_snapshot\"}[5m])), \"label_name\", \"0.95 l1_provider_remote_client_communication_failure_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "get_transactions (client)",
          "description": "client infra metrics for request type get_transactions",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_provider_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_transactions\"}[5m])), \"label_name\", \"0.50 l1_provider_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_provider_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_transactions\"}[5m])), \"label_name\", \"0.95 l1_provider_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_provider_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_transactions\"}[5m])), \"label_name\", \"0.50 l1_provider_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_provider_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_transactions\"}[5m])), \"label_name\", \"0.95 l1_provider_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_provider_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_transactions\"}[5m])), \"label_name\", \"0.50 l1_provider_remote_client_communication_failure_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_provider_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_transactions\"}[5m])), \"label_name\", \"0.95 l1_provider_remote_client_communication_failure_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "initialize (client)",
          "description": "client infra metrics for request type initialize",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_provider_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"initialize\"}[5m])), \"label_name\", \"0.50 l1_provider_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_provider_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"initialize\"}[5m])), \"label_name\", \"0.95 l1_provider_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_provider_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"initialize\"}[5m])), \"label_name\", \"0.50 l1_provider_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_provider_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"initialize\"}[5m])), \"label_name\", \"0.95 l1_provider_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_provider_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"initialize\"}[5m])), \"label_name\", \"0.50 l1_provider_remote_client_communication_failure_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_provider_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"initialize\"}[5m])), \"label_name\", \"0.95 l1_provider_remote_client_communication_failure_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "start_block (client)",
          "description": "client infra metrics for request type start_block",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_provider_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"start_block\"}[5m])), \"label_name\", \"0.50 l1_provider_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_provider_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"start_block\"}[5m])), \"label_name\", \"0.95 l1_provider_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_provider_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"start_block\"}[5m])), \"label_name\", \"0.50 l1_provider_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_provider_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"start_block\"}[5m])), \"label_name\", \"0.95 l1_provider_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_provider_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"start_block\"}[5m])), \"label_name\", \"0.50 l1_provider_remote_client_communication_failure_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_provider_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"start_block\"}[5m])), \"label_name\", \"0.95 l1_provider_remote_client_communication_failure_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "validate (client)",
          "description": "client infra metrics for request type validate",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_provider_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"validate\"}[5m])), \"label_name\", \"0.50 l1_provider_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_provider_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"validate\"}[5m])), \"label_name\", \"0.95 l1_provider_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_provider_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"validate\"}[5m])), \"label_name\", \"0.50 l1_provider_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_provider_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"validate\"}[5m])), \"label_name\", \"0.95 l1_provider_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_provider_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"validate\"}[5m])), \"label_name\", \"0.50 l1_provider_remote_client_communication_failure_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_provider_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"validate\"}[5m])), \"label_name\", \"0.95 l1_provider_remote_client_communication_failure_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "add_events (server)",
          "description": "server infra metrics for request type add_events",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_provider_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_events\"}[5m])), \"label_name\", \"0.50 l1_provider_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_provider_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_events\"}[5m])), \"label_name\", \"0.95 l1_provider_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_provider_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_events\"}[5m])), \"label_name\", \"0.50 l1_provider_queueing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_provider_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_events\"}[5m])), \"label_name\", \"0.95 l1_provider_queueing_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "commit_block (server)",
          "description": "server infra metrics for request type commit_block",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_provider_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"commit_block\"}[5m])), \"label_name\", \"0.50 l1_provider_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_provider_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"commit_block\"}[5m])), \"label_name\", \"0.95 l1_provider_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_provider_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"commit_block\"}[5m])), \"label_name\", \"0.50 l1_provider_queueing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_provider_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"commit_block\"}[5m])), \"label_name\", \"0.95 l1_provider_queueing_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "get_l1_provider_snapshot (server)",
          "description": "server infra metrics for request type get_l1_provider_snapshot",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_provider_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_l1_provider_snapshot\"}[5m])), \"label_name\", \"0.50 l1_provider_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_provider_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_l1_provider_snapshot\"}[5m])), \"label_name\", \"0.95 l1_provider_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_provider_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_l1_provider_snapshot\"}[5m])), \"label_name\", \"0.50 l1_provider_queueing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_provider_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_l1_provider_snapshot\"}[5m])), \"label_name\", \"0.95 l1_provider_queueing_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "get_transactions (server)",
          "description": "server infra metrics for request type get_transactions",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_provider_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_transactions\"}[5m])), \"label_name\", \"0.50 l1_provider_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_provider_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_transactions\"}[5m])), \"label_name\", \"0.95 l1_provider_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_provider_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_transactions\"}[5m])), \"label_name\", \"0.50 l1_provider_queueing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_provider_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_transactions\"}[5m])), \"label_name\", \"0.95 l1_provider_queueing_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "initialize (server)",
          "description": "server infra metrics for request type initialize",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_provider_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"initialize\"}[5m])), \"label_name\", \"0.50 l1_provider_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_provider_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"initialize\"}[5m])), \"label_name\", \"0.95 l1_provider_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_provider_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"initialize\"}[5m])), \"label_name\", \"0.50 l1_provider_queueing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_provider_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"initialize\"}[5m])), \"label_name\", \"0.95 l1_provider_queueing_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "start_block (server)",
          "description": "server infra metrics for request type start_block",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_provider_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"start_block\"}[5m])), \"label_name\", \"0.50 l1_provider_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_provider_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"start_block\"}[5m])), \"label_name\", \"0.95 l1_provider_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_provider_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"start_block\"}[5m])), \"label_name\", \"0.50 l1_provider_queueing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_provider_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"start_block\"}[5m])), \"label_name\", \"0.95 l1_provider_queueing_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "validate (server)",
          "description": "server infra metrics for request type validate",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_provider_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"validate\"}[5m])), \"label_name\", \"0.50 l1_provider_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_provider_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"validate\"}[5m])), \"label_name\", \"0.95 l1_provider_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_provider_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"validate\"}[5m])), \"label_name\", \"0.50 l1_provider_queueing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_provider_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"validate\"}[5m])), \"label_name\", \"0.95 l1_provider_queueing_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        }
      ],
      "collapsed": true
    },
    "L1 Gas Price Infra": {
      "panels": [
        {
          "title": "l1_gas_price_remote_client_send_attempts",
          "description": "Required number of remote connection attempts made by a l1_gas_price remote client",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50, sum by (le) (rate(l1_gas_price_remote_client_send_attempts_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))",
            "histogram_quantile(0.95, sum by (le) (rate(l1_gas_price_remote_client_send_attempts_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
          ],
          "extra_params": {}
        },
        {
          "title": "l1_gas_price_local_msgs_received",
          "description": "Counter of messages received by l1_gas_price local server",
          "type": "timeseries",
          "exprs": [
            "l1_gas_price_local_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "l1_gas_price_local_msgs_processed",
          "description": "Counter of messages processed by l1_gas_price local server",
          "type": "timeseries",
          "exprs": [
            "l1_gas_price_local_msgs_processed{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "local_queue_depth",
          "description": "The depth of the local priority queues",
          "type": "timeseries",
          "exprs": [
            "l1_gas_price_local_high_priority_queue_depth{cluster=~\"$cluster\", namespace=~\"$namespace\"}",
            "l1_gas_price_local_normal_priority_queue_depth{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "l1_gas_price_remote_msgs_received",
          "description": "Counter of messages received by l1_gas_price remote server",
          "type": "timeseries",
          "exprs": [
            "l1_gas_price_remote_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "l1_gas_price_remote_valid_msgs_received",
          "description": "Counter of valid messages received by l1_gas_price remote server",
          "type": "timeseries",
          "exprs": [
            "l1_gas_price_remote_valid_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "l1_gas_price_remote_msgs_processed",
          "description": "Counter of messages processed by l1_gas_price remote server",
          "type": "timeseries",
          "exprs": [
            "l1_gas_price_remote_msgs_processed{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "l1_gas_price_remote_number_of_connections",
          "description": "Number of connections to l1_gas_price remote server",
          "type": "timeseries",
          "exprs": [
            "l1_gas_price_remote_number_of_connections{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "add_gas_price (client)",
          "description": "client infra metrics for request type add_gas_price",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_gas_price_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_gas_price\"}[5m])), \"label_name\", \"0.50 l1_gas_price_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_gas_price_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_gas_price\"}[5m])), \"label_name\", \"0.95 l1_gas_price_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_gas_price_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_gas_price\"}[5m])), \"label_name\", \"0.50 l1_gas_price_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_gas_price_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_gas_price\"}[5m])), \"label_name\", \"0.95 l1_gas_price_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_gas_price_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_gas_price\"}[5m])), \"label_name\", \"0.50 l1_gas_price_remote_client_communication_failure_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_gas_price_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_gas_price\"}[5m])), \"label_name\", \"0.95 l1_gas_price_remote_client_communication_failure_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "get_eth_to_fri_rate (client)",
          "description": "client infra metrics for request type get_eth_to_fri_rate",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_gas_price_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_eth_to_fri_rate\"}[5m])), \"label_name\", \"0.50 l1_gas_price_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_gas_price_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_eth_to_fri_rate\"}[5m])), \"label_name\", \"0.95 l1_gas_price_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_gas_price_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_eth_to_fri_rate\"}[5m])), \"label_name\", \"0.50 l1_gas_price_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_gas_price_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_eth_to_fri_rate\"}[5m])), \"label_name\", \"0.95 l1_gas_price_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_gas_price_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_eth_to_fri_rate\"}[5m])), \"label_name\", \"0.50 l1_gas_price_remote_client_communication_failure_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_gas_price_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_eth_to_fri_rate\"}[5m])), \"label_name\", \"0.95 l1_gas_price_remote_client_communication_failure_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "get_gas_price (client)",
          "description": "client infra metrics for request type get_gas_price",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_gas_price_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_gas_price\"}[5m])), \"label_name\", \"0.50 l1_gas_price_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_gas_price_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_gas_price\"}[5m])), \"label_name\", \"0.95 l1_gas_price_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_gas_price_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_gas_price\"}[5m])), \"label_name\", \"0.50 l1_gas_price_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_gas_price_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_gas_price\"}[5m])), \"label_name\", \"0.95 l1_gas_price_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_gas_price_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_gas_price\"}[5m])), \"label_name\", \"0.50 l1_gas_price_remote_client_communication_failure_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_gas_price_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_gas_price\"}[5m])), \"label_name\", \"0.95 l1_gas_price_remote_client_communication_failure_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "initialize (client)",
          "description": "client infra metrics for request type initialize",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_gas_price_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"initialize\"}[5m])), \"label_name\", \"0.50 l1_gas_price_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_gas_price_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"initialize\"}[5m])), \"label_name\", \"0.95 l1_gas_price_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_gas_price_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"initialize\"}[5m])), \"label_name\", \"0.50 l1_gas_price_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_gas_price_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"initialize\"}[5m])), \"label_name\", \"0.95 l1_gas_price_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_gas_price_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"initialize\"}[5m])), \"label_name\", \"0.50 l1_gas_price_remote_client_communication_failure_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_gas_price_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"initialize\"}[5m])), \"label_name\", \"0.95 l1_gas_price_remote_client_communication_failure_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "add_gas_price (server)",
          "description": "server infra metrics for request type add_gas_price",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_gas_price_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_gas_price\"}[5m])), \"label_name\", \"0.50 l1_gas_price_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_gas_price_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_gas_price\"}[5m])), \"label_name\", \"0.95 l1_gas_price_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_gas_price_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_gas_price\"}[5m])), \"label_name\", \"0.50 l1_gas_price_queueing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_gas_price_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_gas_price\"}[5m])), \"label_name\", \"0.95 l1_gas_price_queueing_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "get_eth_to_fri_rate (server)",
          "description": "server infra metrics for request type get_eth_to_fri_rate",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_gas_price_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_eth_to_fri_rate\"}[5m])), \"label_name\", \"0.50 l1_gas_price_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_gas_price_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_eth_to_fri_rate\"}[5m])), \"label_name\", \"0.95 l1_gas_price_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_gas_price_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_eth_to_fri_rate\"}[5m])), \"label_name\", \"0.50 l1_gas_price_queueing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_gas_price_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_eth_to_fri_rate\"}[5m])), \"label_name\", \"0.95 l1_gas_price_queueing_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "get_gas_price (server)",
          "description": "server infra metrics for request type get_gas_price",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_gas_price_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_gas_price\"}[5m])), \"label_name\", \"0.50 l1_gas_price_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_gas_price_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_gas_price\"}[5m])), \"label_name\", \"0.95 l1_gas_price_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_gas_price_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_gas_price\"}[5m])), \"label_name\", \"0.50 l1_gas_price_queueing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_gas_price_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_gas_price\"}[5m])), \"label_name\", \"0.95 l1_gas_price_queueing_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "initialize (server)",
          "description": "server infra metrics for request type initialize",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_gas_price_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"initialize\"}[5m])), \"label_name\", \"0.50 l1_gas_price_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_gas_price_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"initialize\"}[5m])), \"label_name\", \"0.95 l1_gas_price_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_gas_price_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"initialize\"}[5m])), \"label_name\", \"0.50 l1_gas_price_queueing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_gas_price_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"initialize\"}[5m])), \"label_name\", \"0.95 l1_gas_price_queueing_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        }
      ],
      "collapsed": true
    },
    "Class Manager Infra": {
      "panels": [
        {
          "title": "class_manager_remote_client_send_attempts",
          "description": "Required number of remote connection attempts made by a class_manager remote client",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50, sum by (le) (rate(class_manager_remote_client_send_attempts_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))",
            "histogram_quantile(0.95, sum by (le) (rate(class_manager_remote_client_send_attempts_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
          ],
          "extra_params": {}
        },
        {
          "title": "class_manager_local_msgs_received",
          "description": "Counter of messages received by class_manager local server",
          "type": "timeseries",
          "exprs": [
            "class_manager_local_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "class_manager_local_msgs_processed",
          "description": "Counter of messages processed by class_manager local server",
          "type": "timeseries",
          "exprs": [
            "class_manager_local_msgs_processed{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "local_queue_depth",
          "description": "The depth of the local priority queues",
          "type": "timeseries",
          "exprs": [
            "class_manager_local_high_priority_queue_depth{cluster=~\"$cluster\", namespace=~\"$namespace\"}",
            "class_manager_local_normal_priority_queue_depth{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "class_manager_remote_msgs_received",
          "description": "Counter of messages received by class_manager remote server",
          "type": "timeseries",
          "exprs": [
            "class_manager_remote_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "class_manager_remote_valid_msgs_received",
          "description": "Counter of valid messages received by class_manager remote server",
          "type": "timeseries",
          "exprs": [
            "class_manager_remote_valid_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "class_manager_remote_msgs_processed",
          "description": "Counter of messages processed by class_manager remote server",
          "type": "timeseries",
          "exprs": [
            "class_manager_remote_msgs_processed{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "class_manager_remote_number_of_connections",
          "description": "Number of connections to class_manager remote server",
          "type": "timeseries",
          "exprs": [
            "class_manager_remote_number_of_connections{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "add_class (client)",
          "description": "client infra metrics for request type add_class",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(class_manager_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_class\"}[5m])), \"label_name\", \"0.50 class_manager_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(class_manager_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_class\"}[5m])), \"label_name\", \"0.95 class_manager_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(class_manager_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_class\"}[5m])), \"label_name\", \"0.50 class_manager_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(class_manager_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_class\"}[5m])), \"label_name\", \"0.95 class_manager_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(class_manager_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_class\"}[5m])), \"label_name\", \"0.50 class_manager_remote_client_communication_failure_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(class_manager_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_class\"}[5m])), \"label_name\", \"0.95 class_manager_remote_client_communication_failure_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "add_class_and_executable_unsafe (client)",
          "description": "client infra metrics for request type add_class_and_executable_unsafe",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(class_manager_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_class_and_executable_unsafe\"}[5m])), \"label_name\", \"0.50 class_manager_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(class_manager_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_class_and_executable_unsafe\"}[5m])), \"label_name\", \"0.95 class_manager_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(class_manager_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_class_and_executable_unsafe\"}[5m])), \"label_name\", \"0.50 class_manager_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(class_manager_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_class_and_executable_unsafe\"}[5m])), \"label_name\", \"0.95 class_manager_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(class_manager_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_class_and_executable_unsafe\"}[5m])), \"label_name\", \"0.50 class_manager_remote_client_communication_failure_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(class_manager_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_class_and_executable_unsafe\"}[5m])), \"label_name\", \"0.95 class_manager_remote_client_communication_failure_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "add_deprecated_class (client)",
          "description": "client infra metrics for request type add_deprecated_class",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(class_manager_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_deprecated_class\"}[5m])), \"label_name\", \"0.50 class_manager_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(class_manager_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_deprecated_class\"}[5m])), \"label_name\", \"0.95 class_manager_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(class_manager_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_deprecated_class\"}[5m])), \"label_name\", \"0.50 class_manager_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(class_manager_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_deprecated_class\"}[5m])), \"label_name\", \"0.95 class_manager_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(class_manager_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_deprecated_class\"}[5m])), \"label_name\", \"0.50 class_manager_remote_client_communication_failure_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(class_manager_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_deprecated_class\"}[5m])), \"label_name\", \"0.95 class_manager_remote_client_communication_failure_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "get_executable (client)",
          "description": "client infra metrics for request type get_executable",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(class_manager_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_executable\"}[5m])), \"label_name\", \"0.50 class_manager_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(class_manager_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_executable\"}[5m])), \"label_name\", \"0.95 class_manager_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(class_manager_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_executable\"}[5m])), \"label_name\", \"0.50 class_manager_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(class_manager_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_executable\"}[5m])), \"label_name\", \"0.95 class_manager_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(class_manager_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_executable\"}[5m])), \"label_name\", \"0.50 class_manager_remote_client_communication_failure_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(class_manager_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_executable\"}[5m])), \"label_name\", \"0.95 class_manager_remote_client_communication_failure_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "get_sierra (client)",
          "description": "client infra metrics for request type get_sierra",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(class_manager_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_sierra\"}[5m])), \"label_name\", \"0.50 class_manager_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(class_manager_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_sierra\"}[5m])), \"label_name\", \"0.95 class_manager_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(class_manager_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_sierra\"}[5m])), \"label_name\", \"0.50 class_manager_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(class_manager_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_sierra\"}[5m])), \"label_name\", \"0.95 class_manager_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(class_manager_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_sierra\"}[5m])), \"label_name\", \"0.50 class_manager_remote_client_communication_failure_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(class_manager_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_sierra\"}[5m])), \"label_name\", \"0.95 class_manager_remote_client_communication_failure_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "add_class (server)",
          "description": "server infra metrics for request type add_class",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(class_manager_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_class\"}[5m])), \"label_name\", \"0.50 class_manager_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(class_manager_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_class\"}[5m])), \"label_name\", \"0.95 class_manager_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(class_manager_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_class\"}[5m])), \"label_name\", \"0.50 class_manager_queueing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(class_manager_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_class\"}[5m])), \"label_name\", \"0.95 class_manager_queueing_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "add_class_and_executable_unsafe (server)",
          "description": "server infra metrics for request type add_class_and_executable_unsafe",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(class_manager_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_class_and_executable_unsafe\"}[5m])), \"label_name\", \"0.50 class_manager_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(class_manager_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_class_and_executable_unsafe\"}[5m])), \"label_name\", \"0.95 class_manager_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(class_manager_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_class_and_executable_unsafe\"}[5m])), \"label_name\", \"0.50 class_manager_queueing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(class_manager_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_class_and_executable_unsafe\"}[5m])), \"label_name\", \"0.95 class_manager_queueing_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "add_deprecated_class (server)",
          "description": "server infra metrics for request type add_deprecated_class",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(class_manager_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_deprecated_class\"}[5m])), \"label_name\", \"0.50 class_manager_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(class_manager_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_deprecated_class\"}[5m])), \"label_name\", \"0.95 class_manager_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(class_manager_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_deprecated_class\"}[5m])), \"label_name\", \"0.50 class_manager_queueing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(class_manager_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"add_deprecated_class\"}[5m])), \"label_name\", \"0.95 class_manager_queueing_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "get_executable (server)",
          "description": "server infra metrics for request type get_executable",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(class_manager_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_executable\"}[5m])), \"label_name\", \"0.50 class_manager_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(class_manager_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_executable\"}[5m])), \"label_name\", \"0.95 class_manager_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(class_manager_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_executable\"}[5m])), \"label_name\", \"0.50 class_manager_queueing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(class_manager_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_executable\"}[5m])), \"label_name\", \"0.95 class_manager_queueing_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "get_sierra (server)",
          "description": "server infra metrics for request type get_sierra",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(class_manager_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_sierra\"}[5m])), \"label_name\", \"0.50 class_manager_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(class_manager_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_sierra\"}[5m])), \"label_name\", \"0.95 class_manager_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(class_manager_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_sierra\"}[5m])), \"label_name\", \"0.50 class_manager_queueing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(class_manager_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_sierra\"}[5m])), \"label_name\", \"0.95 class_manager_queueing_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        }
      ],
      "collapsed": true
    },
    "Sierra Compiler Infra": {
      "panels": [
        {
          "title": "sierra_compiler_remote_client_send_attempts",
          "description": "Required number of remote connection attempts made by a sierra_compiler remote client",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50, sum by (le) (rate(sierra_compiler_remote_client_send_attempts_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))",
            "histogram_quantile(0.95, sum by (le) (rate(sierra_compiler_remote_client_send_attempts_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
          ],
          "extra_params": {}
        },
        {
          "title": "sierra_compiler_local_msgs_received",
          "description": "Counter of messages received by sierra_compiler local server",
          "type": "timeseries",
          "exprs": [
            "sierra_compiler_local_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "sierra_compiler_local_msgs_processed",
          "description": "Counter of messages processed by sierra_compiler local server",
          "type": "timeseries",
          "exprs": [
            "sierra_compiler_local_msgs_processed{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "local_queue_depth",
          "description": "The depth of the local priority queues",
          "type": "timeseries",
          "exprs": [
            "sierra_compiler_local_high_priority_queue_depth{cluster=~\"$cluster\", namespace=~\"$namespace\"}",
            "sierra_compiler_local_normal_priority_queue_depth{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "sierra_compiler_remote_msgs_received",
          "description": "Counter of messages received by sierra_compiler remote server",
          "type": "timeseries",
          "exprs": [
            "sierra_compiler_remote_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "sierra_compiler_remote_valid_msgs_received",
          "description": "Counter of valid messages received by sierra_compiler remote server",
          "type": "timeseries",
          "exprs": [
            "sierra_compiler_remote_valid_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "sierra_compiler_remote_msgs_processed",
          "description": "Counter of messages processed by sierra_compiler remote server",
          "type": "timeseries",
          "exprs": [
            "sierra_compiler_remote_msgs_processed{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "sierra_compiler_remote_number_of_connections",
          "description": "Number of connections to sierra_compiler remote server",
          "type": "timeseries",
          "exprs": [
            "sierra_compiler_remote_number_of_connections{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "compile (client)",
          "description": "client infra metrics for request type compile",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(sierra_compiler_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"compile\"}[5m])), \"label_name\", \"0.50 sierra_compiler_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(sierra_compiler_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"compile\"}[5m])), \"label_name\", \"0.95 sierra_compiler_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(sierra_compiler_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"compile\"}[5m])), \"label_name\", \"0.50 sierra_compiler_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(sierra_compiler_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"compile\"}[5m])), \"label_name\", \"0.95 sierra_compiler_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(sierra_compiler_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"compile\"}[5m])), \"label_name\", \"0.50 sierra_compiler_remote_client_communication_failure_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(sierra_compiler_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"compile\"}[5m])), \"label_name\", \"0.95 sierra_compiler_remote_client_communication_failure_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "compile (server)",
          "description": "server infra metrics for request type compile",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(sierra_compiler_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"compile\"}[5m])), \"label_name\", \"0.50 sierra_compiler_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(sierra_compiler_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"compile\"}[5m])), \"label_name\", \"0.95 sierra_compiler_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(sierra_compiler_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"compile\"}[5m])), \"label_name\", \"0.50 sierra_compiler_queueing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(sierra_compiler_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"compile\"}[5m])), \"label_name\", \"0.95 sierra_compiler_queueing_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        }
      ],
      "collapsed": true
    },
    "L1 Endpoint Monitor Infra": {
      "panels": [
        {
          "title": "l1_endpoint_monitor_remote_client_send_attempts",
          "description": "Required number of remote connection attempts made by a l1_endpoint_monitor remote client",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50, sum by (le) (rate(l1_endpoint_monitor_remote_client_send_attempts_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))",
            "histogram_quantile(0.95, sum by (le) (rate(l1_endpoint_monitor_remote_client_send_attempts_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[5m])))"
          ],
          "extra_params": {}
        },
        {
          "title": "l1_endpoint_monitor_local_msgs_received",
          "description": "Counter of messages received by l1_endpoint_monitor local server",
          "type": "timeseries",
          "exprs": [
            "l1_endpoint_monitor_local_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "l1_endpoint_monitor_local_msgs_processed",
          "description": "Counter of messages processed by l1_endpoint_monitor local server",
          "type": "timeseries",
          "exprs": [
            "l1_endpoint_monitor_local_msgs_processed{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "local_queue_depth",
          "description": "The depth of the local priority queues",
          "type": "timeseries",
          "exprs": [
            "l1_endpoint_monitor_local_high_priority_queue_depth{cluster=~\"$cluster\", namespace=~\"$namespace\"}",
            "l1_endpoint_monitor_local_normal_priority_queue_depth{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "l1_endpoint_monitor_remote_msgs_received",
          "description": "Counter of messages received by l1_endpoint_monitor remote server",
          "type": "timeseries",
          "exprs": [
            "l1_endpoint_monitor_remote_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "l1_endpoint_monitor_remote_valid_msgs_received",
          "description": "Counter of valid messages received by l1_endpoint_monitor remote server",
          "type": "timeseries",
          "exprs": [
            "l1_endpoint_monitor_remote_valid_msgs_received{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "l1_endpoint_monitor_remote_msgs_processed",
          "description": "Counter of messages processed by l1_endpoint_monitor remote server",
          "type": "timeseries",
          "exprs": [
            "l1_endpoint_monitor_remote_msgs_processed{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "l1_endpoint_monitor_remote_number_of_connections",
          "description": "Number of connections to l1_endpoint_monitor remote server",
          "type": "timeseries",
          "exprs": [
            "l1_endpoint_monitor_remote_number_of_connections{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "get_active_l1_endpoint (client)",
          "description": "client infra metrics for request type get_active_l1_endpoint",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_endpoint_monitor_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_active_l1_endpoint\"}[5m])), \"label_name\", \"0.50 l1_endpoint_monitor_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_endpoint_monitor_local_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_active_l1_endpoint\"}[5m])), \"label_name\", \"0.95 l1_endpoint_monitor_local_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_endpoint_monitor_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_active_l1_endpoint\"}[5m])), \"label_name\", \"0.50 l1_endpoint_monitor_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_endpoint_monitor_remote_response_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_active_l1_endpoint\"}[5m])), \"label_name\", \"0.95 l1_endpoint_monitor_remote_response_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_endpoint_monitor_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_active_l1_endpoint\"}[5m])), \"label_name\", \"0.50 l1_endpoint_monitor_remote_client_communication_failure_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_endpoint_monitor_remote_client_communication_failure_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_active_l1_endpoint\"}[5m])), \"label_name\", \"0.95 l1_endpoint_monitor_remote_client_communication_failure_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        },
        {
          "title": "get_active_l1_endpoint (server)",
          "description": "server infra metrics for request type get_active_l1_endpoint",
          "type": "timeseries",
          "exprs": [
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_endpoint_monitor_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_active_l1_endpoint\"}[5m])), \"label_name\", \"0.50 l1_endpoint_monitor_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_endpoint_monitor_processing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_active_l1_endpoint\"}[5m])), \"label_name\", \"0.95 l1_endpoint_monitor_processing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.50,label_replace(sum by (le) (rate(l1_endpoint_monitor_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_active_l1_endpoint\"}[5m])), \"label_name\", \"0.50 l1_endpoint_monitor_queueing_times_secs\", \"le\", \".*\"))",
            "histogram_quantile(0.95,label_replace(sum by (le) (rate(l1_endpoint_monitor_queueing_times_secs_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\", request_variant=\"get_active_l1_endpoint\"}[5m])), \"label_name\", \"0.95 l1_endpoint_monitor_queueing_times_secs\", \"le\", \".*\"))"
          ],
          "extra_params": {}
        }
      ],
      "collapsed": true
    },
    "Pod Metrics": {
      "panels": [
        {
          "title": "pod_memory_utilization",
          "description": "Pod Memory Utilization",
          "type": "timeseries",
          "exprs": [
            "container_memory_working_set_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "pod_disk_utilization",
          "description": "Pod Disk Utilization",
          "type": "timeseries",
          "exprs": [
            "kubelet_volume_stats_used_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        },
        {
          "title": "pod_cpu_utilization",
          "description": "Pod CPU Utilization",
          "type": "timeseries",
          "exprs": [
            "container_cpu_usage_seconds_total{cluster=~\"$cluster\", namespace=~\"$namespace\"}"
          ],
          "extra_params": {}
        }
      ],
      "collapsed": true
    }
  }
}

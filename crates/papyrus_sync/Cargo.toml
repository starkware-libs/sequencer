[package]
name = "papyrus_sync"
version.workspace = true
edition.workspace = true
repository.workspace = true
license-file.workspace = true

[dependencies]
async-stream.workspace = true
async-trait.workspace = true
cairo-lang-starknet-classes.workspace = true
chrono.workspace = true
futures.workspace = true
futures-util.workspace = true
indexmap = { workspace = true, features = ["serde"] }
itertools.workspace = true
lru.workspace = true
metrics.workspace = true
papyrus_base_layer.workspace = true
papyrus_common.workspace = true
papyrus_config.workspace = true
papyrus_proc_macros.workspace = true
papyrus_storage.workspace = true
reqwest = { workspace = true, features = ["blocking", "json"] }
serde = { workspace = true, features = ["derive"] }
starknet-types-core.workspace = true
starknet_api.workspace = true
starknet_client.workspace = true
thiserror.workspace = true
tokio = { workspace = true, features = ["full", "sync"] }
tracing.workspace = true

[dev-dependencies]
assert_matches.workspace = true
mockall.workspace = true
papyrus_storage = { workspace = true, features = ["testing"] }
papyrus_test_utils.workspace = true
pretty_assertions.workspace = true
simple_logger.workspace = true
starknet_api = { workspace = true, features = ["testing"] }
starknet_client = { workspace = true, features = ["testing"] }
tokio-stream.workspace = true

[lints.rust]
# See [here](https://github.com/taiki-e/cargo-llvm-cov/issues/370) for a discussion on why this is
# needed (from rust 1.80).
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(coverage_nightly)'] }

[package]
name = "starknet_sequencer_node"
version.workspace = true
edition.workspace = true
repository.workspace = true
license.workspace = true

[features]
testing = []

[lints]
workspace = true

[dependencies]
apollo_reverts.workspace = true
anyhow.workspace = true
clap.workspace = true
const_format.workspace = true
futures.workspace = true
papyrus_base_layer.workspace = true
papyrus_config.workspace = true
rstest.workspace = true
serde.workspace = true
serde_json.workspace = true
starknet_batcher.workspace = true
starknet_batcher_types.workspace = true
starknet_class_manager.workspace = true
starknet_class_manager_types.workspace = true
starknet_consensus_manager.workspace = true
starknet_gateway.workspace = true
starknet_gateway_types.workspace = true
starknet_http_server.workspace = true
starknet_infra_utils.workspace = true
starknet_l1_provider.workspace = true
starknet_l1_provider_types.workspace = true
starknet_l1_gas_price.workspace = true
starknet_mempool.workspace = true
starknet_mempool_p2p.workspace = true
starknet_mempool_p2p_types.workspace = true
starknet_mempool_types.workspace = true
starknet_monitoring_endpoint.workspace = true
starknet_sequencer_infra.workspace = true
starknet_sierra_multicompile.workspace = true
starknet_sierra_multicompile_types.workspace = true
starknet_state_sync.workspace = true
starknet_state_sync_types.workspace = true
tikv-jemallocator.workspace = true
tokio.workspace = true
tracing.workspace = true
validator.workspace = true

[dev-dependencies]
assert_matches.workspace = true
colored.workspace = true
mempool_test_utils.workspace = true
pretty_assertions.workspace = true
starknet_infra_utils = { workspace = true, features = ["testing"] }

[package.metadata.cargo-machete]
ignored = ["tikv-jemallocator"]

[package]
edition.workspace = true
license.workspace = true
name = "starknet_gateway"
repository.workspace = true
version.workspace = true

[lints]
workspace = true

[features]
testing = ["blockifier/testing", "blockifier_test_utils"]

[dependencies]
async-trait.workspace = true
axum.workspace = true
blockifier.workspace = true
blockifier_test_utils = { workspace = true, optional = true }
cairo-lang-starknet-classes.workspace = true
futures.workspace = true
mempool_test_utils.workspace = true
papyrus_config.workspace = true
papyrus_network_types.workspace = true
papyrus_proc_macros.workspace = true
papyrus_rpc.workspace = true
reqwest.workspace = true
serde.workspace = true
serde_json.workspace = true
starknet-types-core.workspace = true
starknet_api.workspace = true
starknet_class_manager_types.workspace = true
starknet_gateway_types.workspace = true
starknet_mempool_types.workspace = true
starknet_monitoring_endpoint.workspace = true
starknet_sequencer_infra.workspace = true
starknet_sequencer_metrics.workspace = true
starknet_sierra_multicompile.workspace = true
starknet_state_sync_types.workspace = true
strum.workspace = true
strum_macros.workspace = true
thiserror.workspace = true
tokio.workspace = true
tracing.workspace = true
validator.workspace = true

[dev-dependencies]
assert_matches.workspace = true
blockifier = { workspace = true, features = ["testing"] }
blockifier_test_utils.workspace = true
cairo-lang-sierra-to-casm.workspace = true
criterion = { workspace = true, features = ["async_tokio"] }
metrics.workspace = true
metrics-exporter-prometheus.workspace = true
mockall.workspace = true
mockito.workspace = true
num-bigint.workspace = true
papyrus_network_types = { workspace = true, features = ["testing"] }
papyrus_test_utils.workspace = true
pretty_assertions.workspace = true
rstest.workspace = true
starknet_class_manager_types = { workspace = true, features = ["testing"] }
starknet_mempool.workspace = true
starknet_mempool_types = { workspace = true, features = ["testing"] }
starknet_state_sync_types = { workspace = true, features = ["testing"] }
tracing-test.workspace = true

[[bench]]
harness = false
name = "starknet_gateway"
path = "benches/main.rs"
required-features = ["testing"]

[package]
name = "apollo_network"
version.workspace = true
edition.workspace = true
repository.workspace = true
license-file.workspace = true

[features]
testing = []

[dependencies]
apollo_config.workspace = true
apollo_metrics.workspace = true
apollo_network_types.workspace = true
async-stream.workspace = true
async-trait.workspace = true
bytes.workspace = true
clap = { workspace = true, features = ["derive"] }
derive_more.workspace = true
futures.workspace = true
lazy_static.workspace = true
libp2p = { workspace = true, features = [
  "dns",
  "gossipsub",
  "identify",
  "kad",
  "macros",
  "noise",
  "quic",
  "serde",
  "tcp",
  "tokio",
  "yamux",
] }
metrics.workspace = true
metrics-exporter-prometheus.workspace = true
replace_with.workspace = true
serde = { workspace = true, features = ["derive"] }
starknet_api.workspace = true
thiserror.workspace = true
tokio = { workspace = true, features = ["full", "sync"] }
tokio-retry.workspace = true
tracing.workspace = true
tracing-subscriber.workspace = true
unsigned-varint = { workspace = true, features = ["std"] }
validator = { workspace = true, features = ["derive"] }


[dev-dependencies]
assert_matches.workspace = true
deadqueue = { workspace = true, features = ["unlimited"] }
defaultmap.workspace = true
libp2p-swarm-test.workspace = true
mockall.workspace = true
pretty_assertions.workspace = true
rstest.workspace = true
tokio = { workspace = true, features = ["full", "sync", "test-util"] }
tokio-stream.workspace = true
void.workspace = true
waker-fn.workspace = true

[lints]
workspace = true

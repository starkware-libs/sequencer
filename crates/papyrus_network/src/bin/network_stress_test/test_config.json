{
    "buffer_size": {
      "description": "The buffer size for the network receiver.",
      "privacy": "Public",
      "value": 1000
    },
    "message_size": {
      "description": "The size of the payload for the test messages.",
      "privacy": "Public",
      "value": 1000
    },
    "network_config.advertised_multiaddr": {
      "description": "The external address other peers see this node. If this is set, the node will not try to find out which addresses it has and will write this address as external instead",
      "privacy": "Public",
      "value": ""
    },
    "network_config.advertised_multiaddr.#is_none": {
      "description": "Flag for an optional field.",
      "privacy": "TemporaryValue",
      "value": true
    },
    "network_config.bootstrap_peer_multiaddr": {
      "description": "The multiaddress of the peer node. It should include the peer's id. For more info: https://docs.libp2p.io/concepts/fundamentals/peers/",
      "privacy": "Public",
      "value": "/ip4/10.20.20.36/tcp/10000/p2p/12D3KooWDpJ7As7BWAwRMfu1VU2WCqNjvq387JEYKDBj4kx6nXTN"
    },
    "network_config.bootstrap_peer_multiaddr.#is_none": {
      "description": "Flag for an optional field.",
      "privacy": "TemporaryValue",
      "value": false
    },
    "network_config.chain_id": {
      "description": "The chain to follow. For more details see https://docs.starknet.io/documentation/architecture_and_concepts/Blocks/transactions/#chain-id.",
      "privacy": "Public",
      "value": "SN_MAIN"
    },
    "network_config.discovery_config.bootstrap_dial_retry_config.base_delay_millis": {
      "description": "The base delay in milliseconds for the exponential backoff strategy.",
      "privacy": "Public",
      "value": 2
    },
    "network_config.discovery_config.bootstrap_dial_retry_config.factor": {
      "description": "The factor for the exponential backoff strategy.",
      "privacy": "Public",
      "value": 5
    },
    "network_config.discovery_config.bootstrap_dial_retry_config.max_delay_seconds": {
      "description": "The maximum delay in seconds for the exponential backoff strategy.",
      "privacy": "Public",
      "value": 5
    },
    "network_config.discovery_config.heartbeat_interval": {
      "description": "The interval between each discovery (Kademlia) query in milliseconds.",
      "privacy": "Public",
      "value": 100
    },
    "network_config.idle_connection_timeout": {
      "description": "Amount of time in seconds that a connection with no active sessions will stay alive.",
      "privacy": "Public",
      "value": 120
    },
    "network_config.peer_manager_config.malicious_timeout_seconds": {
      "description": "The duration in seconds a peer is blacklisted after being marked as malicious.",
      "privacy": "Public",
      "value": 31536000
    },
    "network_config.peer_manager_config.unstable_timeout_millis": {
      "description": "The duration in milliseconds a peer blacklisted after being reported as unstable.",
      "privacy": "Public",
      "value": 1000
    },
    "network_config.quic_port": {
      "description": "The port that the node listens on for incoming quic connections.",
      "privacy": "Public",
      "value": 10003
    },
    "network_config.secret_key": {
      "description": "The secret key used for building the peer id. If it's an empty string a random one will be used.",
      "privacy": "Private",
      "value": ""
    },
    "network_config.session_timeout": {
      "description": "Maximal time in seconds that each session can take before failing on timeout.",
      "privacy": "Public",
      "value": 120
    },
    "network_config.tcp_port": {
      "description": "The port that the node listens on for incoming tcp connections.",
      "privacy": "Public",
      "value": 10002
    },
    "num_messages": {
      "description": "The amount of messages to send and receive.",
      "privacy": "Public",
      "value": 6000
    },
    "output_path": {
      "description": "The path of the output file.",
      "privacy": "Public",
      "value": "crates/papyrus_network/src/bin/network_stress_test/output.csv"
    }
  }
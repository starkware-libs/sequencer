[workspace]
# Using version 2 to avoid unifying features. For more info, read:
#   https://doc.rust-lang.org/cargo/reference/resolver.html#feature-resolver-version-2
resolver = "2"

members = [
  "crates/apollo_batcher",
  "crates/apollo_batcher_types",
  "crates/apollo_central_sync",
  "crates/apollo_class_manager",
  "crates/apollo_class_manager_types",
  "crates/apollo_compilation_utils",
  "crates/apollo_compile_to_casm",
  "crates/apollo_compile_to_casm_types",
  "crates/apollo_compile_to_native",
  "crates/apollo_compile_to_native_types",
  "crates/apollo_config",
  "crates/apollo_consensus",
  "crates/apollo_consensus_manager",
  "crates/apollo_consensus_orchestrator",
  "crates/apollo_dashboard",
  "crates/apollo_deployments",
  "crates/apollo_gateway",
  "crates/apollo_gateway_types",
  "crates/apollo_http_server",
  "crates/apollo_infra",
  "crates/apollo_infra_utils",
  "crates/apollo_integration_tests",
  "crates/apollo_l1_endpoint_monitor",
  "crates/apollo_l1_endpoint_monitor_types",
  "crates/apollo_l1_gas_price",
  "crates/apollo_l1_gas_price_types",
  "crates/apollo_l1_provider",
  "crates/apollo_l1_provider_types",
  "crates/apollo_mempool",
  "crates/apollo_mempool_p2p",
  "crates/apollo_mempool_p2p_types",
  "crates/apollo_mempool_types",
  "crates/apollo_metrics",
  "crates/apollo_monitoring_endpoint",
  "crates/apollo_network",
  "crates/apollo_network_types",
  "crates/apollo_node",
  "crates/apollo_p2p_sync",
  "crates/apollo_proc_macros",
  "crates/apollo_proc_macros_tests",
  "crates/apollo_protobuf",
  "crates/apollo_reverts",
  "crates/apollo_rpc",
  "crates/apollo_rpc_execution",
  "crates/apollo_starknet_client",
  "crates/apollo_starknet_os_program",
  "crates/apollo_state_reader",
  "crates/apollo_state_sync",
  "crates/apollo_state_sync_metrics",
  "crates/apollo_state_sync_types",
  "crates/apollo_storage",
  "crates/apollo_task_executor",
  "crates/apollo_test_utils",
  "crates/apollo_time",
  "crates/blake2s",
  "crates/blockifier",
  "crates/blockifier_reexecution",
  "crates/blockifier_test_utils",
  "crates/mempool_test_utils",
  "crates/native_blockifier",
  "crates/papyrus_base_layer",
  "crates/papyrus_common",
  "crates/papyrus_load_test",
  "crates/papyrus_monitoring_gateway",
  "crates/papyrus_node",
  "crates/shared_execution_objects",
  "crates/sizeof/sizeof_internal",
  "crates/starknet_api",
  "crates/starknet_committer",
  "crates/starknet_committer_and_os_cli",
  "crates/starknet_os",
  "crates/starknet_patricia",
  "crates/starknet_patricia_storage",
  "toml_test_utils",
  "workspace_tests",
]

[workspace.package]
version = "0.15.0-rc.2"
edition = "2021"
repository = "https://github.com/starkware-libs/sequencer/"
license = "Apache-2.0"
license-file = "LICENSE"

[workspace.dependencies]
alloy = "0.12"
anyhow = "1.0.44"
apollo_batcher.path = "crates/apollo_batcher"
apollo_batcher_types.path = "crates/apollo_batcher_types"
apollo_central_sync.path = "crates/apollo_central_sync"
apollo_class_manager.path = "crates/apollo_class_manager"
apollo_class_manager_types.path = "crates/apollo_class_manager_types"
apollo_compilation_utils = { path = "crates/apollo_compilation_utils", version = "0.15.0-rc.2" }
apollo_compile_to_casm.path = "crates/apollo_compile_to_casm"
apollo_compile_to_casm_types.path = "crates/apollo_compile_to_casm_types"
apollo_compile_to_native = { path = "crates/apollo_compile_to_native", version = "0.15.0-rc.2" }
apollo_compile_to_native_types = { path = "crates/apollo_compile_to_native_types", version = "0.15.0-rc.2" }
apollo_config = { path = "crates/apollo_config", version = "0.15.0-rc.2" }
apollo_consensus.path = "crates/apollo_consensus"
apollo_consensus_manager.path = "crates/apollo_consensus_manager"
apollo_consensus_orchestrator.path = "crates/apollo_consensus_orchestrator"
apollo_dashboard.path = "crates/apollo_dashboard"
apollo_deployments.path = "crates/apollo_deployments"
apollo_gateway.path = "crates/apollo_gateway"
apollo_gateway_types.path = "crates/apollo_gateway_types"
apollo_http_server.path = "crates/apollo_http_server"
apollo_infra.path = "crates/apollo_infra"
apollo_infra_utils = { path = "crates/apollo_infra_utils", version = "0.15.0-rc.2" }
apollo_integration_tests.path = "crates/apollo_integration_tests"
apollo_l1_endpoint_monitor.path = "crates/apollo_l1_endpoint_monitor"
apollo_l1_endpoint_monitor_types.path = "crates/apollo_l1_endpoint_monitor_types"
apollo_l1_gas_price.path = "crates/apollo_l1_gas_price"
apollo_l1_gas_price_types.path = "crates/apollo_l1_gas_price_types"
apollo_l1_provider.path = "crates/apollo_l1_provider"
apollo_l1_provider_types.path = "crates/apollo_l1_provider_types"
apollo_mempool.path = "crates/apollo_mempool"
apollo_mempool_p2p.path = "crates/apollo_mempool_p2p"
apollo_mempool_p2p_types.path = "crates/apollo_mempool_p2p_types"
apollo_mempool_types.path = "crates/apollo_mempool_types"
apollo_metrics = { path = "crates/apollo_metrics", version = "0.15.0-rc.2" }
apollo_monitoring_endpoint.path = "crates/apollo_monitoring_endpoint"
apollo_network.path = "crates/apollo_network"
apollo_network_types.path = "crates/apollo_network_types"
apollo_node.path = "crates/apollo_node"
apollo_p2p_sync.path = "crates/apollo_p2p_sync"
apollo_proc_macros = { path = "crates/apollo_proc_macros", version = "0.15.0-rc.2" }
apollo_proc_macros_tests.path = "crates/apollo_proc_macros_tests"
apollo_protobuf.path = "crates/apollo_protobuf"
apollo_reverts.path = "crates/apollo_reverts"
apollo_rpc.path = "crates/apollo_rpc"
apollo_rpc_execution.path = "crates/apollo_rpc_execution"
apollo_starknet_client.path = "crates/apollo_starknet_client"
apollo_starknet_os_program = { path = "crates/apollo_starknet_os_program", version = "0.15.0-rc.2" }
apollo_state_reader.path = "crates/apollo_state_reader"
apollo_state_sync.path = "crates/apollo_state_sync"
apollo_state_sync_metrics.path = "crates/apollo_state_sync_metrics"
apollo_state_sync_types.path = "crates/apollo_state_sync_types"
apollo_storage.path = "crates/apollo_storage"
apollo_task_executor.path = "crates/apollo_task_executor"
apollo_test_utils.path = "crates/apollo_test_utils"
apollo_time.path = "crates/apollo_time"
ark-bls12-381 = "0.4.0"
ark-ec = "0.4.2"
ark-ff = "0.4.0-alpha.7"
ark-poly = "0.4.0"
ark-secp256k1 = "0.4.0"
ark-secp256r1 = "0.4.0"
assert-json-diff = "2.0.2"
assert_matches = "1.5.0"
async-recursion = "1.1.0"
async-stream = "0.3.3"
async-trait = "0.1.79"
atomic_refcell = "0.1.13"
axum = "0.6.12"
base64 = "0.13.0"
bincode = "1.3.3"
bisection = "0.1.0"
bitvec = "1.0.1"
blake2 = "0.10.6"
blake2s.path = "crates/blake2s"
blockifier = { path = "crates/blockifier", version = "0.15.0-rc.2" }
blockifier_reexecution.path = "crates/blockifier_reexecution"
blockifier_test_utils = { path = "crates/blockifier_test_utils", version = "0.15.0-rc.2" }
byteorder = "1.4.3"
bytes = "1"
c-kzg = "1.0.3"
cached = "0.44.0"
cairo-felt = "0.9.1"
cairo-lang-casm = "2.12.0-dev.1"
cairo-lang-runner = "2.12.0-dev.1"
cairo-lang-sierra = "2.12.0-dev.1"
cairo-lang-sierra-to-casm = "2.12.0-dev.1"
cairo-lang-starknet-classes = "2.12.0-dev.1"
cairo-lang-utils = "2.12.0-dev.1"
cairo-native = "0.6.0"
cairo-vm = "2.3.1"
camelpaste = "0.1.0"
chrono = "0.4.26"
clap = "4.5.4"
colored = "3"
const_format = "0.2.30"
criterion = "0.5.1"
dashmap = "6.1.0"
deadqueue = "0.2.4"
defaultmap = "0.5.0"
derive_more = "0.99.17"
digest = "0.10.7"
enum-as-inner = "0.6.1"
enum-assoc = "1.1.0"
enum-iterator = "1.4.1"
ethers = "2.0.3"
ethers-core = "2.0.3"
ethnum = "1.5.0"
expect-test = "1.5.1"
flate2 = "1.0.24"
fs2 = "0.4"
futures = "0.3.21"
futures-channel = "0.3.21"
futures-util = "0.3.21"
glob = "0.3.1"
google-cloud-storage = "0.22.1"
goose = "0.17.0"
hex = "0.4.3"
http = "0.2.8"
http-body = "0.4.5"
human_bytes = "0.4.3"
hyper = "0.14"
indexmap = "2.1.0"
indoc = "2.0.5"
insta = "1.29.0"
integer-encoding = "3.0.4"
itertools = "0.12.1"
jsonrpsee = "0.20.3"
jsonschema = "0.17.0"
keccak = "0.1.3"
lazy_static = "1.5.0"
libmdbx = "0.3.5"
libp2p = "0.56.0"
libp2p-swarm-test = "0.6.0"
log = "0.4"
lru = "0.12.0"
memmap2 = "0.8.0"
mempool_test_utils.path = "crates/mempool_test_utils"
metrics = "0.24.1"
metrics-exporter-prometheus = "0.16.1"
metrics-process = "1.0.11"
mockall = "0.12.1"
mockito = "1.4.0"
native_blockifier.path = "crates/native_blockifier"
nix = "0.20.0"
num-bigint = "0.4"
num-integer = "0.1.45"
num-rational = "0.4"
num-traits = "0.2.15"
num_enum = "0.7.3"
once_cell = "1.19.0"
os_info = "3.6.0"
page_size = "0.6.0"
papyrus_base_layer.path = "crates/papyrus_base_layer"
papyrus_common.path = "crates/papyrus_common"
papyrus_load_test.path = "crates/papyrus_load_test"
papyrus_monitoring_gateway.path = "crates/papyrus_monitoring_gateway"
papyrus_node.path = "crates/papyrus_node"
parity-scale-codec = "3.6"
parity-scale-codec-derive = "3.6"
paste = "1.0.15"
phf = "0.11"
pretty_assertions = "1.4.0"
primitive-types = "0.12.1"
proc-macro2 = "1.0"
prometheus-parse = "0.2.4"
prost = "0.12.1"
prost-build = "0.12.1"
prost-types = "0.12.1"
protoc-prebuilt = "0.3.0"
pyo3 = "0.19.1"
pyo3-log = "0.8.1"
quote = "1.0.26"
rand = "0.8.5"
rand_chacha = "0.3.1"
rand_distr = "0.4.3"
regex = "1.10.4"
replace_with = "0.1.7"
reqwest = "0.11"
retry = "2.0.0"
rlimit = "0.10.2"
rstest = "0.17.0"
rstest_reuse = "0.7.0"
rustc-hex = "2.1.0"
schemars = "0.8.12"
semver = "1.0.23"
serde = "1.0.197"
serde_json = "1.0.116"
serde_repr = "0.1.19"
serde_with = "3.12.0"
serde_yaml = "0.9.16"
sha2 = "0.10.8"
sha3 = "0.10.8"
shared_execution_objects.path = "crates/shared_execution_objects"
simple_logger = "4.0.0"
size-of = "0.1.5"
sizeof_internal = { path = "crates/sizeof/sizeof_internal" }
socket2 = "0.5.8"
starknet-core = "0.12.1"
starknet-crypto = "0.7.1"
starknet-types-core = "0.1.8"
starknet_api = { path = "crates/starknet_api", version = "0.15.0-rc.2" }
starknet_committer.path = "crates/starknet_committer"
starknet_committer_and_os_cli.path = "crates/starknet_committer_and_os_cli"
starknet_os.path = "crates/starknet_os"
starknet_patricia.path = "crates/starknet_patricia"
starknet_patricia_storage.path = "crates/starknet_patricia_storage"
static_assertions = "1.1.0"
statistical = "1.0.0"
strum = "0.25.0"
strum_macros = "0.25.2"
syn = "2.0.39"
tar = "0.4.38"
tempfile = "3.7.0"
test-case = "3.2.1"
test-log = "0.2.14"
thiserror = "1.0.37"
tikv-jemallocator = "0.5.4"
time = "0.3.37"
tokio = "1.37.0"
tokio-retry = "0.3"
tokio-stream = "0.1.8"
tokio-test = "0.4.4"
tokio-util = "0.7.13"
toml = "0.8"
toml_test_utils.path = "toml_test_utils"
tower = "0.4.13"
tracing = "0.1.37"
tracing-subscriber = "0.3.16"
tracing-test = "0.2"
unsigned-varint = "0.8.0"
url = "2.5.0"
validator = "0.12"
void = "1.0.2"
waker-fn = "1.2.0"
workspace_tests.path = "workspace_tests"
zstd = "0.13.1"

# Note: both rust and clippy lints are warning by default and denied on the CI (see run_tests.py).
# To deny warnings in local dev env:
# - In the terminal: add to .bashrc `export RUSTFLAGS="$RUSTFLAGS -Dwarnings"
# - In vscode, add to settings.json "rust-analyzer.cargo.extraEnv": { "RUSTFLAGS": "-Dwarnings" }`
[workspace.lints.rust]
future-incompatible = "warn"
nonstandard-style = "warn"
rust-2018-idioms = "warn"
unexpected_cfgs = { level = "warn", check-cfg = [
  # See [here](https://github.com/taiki-e/cargo-llvm-cov/issues/370) for a discussion on why this is
  # needed (from rust 1.80).
  'cfg(coverage_nightly)',
  # From rust 1.84, seems like the pyo3 crate version we are using breaks. Remove this once pyo3 is
  # removed from the workspace.
  'cfg(addr_of)',
] }

[workspace.lints.clippy]
as_conversions = "warn"

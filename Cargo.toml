[workspace]
# Using version 2 to avoid unifying features. For more info, read:
#   https://doc.rust-lang.org/cargo/reference/resolver.html#feature-resolver-version-2
resolver = "2"

members = [
  "crates/apollo_reverts",
  "crates/blockifier",
  "crates/blockifier_reexecution",
  "crates/blockifier_test_utils",
  "crates/mempool_test_utils",
  "crates/native_blockifier",
  "crates/papyrus_base_layer",
  "crates/papyrus_common",
  "crates/papyrus_config",
  "crates/papyrus_execution",
  "crates/papyrus_load_test",
  "crates/papyrus_monitoring_gateway",
  "crates/papyrus_network",
  "crates/papyrus_network_types",
  "crates/papyrus_node",
  "crates/papyrus_p2p_sync",
  "crates/papyrus_proc_macros",
  "crates/papyrus_protobuf",
  "crates/papyrus_rpc",
  "crates/papyrus_state_reader",
  "crates/papyrus_storage",
  "crates/papyrus_sync",
  "crates/papyrus_test_utils",
  "crates/shared_execution_objects",
  "crates/starknet_api",
  "crates/starknet_batcher",
  "crates/starknet_batcher_types",
  "crates/starknet_class_manager",
  "crates/starknet_class_manager_types",
  "crates/starknet_client",
  "crates/starknet_committer",
  "crates/starknet_committer_and_os_cli",
  "crates/starknet_consensus",
  "crates/starknet_consensus_manager",
  "crates/starknet_consensus_orchestrator",
  "crates/starknet_gateway",
  "crates/starknet_gateway_types",
  "crates/starknet_http_server",
  "crates/starknet_infra_utils",
  "crates/starknet_integration_tests",
  "crates/starknet_l1_gas_price",
  "crates/starknet_l1_gas_price_types",
  "crates/starknet_l1_provider",
  "crates/starknet_l1_provider_types",
  "crates/starknet_mempool",
  "crates/starknet_mempool_p2p",
  "crates/starknet_mempool_p2p_types",
  "crates/starknet_mempool_types",
  "crates/starknet_monitoring_endpoint",
  "crates/starknet_os",
  "crates/starknet_patricia",
  "crates/starknet_patricia_storage",
  "crates/starknet_sequencer_dashboard",
  "crates/starknet_sequencer_infra",
  "crates/starknet_sequencer_metrics",
  "crates/starknet_sequencer_node",
  "crates/starknet_sierra_multicompile",
  "crates/starknet_sierra_multicompile_types",
  "crates/starknet_state_sync",
  "crates/starknet_state_sync_types",
  "crates/starknet_task_executor",
  "workspace_tests",
]

[workspace.package]
version = "0.0.0"
edition = "2021"
repository = "https://github.com/starkware-libs/sequencer/"
license = "Apache-2.0"
license-file = "LICENSE"

[workspace.dependencies]
alloy = "0.9"
anyhow = "1.0.44"
apollo_reverts.path = "crates/apollo_reverts"
ark-ec = "0.4.2"
ark-ff = "0.4.0-alpha.7"
ark-secp256k1 = "0.4.0"
ark-secp256r1 = "0.4.0"
assert-json-diff = "2.0.2"
assert_matches = "1.5.0"
async-recursion = "1.1.0"
async-stream = "0.3.3"
async-trait = "0.1.79"
atomic_refcell = "0.1.13"
axum = "0.6.12"
base64 = "0.13.0"
bincode = "1.3.3"
bisection = "0.1.0"
bitvec = "1.0.1"
blockifier = { path = "crates/blockifier", version = "0.0.0" }
blockifier_reexecution.path = "crates/blockifier_reexecution"
blockifier_test_utils = { path = "crates/blockifier_test_utils", version = "0.0.0" }
byteorder = "1.4.3"
bytes = "1"
cached = "0.44.0"
cairo-felt = "0.9.1"
cairo-lang-casm = "2.10.0"
cairo-lang-runner = "2.10.0"
cairo-lang-sierra = "=2.10.0"
cairo-lang-sierra-to-casm = "2.10.0"
cairo-lang-starknet-classes = "2.10.0"
cairo-lang-utils = "2.10.0"
cairo-native = "0.3.1"
cairo-vm = "=1.0.2"
camelpaste = "0.1.0"
chrono = "0.4.26"
clap = "4.5.4"
colored = "3"
const_format = "0.2.30"
criterion = "0.5.1"
deadqueue = "0.2.4"
defaultmap = "0.5.0"
derive_more = "0.99.17"
enum-as-inner = "0.6.1"
enum-assoc = "1.1.0"
enum-iterator = "1.4.1"
ethers = "2.0.3"
ethers-core = "2.0.3"
ethnum = "1.5.0"
flate2 = "1.0.24"
fs2 = "0.4"
futures = "0.3.21"
futures-channel = "0.3.21"
futures-util = "0.3.21"
glob = "0.3.1"
google-cloud-storage = "0.22.1"
goose = "0.17.0"
hex = "0.4.3"
http = "0.2.8"
http-body = "0.4.5"
human_bytes = "0.4.3"
hyper = "0.14"
indexmap = "2.1.0"
indoc = "2.0.5"
insta = "1.29.0"
integer-encoding = "3.0.4"
itertools = "0.12.1"
jsonrpsee = "0.20.3"
jsonschema = "0.17.0"
keccak = "0.1.3"
lazy_static = "1.5.0"
libmdbx = "0.3.5"
libp2p = "0.53.2"
libp2p-swarm-test = "0.3.0"
log = "0.4"
lru = "0.12.0"
memmap2 = "0.8.0"
mempool_test_utils.path = "crates/mempool_test_utils"
metrics = "0.24.1"
metrics-exporter-prometheus = "0.16.1"
metrics-process = "1.0.11"
mockall = "0.12.1"
mockito = "1.4.0"
native_blockifier.path = "crates/native_blockifier"
nix = "0.20.0"
num-bigint = "0.4"
num-integer = "0.1.45"
num-rational = "0.4"
num-traits = "0.2.15"
once_cell = "1.19.0"
os_info = "3.6.0"
page_size = "0.6.0"
papyrus_base_layer.path = "crates/papyrus_base_layer"
papyrus_common.path = "crates/papyrus_common"
papyrus_config = { path = "crates/papyrus_config", version = "0.0.0" }
papyrus_execution.path = "crates/papyrus_execution"
papyrus_load_test.path = "crates/papyrus_load_test"
papyrus_monitoring_gateway.path = "crates/papyrus_monitoring_gateway"
papyrus_network.path = "crates/papyrus_network"
papyrus_network_types.path = "crates/papyrus_network_types"
papyrus_node.path = "crates/papyrus_node"
papyrus_p2p_sync.path = "crates/papyrus_p2p_sync"
papyrus_proc_macros = { path = "crates/papyrus_proc_macros", version = "0.0.0" }
papyrus_protobuf.path = "crates/papyrus_protobuf"
papyrus_rpc.path = "crates/papyrus_rpc"
papyrus_state_reader.path = "crates/papyrus_state_reader"
papyrus_storage.path = "crates/papyrus_storage"
papyrus_sync.path = "crates/papyrus_sync"
papyrus_test_utils.path = "crates/papyrus_test_utils"
parity-scale-codec = "3.6"
parity-scale-codec-derive = "3.6"
paste = "1.0.15"
phf = "0.11"
pretty_assertions = "1.4.0"
primitive-types = "0.12.1"
prometheus-parse = "0.2.4"
prost = "0.12.1"
prost-build = "0.12.1"
prost-types = "0.12.1"
protoc-prebuilt = "0.3.0"
pyo3 = "0.19.1"
pyo3-log = "0.8.1"
quote = "1.0.26"
rand = "0.8.5"
rand_chacha = "0.3.1"
rand_distr = "0.4.3"
regex = "1.10.4"
replace_with = "0.1.7"
reqwest = "0.11"
retry = "2.0.0"
rlimit = "0.10.2"
rstest = "0.17.0"
rstest_reuse = "0.7.0"
rustc-hex = "2.1.0"
schemars = "0.8.12"
semver = "1.0.23"
serde = "1.0.197"
serde_json = "1.0.116"
serde_repr = "0.1.19"
serde_yaml = "0.9.16"
sha2 = "0.10.8"
sha3 = "0.10.8"
shared_execution_objects.path = "crates/shared_execution_objects"
simple_logger = "4.0.0"
starknet-core = "0.12.1"
starknet-crypto = "0.7.1"
starknet-types-core = "0.1.6"
starknet_api = { path = "crates/starknet_api", version = "0.0.0" }
starknet_batcher.path = "crates/starknet_batcher"
starknet_batcher_types.path = "crates/starknet_batcher_types"
starknet_class_manager.path = "crates/starknet_class_manager"
starknet_class_manager_types.path = "crates/starknet_class_manager_types"
starknet_client.path = "crates/starknet_client"
starknet_committer.path = "crates/starknet_committer"
starknet_committer_and_os_cli.path = "crates/starknet_committer_and_os_cli"
starknet_consensus.path = "crates/starknet_consensus"
starknet_consensus_manager.path = "crates/starknet_consensus_manager"
starknet_consensus_orchestrator.path = "crates/starknet_consensus_orchestrator"
starknet_gateway.path = "crates/starknet_gateway"
starknet_gateway_types.path = "crates/starknet_gateway_types"
starknet_http_server.path = "crates/starknet_http_server"
starknet_infra_utils = { path = "crates/starknet_infra_utils", version = "0.0.0" }
starknet_integration_tests.path = "crates/starknet_integration_tests"
starknet_l1_gas_price.path = "crates/starknet_l1_gas_price"
starknet_l1_gas_price_types.path = "crates/starknet_l1_gas_price_types"
starknet_l1_provider.path = "crates/starknet_l1_provider"
starknet_l1_provider_types.path = "crates/starknet_l1_provider_types"
starknet_mempool.path = "crates/starknet_mempool"
starknet_mempool_p2p.path = "crates/starknet_mempool_p2p"
starknet_mempool_p2p_types.path = "crates/starknet_mempool_p2p_types"
starknet_mempool_types.path = "crates/starknet_mempool_types"
starknet_monitoring_endpoint.path = "crates/starknet_monitoring_endpoint"
starknet_os.path = "crates/starknet_os"
starknet_patricia.path = "crates/starknet_patricia"
starknet_patricia_storage.path = "crates/starknet_patricia_storage"
starknet_sequencer_dashboard.path = "crates/starknet_sequencer_dashboard"
starknet_sequencer_infra = { path = "crates/starknet_sequencer_infra", version = "0.0.0" }
starknet_sequencer_metrics = { path = "crates/starknet_sequencer_metrics", version = "0.0.0" }
starknet_sequencer_node.path = "crates/starknet_sequencer_node"
starknet_sierra_multicompile = { path = "crates/starknet_sierra_multicompile", version = "0.0.0" }
starknet_sierra_multicompile_types = { path = "crates/starknet_sierra_multicompile_types", version = "0.0.0" }
starknet_state_sync.path = "crates/starknet_state_sync"
starknet_state_sync_types.path = "crates/starknet_state_sync_types"
starknet_task_executor.path = "crates/starknet_task_executor"
static_assertions = "1.1.0"
statistical = "1.0.0"
strum = "0.25.0"
strum_macros = "0.25.2"
syn = "2.0.39"
tar = "0.4.38"
tempfile = "3.7.0"
test-case = "3.2.1"
test-log = "0.2.14"
thiserror = "1.0.37"
tikv-jemallocator = "0.5.4"
tokio = "1.37.0"
tokio-retry = "0.3"
tokio-stream = "0.1.8"
tokio-test = "0.4.4"
tokio-util = "0.7.13"
toml = "0.8"
tower = "0.4.13"
tracing = "0.1.37"
tracing-subscriber = "0.3.16"
tracing-test = "0.2"
unsigned-varint = "0.8.0"
url = "2.5.0"
validator = "0.12"
void = "1.0.2"
workspace_tests.path = "workspace_tests"
zstd = "0.13.1"

# Note: both rust and clippy lints are warning by default and denied on the CI (see run_tests.py).
# To deny warnings in local dev env:
# - In the terminal: add to .bashrc `export RUSTFLAGS="$RUSTFLAGS -Dwarnings"
# - In vscode, add to settings.json "rust-analyzer.cargo.extraEnv": { "RUSTFLAGS": "-Dwarnings" }`
[workspace.lints.rust]
future-incompatible = "warn"
nonstandard-style = "warn"
rust-2018-idioms = "warn"
# See [here](https://github.com/taiki-e/cargo-llvm-cov/issues/370) for a discussion on why this is
# needed (from rust 1.80).
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(coverage_nightly)'] }

[workspace.lints.clippy]
as_conversions = "warn"
